[{"failures":[],"tindex":"93a1f436-c82f-11e4-abc9-9da35564c22b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:429","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.security.MessageDigest.digest()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"93a1f437-c82f-11e4-abc9-8944a831e112","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.FetchCommand:332","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.transport.FetchResult>.checkCallable()"},"status":-1},{"failures":[],"tindex":"93a1f438-c82f-11e4-abc9-1d375f48a4c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:324","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:555","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[6,5,0,1,2,3,4],"tindex":"93a1f439-c82f-11e4-abc9-e3002a87c769","variableMapping":{"ctx":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:231","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsReader.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectReader:137","type":"CtIfImpl","sourcecode":"if (1 < (java.util.List<org.eclipse.jgit.lib.ObjectId>.size()))\n    java.util.Collection<org.eclipse.jgit.lib.ObjectId> = java.util.List<org.eclipse.jgit.lib.ObjectId>;\nelse\n    java.util.Collection<org.eclipse.jgit.lib.ObjectId> = org.eclipse.jgit.lib.ObjectReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId);\n"},"status":-1},{"failures":[],"tindex":"93a1f43a-c82f-11e4-abc9-090a7c1aa289","variableMapping":{"remoteUrl":"wholePattern"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:294","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == '/')\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:90","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.java.lang.String.format(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[5,7,8,9,10,11,12,13,14,15,4,0,1,2,3,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"93a1f43b-c82f-11e4-abc9-1ddc3d9e3951","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:186","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"93a1f43c-c82f-11e4-abc9-778a4aeee9cf","variableMapping":{"out":"out"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:979","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:155","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-2},{"failures":[],"tindex":"93a1f43d-c82f-11e4-abc9-65e72b3a063e","variableMapping":{"this":"pm"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1461","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion()"},"status":-2},{"failures":[0,1,2,3,5,4],"tindex":"93a1f43e-c82f-11e4-abc9-0172c153359e","variableMapping":{"v":"remaining"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:223","type":"CtUnaryOperatorImpl","sourcecode":"--long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:265","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"status":-1},{"failures":[],"tindex":"93a1f43f-c82f-11e4-abc9-7b0643ce5dab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:192","type":"CtLocalVariableImpl","sourcecode":"int int = (org.eclipse.jgit.diff.Edit.int) - (org.eclipse.jgit.diff.Edit.int)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":51,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":45,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":55,"org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":9,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":7,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":54,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":49,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":31,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":40,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":29,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":44,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":14,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":19,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":22,"org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":39,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":43,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
