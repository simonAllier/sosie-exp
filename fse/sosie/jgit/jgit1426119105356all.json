[{"failures":[],"tindex":"5e5d2699-c84c-11e4-83ba-0b4dbb8c7619","variableMapping":{"s":"max","lf":"max","cr":"max"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:194","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse if (0 <= int)\n    int = int;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:143","type":"CtIfImpl","sourcecode":"if (long > int)\n    throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n"},"status":-2},{"failures":[],"tindex":"5e5d269a-c84c-11e4-83ba-53eb90fe93bb","variableMapping":{"c":"org.eclipse.jgit.revwalk.RevWalk.UNINTERESTING"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:182","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:137","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.DepthWalk.Commit.org.eclipse.jgit.revwalk.RevCommit[]) {\n    org.eclipse.jgit.revwalk.DepthWalk.Commit org.eclipse.jgit.revwalk.DepthWalk.Commit = ((org.eclipse.jgit.revwalk.DepthWalk.Commit)(org.eclipse.jgit.revwalk.RevCommit));\n    if ((org.eclipse.jgit.revwalk.DepthWalk.Commit.int) == (-1)) {\n        org.eclipse.jgit.revwalk.DepthWalk.Commit.int = int;\n        if (int <= (int))\n            org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit);\n        \n    } \n    if ((org.eclipse.jgit.revwalk.DepthWalk.Commit.has(org.eclipse.jgit.revwalk.RevFlag)) || (org.eclipse.jgit.revwalk.DepthWalk.Commit.has(org.eclipse.jgit.revwalk.RevFlag))) {\n        org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n        org.eclipse.jgit.revwalk.RevCommit.int &= ~(org.eclipse.jgit.revwalk.RevWalk.int);\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"5e5d269b-c84c-11e4-83ba-ab045284bf80","variableMapping":{"myOut":"out","out":"out"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:154","type":"CtAssignmentImpl","sourcecode":"java.io.OutputStream = java.io.OutputStream"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter:166","type":"CtAssignmentImpl","sourcecode":"java.io.OutputStream = java.nio.channels.Channels.java.nio.channels.Channels.newOutputStream(java.io.FileOutputStream.getChannel())"},"status":-1},{"failures":[2,0,1,3,4,5],"tindex":"5e5d269c-c84c-11e4-83ba-6f1381a24caf","variableMapping":{"cMask":"org.eclipse.jgit.merge.ResolveMerger.T_BASE","mask":"modeO"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevFlagSet:100","type":"CtReturnImpl","sourcecode":"return ((int) & int) == int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:615","type":"CtIfImpl","sourcecode":"if (int != int) {\n    if (((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int)))) || ((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int))))) {\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        if (int == 0) {\n            if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n                return false;\n            \n            if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n                if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n                    java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n                \n            } \n        } \n        java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser));\n    } \n} "},"status":-1},{"failures":[],"tindex":"5e5d269d-c84c-11e4-83ba-1f3bf4694931","variableMapping":{"org.eclipse.jgit.revwalk.PendingGenerator.OVER_SCAN":"begin","overScan":"endB"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:163","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.revwalk.PendingGenerator.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Subsequence:107","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit.int += org.eclipse.jgit.diff.Subsequence<S>.int"},"status":-2},{"failures":[1,2,0,3,4,5],"tindex":"5e5d269e-c84c-11e4-83ba-4bb91aca5356","variableMapping":{"overflow":"rawOut"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:330","type":"CtIfImpl","sourcecode":"if ((java.io.OutputStream) != null) {\n    try {\n        java.io.OutputStream.close();\n    } catch (java.io.IOException java.io.IOException) {\n    } finally {\n        java.io.OutputStream = null;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1494","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-1},{"failures":[1,2,0,3,4,5],"tindex":"5e5d269f-c84c-11e4-83ba-9d4fa2311d77","variableMapping":{"this":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1574","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.(isBare()) || (org.eclipse.jgit.lib.Repository.(getDirectory()) == null))\n    throw new org.eclipse.jgit.errors.NoWorkTreeException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1224","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(java.lang.String);\n    org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.lib.RefUpdate.setRefLogMessage((((\"Fast-foward from \" + (org.eclipse.jgit.revwalk.RevCommit.name())) + \" to \") + (org.eclipse.jgit.revwalk.RevCommit.name())), false);\n    org.eclipse.jgit.lib.RefUpdate.Result org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk);\n    switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n        case FAST_FORWARD :\n        case NO_CHANGE :\n        case FORCED :\n            break;\n        default :\n            throw new java.io.IOException(\"Could not fast-forward\");\n    }\n} "},"status":-1},{"failures":[1,2,3,4,5,0],"tindex":"5e5d26a0-c84c-11e4-83ba-e1be84465a02","variableMapping":{"ru":"destination"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:384","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setForceUpdate(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefRename:135","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(\"\", false)"},"status":-1},{"failures":[0,3,4,5,2,1,6,7],"tindex":"5e5d26a1-c84c-11e4-83ba-35de4b304a1a","variableMapping":{"root":"theirs","newRoot":"ours"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteMap:317","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.InMemoryNoteBucket"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:165","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, ((org.eclipse.jgit.notes.LeafBucket)(org.eclipse.jgit.notes.InMemoryNoteBucket)), ((org.eclipse.jgit.notes.LeafBucket)(org.eclipse.jgit.notes.InMemoryNoteBucket)), ((org.eclipse.jgit.notes.LeafBucket)(org.eclipse.jgit.notes.InMemoryNoteBucket)))"},"status":-1},{"failures":[],"tindex":"5e5d26a2-c84c-11e4-83ba-979c2013120f","variableMapping":{"remoteGitDir":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportLocal:173","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.RepositoryBuilder().setGitDir(java.io.File).build()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:323","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.FileRepository(java.io.File)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":7,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":6,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
