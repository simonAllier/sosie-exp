[{"failures":[],"tindex":"5b9011b0-c829-11e4-9fd7-1fc2cc0cd5f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffConfig:114","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.(org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String)) || org.eclipse.jgit.util.StringUtils.(org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String)))\n    return org.eclipse.jgit.diff.DiffConfig.RenameDetectionType.org.eclipse.jgit.diff.DiffConfig.RenameDetectionType;\nelse {\n    final java.lang.Boolean java.lang.Boolean = org.eclipse.jgit.util.StringUtils.org.eclipse.jgit.util.StringUtils.toBooleanOrNull(java.lang.String);\n    if (java.lang.Boolean == null)\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String));\n    else if (java.lang.Boolean.booleanValue())\n        return org.eclipse.jgit.diff.DiffConfig.RenameDetectionType.org.eclipse.jgit.diff.DiffConfig.RenameDetectionType;\n    else\n        return org.eclipse.jgit.diff.DiffConfig.RenameDetectionType.org.eclipse.jgit.diff.DiffConfig.RenameDetectionType;\n    \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"5b9011b1-c829-11e4-9fd7-65c141916f05","variableMapping":{"b":"buf","org.eclipse.jgit.util.RawParseUtils.base10byte":"buf","value":"p","o":"cmd"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:176","type":"CtWhileImpl","sourcecode":"while (int != 0) {\n    byte[][--int] = org.eclipse.jgit.util.RawParseUtils.byte[][(int % 10)];\n    int /= 10;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:264","type":"CtIfImpl","sourcecode":"if ((byte = ((byte)((long >>> 8) & 255))) != 0) {\n    int |= 2;\n    byte[][int++] = byte;\n} "},"status":-1},{"failures":[],"tindex":"5b9011b2-c829-11e4-9fd7-934875645119","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:680","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.eclipse.jgit.api.RebaseCommand.autoStashApply()"},"status":-2},{"failures":[],"tindex":"5b9011b3-c829-11e4-9fd7-9bde52ffff27","variableMapping":{"this":"pack"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:585","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.doOpen()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:498","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.internal.storage.file.WindowCache.Ref = ((org.eclipse.jgit.internal.storage.file.WindowCache.Ref)(java.lang.ref.ReferenceQueue<org.eclipse.jgit.internal.storage.file.ByteWindow>.poll()))) != null) {\n    if (org.eclipse.jgit.internal.storage.file.WindowCache.Ref.canClear()) {\n        org.eclipse.jgit.internal.storage.file.WindowCache.clear(org.eclipse.jgit.internal.storage.file.WindowCache.Ref);\n        boolean boolean = false;\n        final int int = org.eclipse.jgit.internal.storage.file.WindowCache.slot(org.eclipse.jgit.internal.storage.file.WindowCache.Ref.org.eclipse.jgit.internal.storage.file.PackFile, org.eclipse.jgit.internal.storage.file.WindowCache.Ref.long);\n        final org.eclipse.jgit.internal.storage.file.WindowCache.Entry org.eclipse.jgit.internal.storage.file.WindowCache.Entry = java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.file.WindowCache.Entry>.get(int);\n        for (org.eclipse.jgit.internal.storage.file.WindowCache.Entry org.eclipse.jgit.internal.storage.file.WindowCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCache.Entry ; org.eclipse.jgit.internal.storage.file.WindowCache.Entry != null ; org.eclipse.jgit.internal.storage.file.WindowCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCache.Entry.org.eclipse.jgit.internal.storage.file.WindowCache.Entry) {\n            if ((org.eclipse.jgit.internal.storage.file.WindowCache.Entry.org.eclipse.jgit.internal.storage.file.WindowCache.Ref) == org.eclipse.jgit.internal.storage.file.WindowCache.Ref) {\n                org.eclipse.jgit.internal.storage.file.WindowCache.Entry.boolean = true;\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean)\n            java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.file.WindowCache.Entry>.compareAndSet(int, org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.WindowCache.org.eclipse.jgit.internal.storage.file.WindowCache.clean(org.eclipse.jgit.internal.storage.file.WindowCache.Entry));\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"5b9011b4-c829-11e4-9fd7-d9828a6fe332","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:690","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.Config()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:674","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.(getGitDir()) != null) {\n    java.io.File java.io.File = org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS().resolve(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getGitDir(), org.eclipse.jgit.lib.Constants.java.lang.String);\n    org.eclipse.jgit.storage.file.FileBasedConfig org.eclipse.jgit.storage.file.FileBasedConfig = new org.eclipse.jgit.storage.file.FileBasedConfig(java.io.File , org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS());\n    try {\n        org.eclipse.jgit.storage.file.FileBasedConfig.load();\n    } catch (org.eclipse.jgit.errors.ConfigInvalidException org.eclipse.jgit.errors.ConfigInvalidException) {\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath(), org.eclipse.jgit.errors.ConfigInvalidException.getMessage()));\n    }\n    return org.eclipse.jgit.storage.file.FileBasedConfig;\n} else {\n    return new org.eclipse.jgit.lib.Config();\n}"},"status":-2},{"failures":[0,1,2,22,3,62],"tindex":"5b9011b5-c829-11e4-9fd7-81eddcafa8a1","variableMapping":{"regionLock":"clockLock"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:446","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.lock()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:416","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.unlock()"},"status":-1},{"failures":[22,0,1,2,3,62],"tindex":"5b9011b6-c829-11e4-9fd7-f98a07792a36","variableMapping":{"ctx":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:231","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsReader.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:627","type":"CtIfImpl","sourcecode":"if (java.util.zip.Inflater.needsInput()) {\n    org.eclipse.jgit.internal.storage.dfs.DfsReader.pin(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long);\n    long += org.eclipse.jgit.internal.storage.dfs.DfsBlock.setInput(long, java.util.zip.Inflater);\n} else if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"status":-1},{"failures":[],"tindex":"5b9011b7-c829-11e4-9fd7-456780a3ad2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:559","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:273","type":"CtThrowImpl","sourcecode":"throw java.io.IOException"},"status":-2},{"failures":[],"tindex":"5b9011b8-c829-11e4-9fd7-4f50f96cffcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:590","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) + (byte << 24)"},"status":-2},{"failures":[22,3,62,0,1,2],"tindex":"5b9038c9-c829-11e4-9fd7-2d60680babfd","variableMapping":{"workingTreeIterator":"f"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:180","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:119","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.WorkingTreeIterator"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":50,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":9,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":42,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":47,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":60,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":31,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":23,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":8,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails":43,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":37,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":32,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":39,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":46,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":56,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":18,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":27,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":61,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":36,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":62,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":29,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":22,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":14,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_InsertFrontFails":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":13,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":34,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":16,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":44,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":65,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":66,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":21,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":67,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":20,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":57,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
