[{"failures":[0,1,2,3,4,5],"tindex":"347b394c-c87f-11e4-9764-197ca4f05367","variableMapping":{"pckOut":"pckOut"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:910","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.writeString(\"NAK\\n\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:909","type":"CtIfImpl","sourcecode":"if ((java.util.Set<org.eclipse.jgit.revwalk.RevObject>.isEmpty()) || ((org.eclipse.jgit.transport.GitProtocolConstants.MultiAck) != (org.eclipse.jgit.transport.GitProtocolConstants.MultiAck.org.eclipse.jgit.transport.GitProtocolConstants.MultiAck)))\n    org.eclipse.jgit.transport.PacketLineOut.writeString(\"NAK\\n\");\n"},"status":-1},{"failures":[5,2,3,4,0,1,6],"tindex":"347b394d-c87f-11e4-9764-595cfeca396b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:136","type":"CtReturnImpl","sourcecode":"return \"Merged-squashed\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchTrackingStatus:125","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"347b394e-c87f-11e4-9764-5dbe84678e5e","variableMapping":{"c":"this","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:231","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:238","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.FIFORevQueue != null)\n    return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], (int + 1));\n"},"status":-2},{"failures":[],"tindex":"347b394f-c87f-11e4-9764-ddeaef16e4a8","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:581","type":"CtReturnImpl","sourcecode":"return java.util.Collections.java.util.Collections.<org.eclipse.jgit.lib.ObjectId>emptySet()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportProtocol:110","type":"CtReturnImpl","sourcecode":"return java.util.Collections.java.util.Collections.emptySet()"},"status":-2},{"failures":[0,5,2,3,4,1],"tindex":"347b3950-c87f-11e4-9764-2105a446786e","variableMapping":{"in":"is"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:415","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.mark(20)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:539","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator.safeClose(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"347b3951-c87f-11e4-9764-59e4f97ec1d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:156","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.PushResult org.eclipse.jgit.transport.PushResult = org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)"},"status":-2},{"failures":[],"tindex":"347b3952-c87f-11e4-9764-d5698ffe936a","variableMapping":{"c":"m"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddCommand:176","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:986","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString() , org.eclipse.jgit.dircache.DirCacheEntry.int)"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,1,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,5,188,189,190,191,2,192,3,4],"tindex":"347b3953-c87f-11e4-9764-5107d4e367b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:185","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject[] = new org.eclipse.jgit.revwalk.RevObject[org.eclipse.jgit.lib.AnyObjectId[].int]"},"status":-1},{"failures":[],"tindex":"347b6064-c87f-11e4-9764-61a6d1ee92e8","variableMapping":{"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.ACK_READY":"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.ACK_COMMON","org.eclipse.jgit.transport.PacketLineIn.AckNackResult.ACK_COMMON":"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.ACK_COMMON","arg":"arg"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:115","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\" common\"))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\nelse if (java.lang.String.equals(\" ready\"))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:113","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\" continue\"))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\nelse if (java.lang.String.equals(\" common\"))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\nelse if (java.lang.String.equals(\" ready\"))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\n"},"status":-2},{"failures":[],"tindex":"347b6065-c87f-11e4-9764-2d319fb6fc09","variableMapping":{"lastIdx":"ptr","i":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:284","type":"CtIfImpl","sourcecode":"if (int == int)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:168","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit[]) == null) {\n    org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[1];\n    int int = 0;\n    for ( ;  ; ) {\n        if ((byte[][int]) != 'p')\n            break;\n        \n        org.eclipse.jgit.lib.MutableObjectId.fromString(byte[], (int + 7));\n        final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.MutableObjectId);\n        if (int == 0)\n            org.eclipse.jgit.revwalk.RevCommit[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n        else if (int == 1) {\n            org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[]{ org.eclipse.jgit.revwalk.RevCommit[][0] , org.eclipse.jgit.revwalk.RevCommit };\n            int = 2;\n        } else {\n            if ((org.eclipse.jgit.revwalk.RevCommit[].int) <= int) {\n                org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[];\n                org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[(org.eclipse.jgit.revwalk.RevCommit[].int) + 32];\n                java.lang.System.java.lang.System.arraycopy(org.eclipse.jgit.revwalk.RevCommit[], 0, org.eclipse.jgit.revwalk.RevCommit[], 0, int);\n            } \n            org.eclipse.jgit.revwalk.RevCommit[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n        }\n        int += 48;\n    }\n    if (int != (org.eclipse.jgit.revwalk.RevCommit[].int)) {\n        org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[];\n        org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[int];\n        java.lang.System.java.lang.System.arraycopy(org.eclipse.jgit.revwalk.RevCommit[], 0, org.eclipse.jgit.revwalk.RevCommit[], 0, int);\n    } \n    org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[];\n} "},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":106,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":117,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":94,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":116,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":43,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":11,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":86,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":146,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":13,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":187,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":67,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":95,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":169,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":122,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":123,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":180,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":44,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":53,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":188,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":41,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":23,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":45,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":124,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":182,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":164,"org.eclipse.jgit.merge.CherryPickTest.testRevert":109,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":111,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":171,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":75,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":121,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":107,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":143,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":110,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":163,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":162,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":189,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":64,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":93,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":47,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":191,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":160,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":30,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":115,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":65,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":134,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":176,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":38,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":120,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":76,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":178,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":31,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":90,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":58,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":72,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":139,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":35,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":118,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":140,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":141,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":81,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":6,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":152,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":74,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":9,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":29,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":36,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":34,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":71,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":145,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":190,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":154,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":8,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":82,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":177,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":39,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":42,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":79,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":92,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":158,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":96,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":166,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":151,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":150,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":101,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":129,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":84,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":172,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":100,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":174,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":186,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":102,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":87,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":132,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":20,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":73,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":15,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":135,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":185,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":112,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":167,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":78,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":88,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":165,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":168,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":19,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":16,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":113,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":83,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":55,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":105,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":183,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":161,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":138,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":137,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":40,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":157,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":68,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":85,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":181,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":156,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":144,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":159,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":91,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":70,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":148,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":184,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":179,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":18,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":52,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":24,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":28,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":50,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":69,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":61,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":114,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":119,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":142,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":104,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":32,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":21,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":80,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":98,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":77,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":153,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":56,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":49,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":155,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":17,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":131,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":173,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":130,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":133,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":192,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":170,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":103,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":33,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":60,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":127,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":128,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":147,"org.eclipse.jgit.merge.CherryPickTest.testPick":108,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":99,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":136,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":175,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":37,"org.eclipse.jgit.api.RevertCommandTest.testRevert":149,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":126}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
