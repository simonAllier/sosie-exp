[{"failures":[],"tindex":"3c0199d3-c83f-11e4-accf-3bc9c48f01fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:208","type":"CtLocalVariableImpl","sourcecode":"long long = 8"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:750","type":"CtLocalVariableImpl","sourcecode":"long long = int & 127"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"3c0199d4-c83f-11e4-accf-f98d66fec22f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:324","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, java.util.Map.Entry<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.getValue(), org.eclipse.jgit.lib.ObjectReader)"},"status":-1},{"failures":[],"tindex":"3c0199d5-c83f-11e4-accf-e5da41779ed6","variableMapping":{"path":"blameNotCommittedYet","lastAddedFile":"blameNotCommittedYet"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:375","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:290","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"3c0199d6-c83f-11e4-accf-0194db12698e","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"line","fullBranch":"line"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:193","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n    throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:865","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"shallow \")) {\n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(8)));\n    continue;\n} "},"status":-2},{"failures":[53,54,55,22,19,56,57,58,59,60,29],"tindex":"3c0199d7-c83f-11e4-accf-e51bb27ed6b3","variableMapping":{"newEntry":"dcEntry","e":"dcEntry"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:769","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[],"tindex":"3c0199d8-c83f-11e4-accf-290c370a03c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.TreeEntry:233","type":"CtReturnImpl","sourcecode":"return '\u0000'"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:219","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"3c0199d9-c83f-11e4-accf-d92eca652c99","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:620","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:512","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()"},"status":-2},{"failures":[],"tindex":"3c0199da-c83f-11e4-accf-07d3b7e1665d","variableMapping":{"org.eclipse.jgit.lib.RefUpdate.Result.FORCED":"updateResult","res":"org.eclipse.jgit.lib.RefUpdate.Result.NEW","org.eclipse.jgit.lib.RefUpdate.Result.NO_CHANGE":"org.eclipse.jgit.lib.RefUpdate.Result.NO_CHANGE","org.eclipse.jgit.lib.RefUpdate.Result.FAST_FORWARD":"updateResult"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1379","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n    case FAST_FORWARD :\n    case NO_CHANGE :\n    case FORCED :\n        break;\n    default :\n        throw new java.io.IOException(\"Could not rewind to upstream commit\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:289","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n    case NEW :\n        boolean = true;\n        break;\n    case NO_CHANGE :\n    case FAST_FORWARD :\n    case FORCED :\n        boolean = true;\n        break;\n    default :\n        break;\n}"},"status":-2},{"failures":[],"tindex":"3c0199db-c83f-11e4-accf-398bb612db86","variableMapping":{"oursList":"me","theirsList":"me","baseList":"me"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:329","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.notes.NotesMergeConflictException(org.eclipse.jgit.notes.NonNoteEntry , org.eclipse.jgit.notes.NonNoteEntry , org.eclipse.jgit.notes.NonNoteEntry)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:212","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.lib.ObjectId , org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[22,53,54,55,61,62,63,64,29,19],"tindex":"3c0199dc-c83f-11e4-accf-b1eb8d029461","variableMapping":{"cnt":"offset"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.UnionInputStream:186","type":"CtOperatorAssignmentImpl","sourcecode":"long -= 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack:85","type":"CtAssignmentImpl","sourcecode":"this.long = org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.long"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":11,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":56,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":4,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":53,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":63,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":20,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":30,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":22,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":60,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":7,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":36,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":23,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":40,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":9,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":6,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":3,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":19,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":27,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":64,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":34,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":41,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":47,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":18,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":45,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":35,"org.eclipse.jgit.transport.TestProtocolTest.testPush":62,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":51,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":49,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":39,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":38,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":15,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":2,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":48,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":0,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":42,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":37,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":50,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":61,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":13,"org.eclipse.jgit.api.RevertCommandTest.testRevert":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":31}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
