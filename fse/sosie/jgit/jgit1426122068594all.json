[{"failures":[0,1,2,3,4,5],"tindex":"449936f9-c853-11e4-b3fb-0da60f4a8ff5","variableMapping":{"dco":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:257","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:413","type":"CtIfImpl","sourcecode":"if (!(java.util.ArrayList<java.lang.String>.isEmpty())) {\n    if (boolean)\n        throw new org.eclipse.jgit.errors.CheckoutConflictException(java.util.ArrayList<java.lang.String>.toArray(new java.lang.String[java.util.ArrayList<java.lang.String>.size()]));\n    else\n        org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts();\n    \n} "},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"449936fa-c853-11e4-b3fb-a54802c00aed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:817","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(new java.lang.OutOfMemoryError())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:459","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException()"},"status":-1},{"failures":[],"tindex":"449936fb-c853-11e4-b3fb-1f9637bfcc51","variableMapping":{"low":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:102","type":"CtReturnImpl","sourcecode":"return -(int + 1)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:416","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[6,7,8,1,2,3,9,4,10,11,12,13,0,14,15,16,5,17,18,19,20,21],"tindex":"449936fc-c853-11e4-b3fb-2579eff09bb3","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.LogCommand:159","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.revwalk.RevCommit>>.setCallable(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:133","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.revwalk.RevCommit>>.checkCallable()"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"449936fd-c853-11e4-b3fb-470cc22e9c4e","variableMapping":{"oldLeaf":"ref","ref":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:168","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.isPeeled()) || ((org.eclipse.jgit.lib.Ref.getObjectId()) == null))\n    return org.eclipse.jgit.lib.Ref;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:717","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> != null) && (org.eclipse.jgit.lib.Ref.getName().startsWith(java.lang.String))) {\n    int int;\n    if (0 <= (int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(org.eclipse.jgit.lib.Ref.getName())))\n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.get(int);\n    else if (0 <= (int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.find(org.eclipse.jgit.lib.Ref.getName())))\n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(int);\n    else\n        return org.eclipse.jgit.lib.Ref;\n    \n} else {\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>);\n    if (org.eclipse.jgit.lib.Ref == null)\n        return org.eclipse.jgit.lib.Ref;\n    \n}"},"status":-1},{"failures":[],"tindex":"449936fe-c853-11e4-b3fb-6f2aafefcf51","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:147","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:67","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String"},"status":-2},{"failures":[4,0,5,1,2,3],"tindex":"449936ff-c853-11e4-b3fb-35f0dc9ffd5e","variableMapping":{"this":"dc"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:405","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:382","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.unlock()"},"status":-1},{"failures":[1,2,3,4,0,5],"tindex":"44993700-c853-11e4-b3fb-49e4197610b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:192","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.org.eclipse.jgit.internal.storage.file.WindowCache.removeAll(org.eclipse.jgit.internal.storage.file.PackFile)"},"status":-1},{"failures":[34,35,1,2,3,4,0,36,5],"tindex":"44993701-c853-11e4-b3fb-0f31ce13f555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:227","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"sizeOfPackedObjects\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"status":-1},{"failures":[5,4,0,1,2,3,37,38],"tindex":"44993702-c853-11e4-b3fb-49df9ab2e5a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:1018","type":"CtIfImpl","sourcecode":"if (!(java.io.File.delete()))\n    break;\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":13,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":34,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":24,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":36,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":10,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":35,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":6,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":17,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":19,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":27,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":21,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":16,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":15,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":30,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":33,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":9,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":12,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":20,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":29,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":26,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":37,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":31,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":18,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":11,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":38,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.RevertCommandTest.testRevert":8,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":14,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":25}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
