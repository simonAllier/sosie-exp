[{"failures":[],"tindex":"a0bbdbbb-c867-11e4-b5c2-39112a38b471","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportBundleFile:134","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:145","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream = java.net.URL.openStream()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"a0bbdbbc-c867-11e4-b5c2-e5a649bc4eff","variableMapping":{"monitor":"pm"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.IndexDiff:572","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor != null)\n    org.eclipse.jgit.lib.ProgressMonitor.endTask();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1323","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(org.eclipse.jgit.transport.GitProtocolConstants.java.lang.String))) {\n    java.io.OutputStream = new org.eclipse.jgit.transport.SideBandOutputStream(org.eclipse.jgit.transport.SideBandOutputStream.int , int , java.io.OutputStream);\n    org.eclipse.jgit.lib.ProgressMonitor = new org.eclipse.jgit.transport.SideBandProgressMonitor(java.io.OutputStream);\n} "},"status":-1},{"failures":[0,6,7,2,3,4,5,1,8],"tindex":"a0bbdbbd-c867-11e4-b5c2-09a92d01814f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:166","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.CloneCommand.setDirectory(org.eclipse.jgit.submodule.SubmoduleWalk.getDirectory())"},"status":-1},{"failures":[0,1,9,10,11,12,13,14,15,2,3,4,5],"tindex":"a0bbdbbe-c867-11e4-b5c2-470b6ef6860c","variableMapping":{"entrySpan":"size","cIdx":"size","cCnt":"size"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:428","type":"CtIfImpl","sourcecode":"if (((int) >= 0) && ((int + (int)) <= int)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.BlockList:151","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.util.BlockList<T>.int) == 0)\n    return ;\n"},"status":-1},{"failures":[],"tindex":"a0bbdbbf-c867-11e4-b5c2-07db54bcb58c","variableMapping":{"available":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:166","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1415","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.transport.ReceiveCommand.getResult()) {\n    case NOT_ATTEMPTED :\n        java.lang.StringBuilder.append(\"server bug; ref not processed\");\n        break;\n    case REJECTED_NOCREATE :\n        java.lang.StringBuilder.append(\"creation prohibited\");\n        break;\n    case REJECTED_NODELETE :\n        java.lang.StringBuilder.append(\"deletion prohibited\");\n        break;\n    case REJECTED_NONFASTFORWARD :\n        java.lang.StringBuilder.append(\"non-fast forward\");\n        break;\n    case REJECTED_CURRENT_BRANCH :\n        java.lang.StringBuilder.append(\"branch is currently checked out\");\n        break;\n    case REJECTED_MISSING_OBJECT :\n        if ((org.eclipse.jgit.transport.ReceiveCommand.getMessage()) == null)\n            java.lang.StringBuilder.append(\"missing object(s)\");\n        else if ((org.eclipse.jgit.transport.ReceiveCommand.getMessage().length()) == (org.eclipse.jgit.lib.Constants.int))\n            java.lang.StringBuilder.append(((\"object \" + (org.eclipse.jgit.transport.ReceiveCommand.getMessage())) + \" missing\"));\n        else\n            java.lang.StringBuilder.append(org.eclipse.jgit.transport.ReceiveCommand.getMessage());\n        \n        break;\n    case REJECTED_OTHER_REASON :\n        if ((org.eclipse.jgit.transport.ReceiveCommand.getMessage()) == null)\n            java.lang.StringBuilder.append(\"unspecified reason\");\n        else\n            java.lang.StringBuilder.append(org.eclipse.jgit.transport.ReceiveCommand.getMessage());\n        \n        break;\n    case LOCK_FAILURE :\n        java.lang.StringBuilder.append(\"failed to lock\");\n        break;\n    case OK :\n        continue;\n}"},"status":-2},{"failures":[0,3,4,5],"tindex":"a0bc02d0-c867-11e4-b5c2-2d14d8b626ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:959","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefAdvertiser.end()"},"status":-2},{"failures":[0,16,3,4,5,2,1],"tindex":"a0bc02d1-c867-11e4-b5c2-6fcf67579de3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:708","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Config.getBoolean(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, true)) {\n    org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setBare();\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"a0bc02d2-c867-11e4-b5c2-198e301d48d0","variableMapping":{"conn":"conn"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:574","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.http.HttpConnection.setHostnameVerifier(new org.eclipse.jgit.transport.TransportHttp.DummyHostnameVerifier())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:867","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.http.HttpConnection.setFixedLengthStreamingMode(((int)(org.eclipse.jgit.util.TemporaryBuffer.length())))"},"status":-2},{"failures":[],"tindex":"a0bc02d3-c867-11e4-b5c2-a7522a9495f7","variableMapping":{"resEnd":"connectionAttempts","start":"connectionAttempts","resLine":"connectionAttempts"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:317","type":"CtIfImpl","sourcecode":"if ((int <= int) && (int < int))\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:255","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n"},"status":-2},{"failures":[],"tindex":"a0bc02d4-c867-11e4-b5c2-25382473b7e2","variableMapping":{"sz":"org.eclipse.jgit.lib.Constants.OBJ_BLOB"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:209","type":"CtIfImpl","sourcecode":"if (int < 2)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:518","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob) && (!(org.eclipse.jgit.lib.ObjectReader.has(org.eclipse.jgit.revwalk.RevObject))))\n    throw new org.eclipse.jgit.errors.MissingObjectException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.int);\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue":16,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":8,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":12,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
