[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"9273c200-c831-11e4-8524-151bece8beee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.ContentSource:208","type":"CtThrowImpl","sourcecode":"throw new java.io.FileNotFoundException(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9273c201-c831-11e4-8524-7ff8166c9d01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:207","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.RefUpdate.Result.name()))"},"status":-2},{"failures":[],"tindex":"9273c202-c831-11e4-8524-99fd4fa0e43a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:225","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry = null"},"status":-2},{"failures":[],"tindex":"9273c203-c831-11e4-8524-812c6d59323e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:399","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectLoader org.eclipse.jgit.lib.ObjectLoader = org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)"},"status":-2},{"failures":[],"tindex":"9273c204-c831-11e4-8524-c9b95bb7dd65","variableMapping":{"relativeTarget":"in"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.attributes.AttributesRule:198","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:138","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"--\")))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"9273c205-c831-11e4-8524-c99dc252adc2","variableMapping":{"repo":"repo","strategy":"strategy"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:153","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:222","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)))"},"status":-2},{"failures":[],"tindex":"9273c206-c831-11e4-8524-d1c202e35f98","variableMapping":{"this":"this","description":"userConfigFileInvalid","blameNotCommittedYet":"userConfigFileInvalid"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:290","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:234","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.storage.file.FileBasedConfig.load();\n} catch (org.eclipse.jgit.errors.ConfigInvalidException org.eclipse.jgit.errors.ConfigInvalidException) {\n    java.io.IOException java.io.IOException = new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.storage.file.FileBasedConfig.getFile().getAbsolutePath(), org.eclipse.jgit.errors.ConfigInvalidException));\n    java.io.IOException.initCause(org.eclipse.jgit.errors.ConfigInvalidException);\n    throw java.io.IOException;\n}"},"status":-2},{"failures":[],"tindex":"9273c207-c831-11e4-8524-e306deebf790","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV1:83","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeChecksumFooter()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV1:73","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeFanOutTable()"},"status":-2},{"failures":[],"tindex":"9273c208-c831-11e4-8524-a138a9001613","variableMapping":{"path":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_KEY_WORKTREE","repo":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HMACSHA1NonceGenerator:88","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository instanceof org.eclipse.jgit.internal.storage.dfs.DfsRepository)\n    java.lang.String = ((org.eclipse.jgit.internal.storage.dfs.DfsRepository)(org.eclipse.jgit.lib.Repository)).getDescription().getRepositoryName();\nelse if ((org.eclipse.jgit.lib.Repository.getDirectory()) != null)\n    java.lang.String = org.eclipse.jgit.lib.Repository.getDirectory().getPath();\nelse\n    throw new java.lang.IllegalStateException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:333","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    java.io.File java.io.File = org.eclipse.jgit.lib.Repository.getWorkTree();\n    if (!(org.eclipse.jgit.lib.Repository.getDirectory().getParentFile().equals(java.io.File))) {\n        org.eclipse.jgit.storage.file.FileBasedConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, null, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.getWorkTree().getAbsolutePath());\n        org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.lib.Repository.getFS());\n        try {\n            if (org.eclipse.jgit.internal.storage.file.LockFile.lock()) {\n                org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encode(((org.eclipse.jgit.lib.Constants.java.lang.String) + (org.eclipse.jgit.lib.Repository.getDirectory().getAbsolutePath()))));\n                org.eclipse.jgit.internal.storage.file.LockFile.commit();\n            } \n        } finally {\n            org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"9273c209-c831-11e4-8524-612e8d9539f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:966","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:464","type":"CtReturnImpl","sourcecode":"return java.util.List<org.eclipse.jgit.transport.RefSpec>.remove(org.eclipse.jgit.transport.RefSpec)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":6,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":9,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":8,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":7,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":12,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":5,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":0,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":4,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
