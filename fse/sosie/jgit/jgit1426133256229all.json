[{"failures":[],"tindex":"5104ffba-c86d-11e4-a9bc-572008506213","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:559","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HMACSHA1NonceGenerator:77","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.security.InvalidKeyException)"},"status":-2},{"failures":[],"tindex":"5104ffbb-c86d-11e4-a9bc-07c0afa7a7ff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileObjectDatabase:69","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.WindowCursor(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:148","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.dfs.DfsReader(this)"},"status":-2},{"failures":[],"tindex":"5104ffbc-c86d-11e4-a9bc-2d79e4d003cd","variableMapping":{"com.googlecode.javaewah.EWAHCompressedBitmap.wordinbits":"ptr","sizeInBits":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:479","type":"CtLocalVariableImpl","sourcecode":"int int = int % (com.googlecode.javaewah.EWAHCompressedBitmap.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:345","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"5104ffbd-c86d-11e4-a9bc-29fcfb6ddf55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:220","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"5104ffbe-c86d-11e4-a9bc-a9f86216a96d","variableMapping":{"pattern":"newValue"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"/\" + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.CredentialItem:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"5104ffbf-c86d-11e4-a9bc-c14742b3446b","variableMapping":{"t":"matches","treeMatch":"t","minRef":"minRef","matches":"matches"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:289","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator)\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:155","type":"CtIfImpl","sourcecode":"if ((((boolean) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator))) && (!org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)))) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    boolean = true;\n} else {\n    boolean = false;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n}"},"status":-2},{"failures":[],"tindex":"5104ffc0-c86d-11e4-a9bc-8f9b1bf3fe82","variableMapping":{"repo":"repo","message":"resolvedUri"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:533","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.Repository.readMergeCommitMsg()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:167","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(org.eclipse.jgit.lib.Repository, java.lang.String)"},"status":-2},{"failures":[],"tindex":"5104ffc1-c86d-11e4-a9bc-5dbd3c801e06","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:161","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:141","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"5104ffc2-c86d-11e4-a9bc-a16a441a276c","variableMapping":{"prefix":"unknownObjectType","name":"unknownObjectType"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:285","type":"CtIfImpl","sourcecode":"if (0 < (java.lang.String.length()))\n    java.lang.String = java.lang.String.substring(java.lang.String.length());\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:304","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.revwalk.RevObject.getType()) {\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.transport.WalkFetchConnection.processBlob(org.eclipse.jgit.revwalk.RevObject);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject);\n        break;\n    default :\n        throw new org.eclipse.jgit.errors.TransportException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.name()));\n}"},"status":-2},{"failures":[],"tindex":"5104ffc3-c86d-11e4-a9bc-9937707c77df","variableMapping":{"remoteUrl":"refname"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:508","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"/\")))\n    java.lang.String = java.lang.String + \"/\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:469","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.matchDestination(java.lang.String)) {\n    final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromDestination(java.lang.String);\n    if ((org.eclipse.jgit.transport.FetchResult.getAdvertisedRef(org.eclipse.jgit.transport.RefSpec.getSource())) == null) {\n        org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate, org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.Ref);\n    } \n} "},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
