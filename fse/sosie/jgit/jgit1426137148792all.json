[{"failures":[],"tindex":"61179998-c876-11e4-97c2-cbac3f77c268","variableMapping":{"d":"bucketValuesPos","org.eclipse.jgit.internal.storage.pack.ObjectToPack.DELTA_SHIFT":"bucketValuesPos","flags":"bucket","org.eclipse.jgit.internal.storage.pack.ObjectToPack.NON_DELTA_MASK":"bucket"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:194","type":"CtAssignmentImpl","sourcecode":"int = (int << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) | ((int) & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"61179999-c876-11e4-97c2-dbd3079576a9","variableMapping":{"newHead":"newHead","headCommit":"newHead"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RevertCommand:139","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:464","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.lib.Repository).commit().setMessage(java.lang.String).setAmend(true).setNoVerify(true).call()"},"status":-1},{"failures":[],"tindex":"6117999a-c876-11e4-97c2-170be2b8c578","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:572","type":"CtReturnImpl","sourcecode":"return "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1527","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.copyObjectAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack, boolean);\n    org.eclipse.jgit.internal.storage.pack.PackOutputStream.endObject();\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCRC(((int)(java.util.zip.CRC32.getValue())));\n    (org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.ObjectType.long)++;\n    if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDeltaRepresentation()) {\n        (org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.ObjectType.long)++;\n        org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.ObjectType.long += (org.eclipse.jgit.internal.storage.pack.PackOutputStream.length()) - (org.eclipse.jgit.internal.storage.pack.ObjectToPack.getOffset());\n    } \n    return ;\n} catch (org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException) {\n    if ((org.eclipse.jgit.internal.storage.pack.ObjectToPack.getOffset()) == (org.eclipse.jgit.internal.storage.pack.PackOutputStream.length())) {\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.setOffset(0);\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearDeltaBase();\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearReuseAsIs();\n        org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.selectObjectRepresentation(this, org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor, java.util.Collections.java.util.Collections.singleton(org.eclipse.jgit.internal.storage.pack.ObjectToPack));\n        continue;\n    } else {\n        org.eclipse.jgit.errors.CorruptObjectException org.eclipse.jgit.errors.CorruptObjectException;\n        org.eclipse.jgit.errors.CorruptObjectException = new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.internal.storage.pack.ObjectToPack , \"\");\n        org.eclipse.jgit.errors.CorruptObjectException.initCause(org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException);\n        throw org.eclipse.jgit.errors.CorruptObjectException;\n    }\n}"},"status":-2},{"failures":[2,1,0,3,4,5],"tindex":"6117999b-c876-11e4-97c2-07d78562c8aa","variableMapping":{"line":"sentNonce"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:182","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String.substring(0, 45)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushCertificateParser:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.NonceGenerator.createNonce(org.eclipse.jgit.lib.Repository, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.toSeconds(java.lang.System.java.lang.System.currentTimeMillis()))"},"status":-1},{"failures":[],"tindex":"6117999c-c876-11e4-97c2-a5375f0e49a7","variableMapping":{"obj":"objectId"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1018","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject.parseHeaders(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObjectCache:69","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId)) {\n} else {\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table = new org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table(java.lang.Math.java.lang.Math.min(((org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.int) + 1), org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.int));\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId);\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table = org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table;\n}"},"status":-2},{"failures":[],"tindex":"6117999d-c876-11e4-97c2-6b31eb3f5151","variableMapping":{"acl":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:234","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"private\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:713","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.(java.lang.String.valueOf((long / (org.eclipse.jgit.lib.Config.long)))) + \" m\""},"status":-2},{"failures":[],"tindex":"6117999e-c876-11e4-97c2-495ee20782f5","variableMapping":{"total":"reusedObjects"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:239","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2131","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6117999f-c876-11e4-97c2-2d2c1ca64452","variableMapping":{"idHEAD":"result","master":"result"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:288","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.Ref.getObjectId().equals(org.eclipse.jgit.lib.Ref.getObjectId())))\n    return org.eclipse.jgit.lib.Ref;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:270","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref"},"status":-2},{"failures":[],"tindex":"611799a0-c876-11e4-97c2-81e6e914f47e","variableMapping":{"this":"this","internalServerError":"org.eclipse.jgit.lib.Constants.HEAD"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:706","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.UploadPack.reportErrorDuringNegotiate(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:121","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"));\n        if (org.eclipse.jgit.lib.ObjectId == null)\n            throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.treewalk.CanonicalTreeParser org.eclipse.jgit.treewalk.CanonicalTreeParser = new org.eclipse.jgit.treewalk.CanonicalTreeParser();\n        org.eclipse.jgit.lib.ObjectReader org.eclipse.jgit.lib.ObjectReader = org.eclipse.jgit.lib.Repository.newObjectReader();\n        try {\n            org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId);\n        } finally {\n            org.eclipse.jgit.lib.ObjectReader.release();\n        }\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.CanonicalTreeParser;\n    } \n    org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.lib.Repository.readDirCache());\n} else {\n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null)\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.lib.Repository.readDirCache());\n    \n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator) == null)\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository);\n    \n}"},"status":-2},{"failures":[2,6,7,1,0,3,4,5],"tindex":"611799a1-c876-11e4-97c2-e71d2bad47ce","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:978","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RenameDetector:673","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.DiffEntry"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes":7,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
