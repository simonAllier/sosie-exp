[{"failures":[],"tindex":"7dbdbce7-c821-11e4-944e-2993625aeb7d","variableMapping":{"subpath":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:230","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"/\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.ThrowingPrintWriter:119","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.ThrowingPrintWriter.print(java.lang.String.java.lang.String.valueOf(char))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"7dbe3218-c821-11e4-944e-ffc55ebcd3ca","variableMapping":{"rw":"walk","id":"start"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.InMemoryRepository:249","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId));\n    boolean = true;\n} else\n    org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId));\n"},"status":-1},{"failures":[0,1,2,3,18,7],"tindex":"7dbe3219-c821-11e4-944e-ad31d6db71c6","variableMapping":{"receiving":"pm","resolving":"pm"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PackParser:473","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor == org.eclipse.jgit.lib.ProgressMonitor)\n    org.eclipse.jgit.lib.ProgressMonitor.start(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:175","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.endTask()"},"status":-1},{"failures":[0,1,2,3,18,7],"tindex":"7dbe592a-c821-11e4-944e-433c8041b362","variableMapping":{"flags":"carry","org.eclipse.jgit.revwalk.RevWalk.SEEN":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:384","type":"CtIfImpl","sourcecode":"if ((int & (org.eclipse.jgit.revwalk.RevWalk.int)) != 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:192","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][int];\n    if (!org.eclipse.jgit.revwalk.MergeBaseGenerator.(carryOntoOne(org.eclipse.jgit.revwalk.RevCommit, int)))\n        org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistory(org.eclipse.jgit.revwalk.RevCommit, int);\n    \n}"},"status":-1},{"failures":[],"tindex":"7dbe592b-c821-11e4-944e-253d69917907","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:328","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectInserter org.eclipse.jgit.lib.ObjectInserter = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:186","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectInserter org.eclipse.jgit.lib.ObjectInserter = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.lib.Repository.newObjectInserter()"},"status":-2},{"failures":[],"tindex":"7dbe592c-c821-11e4-944e-09e2714557e8","variableMapping":{"srcSpec":"org.eclipse.jgit.lib.Constants.ORIG_HEAD","db":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:623","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:738","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"7dbe592d-c821-11e4-944e-6dd26400b42a","variableMapping":{"nameUri":"subsection","cfg":"this","name":"subsection"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:758","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Config.setString(\"submodule\", java.lang.String, \"url\", java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1066","type":"CtIfImpl","sourcecode":"if ('\\\"' == int) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n} "},"status":-2},{"failures":[0,1,2,3,18,7],"tindex":"7dc250ce-c821-11e4-944e-2f30edad05d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:316","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId.copyTo(java.io.ByteArrayOutputStream)"},"status":-1},{"failures":[],"tindex":"7dc250cf-c821-11e4-944e-973824aeb6fd","variableMapping":{"line":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_BRANCH_SECTION"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:148","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(41, java.lang.String.length())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:233","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getConfig().getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, null, org.eclipse.jgit.lib.ConfigConstants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"7dc250d0-c821-11e4-944e-c57ede53ed48","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:101","type":"CtReturnImpl","sourcecode":"return 10"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:329","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":55,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":65,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":60,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":19,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":59,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":67,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":22,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":6,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":31,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":71,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":18,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":69,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":49,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":32,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":10,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":66,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":63,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":45,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":54,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":44,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":43,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":4,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":25,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":58,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":29,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":30,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":42,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":16,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":23,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":37,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":62,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":35,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":27,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":38,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":56,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":52,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":70,"org.eclipse.jgit.api.RevertCommandTest.testRevert":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":12}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
