[{"failures":[0,1,2,3,4,5],"tindex":"6ae1be6f-c822-11e4-94f4-dba4bc638eef","variableMapping":{"session":"sock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:178","type":"CtInvocationImpl","sourcecode":"com.jcraft.jsch.Session.setConfig(\"MaxAuthTries\", \"1\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.JschSession:96","type":"CtInvocationImpl","sourcecode":"com.jcraft.jsch.Session.disconnect()"},"status":-1},{"failures":[],"tindex":"6ae34510-c822-11e4-94f4-9569f525bda2","variableMapping":{"p":"org.eclipse.jgit.lib.Constants.OBJ_OFS_DELTA","data":"ib","pos":"pos","sz":"pos","curs":"curs","db":"db","typeCode":"deltaSize"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:741","type":"CtIfImpl","sourcecode":"if (byte[] != null)\n    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\nelse\n    return new org.eclipse.jgit.internal.storage.file.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:715","type":"CtForImpl","sourcecode":"SEARCH : for ( ;  ; ) {\n    org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, 20, org.eclipse.jgit.internal.storage.file.WindowCursor);\n    int int = (byte[][0]) & 255;\n    final int int = (int >> 4) & 7;\n    long long = int & 15;\n    int int = 4;\n    int int = 1;\n    while ((int & 128) != 0) {\n        int = (byte[][int++]) & 255;\n        long += ((long)((int & 127))) << int;\n        int += 7;\n    }\n    switch (int) {\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                if ((org.eclipse.jgit.internal.storage.file.PackFile.Delta != null) || (long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())))\n                    byte[] = org.eclipse.jgit.internal.storage.file.PackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.file.WindowCursor);\n                \n                if (org.eclipse.jgit.internal.storage.file.PackFile.Delta != null) {\n                    int = int;\n                    break SEARCH;\n                } \n                if (byte[] != null)\n                    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n                else\n                    return new org.eclipse.jgit.internal.storage.file.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n                \n            }\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                int = (byte[][int++]) & 255;\n                long long = int & 127;\n                while ((int & 128) != 0) {\n                    long += 1;\n                    int = (byte[][int++]) & 255;\n                    long <<= 7;\n                    long += int & 127;\n                }\n                long = long - long;\n                org.eclipse.jgit.internal.storage.file.PackFile.Delta = new org.eclipse.jgit.internal.storage.file.PackFile.Delta(org.eclipse.jgit.internal.storage.file.PackFile.Delta , long , ((int)(long)) , int , long);\n                if (long != (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int))\n                    break SEARCH;\n                \n                org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache().get(this, long);\n                if (org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry != null) {\n                    int = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.int;\n                    byte[] = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.byte[];\n                    boolean = true;\n                    break SEARCH;\n                } \n                long = long;\n                continue SEARCH;\n            }\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                org.eclipse.jgit.internal.storage.file.PackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.file.WindowCursor);\n                long long = org.eclipse.jgit.internal.storage.file.PackFile.findDeltaBase(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]));\n                org.eclipse.jgit.internal.storage.file.PackFile.Delta = new org.eclipse.jgit.internal.storage.file.PackFile.Delta(org.eclipse.jgit.internal.storage.file.PackFile.Delta , long , ((int)(long)) , (int + 20) , long);\n                if (long != (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int))\n                    break SEARCH;\n                \n                org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache().get(this, long);\n                if (org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry != null) {\n                    int = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.int;\n                    byte[] = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.byte[];\n                    boolean = true;\n                    break SEARCH;\n                } \n                long = long;\n                continue SEARCH;\n            }\n        default :\n            throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int)));\n    }\n}"},"status":-2},{"failures":[1,5,0,2,3,4],"tindex":"6ae34511-c822-11e4-94f4-615050a8b05d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:101","type":"CtReturnImpl","sourcecode":"return 10"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:540","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-1},{"failures":[],"tindex":"6ae34512-c822-11e4-94f4-67c15af0acbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:224","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor)"},"status":-2},{"failures":[5,1,6,0,2,3,4],"tindex":"6ae34513-c822-11e4-94f4-33677da10060","variableMapping":{"cmp":"org.eclipse.jgit.revplot.AbstractPlotRenderer.LINE_WIDTH"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:352","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    throw new java.lang.IllegalStateException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:122","type":"CtIfImpl","sourcecode":"if (java.lang.Math.(java.lang.Math.abs((int - int))) > (org.eclipse.jgit.revplot.AbstractPlotRenderer.int)) {\n    final int int;\n    if (int < int)\n        int = int - ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2);\n    else\n        int = int + ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2);\n    \n    org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, (int / 2), org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n    org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, int, org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n} else\n    org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, int, org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n"},"status":-1},{"failures":[0,2,3,4,1,5],"tindex":"6ae34514-c822-11e4-94f4-e3e40bb55136","variableMapping":{"revPool":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:955","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:543","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.assertNotStarted()"},"status":-1},{"failures":[],"tindex":"6ae34515-c822-11e4-94f4-1f9420bead29","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:451","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1024]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:531","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[]{ '.' , 'g' , 'i' , 't' }"},"status":-2},{"failures":[7,8,9,10,1,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,5,0,2,3,4,44],"tindex":"6ae34516-c822-11e4-94f4-a7dec246d653","variableMapping":{"cmp":"copySize"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:352","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    throw new java.lang.IllegalStateException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:189","type":"CtIfImpl","sourcecode":"if ((int & 32) != 0)\n    int |= ((byte[][int++]) & 255) << 8;\n"},"status":-1},{"failures":[6,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,1,60,61,62,63,5,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,91,92,93,94,95,96,97,2,3,4],"tindex":"6ae36c27-c822-11e4-94f4-670ee22421c7","variableMapping":{"opt":"msg"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:178","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\" \"))\n    java.lang.String = java.lang.String.substring(1);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1351","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.writeCommitMsg(java.io.File, java.lang.String)"},"status":-1},{"failures":[5,1,0,2,3,4],"tindex":"6ae36c28-c822-11e4-94f4-ade969c22e34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions:132","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setStreamFileThreshold(((int)(long)))"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":96,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":89,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":9,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":44,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":92,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":23,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":33,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":36,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":63,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":37,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":29,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":47,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":6,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":67,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":65,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":83,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":82,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":41,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":21,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":35,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":22,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":95,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":20,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":59,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":58,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":88,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":81,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":80,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":85,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":61,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":69,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":55,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":40,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":74,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":8,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":76,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":77,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":78,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":43,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":31,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":27,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":94,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":70,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":66,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":30,"org.eclipse.jgit.transport.PackParserTest.test1":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.transport.PackParserTest.test2":26,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":68,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":79,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":7,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":60,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":52,"org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg":97,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":39,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":54,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":62,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":93,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":71,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":18,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":87,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":16,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":48,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":34,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":90,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":86,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":57,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":42,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":91,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":12,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":73,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":49}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
