[{"failures":[],"tindex":"80b88995-c825-11e4-bcb7-4ffb0fa54a4a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:304","type":"CtLocalVariableImpl","sourcecode":"int int = 20000"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:956","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"80b88996-c825-11e4-bcb7-b13d2d973b05","variableMapping":{"index":"i","filters":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.TreeFilterMarker:115","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.TreeFilter[][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.OrTreeFilter:179","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.TreeFilter[][int] = org.eclipse.jgit.treewalk.filter.TreeFilter[][int].clone()"},"status":-1},{"failures":[],"tindex":"80b88997-c825-11e4-bcb7-e9437e5568ea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:899","type":"CtLocalVariableImpl","sourcecode":"final int int = 4096"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:532","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"80b88998-c825-11e4-bcb7-9f9527c5ca19","variableMapping":{"p":"id","LOCALLY_SEEN":"COMPLETE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:736","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:290","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId instanceof org.eclipse.jgit.revwalk.RevObject) {\n    org.eclipse.jgit.revwalk.RevObject = ((org.eclipse.jgit.revwalk.RevObject)(org.eclipse.jgit.lib.ObjectId));\n    if (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))\n        return ;\n    \n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevObject);\n} else {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n    if (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))\n        return ;\n    \n}"},"status":-2},{"failures":[0,2,3,4,1,5,6],"tindex":"80b88999-c825-11e4-bcb7-0b5cb01087b0","variableMapping":{"resEnd":"hash","start":"hash","resLine":"hash"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:317","type":"CtIfImpl","sourcecode":"if ((int <= int) && (int < int))\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:455","type":"CtForImpl","sourcecode":"for (int int = java.lang.Math.java.lang.Math.max(0, ((int) - 16)) ; int < (int) ; int++) {\n    byte byte = byte[][int];\n    if (byte != ' ')\n        int = (int >>> 2) + (byte << 24);\n    \n}"},"status":-1},{"failures":[1,0,5,2,3,4],"tindex":"80b8899a-c825-11e4-bcb7-b763b44310f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:492","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n        break;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n    } else {\n        break;\n    }\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"80b8899b-c825-11e4-bcb7-f7e176bbba22","variableMapping":{"c":"subsection","caps":"m"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:124","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:258","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.add(org.eclipse.jgit.lib.ConfigLine.java.lang.String)"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,0,30,1,31,32,33,34,35,36,37,5,38,39,2,3,4],"tindex":"80b8b0ac-c825-11e4-bcb7-dd03b8211ffc","variableMapping":{"g":"g"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:170","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.LIFORevQueue(org.eclipse.jgit.revwalk.Generator)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:182","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.FixUninterestingGenerator(org.eclipse.jgit.revwalk.Generator)"},"status":-1},{"failures":[0,1,5,2,3,4],"tindex":"80b8b0ad-c825-11e4-bcb7-f75e5689ccb1","variableMapping":{"c":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:1157","type":"CtIfImpl","sourcecode":"if ('=' == int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:165","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"status":-1},{"failures":[0,1,5,2,3,4],"tindex":"80b8b0ae-c825-11e4-bcb7-ade79e0295f5","variableMapping":{"delayStartTime":"cnt","time":"cnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BatchingProgressMonitor:111","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:653","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":16,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":29,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":15,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":33,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":39,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":34,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":36,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":30,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":10,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":13,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":35,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":26,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":32}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
