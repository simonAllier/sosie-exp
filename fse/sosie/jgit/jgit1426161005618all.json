[{"failures":[],"tindex":"ece3fffa-c8ad-11e4-b229-adb77e28fbae","variableMapping":{"srcObj":"this","resObj":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:235","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack.copy())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.CachedObjectDirectory:107","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n    org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.UnpackedObjectId>.add(new org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.UnpackedObjectId(org.eclipse.jgit.lib.ObjectId));\n} catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"ece4270b-c8ad-11e4-b229-1d6cc5461b76","variableMapping":{"pOff":"pos"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:624","type":"CtIfImpl","sourcecode":"if (0 < int)\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:266","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.update(byte[], int, int)"},"status":-1},{"failures":[0,5,2,3,4,1,6,7,8,9],"tindex":"ece4270c-c8ad-11e4-b229-c99f1267416e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:135","type":"CtReturnImpl","sourcecode":"return \"created\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:296","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<java.lang.String, java.lang.String> != null)\n    return (java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()) + (java.lang.String.substring(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey().length()));\nelse\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"ece4270d-c8ad-11e4-b229-57548244efeb","variableMapping":{"srcObj":"this","resObj":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:235","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack.copy())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:980","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) >= 48) && (java.lang.String.startsWith(\"shallow \"))) {\n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(8, 48)));\n    continue;\n} "},"status":-2},{"failures":[10,11,12,13,14,0,2,3,4,15,16,17,18,19,20,21,22,23,24,1,5],"tindex":"ece4270e-c8ad-11e4-b229-cb01bfa5b7e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:201","type":"CtAssignmentImpl","sourcecode":"int = byte[].int"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,5,38,39,40,41,42,43,2,44,3,4,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,0,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"ece4270f-c8ad-11e4-b229-3594dd97814e","variableMapping":{"treeIt":"a","dcIt":"ch"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1123","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId().equals(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId())))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:719","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) != org.eclipse.jgit.treewalk.AbstractTreeIterator) && ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) != org.eclipse.jgit.treewalk.AbstractTreeIterator)) {\n    return true;\n} "},"status":-1},{"failures":[0,136,137,138,139,140,5,1,141,142,143,144,145,146,94,147,148,149,150,151,152,153,154,155,65,156,157,62,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,3,4,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"ece44e20-c8ad-11e4-b229-b7017b075b99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:384","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.DeltaIndex == null) {\n    org.eclipse.jgit.internal.storage.pack.DeltaWindow.checkLoadable(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry, org.eclipse.jgit.internal.storage.pack.DeltaWindow.org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry));\n    try {\n        org.eclipse.jgit.internal.storage.pack.DeltaIndex = new org.eclipse.jgit.internal.storage.pack.DeltaIndex(org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry));\n    } catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n        org.eclipse.jgit.errors.LargeObjectException.OutOfMemory org.eclipse.jgit.errors.LargeObjectException.OutOfMemory;\n        org.eclipse.jgit.errors.LargeObjectException.OutOfMemory = new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(java.lang.OutOfMemoryError);\n        org.eclipse.jgit.errors.LargeObjectException.OutOfMemory.setObjectId(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n        throw org.eclipse.jgit.errors.LargeObjectException.OutOfMemory;\n    }\n    if ((long) != 0)\n        long += (org.eclipse.jgit.internal.storage.pack.DeltaIndex.getIndexSize()) - (org.eclipse.jgit.internal.storage.pack.DeltaIndex.getSourceSize());\n    \n    org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.DeltaIndex = org.eclipse.jgit.internal.storage.pack.DeltaIndex;\n} "},"status":-1},{"failures":[],"tindex":"ece44e21-c8ad-11e4-b229-7160e01ee38c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:248","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:454","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.diff.DiffFormatter.makeIteratorFromTreeOrNull(org.eclipse.jgit.revwalk.RevTree)"},"status":-2},{"failures":[0,2,3,4,187,5,1],"tindex":"ece44e22-c8ad-11e4-b229-7bd3fa17b276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:207","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"pack-\".length())"},"status":-1},{"failures":[2,3,4,5,0,1],"tindex":"ece44e23-c8ad-11e4-b229-c3131d1d6c49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1029","type":"CtIfImpl","sourcecode":"if ((((org.eclipse.jgit.transport.GitProtocolConstants.MultiAck) == (org.eclipse.jgit.transport.GitProtocolConstants.MultiAck.org.eclipse.jgit.transport.GitProtocolConstants.MultiAck)) && (!boolean)) && org.eclipse.jgit.transport.UploadPack.(okToGiveUp())) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = java.util.List<org.eclipse.jgit.lib.ObjectId>.get(((java.util.List<org.eclipse.jgit.lib.ObjectId>.size()) - 1));\n    boolean = true;\n    org.eclipse.jgit.transport.PacketLineOut.writeString(((\"ACK \" + (org.eclipse.jgit.lib.ObjectId.name())) + \" ready\\n\"));\n    boolean = true;\n} "},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":173,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":41,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":35,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":73,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":134,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":81,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":95,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":153,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":111,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":40,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":20,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":72,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":88,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":159,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":82,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":135,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":94,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":166,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":168,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":27,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":17,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":84,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":179,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":149,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":163,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":37,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":130,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":133,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":164,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":177,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":74,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":10,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":156,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":15,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":165,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":32,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":83,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":75,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":6,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":18,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":184,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":34,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":122,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":121,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":170,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":42,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":109,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":16,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":65,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":11,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":70,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":98,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":78,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":68,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":120,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":119,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":66,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":67,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":26,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":71,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":9,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":49,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":131,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":118,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":139,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":152,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":52,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":151,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":59,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":25,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":19,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":43,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":162,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":117,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":39,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":80,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":115,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":110,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":96,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":85,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":7,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":12,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":102,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":23,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":62,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":180,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":127,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":148,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":92,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":141,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":154,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":185,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":171,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":107,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":167,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":132,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":14,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":129,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":30,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":128,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":181,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":103,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":186,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":158,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":61,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":105,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":36,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":69,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":57,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":58,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":48,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":13,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":89,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":51,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":91,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":108,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":90,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":76,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":104,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":157,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":24,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":175,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":176,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":169,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":174,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":101,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":50,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":124,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":146,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":145,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":55,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":178,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":77,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":147,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":44,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":138,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":183,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":137,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":136,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":22,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":143,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":160,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":140,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":33,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":86,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":187,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":116,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":38,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":155,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":172,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":114,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":113,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":161,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":93,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":79,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":150,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":123,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":182,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":47,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":46,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":106,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":142}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
