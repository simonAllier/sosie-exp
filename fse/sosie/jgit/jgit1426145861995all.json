[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"aac3fb2b-c88a-11e4-be6d-d7960ea1012d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:280","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.CommitBuilder.getAuthor().toExternalString())"},"status":-1},{"failures":[],"tindex":"aac3fb2c-c88a-11e4-be6d-07bfd407be15","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS:754","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:288","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File = org.eclipse.jgit.lib.RepositoryCache.FileKey.org.eclipse.jgit.lib.RepositoryCache.FileKey.resolve(java.io.File, org.eclipse.jgit.util.FS)"},"status":-2},{"failures":[0,6,23,24,25,33],"tindex":"aac3fb2d-c88a-11e4-be6d-2580c0b00051","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.UserConfig.org.eclipse.jgit.lib.UserConfig.getDefaultEmail()"},"status":-1},{"failures":[],"tindex":"aac3fb2e-c88a-11e4-be6d-978f08bb8a91","variableMapping":{"tmp":"lf","myLock":"lf"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:583","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.LockFile.lock()) {\n    org.eclipse.jgit.internal.storage.file.LockFile.setNeedStatInformation(true);\n    org.eclipse.jgit.internal.storage.file.LockFile = org.eclipse.jgit.internal.storage.file.LockFile;\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackLock:88","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.internal.storage.file.LockFile.lock()))\n    return false;\n"},"status":-2},{"failures":[6,23,24,25,33,0],"tindex":"aac3fb2f-c88a-11e4-be6d-75e3f269a0cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:600","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> : java.util.Map<java.lang.String, java.util.List<java.lang.String>>.entrySet()) {\n    final java.lang.String java.lang.String = java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>>.getKey();\n    if (org.eclipse.jgit.transport.AmazonS3.org.eclipse.jgit.transport.AmazonS3.isSignedHeader(java.lang.String))\n        java.util.SortedMap<java.lang.String, java.lang.String>.put(org.eclipse.jgit.util.StringUtils.org.eclipse.jgit.util.StringUtils.toLowerCase(java.lang.String), org.eclipse.jgit.transport.AmazonS3.org.eclipse.jgit.transport.AmazonS3.toCleanString(java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>>.getValue()));\n    \n}"},"status":-1},{"failures":[0,33,23,24,25,6],"tindex":"aac3fb30-c88a-11e4-be6d-e9093bd628a7","variableMapping":{"pckOut":"plo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:642","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.flush()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1483","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.setFlushOnEnd(false)"},"status":-1},{"failures":[50,51,52,53,54],"tindex":"aac3fb31-c88a-11e4-be6d-6b123b813a3f","variableMapping":{"local":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportLocal:122","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = org.eclipse.jgit.lib.Repository.isBare() ? org.eclipse.jgit.lib.Repository.getDirectory() : org.eclipse.jgit.lib.Repository.getWorkTree()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:307","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"tmplink\")"},"status":-1},{"failures":[],"tindex":"aac3fb32-c88a-11e4-be6d-afc243c74a4d","variableMapping":{"s":"str"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:343","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\nelse\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevTag:239","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"aac3fb33-c88a-11e4-be6d-b7998834f868","variableMapping":{"cur":"count","end":"count"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:151","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PostReceiveHookChain:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++)\n    org.eclipse.jgit.transport.PostReceiveHook[][int].onPostReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>);"},"status":-2},{"failures":[],"tindex":"aac3fb34-c88a-11e4-be6d-27cc6c970032","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Pattern must not be null!\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:202","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":25,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":49,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":38,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":23,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":11,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":32,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":51,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":39,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":33,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":8,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":26,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":37,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":31,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":28,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":46,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":12,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":54,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":16,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":15,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":36,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":52,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":9,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":50,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":7,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":30,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":48,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":45,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":19,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":13,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":1,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":5,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":43,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":41,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":34,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":14,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":53,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":4,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":29,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":42,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":47,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":24,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":44,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":40,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":17,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":35,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":3,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":27,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":22}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
