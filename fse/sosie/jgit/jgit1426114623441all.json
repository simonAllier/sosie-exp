[{"failures":[],"tindex":"ef8863d9-c841-11e4-b492-23cdcb0f4f0b","variableMapping":{"i":"hdrPtr","workingTree":"hdrPtr","dirCache":"hdrPtr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:712","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], org.eclipse.jgit.transport.PackParser.fill(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, 20), byte[], int, 20)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"ef888aea-c841-11e4-b492-97bda4a2ae5b","variableMapping":{"deltaAttempted":"in_char_class","flags":"in_brackets","org.eclipse.jgit.internal.storage.pack.ObjectToPack.DELTA_ATTEMPTED":"in_brackets"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:262","type":"CtIfImpl","sourcecode":"if (boolean)\n    int |= org.eclipse.jgit.internal.storage.pack.ObjectToPack.int;\nelse\n    int &= ~(org.eclipse.jgit.internal.storage.pack.ObjectToPack.int);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:228","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    char char = java.lang.String.charAt(int);\n    switch (char) {\n        case '*' :\n            if (boolean || (int > 0))\n                java.lang.StringBuilder.append(char);\n            else\n                java.lang.StringBuilder.append('.').append(char);\n            \n            break;\n        case '.' :\n            if (boolean)\n                java.lang.StringBuilder.append(char);\n            else\n                java.lang.StringBuilder.append('\\\\').append('.');\n            \n            break;\n        case '?' :\n            if (boolean || (int > 0))\n                java.lang.StringBuilder.append(char);\n            else\n                java.lang.StringBuilder.append('.');\n            \n            break;\n        case ':' :\n            if (int > 0)\n                if ((org.eclipse.jgit.ignore.internal.Strings.(org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder)) == '[') && java.lang.Character.(java.lang.Character.isLetter(org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int))))\n                    boolean = true;\n                \n            \n            java.lang.StringBuilder.append(':');\n            break;\n        case '-' :\n            if (int > 0) {\n                if (org.eclipse.jgit.ignore.internal.Strings.(org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int)) == ']')\n                    java.lang.StringBuilder.append('\\\\').append(char);\n                else\n                    java.lang.StringBuilder.append(char);\n                \n            } else\n                java.lang.StringBuilder.append('-');\n            \n            break;\n        case '\\\\' :\n            if (int > 0) {\n                char char = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int);\n                if ((char == ']') || (char == '['))\n                    boolean = true;\n                \n            } \n            java.lang.StringBuilder.append(char);\n            break;\n        case '[' :\n            if (int > 0) {\n                java.lang.StringBuilder.append('\\\\').append('[');\n                boolean = true;\n            } else {\n                if (!boolean) {\n                    int++;\n                    boolean = false;\n                } \n                java.lang.StringBuilder.append('[');\n            }\n            break;\n        case ']' :\n            if (boolean) {\n                java.lang.StringBuilder.append(']');\n                boolean = true;\n                break;\n            } \n            if (int <= 0) {\n                java.lang.StringBuilder.append('\\\\').append(']');\n                boolean = true;\n                break;\n            } \n            char char = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder);\n            if (((char == '[') && (!boolean)) || (char == '^')) {\n                java.lang.StringBuilder.append('\\\\');\n                java.lang.StringBuilder.append(']');\n                boolean = true;\n            } else {\n                boolean = false;\n                if (!boolean) {\n                    int--;\n                    java.lang.StringBuilder.append(']');\n                } else {\n                    boolean = false;\n                    java.lang.String java.lang.String = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.checkPosixCharClass(char[]);\n                    if (java.lang.String != null) {\n                        java.lang.StringBuilder.setLength(((java.lang.StringBuilder.length()) - 4));\n                        java.lang.StringBuilder.append(java.lang.String);\n                    } \n                    org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.reset(char[]);\n                }\n            }\n            break;\n        case '!' :\n            if (int > 0) {\n                if (org.eclipse.jgit.ignore.internal.Strings.(org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder)) == '[')\n                    java.lang.StringBuilder.append('^');\n                else\n                    java.lang.StringBuilder.append(char);\n                \n            } else\n                java.lang.StringBuilder.append(char);\n            \n            break;\n        default :\n            if (boolean)\n                org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.setNext(char[], char);\n            else\n                java.lang.StringBuilder.append(char);\n            \n            break;\n    }\n    boolean = char == '\\\\';\n}"},"status":-1},{"failures":[],"tindex":"ef888aeb-c841-11e4-b492-699bd5da033d","variableMapping":{"a":"n","b":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.StringUtils:114","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != (java.lang.String.length()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:326","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.StringUtils.org.eclipse.jgit.util.StringUtils.toBoolean(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ef888aec-c841-11e4-b492-4bc3faa02559","variableMapping":{"s":"org.eclipse.jgit.lib.Constants.R_HEADS"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:263","type":"CtIfImpl","sourcecode":"if ((java.lang.String.indexOf('%')) < 0)\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkPushConnection:385","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>) {\n    final java.lang.String java.lang.String = org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName();\n    if (java.lang.String.equals(((org.eclipse.jgit.lib.Constants.java.lang.String) + (org.eclipse.jgit.lib.Constants.java.lang.String))))\n        return java.lang.String;\n    \n}"},"status":-2},{"failures":[2,0,1,3,4,5],"tindex":"ef888aed-c841-11e4-b492-cde5b60970da","variableMapping":{"s":"highMark"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:350","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:314","type":"CtWhileImpl","sourcecode":"while ((int) <= int) {\n    int int = int;\n    org.eclipse.jgit.revwalk.RevObjectList.Block org.eclipse.jgit.revwalk.RevObjectList.Block = org.eclipse.jgit.revwalk.RevObjectList.Block;\n    while ((int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int)) >= (org.eclipse.jgit.revwalk.RevObjectList.int)) {\n        org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) + (org.eclipse.jgit.revwalk.RevObjectList.int)));\n        org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][0] = org.eclipse.jgit.revwalk.RevObjectList.Block;\n        org.eclipse.jgit.revwalk.RevObjectList.Block = org.eclipse.jgit.revwalk.RevObjectList.Block;\n    }\n    while ((org.eclipse.jgit.revwalk.RevObjectList.Block.int) > 0) {\n        final int int = int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n        int -= int << (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n        if ((org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]) == null)\n            org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int] = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) - (org.eclipse.jgit.revwalk.RevObjectList.int)));\n        \n        org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]));\n    }\n    final java.lang.Object[] java.lang.Object[] = org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[];\n    while (((int) <= int) && (int < (org.eclipse.jgit.revwalk.RevObjectList.int))) {\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next();\n        if (org.eclipse.jgit.revwalk.RevCommit == null) {\n            org.eclipse.jgit.revwalk.RevWalk = null;\n            return ;\n        } \n        org.eclipse.jgit.revwalk.RevCommitList<E>.enter((int)++, ((E)(org.eclipse.jgit.revwalk.RevCommit)));\n        java.lang.Object[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n    }\n}"},"status":-1},{"failures":[],"tindex":"ef888aee-c841-11e4-b492-97023b5fa370","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndex:101","type":"CtLocalVariableImpl","sourcecode":"final java.io.IOException java.io.IOException"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:314","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-2},{"failures":[],"tindex":"ef888aef-c841-11e4-b492-9fe6a9e994cf","variableMapping":{"result":"org.eclipse.jgit.lib.RefUpdate.Result.NEW","org.eclipse.jgit.lib.RefUpdate.Result.REJECTED_CURRENT_BRANCH":"org.eclipse.jgit.lib.RefUpdate.Result.NEW"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefUpdate:537","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TrackingRefUpdate:178","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"status":-2},{"failures":[],"tindex":"ef888af0-c841-11e4-b492-8d871f0a5ff5","variableMapping":{"commit":"currentBase"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:577","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:201","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)"},"status":-2},{"failures":[],"tindex":"ef888af1-c841-11e4-b492-e5e57aacf46d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.Status:194","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.addAll(org.eclipse.jgit.lib.IndexDiff.getChanged())"},"status":-2},{"failures":[],"tindex":"ef888af2-c841-11e4-b492-91a22a24ee67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:203","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId == null)\n    throw new java.lang.IllegalArgumentException();\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
