[{"failures":[0,1,2,3,4,5],"tindex":"e7bff502-c860-11e4-862d-3506a1ab2e18","variableMapping":{"walk":"rw"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:996","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.getObjectReader().setAvoidUnreachableObjects(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:308","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.dispose()"},"status":-1},{"failures":[5,4,6,0,1,2,7,8,3],"tindex":"e7c01c13-c860-11e4-862d-9fe9ef608429","variableMapping":{"toBeDeleted":"refs"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:214","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:639","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String);\n    if (!(org.eclipse.jgit.util.FS.exists(java.io.File)))\n        continue;\n    \n    org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(java.io.File , org.eclipse.jgit.internal.storage.file.FileRepository.getFS());\n    if (!(org.eclipse.jgit.internal.storage.file.LockFile.lock()))\n        continue;\n    \n    try {\n        org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n        if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n            continue;\n        \n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n        if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n            do {\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n                int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n                if (int < 0)\n                    break;\n                \n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n            } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n            int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n            org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n        } \n    } finally {\n        org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n    }\n}"},"status":-1},{"failures":[5,0,1,2,3,4],"tindex":"e7c01c14-c860-11e4-862d-03138378571f","variableMapping":{"mergeBase":"want","base":"want"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:422","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == org.eclipse.jgit.revwalk.RevCommit)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1242","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next();\n    if (org.eclipse.jgit.revwalk.RevCommit == null)\n        break;\n    \n    if (org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag)) {\n        org.eclipse.jgit.transport.UploadPack.addCommonBase(org.eclipse.jgit.revwalk.RevCommit);\n        org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlag);\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e7c01c15-c860-11e4-862d-611c1e856d77","variableMapping":{"available":"bits"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:166","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObjectCache:69","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId)) {\n} else {\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table = new org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table(java.lang.Math.java.lang.Math.min(((org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.int) + 1), org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.int));\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId);\n    org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table = org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table;\n}"},"status":-2},{"failures":[],"tindex":"e7c01c16-c860-11e4-862d-899badfba4d2","variableMapping":{"p":"n","regionList":"regionList","n":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:809","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region.deepCopy()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:762","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region = null"},"status":-2},{"failures":[0,1,2,9,10,11,12,13,14,15,16,17,5,3,4,18],"tindex":"e7c01c17-c860-11e4-862d-8510c4e99ffb","variableMapping":{"eb":"indexOfChangeIdLine"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:187","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:241","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"e7c04328-c860-11e4-862d-455f55d59d02","variableMapping":{"this":"rest"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:585","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.doOpen()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:559","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.PackFile != null)\n    java.util.List<org.eclipse.jgit.internal.storage.file.PackFile>.add(org.eclipse.jgit.internal.storage.file.PackFile);\n"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,0,1,2,31,32,33,34,35,36,37,38,3,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,62,63,63,64,64,65,66,67,68,69,70,71,5,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,4,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"e7c04329-c860-11e4-862d-cf9148f97bd3","variableMapping":{"def":"myDeflater"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:173","type":"CtAssignmentImpl","sourcecode":"java.util.zip.Deflater = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1647","type":"CtAssignmentImpl","sourcecode":"java.util.zip.Deflater = new java.util.zip.Deflater(org.eclipse.jgit.storage.pack.PackConfig.getCompressionLevel())"},"status":-1},{"failures":[5,0,1,2,3,4],"tindex":"e7c0432a-c860-11e4-862d-7bfb003454d7","variableMapping":{"bs":"position","wantSize":"position"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:323","type":"CtIfImpl","sourcecode":"if ((0 < int) && (int < int))\n    int = (int / int) * int;\nelse if (int <= 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:186","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.BitSet.set(int)"},"status":-1},{"failures":[5,0,1,2,4,3,149,150,151,152,153,154,155],"tindex":"e7c0432b-c860-11e4-862d-8f42f17b82ab","variableMapping":{"org.eclipse.jgit.transport.AmazonS3.SIGNED_HEADERS":"uncommittedChanges"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:125","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.AmazonS3.java.util.Set<java.lang.String>.add(\"content-md5\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.Status:195","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.addAll(org.eclipse.jgit.lib.IndexDiff.getRemoved())"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":122,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":121,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":9,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":45,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":118,"org.eclipse.jgit.api.FetchCommandTest.testFetch":39,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":55,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":86,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":52,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":143,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":35,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":138,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":132,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":24,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":49,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":113,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":130,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":96,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":147,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":151,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":51,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":70,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":85,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":7,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":100,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":57,"org.eclipse.jgit.api.PushCommandTest.testPush":89,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":109,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":155,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":80,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":139,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":153,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":30,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":74,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":88,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":79,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":28,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":116,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":115,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":61,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":144,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":18,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":127,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":146,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":21,"org.eclipse.jgit.util.ChangeIdUtilTest.testIndexOfChangeId":10,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":133,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":112,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":154,"org.eclipse.jgit.api.GitConstructionTest.testWrap":64,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":124,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":101,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":37,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":65,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":119,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeid":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":58,"org.eclipse.jgit.api.GitConstructionTest.testOpen":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":54,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":59,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":120,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":148,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":14,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":36,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":137,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":134,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":38,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":23,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":20,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":71,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":73,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":40,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":25,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":152,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":60,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":140,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":19,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":12,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":128,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":129,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":126,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":13,"org.eclipse.jgit.api.GitConstructionTest.testClose":62,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":82,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":90,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":142,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":34,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":83,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":22,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":108,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":107,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":145,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":87,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":131,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":111,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":150,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":149,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":117,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":95,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":78,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":69,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":77,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":76,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":46,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":105,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":81,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":6,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":67,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":44,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":91,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":8,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":31,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":141,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":68,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySet":16,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":84,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":98,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":123,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":47,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":106,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":97,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":114,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":135,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":72,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":66,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":136,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":103}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
