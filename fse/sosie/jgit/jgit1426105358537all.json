[{"failures":[0,1,2,3,4,5],"tindex":"5ca4adfe-c82c-11e4-92a2-bfa8bcab67c7","variableMapping":{"h":"endOfChunk"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.LongMap:137","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeResult:449","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.merge.MergeChunk.getEnd()"},"status":-1},{"failures":[6,7,8,9,10,4,0,11,12,1,2,3,5,13,14,15,16,17,18,19],"tindex":"5ca4adff-c82c-11e4-92a2-25bf8c3037d8","variableMapping":{"d":"c","bytesPerUnit":"base","bytesProcessed":"base"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:174","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int * (long)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:755","type":"CtOperatorAssignmentImpl","sourcecode":"long += int & 127"},"status":-1},{"failures":[4,5,1,2,3,0,20,21,22,23,24,25,26],"tindex":"5ca4ae00-c82c-11e4-92a2-c7360a6acf48","variableMapping":{"idHashBits":"prefixLen","key":"prefixLen"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:341","type":"CtReturnImpl","sourcecode":"return int >>> (31 - (int))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:330","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.AnyObjectId.getByte(((int) >> 1))"},"status":-1},{"failures":[4,5,1,2,3,0],"tindex":"5ca4ae01-c82c-11e4-92a2-6f30979ed3a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:465","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"status":-1},{"failures":[4,0,5,1,2,3],"tindex":"5ca4ae02-c82c-11e4-92a2-23bb70616137","variableMapping":{"parent":"oldDb"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:972","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileRepository.fireEvent(new org.eclipse.jgit.events.RefsChangedEvent())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:193","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository != null)\n    org.eclipse.jgit.lib.Repository.close();\n"},"status":-1},{"failures":[],"tindex":"5ca4d513-c82c-11e4-92a2-391313f2b889","variableMapping":{"s":"segment","i":"startIncl"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.LeadingAsteriskMatcher:75","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.NameMatcher:95","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt((int + int))"},"status":-2},{"failures":[4,1,2,3,5,0],"tindex":"5ca4d514-c82c-11e4-92a2-079e05b566eb","variableMapping":{"cacheMap":"cacheMap"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:199","type":"CtForImpl","sourcecode":"for (java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>> java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>> = java.util.concurrent.ConcurrentHashMap<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.entrySet().iterator() ; java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>>.hasNext() ; ) {\n    final java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>> java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>> = java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>>.next();\n    final org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.getValue().get();\n    if (org.eclipse.jgit.lib.Repository != null)\n        org.eclipse.jgit.lib.Repository.close();\n    \n    java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>>.remove();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:198","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    for (java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>> java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>> = java.util.concurrent.ConcurrentHashMap<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.entrySet().iterator() ; java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>>.hasNext() ; ) {\n        final java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>> java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>> = java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>>.next();\n        final org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.getValue().get();\n        if (org.eclipse.jgit.lib.Repository != null)\n            org.eclipse.jgit.lib.Repository.close();\n        \n        java.util.Iterator<java.util.Map.Entry<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>>.remove();\n    }\n}"},"status":-1},{"failures":[0,5,4,1,2,3],"tindex":"5ca4d515-c82c-11e4-92a2-aba4d1ee8bdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:246","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n    if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n        org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n    "},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"5ca4d516-c82c-11e4-92a2-47931d2c2032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:168","type":"CtIfImpl","sourcecode":"if (boolean && (!(java.io.File.delete()))) {\n    if (((int & (org.eclipse.jgit.util.FileUtils.int)) != 0) && (org.eclipse.jgit.util.FS.exists(java.io.File))) {\n        for (int int = 1 ; int < 10 ; int++) {\n            try {\n                java.lang.Thread.java.lang.Thread.sleep(100);\n            } catch (java.lang.InterruptedException java.lang.InterruptedException) {\n            }\n            if (java.io.File.delete())\n                return ;\n            \n        }\n    } \n    if ((int & (org.eclipse.jgit.util.FileUtils.int)) == 0)\n        throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath()));\n    \n} "},"status":-1},{"failures":[],"tindex":"5ca4d517-c82c-11e4-92a2-090d22835420","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:208","type":"CtLocalVariableImpl","sourcecode":"long long = 8"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:891","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.transport.PackParser.streamPosition()"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":37,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":39,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":8,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":12,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":34,"org.eclipse.jgit.util.FileUtils7Test.testDeleteSymlinkToDirectoryDoesNotDeleteTarget":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":21,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":29,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":18,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":16,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":15,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":32,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":9,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":35,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":14,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":17,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":31,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":28,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":20,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":10,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":33,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":13,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":6,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":24,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":19,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":11,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":38,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":26,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":27}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
