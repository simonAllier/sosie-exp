[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"57ea259e-c827-11e4-8028-0f443d53ee4a","variableMapping":{"cx":"size","org.eclipse.jgit.revplot.AbstractPlotRenderer.LANE_WIDTH":"size","ix":"size"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:125","type":"CtAssignmentImpl","sourcecode":"int = int - ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:113","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"57ea259f-c827-11e4-8028-678c6cb2b823","variableMapping":{"line":"readingObjectsFromLocalRepositoryFailed"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:185","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) == 0) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:186","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n    final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.PushConnection.getRef(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName());\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref == null ? org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId() : org.eclipse.jgit.lib.Ref.getObjectId();\n    if (org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId().equals(org.eclipse.jgit.lib.ObjectId)) {\n        if (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()) {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        } else {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        }\n        continue;\n    } \n    if ((org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId().equals(org.eclipse.jgit.lib.ObjectId)))) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        continue;\n    } \n    if ((org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId())) || (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete())) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(true);\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n        continue;\n    } \n    boolean boolean = true;\n    try {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId());\n        if (((!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)) || (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))) || (!(org.eclipse.jgit.revwalk.RevWalk.isMergedInto(((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)), ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject))))))\n            boolean = false;\n        \n    } catch (org.eclipse.jgit.errors.MissingObjectException org.eclipse.jgit.errors.MissingObjectException) {\n        boolean = false;\n    } catch (java.lang.Exception java.lang.Exception) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.getURI() , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Exception.getMessage()) , java.lang.Exception);\n    }\n    org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(boolean);\n    if ((!boolean) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.isForceUpdate())))\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    else\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n    \n}"},"status":-2},{"failures":[16,0,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,18,19,20,111,112],"tindex":"57ea25a0-c827-11e4-8028-6727a084b541","variableMapping":{"dirScoreLtr":"idx"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:333","type":"CtAssignmentImpl","sourcecode":"int = 100"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:328","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[16,18,19,20,0,22,113],"tindex":"57ea25a1-c827-11e4-8028-d9546e788ac3","variableMapping":{"bs":"i","as":"i","be":"i","ae":"i"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:67","type":"CtIfImpl","sourcecode":"if ((int - int) != (int - int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ApplyCommand:256","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.String>.get(int).equals(java.util.List<java.lang.String>.get(int))))\n    return true;\n"},"status":-1},{"failures":[0,16,18,19,20,22],"tindex":"57ea25a2-c827-11e4-8028-ffb91c7bdf2e","variableMapping":{"r":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:497","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<T>.get()) != null ? org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<T> : null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:453","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<T>"},"status":-1},{"failures":[],"tindex":"57ea25a3-c827-11e4-8028-bfbe527c4770","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:151","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.UnionInputStream.pop()"},"status":-2},{"failures":[18,19,20,0,16,22],"tindex":"57ea25a4-c827-11e4-8028-47be4e7c5391","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:279","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-1},{"failures":[16,22,18,19,20,0],"tindex":"57ea25a5-c827-11e4-8028-f55a48de0c8f","variableMapping":{"x":"section"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ConfigLine:120","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"57ea25a6-c827-11e4-8028-71efd3e7b599","variableMapping":{"c":"entryCnt"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:182","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:764","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.sort(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry[], 0, int, org.eclipse.jgit.treewalk.WorkingTreeIterator.java.util.Comparator<org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry>)"},"status":-2},{"failures":[],"tindex":"57ea4cb7-c827-11e4-8028-8d90d1084f43","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:659","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffEntry:284","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = new org.eclipse.jgit.diff.DiffEntry()"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":103,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":20,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":68,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":4,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":43,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd_EmptyLine":98,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":24,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":44,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd":99,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":32,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":33,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_Insert2":74,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InvertBlocks":92,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_ReplaceMiddle":84,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":113,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":69,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":105,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertMiddle":94,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":70,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteMiddle":78,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand":73,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":65,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":81,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InsertNearCommonTail":79,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":86,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":109,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":7,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":58,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":104,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":45,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":46,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":30,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteMiddle":89,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":111,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":26,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":102,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":52,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":53,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertStart":82,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":66,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":71,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":97,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":10,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":112,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertMiddle":83,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":19,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":57,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":55,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_InsertsIntoMidPosition":76,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":47,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonReplaceCommonDeleteCommon":85,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":36,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":62,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertsIntoMidPosition":87,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":12,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":3,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":67,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":64,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":63,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":77,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":107,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":18,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_DeleteStart":91,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":22,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":28,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":51,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks":72,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":11,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":37,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InsertNearCommonTail":90,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":38,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":54,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_MoveBlock":88,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonReplaceCommonDeleteCommon":96,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":31,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":49,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":9,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":106,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":42,"org.eclipse.jgit.diff.HistogramDiffTest.testDegenerate_DeleteStart":80,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":108,"org.eclipse.jgit.api.GitConstructionTest.testClose":2,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":16,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_InsertStart":93,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":35,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":50,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":27,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":34,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":60,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":21,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":29,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":39,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":6,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":23,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":75,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":110,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":56,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":14,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":100,"org.eclipse.jgit.diff.MyersDiffTest.testDegenerate_ReplaceMiddle":95,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":15,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":17,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":25,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":101,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear":1,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":61,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":5,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":13}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
