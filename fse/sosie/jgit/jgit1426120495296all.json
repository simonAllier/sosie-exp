[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"9b39df12-c84f-11e4-abeb-dd70c9f72f59","variableMapping":{"org.eclipse.jgit.util.RawParseUtils.digits16":"ib"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:96","type":"CtForImpl","sourcecode":"for (char char = 'a' ; char <= 'f' ; char++)\n    org.eclipse.jgit.util.RawParseUtils.byte[][char] = ((byte)((char - 'a') + 10));"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:773","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0) {\n    int = (byte[][int++]) & 255;\n    long += ((long)((int & 127))) << int;\n    int += 7;\n}"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"9b39df13-c84f-11e4-abeb-2718dc038886","variableMapping":{"beginA":"i","beginB":"i","endB":"i","endA":"i"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.Edit:139","type":"CtReturnImpl","sourcecode":"return ((int) == (int)) && ((int) == (int))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:260","type":"CtIfImpl","sourcecode":"if ((java.nio.charset.Charset[][int]) != (java.nio.charset.Charset[][0]))\n    return false;\n"},"status":-1},{"failures":[6,1,5,2,3,4],"tindex":"9b39df14-c84f-11e4-abeb-cb6a3a8fce3f","variableMapping":{"max":"bytes","i":"i","newMax":"bytes"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.PathFilterGroup:221","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte[][int]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1060","type":"CtAssignmentImpl","sourcecode":"byte[][int] = '/'"},"status":-1},{"failures":[],"tindex":"9b39df15-c84f-11e4-abeb-f963540ad725","variableMapping":{"reader":"reader"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.StashApplyCommand:171","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.ObjectReader)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:190","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.ObjectReader)"},"status":-2},{"failures":[],"tindex":"9b39df16-c84f-11e4-abeb-ad313673ce2c","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"branchName","org.eclipse.jgit.lib.Constants.R_REMOTES":"org.eclipse.jgit.lib.Constants.R_HEADS","name":"org.eclipse.jgit.lib.Constants.R_HEADS","sourceName":"exceptionCaughtDuringExecutionOfPullCommand","type":"pullOnRepoWithoutHEADCurrentlyNotSupported","org.eclipse.jgit.lib.Constants.R_TAGS":"pullOnRepoWithoutHEADCurrentlyNotSupported"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:69","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getFullBranch();\n    if (java.lang.String == null)\n        throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n        throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n    } \n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"9b39df17-c84f-11e4-abeb-2fd4c18109ca","variableMapping":{"lruHead":"currOldest"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.DeltaBaseCache:132","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.DeltaBaseCache:129","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot.org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot = null"},"status":-2},{"failures":[1,11,2,3,4,6,5],"tindex":"9b39df18-c84f-11e4-abeb-839083c1803c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:166","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long = long"},"status":-1},{"failures":[],"tindex":"9b39df19-c84f-11e4-abeb-27a4479660bd","variableMapping":{"sz":"hdrLen","org.eclipse.jgit.notes.LeafBucket.MAX_SIZE":"hdrLen"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:201","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.notes.LeafBucket.int) < int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:853","type":"CtDoImpl","sourcecode":"do {\n    if (boolean)\n        boolean = false;\n    else if ((org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta) == null)\n        org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().put(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.long, int, byte[]);\n    \n    long = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.long;\n    byte[] byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int)), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n    if (byte[] == null) {\n        byte[] = null;\n        throw new org.eclipse.jgit.errors.LargeObjectException();\n    } \n    final long long = org.eclipse.jgit.internal.storage.pack.BinaryDelta.org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte[]);\n    if ((java.lang.Integer.int) <= long)\n        throw new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n    \n    final byte[] byte[];\n    try {\n        byte[] = new byte[((int)(long))];\n    } catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n        byte[] = null;\n        byte[] = null;\n        throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(java.lang.OutOfMemoryError);\n    }\n    org.eclipse.jgit.internal.storage.pack.BinaryDelta.org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[], byte[]);\n    byte[] = byte[];\n    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta;\n} while (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta != null )"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,1,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,6,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,83,84,84,85,85,86,87,88,2,3,4,7,9,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,5],"tindex":"9b3a062a-c84f-11e4-abeb-fdaf90dbba09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:847","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    java.lang.String java.lang.String;\n    try {\n        java.lang.String = org.eclipse.jgit.transport.PacketLineIn.readString();\n    } catch (java.io.EOFException java.io.EOFException) {\n        if (boolean)\n            break;\n        \n        throw java.io.EOFException;\n    }\n    if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n        break;\n    \n    if (java.lang.String.startsWith(\"deepen \")) {\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(7));\n        continue;\n    } \n    if (java.lang.String.startsWith(\"shallow \")) {\n        java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(8)));\n        continue;\n    } \n    if ((!(java.lang.String.startsWith(\"want \"))) || ((java.lang.String.length()) < 45))\n        throw new org.eclipse.jgit.errors.PackProtocolException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, \"want\", java.lang.String));\n    \n    if (boolean) {\n        if ((java.lang.String.length()) > 45) {\n            org.eclipse.jgit.transport.UploadPack.FirstLine org.eclipse.jgit.transport.UploadPack.FirstLine = new org.eclipse.jgit.transport.UploadPack.FirstLine(java.lang.String);\n            java.util.Set<java.lang.String> = org.eclipse.jgit.transport.UploadPack.FirstLine.getOptions();\n            java.lang.String = org.eclipse.jgit.transport.UploadPack.FirstLine.getLine();\n        } else\n            java.util.Set<java.lang.String> = java.util.Collections.java.util.Collections.emptySet();\n        \n    } \n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(5)));\n    boolean = false;\n}"},"status":-1},{"failures":[],"tindex":"9b3a062b-c84f-11e4-abeb-4579a39534da","variableMapping":{"noteOn":"id","id":"id"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:191","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.MutableObjectId.fromObjectId(org.eclipse.jgit.lib.AnyObjectId)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:265","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId.copyTo(char[], java.lang.StringBuilder)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":61,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":36,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":87,"org.eclipse.jgit.api.FetchCommandTest.testFetch":77,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":98,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":46,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":24,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":43,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":13,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":71,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":21,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":101,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":17,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":42,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":6,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":10,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":34,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":48,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":97,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":19,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":56,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":25,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":104,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":103,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":14,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":11,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":66,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":79,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":16,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":72,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":100,"org.eclipse.jgit.api.GitConstructionTest.testWrap":85,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":63,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":89,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":75,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":88,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":49,"org.eclipse.jgit.api.GitConstructionTest.testOpen":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":45,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":18,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":73,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":9,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":76,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":32,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":29,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":78,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":81,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":22,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":57,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":65,"org.eclipse.jgit.api.GitConstructionTest.testClose":83,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":12,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":31,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":96,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":95,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":70,"org.eclipse.jgit.transport.TestProtocolTest.testPush":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":99,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":86,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":52,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":90,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":93,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":51,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":82,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":60,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":62,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":38,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":94,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":54,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":102,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":74,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":7,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":58,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":91}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
