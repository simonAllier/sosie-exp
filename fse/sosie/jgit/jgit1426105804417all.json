[{"failures":[],"tindex":"66622973-c82d-11e4-bd86-19168fe8a629","variableMapping":{"s":"org.eclipse.jgit.dircache.DirCacheEntry.STAGE_0","cr":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.T_OURS"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:196","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:133","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.int, org.eclipse.jgit.dircache.DirCacheEntry.int)"},"status":-2},{"failures":[],"tindex":"66622974-c82d-11e4-bd86-550a683c72d4","variableMapping":{"r":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:318","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:254","type":"CtTryImpl","sourcecode":"try {\n    for (java.lang.String java.lang.String : java.lang.String[]) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        if ((java.lang.String.length()) != 2)\n            continue;\n        \n        java.lang.String[] java.lang.String[] = new java.io.File(java.io.File , java.lang.String).list();\n        if (java.lang.String[] == null)\n            continue;\n        \n        for (java.lang.String java.lang.String : java.lang.String[]) {\n            if ((java.lang.String.length()) != ((org.eclipse.jgit.lib.Constants.int) - 2))\n                continue;\n            \n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId;\n            try {\n                org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n            } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n                continue;\n            }\n            boolean boolean = false;\n            for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)\n                if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.ObjectId)) {\n                    boolean = true;\n                    break;\n                } \n            if (boolean)\n                org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.ObjectId), (((org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)) | (org.eclipse.jgit.util.FileUtils.int)));\n            \n        }\n    }\n} finally {\n    org.eclipse.jgit.lib.ProgressMonitor.endTask();\n}"},"status":-2},{"failures":[],"tindex":"66622975-c82d-11e4-bd86-7795d0a05470","variableMapping":{"this":"org.eclipse.jgit.dircache.DirCacheIterator.class"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:189","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.dircache.DirCacheIterator.(eof()))\n    org.eclipse.jgit.dircache.DirCacheIterator.parseEntry();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:290","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.dircache.DirCacheBuilder org.eclipse.jgit.dircache.DirCacheBuilder = org.eclipse.jgit.dircache.DirCache.builder();\n    org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.revwalk.RevTree);\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.dircache.DirCache));\n    org.eclipse.jgit.treewalk.TreeWalk.setRecursive(true);\n    while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n        if (org.eclipse.jgit.treewalk.AbstractTreeIterator == null) {\n            continue;\n        } \n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.TreeWalk.getRawPath());\n        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n        org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(org.eclipse.jgit.treewalk.AbstractTreeIterator.idBuffer(), org.eclipse.jgit.treewalk.AbstractTreeIterator.idOffset());\n        org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n        if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && (org.eclipse.jgit.dircache.DirCacheIterator.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n            org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n            org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.dircache.DirCacheEntry.getLastModified());\n            org.eclipse.jgit.dircache.DirCacheEntry.setLength(org.eclipse.jgit.dircache.DirCacheEntry.getLength());\n        } \n        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n    org.eclipse.jgit.dircache.DirCacheBuilder.commit();\n} finally {\n    org.eclipse.jgit.dircache.DirCache.unlock();\n    if (org.eclipse.jgit.treewalk.TreeWalk != null)\n        org.eclipse.jgit.treewalk.TreeWalk.release();\n    \n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"66622976-c82d-11e4-bd86-1d181ac4b97c","variableMapping":{"allow":"extended","allowNonFastForwards":"extended"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:115","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:463","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"66622977-c82d-11e4-bd86-fd12dd3ae9c2","variableMapping":{"lruHead":"lruPrev"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache:117","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache:143","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot.org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot = null"},"status":-2},{"failures":[6,5,7,8,9,10,4,11,12,13,14,15,16,17,0,1,2,18,19,3],"tindex":"66622978-c82d-11e4-bd86-2b251c88b7e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"66622979-c82d-11e4-bd86-5d9e85fe869a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.EolCanonicalizingInputStream:186","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.util.io.EolCanonicalizingInputStream.IsBinaryException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Pattern must have trailing asterisk: \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":"6662297a-c82d-11e4-bd86-59cf1f56c35f","variableMapping":{"atLeastOnePatternIsRequired":"notAPACKFile","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddCommand:133","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.NoFilepatternException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:841","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[4,3,5,0,1,2],"tindex":"6662297b-c82d-11e4-bd86-6b28af90dd86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:109","type":"CtInvocationImpl","sourcecode":"java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>.put(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat)"},"status":-1},{"failures":[5,4,0,1,2,3],"tindex":"6662297c-c82d-11e4-bd86-9106e5858a91","variableMapping":{"s":"characterClass"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:672","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:92","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.java.lang.String.format(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":6,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":9,"org.eclipse.jgit.transport.TestProtocolTest.testPush":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":14,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":13,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
