[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"150cf352-c84b-11e4-92b3-a3433cbf69ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:1094","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write('\\n')"},"status":-1},{"failures":[2,1,3,4,5,0],"tindex":"150d1a63-c84b-11e4-92b3-8750a6cc2938","variableMapping":{"next":"e","top":"e"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:539","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCache.Entry.org.eclipse.jgit.internal.storage.file.WindowCache.Entry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:432","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCache.Entry"},"status":-1},{"failures":[0,9,10,11,12,13,1,3,4,5,14,15,16,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"150d1a64-c84b-11e4-92b3-078277b3677f","variableMapping":{"squash":"commit","this":"commit","config":"config"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:445","type":"CtAssignmentImpl","sourcecode":"java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(org.eclipse.jgit.merge.MergeConfig.isSquash())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:447","type":"CtAssignmentImpl","sourcecode":"java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(org.eclipse.jgit.merge.MergeConfig.isCommit())"},"status":-1},{"failures":[],"tindex":"150d1a65-c84b-11e4-92b3-614f76b357c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:165","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(byte[])"},"status":-2},{"failures":[],"tindex":"150d1a66-c84b-11e4-92b3-27c366eee337","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.CommitterRevFilter:87","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, '>')"},"status":-2},{"failures":[3,4,5,0,1,45,46,47,48,2],"tindex":"150d1a67-c84b-11e4-92b3-2d4de8483861","variableMapping":{"ref":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:332","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getObjectId()) == null)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:279","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache>.get();\n    if (org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache == null)\n        return ;\n    \n    org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache = org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.put(org.eclipse.jgit.lib.Ref);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache>.compareAndSet(org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache, org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache)) )"},"status":-1},{"failures":[],"tindex":"150d1a68-c84b-11e4-92b3-a7c0e6e68b6c","variableMapping":{"name":"shallowCommitsAlreadyInitialized"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:97","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.RepositoryNotFoundException(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1428","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"150d1a69-c84b-11e4-92b3-59567c00616e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:234","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.SimilarityIndex org.eclipse.jgit.diff.SimilarityIndex = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:371","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.SimilarityIndex org.eclipse.jgit.diff.SimilarityIndex = new org.eclipse.jgit.diff.SimilarityIndex()"},"status":-2},{"failures":[2,1,0,3,4,5],"tindex":"150d1a6a-c84b-11e4-92b3-390d7b8ccb7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1440","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefAdvertiser.addSymref(org.eclipse.jgit.lib.Constants.java.lang.String, org.eclipse.jgit.lib.Ref.getLeaf().getName())"},"status":-1},{"failures":[49,50,51,52,53,54,55,2,56,0,1,3,4,5],"tindex":"150d1a6b-c84b-11e4-92b3-4d4e51b03b0c","variableMapping":{"out":"out"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:377","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:387","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final int int = java.io.RandomAccessFile.read(byte[]);\n    if (int < 0)\n        break;\n    \n    if (long != 0) {\n        final int int = java.lang.Math.((int)(java.lang.Math.min(int, long)));\n        java.security.MessageDigest.update(byte[], 0, int);\n        long -= int;\n        if (long == 0)\n            java.security.MessageDigest.update(byte[], int, (int - int));\n        \n    } else\n        java.security.MessageDigest.update(byte[], 0, int);\n    \n    java.security.MessageDigest.update(byte[], 0, int);\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":26,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":17,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":47,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":16,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":51,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":30,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":41,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":49,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":19,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":11,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":24,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":56,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":14,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":20,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":48,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":9,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":6,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":37,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":18,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":39,"org.eclipse.jgit.transport.TestProtocolTest.testPush":46,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":55,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":13,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":53,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":29,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":54,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":43,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":25,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":42,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":50,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":22,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":28,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine":8,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":45,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":34}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
