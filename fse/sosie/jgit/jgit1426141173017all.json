[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"c1083621-c87f-11e4-a7ef-23287d1fc487","variableMapping":{"n":"refName"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:272","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"pack-\"))) || (!(java.lang.String.endsWith(\".pack\"))))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:657","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n    int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n    if (int < 0)\n        break;\n    \n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) )"},"status":-1},{"failures":[],"tindex":"c10c06b2-c87f-11e4-a7ef-4b2f15250bb8","variableMapping":{"c":"entryCount"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Tree:532","type":"CtLocalVariableImpl","sourcecode":"int int = int - '0'"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:548","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":"c10c54d3-c87f-11e4-a7ef-ef3f7addaeff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:531","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[]{ '.' , 'g' , 'i' , 't' }"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:1074","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.eclipse.jgit.lib.ObjectLoader.getCachedBytes()"},"status":-2},{"failures":[0,1,2,7,6,8],"tindex":"c10ca2f4-c87f-11e4-a7ef-7bbddbb4d040","variableMapping":{"s":"s","shift":"i","org.eclipse.jgit.revwalk.RevObjectList.BLOCK_SHIFT":"i"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommitList:318","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) + (org.eclipse.jgit.revwalk.RevObjectList.int)))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevObjectList:103","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]))"},"status":-1},{"failures":[],"tindex":"c10d1825-c87f-11e4-a7ef-557e61a934be","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:1340","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:187","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.RefDirectory.getLogWriter().logFor(org.eclipse.jgit.lib.RefUpdate.getName())"},"status":-2},{"failures":[],"tindex":"c10ddb76-c87f-11e4-a7ef-bfc81ec822db","variableMapping":{"emailB":"pathOffset","raw":"path","ptr":"pathOffset"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:202","type":"CtIfImpl","sourcecode":"if ((int == int) || ((byte[][(int - 1)]) != '<'))\n    return -1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:178","type":"CtTryImpl","sourcecode":"try {\n    return (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte[][((int) + 0)])) << 4) | org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte[][((int) + 1)]));\n} catch (java.lang.ArrayIndexOutOfBoundsException java.lang.ArrayIndexOutOfBoundsException) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"c10e0287-c87f-11e4-a7ef-4fa11358c4e5","variableMapping":{"buf":"source","end":"srcOffset","ptr":"srcOffset"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:601","type":"CtIfImpl","sourcecode":"if ((int == int) || ((byte[][int++]) != ' '))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:218","type":"CtIfImpl","sourcecode":"if ((byte[][(int + 2)]) == (org.eclipse.jgit.util.Base64.byte)) {\n    int int = (((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12);\n    byte[][int] = ((byte)(int >>> 16));\n    return 1;\n} else if ((byte[][(int + 3)]) == (org.eclipse.jgit.util.Base64.byte)) {\n    int int = ((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6);\n    byte[][int] = ((byte)(int >>> 16));\n    byte[][(int + 1)] = ((byte)(int >>> 8));\n    return 2;\n} else {\n    int int = (((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6)) | ((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 3)]]) & 255);\n    byte[][int] = ((byte)(int >> 16));\n    byte[][(int + 1)] = ((byte)(int >> 8));\n    byte[][(int + 2)] = ((byte)(int));\n    return 3;\n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,0,1,2,21,22,23,24,25,26,27,28,29,30,6,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,7,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,101,102,102,103,103],"tindex":"c10e9ec8-c87f-11e4-a7ef-89c746f59d1d","variableMapping":{"flags":"resultsPending","org.eclipse.jgit.revwalk.RevObject.PARSED":"resultsPending"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevBlob:76","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.RevObject.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:651","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[0,1,2,6,7,8],"tindex":"c10f8929-c87f-11e4-a7ef-a30618bd5cdc","variableMapping":{"parser":"parser","idBuf":"idBuf"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:153","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.MutableObjectId.fromRaw(org.eclipse.jgit.treewalk.CanonicalTreeParser.idBuffer(), org.eclipse.jgit.treewalk.CanonicalTreeParser.idOffset())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.MutableObjectId))"},"status":-1},{"failures":[],"tindex":"c10f892a-c87f-11e4-a7ef-13a20f1afcd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:386","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":53,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":87,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":79,"org.eclipse.jgit.api.FetchCommandTest.testFetch":81,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":97,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":49,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":94,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":22,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":18,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":43,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":26,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":93,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":7,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":48,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":4,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":99,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":39,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":69,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":19,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":46,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":45,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":23,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":90,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":55,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":83,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":25,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":61,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":42,"org.eclipse.jgit.api.GitConstructionTest.testWrap":103,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":52,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":31,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":71,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":100,"org.eclipse.jgit.api.GitConstructionTest.testOpen":102,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":96,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":27,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":62,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":10,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":72,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":77,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":8,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":74,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":82,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":85,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":12,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":73,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":98,"org.eclipse.jgit.api.GitConstructionTest.testClose":101,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":21,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":76,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":37,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":41,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":78,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":66,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":88,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":65,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":3,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":86,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":5,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":28,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":89,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":44,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":68,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":63,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":9,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":29,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":33}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
