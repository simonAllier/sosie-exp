[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"98b4bd81-c853-11e4-b97d-0505a7564baa","variableMapping":{"offset":"count","offsetHours":"abbreviationLength"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:280","type":"CtAssignmentImpl","sourcecode":"int = int / 60"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:224","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"98b64422-c853-11e4-b97d-ff6fa7a64669","variableMapping":{"np":"i"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:291","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break TRY_LOCATIONS;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:200","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.FanoutBucket, int, org.eclipse.jgit.notes.NoteBucket)"},"status":-2},{"failures":[],"tindex":"98b64423-c853-11e4-b97d-1fe9ad42cb51","variableMapping":{"ignoreMissingStart":"tryRebase"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:100","type":"CtIfImpl","sourcecode":"if (boolean)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1215","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.getParents())\n    if (org.eclipse.jgit.revwalk.RevCommit.equals(org.eclipse.jgit.revwalk.RevCommit))\n        boolean = true;\n    "},"status":-2},{"failures":[],"tindex":"98b64424-c853-11e4-b97d-032fbb96acbf","variableMapping":{"s":"pattern","i":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.RefSpec:457","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    if ((java.lang.String.indexOf('*', (int + 1))) > int)\n        return false;\n    \n    if ((int > 0) && ((java.lang.String.charAt((int - 1))) != '/'))\n        return false;\n    \n    if ((int < ((java.lang.String.length()) - 1)) && ((java.lang.String.charAt((int + 1))) != '/'))\n        return false;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:194","type":"CtIfImpl","sourcecode":"if (boolean) {\n    final java.lang.String[] java.lang.String[] = java.lang.String.split(\"/\");\n    for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n        final java.lang.String java.lang.String = java.lang.String[][int];\n        if ((java.lang.String.length()) == 0)\n            continue;\n        \n        if ((java.lang.String.equals(java.lang.String)) && org.eclipse.jgit.ignore.IgnoreRule.(doesMatchDirectoryExpectations(boolean, int, java.lang.String[].int)))\n            return true;\n        \n    }\n} "},"status":-2},{"failures":[],"tindex":"98b64425-c853-11e4-b97d-bbc4a6015279","variableMapping":{"pathLen":"deltaPtr","pathOffset":"length"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:770","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:169","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    final int int = (byte[][int++]) & 255;\n    if ((int & 128) != 0) {\n        int int = 0;\n        if ((int & 1) != 0)\n            int = (byte[][int++]) & 255;\n        \n        if ((int & 2) != 0)\n            int |= ((byte[][int++]) & 255) << 8;\n        \n        if ((int & 4) != 0)\n            int |= ((byte[][int++]) & 255) << 16;\n        \n        if ((int & 8) != 0)\n            int |= ((byte[][int++]) & 255) << 24;\n        \n        int int = 0;\n        if ((int & 16) != 0)\n            int = (byte[][int++]) & 255;\n        \n        if ((int & 32) != 0)\n            int |= ((byte[][int++]) & 255) << 8;\n        \n        if ((int & 64) != 0)\n            int |= ((byte[][int++]) & 255) << 16;\n        \n        if (int == 0)\n            int = 65536;\n        \n        java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n    } else if (int != 0) {\n        java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n        int += int;\n    } else {\n        throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n}"},"status":-2},{"failures":[],"tindex":"98b6e066-c853-11e4-b97d-31e3824a9250","variableMapping":{"rawPtr":"mode","rawSize":"mode","raw":"name","org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"mode","nextIndex":"mode"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:517","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    while ((int < int) && ((byte[][int]) != 0))\n        int++;\n    int++;\n    int += org.eclipse.jgit.lib.Constants.int;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:562","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n    org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.GitlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\nelse\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.toOctalString(int)));\n"},"status":-2},{"failures":[],"tindex":"98b6e067-c853-11e4-b97d-5b8dadffa39d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:453","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree org.eclipse.jgit.dircache.DirCacheTree = int < (int) ? org.eclipse.jgit.dircache.DirCacheTree[][int] : null"},"status":-2},{"failures":[],"tindex":"98b6e068-c853-11e4-b97d-9b42f9b838b8","variableMapping":{"a":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFlagFilter:117","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.revwalk.filter.RevFlagFilter.HasAny(new org.eclipse.jgit.revwalk.RevFlagSet(org.eclipse.jgit.revwalk.RevFlagSet))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.RevFlagFilter:67","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.revwalk.filter.RevFlagFilter.HasAll(org.eclipse.jgit.revwalk.RevFlagSet)"},"status":-2},{"failures":[],"tindex":"98b6e069-c853-11e4-b97d-33ecbff57a4f","variableMapping":{"skipBuffer":"data"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.TeeInputStream:131","type":"CtIfImpl","sourcecode":"if ((byte[]) == null)\n    byte[] = new byte[2048];\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:996","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,31,32,32,33,33],"tindex":"98b6e06a-c853-11e4-b97d-4350f40af4d3","variableMapping":{"this":"org.eclipse.jgit.util.SystemReader.INSTANCE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.UserConfig:226","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.SystemReader.org.eclipse.jgit.util.SystemReader.getInstance()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.SystemReader:144","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.SystemReader.org.eclipse.jgit.util.SystemReader"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":11,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":19,"org.eclipse.jgit.util.HookTest.testRunHook":29,"org.eclipse.jgit.util.FileUtils7Test.testDeleteSymlinkToDirectoryDoesNotDeleteTarget":33,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":14,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":8,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":30,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":28,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":4,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":17,"org.eclipse.jgit.util.HookTest.testFindHook":27,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":0,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":20,"org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink":21,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":2,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":16,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":13,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit":26,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":18,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":10,"org.eclipse.jgit.util.FSJava7Test.testExecutableAttributes":32,"org.eclipse.jgit.util.FSJava7Test.testSymlinkAttributes":31,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testFileModeSymLinkIsNotATree":24,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":9,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":22,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":3,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":12}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
