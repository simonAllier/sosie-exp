[{"failures":[0,1,2,3,4,5,6],"tindex":"5379ee97-c886-11e4-b8ec-45c018a61b5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1011","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"@\")"},"status":-1},{"failures":[0,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,4,5,6,26,27,28,29,30,31,32,33,34,35,36,1,37,38,39,40,41],"tindex":"537ab1e8-c886-11e4-b8ec-81971f51fbf5","variableMapping":{"org.eclipse.jgit.transport.RemoteConfig.DEFAULT_RECEIVE_PACK":"refLogMessage","optionReceivePack":"refLogMessage"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:933","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = org.eclipse.jgit.transport.RemoteConfig.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:380","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"537ab1e9-c886-11e4-b8ec-17497c8fecfe","variableMapping":{"i":"org.eclipse.jgit.revwalk.RevWalk.SEEN","workingTree":"flags","dirCache":"flags"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:320","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevObject != null) && (((org.eclipse.jgit.revwalk.RevObject.int) & (org.eclipse.jgit.revwalk.RevWalk.int)) != 0))\n    continue;\n"},"status":-2},{"failures":[0,2,4,5,6,1],"tindex":"537ab1ea-c886-11e4-b8ec-5712a7d8b3f8","variableMapping":{"deflate":"def"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter:146","type":"CtIfImpl","sourcecode":"if ((java.util.zip.Deflater) != null) {\n    try {\n        java.util.zip.Deflater.end();\n    } finally {\n        java.util.zip.Deflater = null;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:171","type":"CtIfImpl","sourcecode":"if ((java.util.zip.Deflater) != null) {\n    java.util.zip.Deflater.end();\n    java.util.zip.Deflater = null;\n} "},"status":-1},{"failures":[],"tindex":"537ab1eb-c886-11e4-b8ec-bd64a68d1f8b","variableMapping":{"cfg":"config"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:682","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.load()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:186","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.StoredConfig.save()"},"status":-2},{"failures":[0,42,43,4,5,6,44,2,1,45,46,47,48,49,50,51,52],"tindex":"537ab1ec-c886-11e4-b8ec-9bcf89f05ff0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:596","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n    return false;\n"},"status":-1},{"failures":[0,2,1,4,5,6],"tindex":"537ad8fd-c886-11e4-b8ec-83b600fc927d","variableMapping":{"cnt":"beginB","org.eclipse.jgit.transport.SideBandOutputStream.HDR_SIZE":"beginB"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:172","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.transport.SideBandOutputStream.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:220","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"537ad8fe-c886-11e4-b8ec-e7700b002ab5","variableMapping":{"s":"childIndex","lf":"childIndex","cr":"index"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:194","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse if (0 <= int)\n    int = int;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:254","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    final org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = org.eclipse.jgit.revwalk.RevObjectList<org.eclipse.jgit.revplot.PlotCommit<L>>.get(int);\n    if (org.eclipse.jgit.revplot.PlotCommit == org.eclipse.jgit.revplot.PlotCommit) {\n        int = int;\n        break;\n    } \n    org.eclipse.jgit.revplot.PlotCommitList<L>.org.eclipse.jgit.revplot.PlotCommitList.addBlockedPosition(java.util.BitSet, org.eclipse.jgit.revplot.PlotCommit);\n}"},"status":-2},{"failures":[0,1,2,53,54,55,56,57,58,4,5,6,59,60,61],"tindex":"537ad8ff-c886-11e4-b8ec-db93872f2dd7","variableMapping":{"position":"refNameEnd","indexObjectCount":"refNameEnd"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:103","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    int += int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:333","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    throw new org.eclipse.jgit.errors.PackProtocolException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.transport.URIish, java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"537ad900-c886-11e4-b8ec-7993f31c5acf","variableMapping":{"l":"lineStart"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:489","type":"CtIfImpl","sourcecode":"if (int < 1)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    final char char = java.lang.String.charAt(int);\n    switch (char) {\n        case '\\n' :\n            if (boolean) {\n                java.lang.StringBuilder.append('\\\"');\n                boolean = false;\n            } \n            java.lang.StringBuilder.append(\"\\\\n\\\\\\n\");\n            int = java.lang.StringBuilder.length();\n            break;\n        case '\\t' :\n            java.lang.StringBuilder.append(\"\\\\t\");\n            break;\n        case '\\b' :\n            java.lang.StringBuilder.append(\"\\\\b\");\n            break;\n        case '\\\\' :\n            java.lang.StringBuilder.append(\"\\\\\\\\\");\n            break;\n        case '\\\"' :\n            java.lang.StringBuilder.append(\"\\\\\\\"\");\n            break;\n        case ';' :\n        case '#' :\n            if (!boolean) {\n                java.lang.StringBuilder.insert(int, '\\\"');\n                boolean = true;\n            } \n            java.lang.StringBuilder.append(char);\n            break;\n        case ' ' :\n            if (((!boolean) && ((java.lang.StringBuilder.length()) > 0)) && ((java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))) == ' ')) {\n                java.lang.StringBuilder.insert(int, '\\\"');\n                boolean = true;\n            } \n            java.lang.StringBuilder.append(' ');\n            break;\n        default :\n            java.lang.StringBuilder.append(char);\n            break;\n    }\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":6,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":46,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":19,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":37,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":43,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":49,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":4,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":30,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":39,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":47,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":20,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":8,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":26,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":10,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":44,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":14,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":22,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":48,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":50,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":59,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":15,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":56,"org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter":3,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":51,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":61,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":21,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":17,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":38,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":53,"org.eclipse.jgit.api.PushCommandTest.testPush":55,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":41,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":9,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":18,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":36,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":58,"org.eclipse.jgit.transport.TestProtocolTest.testPush":60,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":35,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":54,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":23,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":52,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":31,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":40,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":57,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":5,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":25,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":34,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":33,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":24,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":16,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":42,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":45,"org.eclipse.jgit.api.RevertCommandTest.testRevert":32}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
