[{"failures":[],"tindex":"137e143d-c886-11e4-84f4-51b1d7379256","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1385","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"Could not rewind to upstream commit\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"137e143e-c886-11e4-84f4-dbed60994624","variableMapping":{"inflatingBitmap":"this","inbits":"bitmap"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:156","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.InflatingBitSet = org.eclipse.jgit.internal.storage.file.InflatingBitSet.or(com.googlecode.javaewah.EWAHCompressedBitmap)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:67","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.InflatingBitSet.this(com.googlecode.javaewah.EWAHCompressedBitmap, org.eclipse.jgit.internal.storage.file.InflatingBitSet.long[])"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"137e143f-c886-11e4-84f4-59bad5440083","variableMapping":{"n":"value"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PackParser:1673","type":"CtReturnImpl","sourcecode":"return 0 < int ? int : -1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:119","type":"CtReturnImpl","sourcecode":"return (int & 16777215) | (int << 24)"},"status":-1},{"failures":[7,8,9,5,10,6],"tindex":"137e1440-c886-11e4-84f4-7f1abe5e658c","variableMapping":{"timeoutIn":"timeoutIn"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:315","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutInputStream = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:145","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutInputStream = new org.eclipse.jgit.util.io.TimeoutInputStream(java.io.InputStream , org.eclipse.jgit.util.io.InterruptTimer)"},"status":-1},{"failures":[],"tindex":"137e1441-c886-11e4-84f4-a51d42fa954c","variableMapping":{"c":"this","flags":"depth","carry":"flags"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:244","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:229","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit[].int) != 1) {\n    if (int == (org.eclipse.jgit.revwalk.RevCommit.int))\n        return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit);\n    \n    for (int int = 1 ; int < (org.eclipse.jgit.revwalk.RevCommit[].int) ; int++) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][int];\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n            continue;\n        \n        org.eclipse.jgit.revwalk.RevCommit.int |= int;\n        org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, (int + 1));\n        if (org.eclipse.jgit.revwalk.FIFORevQueue != null)\n            return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], (int + 1));\n        \n    }\n} "},"status":-2},{"failures":[],"tindex":"137e1442-c886-11e4-84f4-75cb7c189242","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:464","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk);\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[],"tindex":"137e1443-c886-11e4-84f4-b3653a489478","variableMapping":{"r":"nameLen"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeFormatter:237","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte[], int, int, org.eclipse.jgit.lib.FileMode)"},"status":-2},{"failures":[],"tindex":"137e1444-c886-11e4-84f4-012895ec2b6a","variableMapping":{"idx":"initLock"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:300","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.PackBitmapIndex != null)\n    return org.eclipse.jgit.internal.storage.file.PackBitmapIndex;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:307","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackBitmapIndex> = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackBitmapIndex>;\n    if (org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackBitmapIndex> != null) {\n        org.eclipse.jgit.internal.storage.file.PackBitmapIndex org.eclipse.jgit.internal.storage.file.PackBitmapIndex = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackBitmapIndex>.get();\n        if (org.eclipse.jgit.internal.storage.file.PackBitmapIndex != null)\n            return org.eclipse.jgit.internal.storage.file.PackBitmapIndex;\n        \n    } \n    long long;\n    org.eclipse.jgit.internal.storage.file.PackBitmapIndex org.eclipse.jgit.internal.storage.file.PackBitmapIndex;\n    try {\n        org.eclipse.jgit.internal.storage.dfs.ReadableChannel org.eclipse.jgit.internal.storage.dfs.ReadableChannel = org.eclipse.jgit.internal.storage.dfs.DfsReader.org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.openFile(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt);\n        try {\n            java.io.InputStream java.io.InputStream = java.nio.channels.Channels.java.nio.channels.Channels.newInputStream(org.eclipse.jgit.internal.storage.dfs.ReadableChannel);\n            int int = 8192;\n            int int = org.eclipse.jgit.internal.storage.dfs.ReadableChannel.blockSize();\n            if ((0 < int) && (int < int))\n                int = (int / int) * int;\n            else if (int <= 0)\n                int = int;\n            \n            java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream , int);\n            org.eclipse.jgit.internal.storage.file.PackBitmapIndex = org.eclipse.jgit.internal.storage.file.PackBitmapIndex.org.eclipse.jgit.internal.storage.file.PackBitmapIndex.read(java.io.InputStream, org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(org.eclipse.jgit.internal.storage.dfs.DfsReader));\n        } finally {\n            long = org.eclipse.jgit.internal.storage.dfs.ReadableChannel.position();\n            org.eclipse.jgit.internal.storage.dfs.ReadableChannel.close();\n        }\n    } catch (java.io.EOFException java.io.EOFException) {\n        java.io.IOException java.io.IOException = new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.storage.dfs.DfsText.org.eclipse.jgit.internal.storage.dfs.DfsText.get().java.lang.String, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileName(org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt)));\n        java.io.IOException.initCause(java.io.EOFException);\n        throw java.io.IOException;\n    } catch (java.io.IOException java.io.IOException) {\n        java.io.IOException java.io.IOException = new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.storage.dfs.DfsText.org.eclipse.jgit.internal.storage.dfs.DfsText.get().java.lang.String, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileName(org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt)));\n        java.io.IOException.initCause(java.io.IOException);\n        throw java.io.IOException;\n    }\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackBitmapIndex> = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, org.eclipse.jgit.internal.storage.dfs.DfsPackFile.long, java.lang.Math.((int)(java.lang.Math.min(long, java.lang.Integer.int))), org.eclipse.jgit.internal.storage.file.PackBitmapIndex);\n    return org.eclipse.jgit.internal.storage.file.PackBitmapIndex;\n}"},"status":-2},{"failures":[5,7,8,9,10,15,16,17,18,19,20,6,21,22,23],"tindex":"137e1445-c886-11e4-84f4-fdb1730099e5","variableMapping":{"this":"local"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:826","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getObjectDatabase().close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:1046","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.storage.pack.PackConfig) == null)\n    org.eclipse.jgit.storage.pack.PackConfig = new org.eclipse.jgit.storage.pack.PackConfig(org.eclipse.jgit.lib.Repository);\n"},"status":-1},{"failures":[],"tindex":"137e1446-c886-11e4-84f4-89fb243ee957","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:201","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:717","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":13,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":9,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":15,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":19,"org.eclipse.jgit.api.PushCommandTest.testPush":17,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":12,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testIterator":4,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":7,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":21,"org.eclipse.jgit.transport.TestProtocolTest.testPush":22,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":10,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":11,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent":1,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":18,"org.eclipse.jgit.lib.ObjectIdTest.testSetByte":0,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":16,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":14,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":23}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
