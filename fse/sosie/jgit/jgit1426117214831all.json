[{"failures":[],"tindex":"f7ab2893-c847-11e4-996b-f7a25d0141ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:879","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"f7ab2894-c847-11e4-996b-1b74b6d6651e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.MessageWriter:85","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.io.ByteArrayOutputStream) {\n    java.io.OutputStreamWriter.write(char[], int, int);\n    java.io.OutputStreamWriter.flush();\n}"},"status":-1},{"failures":[6,3,4,5,0,1,2],"tindex":"f7ab2895-c847-11e4-996b-1d7293830c89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:191","type":"CtIfImpl","sourcecode":"if (((((org.eclipse.jgit.lib.ObjectId) == null) && (org.eclipse.jgit.lib.ObjectId != null)) || (((org.eclipse.jgit.lib.ObjectId) != null) && (org.eclipse.jgit.lib.ObjectId == null))) || (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.ObjectId)))) {\n    org.eclipse.jgit.lib.Tree.setId(null);\n} "},"status":-1},{"failures":[0,1,2,3,5,4],"tindex":"f7ab2896-c847-11e4-996b-e156241781f1","variableMapping":{"maybehead":"obj"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:164","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor:312","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"f7ab2897-c847-11e4-996b-bf5fc0795ad9","variableMapping":{"this":"merge"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:223","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:606","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < (org.eclipse.jgit.revwalk.RevCommit.getParentCount()) ; int++)\n    org.eclipse.jgit.api.MergeCommand.include(java.util.List<org.eclipse.jgit.revwalk.RevCommit>.get(int));"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,4,3,5,15,0,16,17,1,2,18,19],"tindex":"f7ab2898-c847-11e4-996b-ff7ed6539da0","variableMapping":{"revstr":"name","rev":"mId"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:586","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject != null)\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:739","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)) {\n    if (boolean)\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n    else\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"status":-1},{"failures":[20,21,22,23,3,24,25,26,27,28,29,0,1,2,4,30,31,5],"tindex":"f7ab2899-c847-11e4-996b-51a57e8a8b22","variableMapping":{"cmp":"nextPosition"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:335","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return false;\nelse if (int == 0)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:90","type":"CtIfImpl","sourcecode":"if (com.googlecode.javaewah.IntIterator.hasNext())\n    int = com.googlecode.javaewah.IntIterator.next();\nelse\n    return false;\n"},"status":-1},{"failures":[],"tindex":"f7ab289a-c847-11e4-996b-b380e9e0d678","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportLocal:137","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS.resolve(new java.io.File(\".\"), org.eclipse.jgit.transport.URIish.getPath())"},"status":-2},{"failures":[3,4,0,1,2,5],"tindex":"f7ab289b-c847-11e4-996b-e320635ec8bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:228","type":"CtAssignmentImpl","sourcecode":"this.int = org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.EditPaths.snake(int, int)"},"status":-1},{"failures":[],"tindex":"f7ab289c-c847-11e4-996b-538dfb47bee3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:921","type":"CtReturnImpl","sourcecode":"return new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:139","type":"CtTryImpl","sourcecode":"try {\n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.HashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>();\n    org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = new org.eclipse.jgit.revwalk.FIFORevQueue();\n    if ((java.util.List<org.eclipse.jgit.lib.Ref>) != null) {\n        for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>)\n            org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n    } \n    org.eclipse.jgit.api.NameRevCommand.addPrefixes(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue);\n    int int = org.eclipse.jgit.api.NameRevCommand.(minCommitTime()) - (org.eclipse.jgit.api.NameRevCommand.int);\n    while (true) {\n        org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.FIFORevQueue.next()));\n        if (org.eclipse.jgit.api.NameRevCommand.NameRevCommit == null)\n            break;\n        \n        if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getCommitTime()) < int)\n            continue;\n        \n        for (int int = 0 ; int < (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParentCount()) ; int++) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParent(int))));\n            long long = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long) + (int > 0 ? int : 1);\n            if (((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) == null) || (org.eclipse.jgit.api.NameRevCommand.(compare(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, long, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long)) < 0)) {\n                if (int > 0) {\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().append('^').append((int + 1)).toString();\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = 0;\n                } else {\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String;\n                    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1;\n                }\n                org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long = long;\n                org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.api.NameRevCommand.NameRevCommit);\n            } \n        }\n    }\n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.LinkedHashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>(java.util.List<org.eclipse.jgit.lib.ObjectId>.size());\n    for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.List<org.eclipse.jgit.lib.ObjectId>) {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.api.NameRevCommand.NameRevCommit) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) != null)\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().toString()));\n            \n        } else {\n            java.lang.String java.lang.String = java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.get(org.eclipse.jgit.lib.ObjectId);\n            if (java.lang.String != null)\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.api.NameRevCommand.org.eclipse.jgit.api.NameRevCommand.simplify(java.lang.String));\n            \n        }\n    }\n    org.eclipse.jgit.api.GitCommand<java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>>.setCallable(false);\n    org.eclipse.jgit.revwalk.RevWalk.release();\n    return java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>;\n} catch (java.io.IOException java.io.IOException) {\n    org.eclipse.jgit.revwalk.RevWalk.reset();\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":18,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":19,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":20,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":6,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":10,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":14,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":7,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":30,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":16,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":8,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":11,"org.eclipse.jgit.api.GitConstructionTest.testClose":22,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testMaybeContains":29,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":17,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsOne":28,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":23,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":25,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":31}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
