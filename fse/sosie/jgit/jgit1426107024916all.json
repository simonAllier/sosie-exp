[{"failures":[0,1,2,3,4,5],"tindex":"3ddbae59-c830-11e4-bc0c-e3cc73a2fff5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:161","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:170","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[1,0,2,3,4,5],"tindex":"3ddbae5a-c830-11e4-bc0c-9759bef0b99d","variableMapping":{"pattern":"newValue"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesRule:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.CredentialItem:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"3ddbae5b-c830-11e4-bc0c-87f8935f5ffe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:936","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.UnmergedPathsException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:620","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String, java.lang.String))"},"status":-2},{"failures":[],"tindex":"3ddbae5c-c830-11e4-bc0c-abf666e15e8b","variableMapping":{"r":"intbuf","rPtr":"offset"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:323","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = '\\f'"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:247","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(long))"},"status":-2},{"failures":[],"tindex":"3ddbae5d-c830-11e4-bc0c-1bce3723d279","variableMapping":{"currCommit":"currCommit","this":"result"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:121","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revplot.PlotLane org.eclipse.jgit.revplot.PlotLane : org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane[])\n    java.util.Collection<L>.add(((L)(org.eclipse.jgit.revplot.PlotLane)));"},"status":-2},{"failures":[0,6,7,8,9,10,11,12,13,1,14,15,5,16,17,18,2,3,4],"tindex":"3ddbae5e-c830-11e4-bc0c-47605aa3220b","variableMapping":{"org.eclipse.jgit.lib.Constants.OBJ_TAG":"org.eclipse.jgit.merge.ResolveMerger.T_FILE","type":"org.eclipse.jgit.merge.ResolveMerger.T_FILE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2088","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.lib.Constants.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:554","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTreeCount()) > (org.eclipse.jgit.merge.ResolveMerger.int)) && ((org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawMode(org.eclipse.jgit.merge.ResolveMerger.int)) == 0))\n    return true;\n"},"status":-1},{"failures":[1,5,2,3,4,0],"tindex":"3ddbae5f-c830-11e4-bc0c-a9e0973e2462","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:559","type":"CtThrowImpl","sourcecode":"throw new java.io.EOFException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:191","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.api.errors.NoFilepatternException.getMessage() , org.eclipse.jgit.api.errors.NoFilepatternException)"},"status":-1},{"failures":[],"tindex":"3ddbae60-c830-11e4-bc0c-4942f21d3927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:391","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf('\\n', int)"},"status":-2},{"failures":[],"tindex":"3ddbae61-c830-11e4-bc0c-35871a8958e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1536","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.eclipse.jgit.lib.Repository.readGitDirectoryFile(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"3ddbae62-c830-11e4-bc0c-1b39e87ea2e6","variableMapping":{"this":"source","org.eclipse.jgit.lib.RefUpdate.Result.LOCK_FAILURE":"org.eclipse.jgit.lib.RefUpdate.Result.FORCED"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RefUpdate:572","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.lib.RefUpdate.(tryLock(false)))\n    return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:100","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.setNewObjectId(org.eclipse.jgit.lib.ObjectId);\n    org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.setForceUpdate(true);\n    org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.disableRefLog();\n    switch (org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.update(org.eclipse.jgit.revwalk.RevWalk)) {\n        case NEW :\n        case FORCED :\n        case NO_CHANGE :\n            break;\n        default :\n            return org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getResult();\n    }\n    if (!org.eclipse.jgit.internal.storage.file.RefDirectoryRename.(renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate)))\n        return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result;\n    \n    org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.RefUpdate;\n    if (boolean) {\n        if (!org.eclipse.jgit.internal.storage.file.RefDirectoryRename.(linkHEAD(org.eclipse.jgit.lib.RefUpdate))) {\n            org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.lib.RefUpdate);\n            return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result;\n        } \n        org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(org.eclipse.jgit.lib.Constants.java.lang.String, false);\n        org.eclipse.jgit.lib.RefUpdate.setRefLogIdent(org.eclipse.jgit.lib.RefUpdate.getRefLogIdent());\n        org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(org.eclipse.jgit.lib.RefUpdate.getRefLogMessage(), false);\n    } \n    org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.lib.ObjectId);\n    org.eclipse.jgit.lib.RefUpdate.setForceUpdate(true);\n    org.eclipse.jgit.lib.RefUpdate.disableRefLog();\n    if ((org.eclipse.jgit.lib.RefUpdate.delete(org.eclipse.jgit.revwalk.RevWalk)) != (org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result)) {\n        org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.lib.RefUpdate);\n        if (boolean)\n            org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate);\n        \n        return org.eclipse.jgit.lib.RefUpdate.getResult();\n    } \n    if (!org.eclipse.jgit.internal.storage.file.RefDirectoryRename.(renameLog(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.lib.RefUpdate))) {\n        org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.lib.RefUpdate);\n        org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId());\n        org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.ObjectId);\n        org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk);\n        if (boolean)\n            org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate);\n        \n        return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result;\n    } \n    org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId());\n    org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.ObjectId);\n    if ((org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk)) != (org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result)) {\n        if (org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate))\n            org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.lib.RefUpdate);\n        \n        org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId());\n        org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.ObjectId);\n        org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk);\n        if (boolean)\n            org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate);\n        \n        return org.eclipse.jgit.lib.RefUpdate.getResult();\n    } \n    return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result;\n} finally {\n    try {\n        org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate);\n    } catch (java.io.IOException java.io.IOException) {\n        org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getName()));\n    }\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":12,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":14,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":6,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":16,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":9,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":15,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":13,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":7,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":8,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
