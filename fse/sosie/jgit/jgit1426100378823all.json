[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"c4bd8291-c820-11e4-a5d7-ffd1500e454a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Subsequence:107","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit.int += org.eclipse.jgit.diff.Subsequence<S>.int"},"status":-1},{"failures":[],"tindex":"c4bd8292-c820-11e4-a5d7-25abafe6c2ca","variableMapping":{"generator":"generator"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:153","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath()) == null)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:151","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n    if ((org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath()) == null)\n        continue;\n    \n    java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl();\n    if (java.lang.String == null)\n        continue;\n    \n    org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n    if (org.eclipse.jgit.lib.Repository == null) {\n        org.eclipse.jgit.api.CloneCommand org.eclipse.jgit.api.CloneCommand = org.eclipse.jgit.api.Git.org.eclipse.jgit.api.Git.cloneRepository();\n        org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.SubmoduleUpdateCommand, java.util.Collection<java.lang.String>>.configure(org.eclipse.jgit.api.CloneCommand);\n        org.eclipse.jgit.api.CloneCommand.setURI(java.lang.String);\n        org.eclipse.jgit.api.CloneCommand.setDirectory(org.eclipse.jgit.submodule.SubmoduleWalk.getDirectory());\n        org.eclipse.jgit.api.CloneCommand.setGitDir(new java.io.File(new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.submodule.SubmoduleWalk.getPath()));\n        if ((org.eclipse.jgit.lib.ProgressMonitor) != null)\n            org.eclipse.jgit.api.CloneCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor);\n        \n        org.eclipse.jgit.lib.Repository = org.eclipse.jgit.api.CloneCommand.call().getRepository();\n    } \n    try {\n        org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository);\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId());\n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUpdate();\n        if (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) {\n            org.eclipse.jgit.api.MergeCommand org.eclipse.jgit.api.MergeCommand = new org.eclipse.jgit.api.MergeCommand(org.eclipse.jgit.lib.Repository);\n            org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.api.MergeCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n            org.eclipse.jgit.api.MergeCommand.call();\n        } else if (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) {\n            org.eclipse.jgit.api.RebaseCommand org.eclipse.jgit.api.RebaseCommand = new org.eclipse.jgit.api.RebaseCommand(org.eclipse.jgit.lib.Repository);\n            org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.api.RebaseCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n            org.eclipse.jgit.api.RebaseCommand.call();\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.revwalk.RevCommit.getTree());\n            org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n            org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n            org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String, true);\n            org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.lib.RefUpdate.forceUpdate();\n        }\n    } finally {\n        org.eclipse.jgit.lib.Repository.close();\n    }\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n}"},"status":-2},{"failures":[],"tindex":"c4bd8293-c820-11e4-a5d7-2fd432036cf2","variableMapping":{"lastWork":"i","completed":"number"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BatchingProgressMonitor:230","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:288","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String[][int])"},"status":-2},{"failures":[16,0,22,23,24,31,17],"tindex":"c4bd8294-c820-11e4-a5d7-81819df968d3","variableMapping":{"next":"b","b":"tail"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:103","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:78","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"status":-1},{"failures":[],"tindex":"c4bd8295-c820-11e4-a5d7-d32c49441764","variableMapping":{"sz":"shift"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:209","type":"CtIfImpl","sourcecode":"if (int < 2)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevObjectList:115","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.revwalk.RevObjectList.Block != null) && ((org.eclipse.jgit.revwalk.RevObjectList.Block.int) > 0)) {\n    final int int = int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n    int -= int << (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n    org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]));\n}"},"status":-2},{"failures":[],"tindex":"c4bd8296-c820-11e4-a5d7-4bc4729d3ee9","variableMapping":{"rev":"obj","commit":"obj"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:573","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0) {\n    org.eclipse.jgit.revwalk.RevObject = null;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:315","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject)"},"status":-2},{"failures":[16,0,17,22,23,24],"tindex":"c4bd8297-c820-11e4-a5d7-b3b9d1edd3fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TeeInputStream:120","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = java.io.InputStream.read(byte[]);\n    if (int <= 0)\n        break;\n    \n    java.io.OutputStream.write(byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"c4bd8298-c820-11e4-a5d7-95973c2c765b","variableMapping":{"pattern":"notFound"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Pattern must have at least two segments: \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportBundleFile:138","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[0,17,16,32,22,23,24],"tindex":"c4bd8299-c820-11e4-a5d7-5f6ee8602333","variableMapping":{"fileMax":"tokenBegin","fileSim":"tokenBegin"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:364","type":"CtLocalVariableImpl","sourcecode":"int int = (int * 100) / int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:130","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"status":-1},{"failures":[0,22,23,24,16,17],"tindex":"c4bd829a-c820-11e4-a5d7-e1772481ff90","variableMapping":{"pack":"f","ptr":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectToPack:74","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.org.eclipse.jgit.internal.storage.file.PackFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation:78","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.PackFile"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":24,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":4,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":32,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":22,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testAddLargeBlocks":31,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":17,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":27,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InvertBlocks":11,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":30,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks":1,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":25,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InsertNearCommonTail":10,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":14,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":15,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":20,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":3,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_MoveBlock":9,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonReplaceCommonDeleteCommon":12,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":23,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":6,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":18,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InsertNearCommonTail":5,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonReplaceCommonDeleteCommon":7,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":8,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":19,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":16,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":26}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
