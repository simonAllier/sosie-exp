[{"failures":[],"tindex":"d7679687-c870-11e4-8258-e5f8302a85de","variableMapping":{"this":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:379","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:217","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.api.ResetCommand.resetMerge();\nelse if (boolean)\n    org.eclipse.jgit.api.ResetCommand.resetCherryPick();\nelse if (boolean)\n    org.eclipse.jgit.api.ResetCommand.resetRevert();\nelse if ((org.eclipse.jgit.lib.Repository.readSquashCommitMsg()) != null)\n    org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(null);\n"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d76acad8-c870-11e4-8258-abcd8e07eeba","variableMapping":{"window":"v"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:357","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ByteWindow = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:363","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ByteWindow = org.eclipse.jgit.internal.storage.file.WindowCache.scan(org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.PackFile, long)"},"status":-1},{"failures":[0,1,3,4,5,2],"tindex":"d76acad9-c870-11e4-8258-8f8fbac5a505","variableMapping":{"fileMode":"emptyCommit","off":"emptyCommit","on":"emptyCommit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:300","type":"CtAssignmentImpl","sourcecode":"boolean = boolean && (!boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:422","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[0,1,3,4,5,2],"tindex":"d76acada-c870-11e4-8258-b556d0125839","variableMapping":{"offset":"p"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:275","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:234","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.internal.storage.pack.DeltaEncoder.encodeCopy(int, long, org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int)"},"status":-1},{"failures":[],"tindex":"d76acadb-c870-11e4-8258-0b14fe9d5d66","variableMapping":{"treeFilterMarker":"treeFilterMarker"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffEntry:180","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.TreeFilterMarker = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffEntry:178","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.TreeFilterMarker = new org.eclipse.jgit.treewalk.filter.TreeFilterMarker(org.eclipse.jgit.treewalk.filter.TreeFilter[])"},"status":-2},{"failures":[6,6,7,7,8,8,1,9,10,11,12,13,14,15,16,17,18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,3,4,5,76,77,78,79,80,81,82,83,84,85,86,87,2,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"d76c2a6c-c870-11e4-8258-0bec468b6b73","variableMapping":{"this":"org.eclipse.jgit.transport.TagOpt.AUTO_FOLLOW","o":"o"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TagOpt:108","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.TagOpt org.eclipse.jgit.transport.TagOpt : org.eclipse.jgit.transport.TagOpt.org.eclipse.jgit.transport.TagOpt.values()) {\n    if (org.eclipse.jgit.transport.TagOpt.option().equals(java.lang.String))\n        return org.eclipse.jgit.transport.TagOpt;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TagOpt:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0))\n    return org.eclipse.jgit.transport.TagOpt.org.eclipse.jgit.transport.TagOpt;\n"},"status":-1},{"failures":[],"tindex":"d76e4d4d-c870-11e4-8258-c59771b8a9cf","variableMapping":{"this":"inserter"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:205","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsInserter.sortObjectsById()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:208","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectInserter.flush()"},"status":-2},{"failures":[],"tindex":"d76e4d4e-c870-11e4-8258-a7b2a07be52b","variableMapping":{"inf":"inf"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PackParser:1658","type":"CtIfImpl","sourcecode":"if (java.util.zip.Inflater.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:674","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.InflaterCache.org.eclipse.jgit.lib.InflaterCache.release(java.util.zip.Inflater)"},"status":-2},{"failures":[],"tindex":"d76e4d4f-c870-11e4-8258-f96858434b38","variableMapping":{"line":"cannotReadCommit","name":"cannotReadCommit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:444","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException((((\"Bad ref: \" + java.lang.String) + \": \") + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:242","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.toString()) , java.io.IOException)"},"status":-2},{"failures":[0,1,3,4,5,2],"tindex":"d76e7460-c870-11e4-8258-13e6ddd68e94","variableMapping":{"lck":"lock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:830","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.setFSync(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:321","type":"CtTryImpl","sourcecode":"try {\n    if (org.eclipse.jgit.internal.storage.file.LockFile.lock()) {\n        final java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(org.eclipse.jgit.internal.storage.file.LockFile.getOutputStream());\n        try {\n            for (final org.eclipse.jgit.transport.FetchHeadRecord org.eclipse.jgit.transport.FetchHeadRecord : java.util.ArrayList<org.eclipse.jgit.transport.FetchHeadRecord>) {\n                org.eclipse.jgit.transport.FetchHeadRecord.write(java.io.Writer);\n                org.eclipse.jgit.transport.FetchResult.add(org.eclipse.jgit.transport.FetchHeadRecord);\n            }\n        } finally {\n            java.io.Writer.close();\n        }\n        org.eclipse.jgit.internal.storage.file.LockFile.commit();\n    } \n} finally {\n    org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":118,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":100,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":115,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":46,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":23,"org.eclipse.jgit.api.FetchCommandTest.testFetch":11,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":56,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":114,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":53,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI":94,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":98,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":71,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":102,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":109,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":125,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":77,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":37,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":50,"org.eclipse.jgit.transport.RemoteConfigTest.testAddURI":106,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":51,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":136,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":123,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":52,"org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath":140,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":88,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":113,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":132,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":58,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":33,"org.eclipse.jgit.api.PushCommandTest.testPush":67,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":85,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":92,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":9,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":87,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout":93,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":72,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":83,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags":96,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveOnlyURI":111,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":105,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":66,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":81,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":79,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":39,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":49,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI":89,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":13,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":90,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":120,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":126,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":36,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":110,"org.eclipse.jgit.api.GitConstructionTest.testWrap":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":117,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":25,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":24,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":60,"org.eclipse.jgit.api.GitConstructionTest.testOpen":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":55,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":127,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":61,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":131,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":21,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":133,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":18,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":135,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":12,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":76,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":86,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":78,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":139,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":74,"org.eclipse.jgit.transport.RemoteConfigTest.testUnknown":97,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":73,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":121,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":122,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":57,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":119,"org.eclipse.jgit.api.GitConstructionTest.testClose":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":68,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":20,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":137,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":31,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":65,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":107,"org.eclipse.jgit.transport.TransportTest.testSpi":134,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI":104,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":124,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":35,"org.eclipse.jgit.transport.TestProtocolTest.testPush":130,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":22,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":84,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":43,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":138,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":47,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":42,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":16,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":69,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":62,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":116,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":48,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":82,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":38,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":45,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":41,"org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf":103,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":95,"org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin":91,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":128,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags":99,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":129,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":27,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":101}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
