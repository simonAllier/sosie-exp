[{"failures":[],"tindex":"06a20dcb-c82b-11e4-a6de-1d8539276504","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:233","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage()"},"status":-2},{"failures":[],"tindex":"06a20dcc-c82b-11e4-a6de-c14cc26fa262","variableMapping":{"i":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH","workingTree":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH","dirCache":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:332","type":"CtTryImpl","sourcecode":"try {\n    for (java.lang.String java.lang.String : java.lang.String[]) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        if ((java.lang.String.length()) != 2)\n            continue;\n        \n        java.io.File[] java.io.File[] = new java.io.File(java.io.File , java.lang.String).listFiles();\n        if (java.io.File[] == null)\n            continue;\n        \n        for (java.io.File java.io.File : java.io.File[]) {\n            java.lang.String java.lang.String = java.io.File.getName();\n            if ((java.lang.String.length()) != ((org.eclipse.jgit.lib.Constants.int) - 2))\n                continue;\n            \n            if ((java.io.File.lastModified()) >= long)\n                continue;\n            \n            try {\n                org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n                if (java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))\n                    continue;\n                \n                if (java.util.Set<org.eclipse.jgit.lib.ObjectId> == null)\n                    java.util.Set<org.eclipse.jgit.lib.ObjectId> = org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects();\n                \n                if (java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))\n                    continue;\n                \n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.put(org.eclipse.jgit.lib.ObjectId, java.io.File);\n            } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n                continue;\n            }\n        }\n    }\n} finally {\n    org.eclipse.jgit.lib.ProgressMonitor.endTask();\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"06a20dcd-c82b-11e4-a6de-978c385b36ad","variableMapping":{"tableSize":"index","ptr":"childIndex"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:426","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:273","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int > int ; int--) {\n    final org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = org.eclipse.jgit.revwalk.RevObjectList<org.eclipse.jgit.revplot.PlotCommit<L>>.get(int);\n    if (org.eclipse.jgit.revplot.PlotCommit == org.eclipse.jgit.revplot.PlotCommit) {\n        boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"06a20dce-c82b-11e4-a6de-47ab449d5967","variableMapping":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.REUSE_AS_IS":"childIdx"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:237","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:331","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"06a20dcf-c82b-11e4-a6de-eb256934dad3","variableMapping":{"prefix":"org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_HEADER"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:336","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) > 0) && (!(java.lang.String.endsWith(\"/\"))))\n    java.lang.String += \"/\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:780","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(0)) == '#') {\n    if (java.lang.String.startsWith(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String)) {\n        java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length());\n        boolean = java.lang.String.contains(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String);\n    } \n    continue;\n} "},"status":-2},{"failures":[6,7],"tindex":"06a234e0-c82b-11e4-a6de-6b0365996d37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.nls.GlobalBundleCache:89","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.Class, org.eclipse.jgit.nls.TranslationBundle> == null) {\n    java.util.Map<java.lang.Class, org.eclipse.jgit.nls.TranslationBundle> = new java.util.HashMap<java.lang.Class, org.eclipse.jgit.nls.TranslationBundle>();\n    org.eclipse.jgit.nls.GlobalBundleCache.java.util.Map<java.util.Locale, java.util.Map<java.lang.Class, org.eclipse.jgit.nls.TranslationBundle>>.put(java.util.Locale, java.util.Map<java.lang.Class, org.eclipse.jgit.nls.TranslationBundle>);\n} "},"status":-1},{"failures":[],"tindex":"06a234e1-c82b-11e4-a6de-0fd1257f99ff","variableMapping":{"entry":"entry","hosts":"hosts","org.eclipse.jgit.transport.NetRC.DEFAULT_ENTRY":"machine"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRC:190","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.NetRC.NetRCEntry = this.java.util.Map<java.lang.String, org.eclipse.jgit.transport.NetRC.NetRCEntry>.get(org.eclipse.jgit.transport.NetRC.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.NetRC:282","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.transport.NetRC.NetRCEntry>.put(org.eclipse.jgit.transport.NetRC.NetRCEntry.java.lang.String, org.eclipse.jgit.transport.NetRC.NetRCEntry)"},"status":-2},{"failures":[],"tindex":"06a234e2-c82b-11e4-a6de-ff75d107634b","variableMapping":{"skipBuffer":"bin"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.TeeInputStream:131","type":"CtIfImpl","sourcecode":"if ((byte[]) == null)\n    byte[] = new byte[2048];\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:324","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.HttpAuthMethod.Digest.java.util.Random.nextBytes(byte[])"},"status":-2},{"failures":[3,0,1,2,4,5],"tindex":"06a234e3-c82b-11e4-a6de-ad057263f68e","variableMapping":{"r":"sb","inquote":"ignoreLastBracket"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:180","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append('\\\"');\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.StringBuilder.append('\\\\').append('[');\n    boolean = true;\n} else {\n    if (!boolean) {\n        int++;\n        boolean = false;\n    } \n    java.lang.StringBuilder.append('[');\n}"},"status":-1},{"failures":[],"tindex":"06a234e4-c82b-11e4-a6de-877318b6b47b","variableMapping":{"idx":"slot"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:112","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = -(int + 1);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:371","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.internal.storage.file.WindowCache.Entry org.eclipse.jgit.internal.storage.file.WindowCache.Entry = new org.eclipse.jgit.internal.storage.file.WindowCache.Entry(org.eclipse.jgit.internal.storage.file.WindowCache.org.eclipse.jgit.internal.storage.file.WindowCache.clean(org.eclipse.jgit.internal.storage.file.WindowCache.Entry) , org.eclipse.jgit.internal.storage.file.WindowCache.Ref);\n    if (java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.file.WindowCache.Entry>.compareAndSet(int, org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.WindowCache.Entry))\n        break;\n    \n    org.eclipse.jgit.internal.storage.file.WindowCache.Entry = java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.file.WindowCache.Entry>.get(int);\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit":6}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
