[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"f9de15b0-c869-11e4-a5ce-a163dbea77db","variableMapping":{"hits":"maxOffset","total":"maxOffset"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:241","type":"CtReturnImpl","sourcecode":"return (long * 100) / long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:190","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[5,6,7,4,0,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"f9de3cc1-c869-11e4-a5ce-8f6b1f27c85f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:722","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.isBare()) {\n    java.util.List<org.eclipse.jgit.gitrepo.RepoCommand.Project> = new java.util.ArrayList<org.eclipse.jgit.gitrepo.RepoCommand.Project>();\n    if ((org.eclipse.jgit.lib.PersonIdent) == null)\n        org.eclipse.jgit.lib.PersonIdent = new org.eclipse.jgit.lib.PersonIdent(org.eclipse.jgit.lib.Repository);\n    \n    if ((org.eclipse.jgit.gitrepo.RepoCommand.RemoteReader) == null)\n        org.eclipse.jgit.gitrepo.RepoCommand.RemoteReader = new org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader();\n    \n} else\n    org.eclipse.jgit.api.Git = new org.eclipse.jgit.api.Git(org.eclipse.jgit.lib.Repository);\n"},"status":-1},{"failures":[0,5,6,7,12,4],"tindex":"f9de3cc2-c869-11e4-a5ce-8384c80d8a56","variableMapping":{"filter":"a"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:540","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.filter.TreeFilter"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.OrTreeFilter:139","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.treewalk.filter.OrTreeFilter.Binary(org.eclipse.jgit.treewalk.filter.TreeFilter.clone() , org.eclipse.jgit.treewalk.filter.TreeFilter.clone())"},"status":-1},{"failures":[],"tindex":"f9de3cc3-c869-11e4-a5ce-2f7c2d985b90","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:996","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.NoWorkTreeException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:687","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(long)))"},"status":-2},{"failures":[],"tindex":"f9de3cc4-c869-11e4-a5ce-91f833789607","variableMapping":{"srcObj":"this","resObj":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:239","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:365","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(org.eclipse.jgit.lib.AnyObjectId.toHexByteArray())"},"status":-2},{"failures":[0,12,5,6,7,4],"tindex":"f9de3cc5-c869-11e4-a5ce-dfe6a2c874e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:312","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.InterruptTimer.terminate()"},"status":-1},{"failures":[5,6,7,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,4,12,43,44,45],"tindex":"f9de3cc6-c869-11e4-a5ce-f393716cf649","variableMapping":{"update":"update"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:538","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getNewObjectId().copy()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:211","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.RefUpdate.getOldObjectId()"},"status":-1},{"failures":[],"tindex":"f9de3cc7-c869-11e4-a5ce-5346dd00d1f4","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"nc","branchName":"A2","fullBranch":"response"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:198","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:358","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.HttpAuthMethod.Digest.org.eclipse.jgit.transport.HttpAuthMethod.Digest.KD(org.eclipse.jgit.transport.HttpAuthMethod.Digest.org.eclipse.jgit.transport.HttpAuthMethod.Digest.H(java.lang.String), ((((((((java.lang.String + \":\") + java.lang.String) + \":\") + java.lang.String) + \":\") + java.lang.String) + \":\") + org.eclipse.jgit.transport.HttpAuthMethod.Digest.(org.eclipse.jgit.transport.HttpAuthMethod.Digest.H(java.lang.String))))"},"status":-2},{"failures":[0,5,6,7,12,4],"tindex":"f9de3cc8-c869-11e4-a5ce-595b0d2c98f1","variableMapping":{"last":"mId","obj":"mId"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:962","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevObject"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1004","type":"CtInvocationImpl","sourcecode":"java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.ObjectId>.put(java.lang.String, org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[],"tindex":"f9de3cc9-c869-11e4-a5ce-ddcffa79dd70","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:531","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[]{ '.' , 'g' , 'i' , 't' }"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:330","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.transport.PackParser.buffer()"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":18,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":35,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":45,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":15,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":38,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":10,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":24,"org.eclipse.jgit.transport.TestProtocolTest.testPush":9,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":44,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":12,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":3,"org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset":1,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":25,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":30,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":21,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":19,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":33,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":36,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":20,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":28,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":2,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":8,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":26,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":11,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":34}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
