[{"failures":[],"tindex":"5239a90e-c88a-11e4-823a-e379d64d1937","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:354","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5239a90f-c88a-11e4-823a-077e7bbe0d64","variableMapping":{"end":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT","ptr":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:484","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"zero length name\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:264","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder : java.util.List<org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder>) {\n    if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.revwalk.RevCommit)) {\n        for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.getParents())\n            org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.Constants.int);\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"5239a910-c88a-11e4-823a-d9bfecd6ca61","variableMapping":{"b":"buf","ptr":"c"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:645","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == 'e')\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:202","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case ' ' :\n    case '\\n' :\n        org.eclipse.jgit.diff.Edit = null;\n        int++;\n        int++;\n        continue;\n    case '-' :\n        if (org.eclipse.jgit.diff.Edit == null) {\n            org.eclipse.jgit.diff.Edit = new org.eclipse.jgit.diff.Edit((int - 1) , (int - 1));\n            org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit);\n        } \n        int++;\n        org.eclipse.jgit.diff.Edit.extendA();\n        continue;\n    case '+' :\n        if (org.eclipse.jgit.diff.Edit == null) {\n            org.eclipse.jgit.diff.Edit = new org.eclipse.jgit.diff.Edit((int - 1) , (int - 1));\n            org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit);\n        } \n        int++;\n        org.eclipse.jgit.diff.Edit.extendB();\n        continue;\n    case '\\\\' :\n        continue;\n    default :\n        break SCAN;\n}"},"status":-1},{"failures":[],"tindex":"5239a911-c88a-11e4-823a-2d9109e171c1","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1506","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.unlockPack()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:885","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>) == null)\n    org.eclipse.jgit.transport.BaseReceivePack.setAdvertisedRefs(null, null);\n"},"status":-2},{"failures":[16,17,13,14,15,0],"tindex":"5239d022-c88a-11e4-823a-25ced50bb02f","variableMapping":{"cmp":"blkPtr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:335","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return false;\nelse if (int == 0)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:301","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = int & (int);\n    int int = int[][int];\n    if (int == 0) {\n        int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.step(int, byte[][int++], byte[][int++]);\n        continue;\n    } \n    int int = -1;\n    int int = -1;\n    int int = 0;\n    do {\n        long long = long[][int++];\n        if (org.eclipse.jgit.internal.storage.pack.DeltaIndex.(org.eclipse.jgit.internal.storage.pack.DeltaIndex.keyOf(long)) == int) {\n            int int = 0;\n            if (int < int) {\n                int = int - int;\n                int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.negmatch(byte[], int, byte[], org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long), int);\n            } \n            int int = int + org.eclipse.jgit.internal.storage.pack.DeltaIndex.(org.eclipse.jgit.internal.storage.pack.DeltaIndex.fwdmatch(byte[], int, byte[], org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long)));\n            if (int < int) {\n                int = int;\n                int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long);\n                int = int;\n            } \n        } else if ((org.eclipse.jgit.internal.storage.pack.DeltaIndex.(org.eclipse.jgit.internal.storage.pack.DeltaIndex.keyOf(long)) & (int)) != int)\n            break;\n        \n    } while ((int < 4096) && (int < (long[].int)) );\n    if (int < (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int)) {\n        int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.step(int, byte[][int++], byte[][int++]);\n        continue;\n    } \n    int -= int;\n    if (int < int) {\n        int int = int - int;\n        if (!(org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte[], int, int)))\n            return false;\n        \n    } \n    if (!(org.eclipse.jgit.internal.storage.pack.DeltaEncoder.copy((int - int), int)))\n        return false;\n    \n    int += int;\n    int = int;\n    int = int + (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int);\n    if (int <= int)\n        break;\n    \n    int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.hashBlock(byte[], int);\n}"},"status":-1},{"failures":[],"tindex":"5239d023-c88a-11e4-823a-97c6fa0eb306","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:265","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:895","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.io.UnionInputStream"},"status":-2},{"failures":[],"tindex":"5239d024-c88a-11e4-823a-d7332ec087be","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.StrategyRecursive:67","type":"CtReturnImpl","sourcecode":"return \"recursive\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:312","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"status":-2},{"failures":[],"tindex":"5239d025-c88a-11e4-823a-a3cd51de8308","variableMapping":{"bOffset":"needleLen","bAvail":"endPtr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PackParser:1113","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawSubStringPattern:96","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.eclipse.jgit.util.RawCharSequence.int) - int"},"status":-2},{"failures":[0,13,14,15,16,17],"tindex":"5239d026-c88a-11e4-823a-e3eb71c6e78d","variableMapping":{"nParents":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:180","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:249","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"5239d027-c88a-11e4-823a-6bef1aefd959","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:515","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.nextObject()"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.patch.EditListTest.testHunkHeader":2,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":15,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":7,"org.eclipse.jgit.patch.EditListTest.testFileHeader":3,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":8,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":13,"org.eclipse.jgit.patch.EditListTest.testTypes":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":16,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":17,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":11,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":12,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":5,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":6,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":4}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
