[{"failures":[0,1,2,3,4,5],"tindex":"5a837105-c82b-11e4-b1d3-c1a59d378225","variableMapping":{"lockFile":"modulesFile"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:97","type":"CtReturnImpl","sourcecode":"return !(java.io.File.exists())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:476","type":"CtReturnImpl","sourcecode":"return java.io.File.exists()"},"status":-1},{"failures":[3,4,0,1,2,5,6],"tindex":"5a837106-c82b-11e4-b1d3-e32b2441f575","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectLoader:323","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectStream.SmallStream(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LargePackedWholeObject:126","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectStream.Filter(int , long , java.io.InputStream)"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"5a837107-c82b-11e4-b1d3-2382b45f56c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:397","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.unlock()"},"status":-1},{"failures":[],"tindex":"5a837108-c82b-11e4-b1d3-c7fd40c0a727","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:98","type":"CtTryImpl","sourcecode":"try {\n    if ((org.eclipse.jgit.transport.OpenSshConfig) == null)\n        org.eclipse.jgit.transport.OpenSshConfig = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.get(org.eclipse.jgit.util.FS);\n    \n    final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host = org.eclipse.jgit.transport.OpenSshConfig.lookup(java.lang.String);\n    java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.Host.getHostName();\n    if (int <= 0)\n        int = org.eclipse.jgit.transport.OpenSshConfig.Host.getPort();\n    \n    if (java.lang.String == null)\n        java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.Host.getUser();\n    \n    com.jcraft.jsch.Session com.jcraft.jsch.Session = org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host);\n    int int = 0;\n    while (!(com.jcraft.jsch.Session.isConnected())) {\n        try {\n            int++;\n            com.jcraft.jsch.Session.connect(int);\n        } catch (com.jcraft.jsch.JSchException com.jcraft.jsch.JSchException) {\n            com.jcraft.jsch.Session.disconnect();\n            com.jcraft.jsch.Session = null;\n            org.eclipse.jgit.transport.JschConfigSessionFactory.org.eclipse.jgit.transport.JschConfigSessionFactory.knownHosts(org.eclipse.jgit.transport.JschConfigSessionFactory.getJSch(org.eclipse.jgit.transport.OpenSshConfig.Host, org.eclipse.jgit.util.FS), org.eclipse.jgit.util.FS);\n            if (org.eclipse.jgit.transport.JschConfigSessionFactory.org.eclipse.jgit.transport.JschConfigSessionFactory.isAuthenticationCanceled(com.jcraft.jsch.JSchException)) {\n                throw com.jcraft.jsch.JSchException;\n            } else if (org.eclipse.jgit.transport.JschConfigSessionFactory.(org.eclipse.jgit.transport.JschConfigSessionFactory.isAuthenticationFailed(com.jcraft.jsch.JSchException)) && (org.eclipse.jgit.transport.CredentialsProvider != null)) {\n                if (int < 3) {\n                    org.eclipse.jgit.transport.CredentialsProvider.reset(org.eclipse.jgit.transport.URIish);\n                    com.jcraft.jsch.Session = org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host);\n                } else\n                    throw com.jcraft.jsch.JSchException;\n                \n            } else if (int >= (org.eclipse.jgit.transport.OpenSshConfig.Host.getConnectionAttempts())) {\n                throw com.jcraft.jsch.JSchException;\n            } else {\n                try {\n                    java.lang.Thread.java.lang.Thread.sleep(1000);\n                    com.jcraft.jsch.Session = org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host);\n                } catch (java.lang.InterruptedException java.lang.InterruptedException) {\n                    throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.InterruptedException);\n                }\n            }\n        }\n    }\n    return new org.eclipse.jgit.transport.JschSession(com.jcraft.jsch.Session , org.eclipse.jgit.transport.URIish);\n} catch (com.jcraft.jsch.JSchException com.jcraft.jsch.JSchException) {\n    final java.lang.Throwable java.lang.Throwable = com.jcraft.jsch.JSchException.getCause();\n    if (java.lang.Throwable instanceof java.net.UnknownHostException)\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if (java.lang.Throwable instanceof java.net.ConnectException)\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.lang.Throwable.getMessage());\n    \n    throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , com.jcraft.jsch.JSchException.getMessage() , com.jcraft.jsch.JSchException);\n}"},"status":-2},{"failures":[],"tindex":"5a837109-c82b-11e4-b1d3-437cb6ecd73a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:313","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:792","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(1))"},"status":-2},{"failures":[],"tindex":"5a83710a-c82b-11e4-b1d3-8b2cb4c31fa2","variableMapping":{"count":"gt"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:819","type":"CtSwitchImpl","sourcecode":"switch (int % 10) {\n    case 1 :\n        return \"st\";\n    case 2 :\n        return \"nd\";\n    case 3 :\n        return \"rd\";\n    default :\n        return \"th\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FooterLine:142","type":"CtIfImpl","sourcecode":"if ((int) < int)\n    return null;\n"},"status":-2},{"failures":[],"tindex":"5a83710b-c82b-11e4-b1d3-f19157e56261","variableMapping":{"low":"startLine","cmp":"startLine","mid":"startLine"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:298","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} else\n    int = int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:78","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5a83710c-c82b-11e4-b1d3-7d5f893d7bed","variableMapping":{"data":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:746","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.GitlinkTreeEntry:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" G \")"},"status":-2},{"failures":[0,1,2,3,5,4],"tindex":"5a83710d-c82b-11e4-b1d3-5b8dfffeb225","variableMapping":{"mode":"currPtr","pathLen":"currPtr","org.eclipse.jgit.internal.storage.pack.BaseSearch.M_TREE":"currPtr","end":"currPtr","tailMode":"currPtr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:151","type":"CtAssignmentImpl","sourcecode":"int = int != int ? org.eclipse.jgit.internal.storage.pack.BaseSearch.int : int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:418","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"5a83710e-c82b-11e4-b1d3-c17b44ad517c","variableMapping":{"slashIdx":"ptr","start":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.NameMatcher:104","type":"CtReturnImpl","sourcecode":"return int == int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:452","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
