[{"failures":[],"tindex":"7c7b4da6-c828-11e4-86c2-7f7e4b86f794","variableMapping":{"data":"tmpLine"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:267","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7c7b4da7-c828-11e4-86c2-7943a37ffe62","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:410","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:566","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,96,97,97,98,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"7c7b4da8-c828-11e4-86c2-cdf82a14a444","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:78","type":"CtReturnImpl","sourcecode":"return \"simple-two-way-in-core\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:520","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[7,8,9,34,58,6],"tindex":"7c7b4da9-c828-11e4-86c2-452b36e1500c","variableMapping":{"org.eclipse.jgit.revplot.PlotCommit.NO_LANES":"lanes","forkingOffLanes":"lanes"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:208","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane[]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:108","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[]{ org.eclipse.jgit.revplot.PlotLane[][0] , org.eclipse.jgit.revplot.PlotLane }"},"status":-1},{"failures":[7,8,9,6,34,58],"tindex":"7c7b4daa-c828-11e4-86c2-2949092a6264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:523","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.update(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"7c7b4dab-c828-11e4-86c2-b5a21f86b3b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:174","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.eclipse.jgit.dircache.DirCacheEntry.int]"},"status":-2},{"failures":[],"tindex":"7c7b4dac-c828-11e4-86c2-1948124fcac4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:465","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:372","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(byte[] , int)"},"status":-2},{"failures":[],"tindex":"7c7b4dad-c828-11e4-86c2-3b08476f4857","variableMapping":{"hasUnmergedPaths":"space"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:935","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new org.eclipse.jgit.api.errors.UnmergedPathsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1229","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(' ');\n    \n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"7c7b4dae-c828-11e4-86c2-413146484078","variableMapping":{"nextPosition":"index","end":"index"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:109","type":"CtIfImpl","sourcecode":"if (int < (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:130","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommitList<L>.nextFreeLane();\n} else if ((int == 1) && ((org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotCommit[][0].getParentCount()) < 2)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.eclipse.jgit.revplot.PlotCommit<L> org.eclipse.jgit.revplot.PlotCommit<L> = org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotCommit[][0];\n    org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane;\n    java.lang.Integer java.lang.Integer = java.util.HashMap<org.eclipse.jgit.revplot.PlotLane, java.lang.Integer>.get(org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane);\n    java.lang.Integer = java.lang.Integer.java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1));\n    java.util.HashMap<org.eclipse.jgit.revplot.PlotLane, java.lang.Integer>.put(org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane, java.lang.Integer);\n} else {\n    org.eclipse.jgit.revplot.PlotLane org.eclipse.jgit.revplot.PlotLane = null;\n    org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = null;\n    int int = -1;\n    for (int int = 0 ; int < int ; int++) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final org.eclipse.jgit.revplot.PlotCommit<L> org.eclipse.jgit.revplot.PlotCommit<L> = org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotCommit[][int];\n        if ((org.eclipse.jgit.revplot.PlotCommit<L>.getParent(0)) == org.eclipse.jgit.revplot.PlotCommit<L>) {\n            java.lang.Integer java.lang.Integer = java.util.HashMap<org.eclipse.jgit.revplot.PlotLane, java.lang.Integer>.get(org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane);\n            if ((java.lang.Integer.intValue()) > int) {\n                org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane;\n                org.eclipse.jgit.revplot.PlotCommit = org.eclipse.jgit.revplot.PlotCommit<L>;\n                int = java.lang.Integer.intValue();\n            } \n        } \n    }\n    if (org.eclipse.jgit.revplot.PlotLane != null) {\n        org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotLane;\n        java.util.HashMap<org.eclipse.jgit.revplot.PlotLane, java.lang.Integer>.put(org.eclipse.jgit.revplot.PlotLane, java.lang.Integer.java.lang.Integer.valueOf((int + 1)));\n        org.eclipse.jgit.revplot.PlotCommitList<L>.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit<L>, org.eclipse.jgit.revplot.PlotCommit);\n    } else {\n        org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommitList<L>.nextFreeLane();\n        org.eclipse.jgit.revplot.PlotCommitList<L>.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit<L>, null);\n    }\n    for (int int = 0 ; int < int ; int++) {\n        final org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotCommit[][int];\n        org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = ((org.eclipse.jgit.revplot.PlotCommit)(org.eclipse.jgit.revplot.PlotCommit.getParent(0)));\n        if (((org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane) != null) && ((org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane) != (org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane)))\n            org.eclipse.jgit.revplot.PlotCommitList<L>.closeLane(org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane);\n        \n    }\n}"},"status":-2},{"failures":[7,8,9,6,123,34,58],"tindex":"7c7b74bf-c828-11e4-86c2-2932201b5c10","variableMapping":{"forClient":"inquote","r":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1460","type":"CtIfImpl","sourcecode":"if (!boolean)\n    java.lang.StringBuilder.append(\")\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:133","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append('\\\"');\n    boolean = false;\n} "},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":112,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":107,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":109,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":69,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":106,"org.eclipse.jgit.api.FetchCommandTest.testFetch":99,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":79,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":31,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":76,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":11,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":119,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":47,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":73,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":87,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":74,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":117,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":15,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":75,"org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath":52,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":30,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":58,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":62,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":81,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":43,"org.eclipse.jgit.api.PushCommandTest.testPush":65,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":83,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":123,"org.eclipse.jgit.transport.URIishTest.testFileProtocol":85,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":1,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":23,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":89,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":64,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":21,"org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde":90,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":49,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":12,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":102,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":72,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":8,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":114,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":14,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":26,"org.eclipse.jgit.transport.URIishTest.testPathSeparator":91,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":120,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":46,"org.eclipse.jgit.api.GitConstructionTest.testWrap":98,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":111,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":35,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":32,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":82,"org.eclipse.jgit.api.GitConstructionTest.testOpen":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":78,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":16,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":4,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":88,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":121,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":7,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":33,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":61,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":28,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":25,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":100,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":103,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":18,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":93,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":115,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":116,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":80,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":113,"org.eclipse.jgit.api.GitConstructionTest.testClose":96,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":66,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":27,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":41,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":86,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":13,"org.eclipse.jgit.transport.URIishTest.testGetSet":92,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":63,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":118,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":45,"org.eclipse.jgit.transport.TestProtocolTest.testPush":60,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":105,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":55,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":51,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":70,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":54,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":67,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":104,"org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort":94,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":5,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":29,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":95,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":110,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":71,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":48,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":57,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":122,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":59,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":37}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
