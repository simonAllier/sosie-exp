[{"failures":[],"tindex":"8147c75b-c83e-11e4-9afc-6b0d38a49b1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:138","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId[] org.eclipse.jgit.lib.ObjectId[] = new org.eclipse.jgit.lib.ObjectId[int + 1]"},"status":-2},{"failures":[],"tindex":"8147ee6c-c83e-11e4-9afc-8b5674005f7f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:427","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkPushConnection:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"[core]\\n\" + \"\\trepositoryformatversion = 0\\n\""},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"8147ee6d-c83e-11e4-9afc-cf48b7d5cea5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RepositoryState:76","type":"CtReturnImpl","sourcecode":"return \"Bare\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:503","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.ReceiveCommand.getResult()) != (org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result))\n    return org.eclipse.jgit.transport.ReceiveCommand.getRefName();\n"},"status":-1},{"failures":[],"tindex":"8147ee6e-c83e-11e4-9afc-b931897adcf3","variableMapping":{"e":"tmp"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS:407","type":"CtIfImpl","sourcecode":"if (java.io.File.isFile())\n    return java.io.File.getAbsoluteFile();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter:161","type":"CtTryImpl","sourcecode":"try {\n    java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n    try {\n        java.io.OutputStream java.io.OutputStream = java.io.FileOutputStream;\n        if (org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncObjectFiles())\n            java.io.OutputStream = java.nio.channels.Channels.java.nio.channels.Channels.newOutputStream(java.io.FileOutputStream.getChannel());\n        \n        java.util.zip.DeflaterOutputStream java.util.zip.DeflaterOutputStream = org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.compress(java.io.OutputStream);\n        java.security.DigestOutputStream java.security.DigestOutputStream = new java.security.DigestOutputStream(java.util.zip.DeflaterOutputStream , java.security.MessageDigest);\n        org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.writeHeader(java.security.DigestOutputStream, int, long);\n        final byte[] byte[] = org.eclipse.jgit.lib.ObjectInserter.buffer();\n        while (long > 0) {\n            int int = java.io.InputStream.read(byte[], 0, java.lang.Math.((int)(java.lang.Math.min(long, byte[].int))));\n            if (int <= 0)\n                throw org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.shortInput(long);\n            \n            java.security.DigestOutputStream.write(byte[], 0, int);\n            long -= int;\n        }\n        java.security.DigestOutputStream.flush();\n        java.util.zip.DeflaterOutputStream.finish();\n    } finally {\n        if (org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncObjectFiles())\n            java.io.FileOutputStream.getChannel().force(true);\n        \n        java.io.FileOutputStream.close();\n    }\n    boolean = false;\n    return java.io.File;\n} finally {\n    if (boolean)\n        org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(java.io.File, org.eclipse.jgit.util.FileUtils.int);\n    \n}"},"status":-2},{"failures":[0,3,4,5,1,2,6],"tindex":"8147ee6f-c83e-11e4-9afc-3dbab4f9ac46","variableMapping":{"origRemaining":"mul"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:380","type":"CtOperatorAssignmentImpl","sourcecode":"long -= 12"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:265","type":"CtAssignmentImpl","sourcecode":"long = org.eclipse.jgit.lib.Config.long"},"status":-1},{"failures":[3,4,5,0,2,1],"tindex":"8147ee70-c83e-11e4-9afc-f579ec5a05ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LargePackedWholeObject:112","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,2,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,3,4,5,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,1,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"8147ee71-c83e-11e4-9afc-2b8c23daf531","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:779","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    if ((java.lang.String.charAt(0)) == '#') {\n        if (java.lang.String.startsWith(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String)) {\n            java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length());\n            boolean = java.lang.String.contains(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String);\n        } \n        continue;\n    } \n    if ((java.lang.String.charAt(0)) == '^') {\n        if (org.eclipse.jgit.lib.Ref == null)\n            throw new java.io.IOException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(1));\n        org.eclipse.jgit.lib.Ref = new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.ObjectId);\n        org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.set(((org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.size()) - 1), org.eclipse.jgit.lib.Ref);\n        continue;\n    } \n    int int = java.lang.String.indexOf(' ');\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(0, int));\n    java.lang.String java.lang.String = org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.copy(java.lang.String, (int + 1), java.lang.String.length());\n    org.eclipse.jgit.lib.ObjectIdRef org.eclipse.jgit.lib.ObjectIdRef;\n    if (boolean)\n        org.eclipse.jgit.lib.ObjectIdRef = new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId);\n    else\n        org.eclipse.jgit.lib.ObjectIdRef = new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId);\n    \n    if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.RefComparator.(org.eclipse.jgit.lib.RefComparator.compareTo(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectIdRef)) > 0))\n        boolean = true;\n    \n    org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.ObjectIdRef);\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.ObjectIdRef;\n}"},"status":-1},{"failures":[0,2,3,4,5,1],"tindex":"8147ee72-c83e-11e4-9afc-839e56df82f8","variableMapping":{"lock":"clockLock"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:165","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.lock()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:416","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.unlock()"},"status":-1},{"failures":[0,3,4,5,2,1,118,119],"tindex":"8147ee73-c83e-11e4-9afc-97d84a56231c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:207","type":"CtIfImpl","sourcecode":"if ((++(int)) == (int))\n    org.eclipse.jgit.lib.ObjectIdOwnerMap<V>.grow();\n"},"status":-1},{"failures":[0,3,4,5,1,2],"tindex":"8147ee74-c83e-11e4-9afc-f5017e3f6b86","variableMapping":{"org.eclipse.jgit.internal.storage.file.WindowCache.cache":"this","c":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:180","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.WindowCache != (org.eclipse.jgit.internal.storage.file.WindowCache.org.eclipse.jgit.internal.storage.file.WindowCache)) {\n    org.eclipse.jgit.internal.storage.file.WindowCache.removeAll();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:381","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.gc()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":95,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":9,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":41,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":51,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":66,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":30,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":58,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":64,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":49,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":88,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":89,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":44,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":22,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects":119,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":78,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":46,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":28,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":54,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":104,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":59,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":14,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":69,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":100,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":71,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":83,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":97,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":65,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":102,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":31,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":109,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":87,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":26,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":105,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":91,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":101,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":75,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":85,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":99,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":11,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":47,"org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch":113,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":12,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":79,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":110,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":81,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":60,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":108,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":42,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":93,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":111,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":52,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":8,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":53,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":35,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":80,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":106,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":13,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":107,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":33,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":57,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":74,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":98,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":24,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":43,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":68,"org.eclipse.jgit.api.GitConstructionTest.testClose":15,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":50,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":32,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":34,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":114,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":21,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":45,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":116,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":115,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":84,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":55,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":117,"org.eclipse.jgit.lib.ConfigTest.testReadLong":6,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":76,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":25,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":18,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":67,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":56,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":96,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":70,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":112,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":23,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog":17,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":72,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":10,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":63,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":90,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":86,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":29,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":103,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":40,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":19,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":94,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":77,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":82,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent":118,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":36,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":92,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":61,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":73,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":38}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
