[{"failures":[0,1,2,3,4,5],"tindex":"64f8cdcf-c87a-11e4-8b23-639e7d134cf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:282","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"64f8f4e0-c87a-11e4-8b23-75eb71b9c876","variableMapping":{"r":"old","idHEAD":"old","foundBranch":"old"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:296","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.getObjectId().equals(org.eclipse.jgit.lib.Ref.getObjectId())) {\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:582","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && ((org.eclipse.jgit.lib.Ref.getObjectId()) != null))\n    org.eclipse.jgit.lib.RefUpdate.setOldObjectId(org.eclipse.jgit.lib.Ref.getObjectId());\n"},"status":-2},{"failures":[],"tindex":"64f8f4e1-c87a-11e4-8b23-dbe60089e756","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:131","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int]"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,2,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,1,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,65,65,66,66,3,4,5,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,90,91,92,93,94,95],"tindex":"64f8f4e2-c87a-11e4-8b23-2151295ac7db","variableMapping":{"wantIds":"wantIds"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:1067","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1043","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.Set<org.eclipse.jgit.lib.ObjectId>) {\n    if (!(java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))) {\n        if (java.util.List<org.eclipse.jgit.lib.ObjectId> == null)\n            java.util.List<org.eclipse.jgit.lib.ObjectId> = new java.util.ArrayList<org.eclipse.jgit.lib.ObjectId>();\n        \n        java.util.List<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n    } \n}"},"status":-1},{"failures":[],"tindex":"64f8f4e3-c87a-11e4-8b23-6b9e78203aed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.Base64:246","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:131","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[1,2,0,96,97,98,99,3,4,5,100],"tindex":"64f8f4e4-c87a-11e4-8b23-4b9242968fcd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:83","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:968","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"64f8f4e5-c87a-11e4-8b23-e1aabd1cbee6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:380","type":"CtLocalVariableImpl","sourcecode":"final int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1164","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[0,1,2,3,4,5,6,101,7,102],"tindex":"64f8f4e6-c87a-11e4-8b23-3171706158eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:1059","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.int = org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.int;\n        org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.org.eclipse.jgit.lib.ObjectId = null;\n        org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.long = long - int;\n        return ;\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = (byte[][int++]) & 255;\n            long long = int & 127;\n            while ((int & 128) != 0) {\n                long += 1;\n                int = (byte[][int++]) & 255;\n                long <<= 7;\n                long += int & 127;\n            }\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.int = org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.int;\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObject((long - long));\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.long = long - int;\n            return ;\n        }\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.int = org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.int;\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]);\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.long = (long - int) - 20;\n            return ;\n        }\n    default :\n        throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int)));\n}"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"64f8f4e7-c87a-11e4-8b23-ef689c269ce3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:558","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setInvalid()"},"status":-1},{"failures":[],"tindex":"64f8f4e8-c87a-11e4-8b23-fdef1e992cde","variableMapping":{"revstr":"parentHash","item":"parentHash","rev":"this","rw":"walk","org.eclipse.jgit.lib.Constants.TYPE_BLOB":"parentHash"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:494","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"tree\")) {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n} else if (java.lang.String.equals(\"commit\")) {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n} else if (java.lang.String.equals(\"blob\")) {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n    if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n} else if (java.lang.String.equals(\"\")) {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n} else\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:641","type":"CtIfImpl","sourcecode":"if (!(new java.io.File(org.eclipse.jgit.api.RebaseCommand.RebaseState.getRewrittenDir() , java.lang.String).exists()))\n    java.util.List<org.eclipse.jgit.revwalk.RevCommit>.add(org.eclipse.jgit.revwalk.RevCommit.getParent(int));\nelse {\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RebaseCommand.RebaseState.org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(org.eclipse.jgit.api.RebaseCommand.RebaseState.getRewrittenDir(), java.lang.String);\n    if ((java.lang.String.length()) == 0)\n        java.util.List<org.eclipse.jgit.revwalk.RevCommit>.add(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String)));\n    else\n        java.util.List<org.eclipse.jgit.revwalk.RevCommit>.add(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String)));\n    \n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":53,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":50,"org.eclipse.jgit.api.BlameCommandTest.testRename":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":34,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":94,"org.eclipse.jgit.api.FetchCommandTest.testFetch":89,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":44,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":26,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":41,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":10,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":17,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":39,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":12,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":71,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":40,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":25,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":102,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":46,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":81,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":48,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":23,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":100,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":21,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":87,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":11,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":37,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":55,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":90,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":61,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":84,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":98,"org.eclipse.jgit.api.GitConstructionTest.testWrap":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":52,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":73,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":67,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":47,"org.eclipse.jgit.api.GitConstructionTest.testOpen":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":43,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":13,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":62,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":7,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":68,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":33,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":30,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":92,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":18,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":16,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":57,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":54,"org.eclipse.jgit.api.GitConstructionTest.testClose":64,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":32,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":83,"org.eclipse.jgit.transport.TestProtocolTest.testPush":101,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":93,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":70,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":77,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":8,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":36,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":78,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":97,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":72,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":86,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":69,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":63,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":6,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":75}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
