[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"99076803-c822-11e4-a302-d73439a6394f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:349","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.NameMatcher:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"99076804-c822-11e4-a302-b9c569ad26aa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRC:206","type":"CtLocalVariableImpl","sourcecode":"java.io.BufferedReader java.io.BufferedReader = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:179","type":"CtLocalVariableImpl","sourcecode":"final java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(new java.io.InputStreamReader(java.io.InputStream))"},"status":-2},{"failures":[],"tindex":"99076805-c822-11e4-a302-338329f9fd16","variableMapping":{"low":"category","cmp":"category","mid":"category"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:298","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} else\n    int = int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackDescription:295","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource != null) && (org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource != null)) {\n    int int = (org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource.int) - (org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource.int);\n    if (int != 0)\n        return int;\n    \n} "},"status":-2},{"failures":[14,34,35,36,6,15],"tindex":"99078f16-c822-11e4-a302-e7a13babbd8a","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:635","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setIndexFile(new java.io.File(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getGitDir() , \"index\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:724","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setBare()"},"status":-1},{"failures":[6,14,15,38,39,34,35,36],"tindex":"99078f17-c822-11e4-a302-99ddf7d0cbda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.BlockList:222","type":"CtIfImpl","sourcecode":"if (int == (int)) {\n    org.eclipse.jgit.util.BlockList<T>.add(T);\n} else if ((int < 0) || ((int) < int)) {\n    throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.valueOf(int));\n} else {\n    org.eclipse.jgit.util.BlockList<T>.add(null);\n    for (int int = (int) - 2 ; int <= int ; int--)\n        org.eclipse.jgit.util.BlockList<T>.set((int + 1), org.eclipse.jgit.util.BlockList<T>.get(int));\n    org.eclipse.jgit.util.BlockList<T>.set(int, T);\n}"},"status":-1},{"failures":[],"tindex":"99078f18-c822-11e4-a302-617b2ca57ddd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:696","type":"CtLocalVariableImpl","sourcecode":"final int int = 3 << 12"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:300","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"99078f19-c822-11e4-a302-89318dcedefe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:178","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:106","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[14,15,6,34,35,36],"tindex":"99078f1a-c822-11e4-a302-3f5a8fa2e8eb","variableMapping":{"sz":"high"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:209","type":"CtIfImpl","sourcecode":"if (int < 2)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:96","type":"CtWhileImpl","sourcecode":"while (int <= int) {\n    int int = (int + int) >>> 1;\n    int int = org.eclipse.jgit.revwalk.DateRevQueue.Entry[][int].org.eclipse.jgit.revwalk.RevCommit.int;\n    if (int < long)\n        int = int - 1;\n    else if (int > long)\n        int = int + 1;\n    else {\n        int = int - 1;\n        break;\n    }\n}"},"status":-1},{"failures":[6,40,41,42,43,44,45,46,47,48,49,14,15,34,35,36],"tindex":"99078f1b-c822-11e4-a302-05de1173bc90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:616","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    if ((byte[][int]) == '\\n')\n        return -1;\n    \n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[]);\n    if (int >= 0)\n        return int;\n    \n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n}"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"99078f1c-c822-11e4-a302-cb9b2b1709b7","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:191","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.lib.Config.toText()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:320","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.Config.getRawString(java.lang.String, java.lang.String, java.lang.String)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":36,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":67,"org.eclipse.jgit.util.HookTest.testRunHook":54,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles1":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":34,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":58,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":14,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":55,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":9,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":17,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":23,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":41,"org.eclipse.jgit.util.HookTest.testFindHook":52,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":2,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":64,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":33,"org.eclipse.jgit.attributes.AttributesMatcherTest.testBasic":29,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":47,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":60,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRules":7,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTrailingSlash":32,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":57,"org.eclipse.jgit.util.BlockListTest.testAddSlowPath":39,"org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit":51,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":1,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":28,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":62,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":25,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":19,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":40,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testFileModeSymLinkIsNotATree":68,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":15,"org.eclipse.jgit.api.CleanCommandTest.testClean":0,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":66,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":48,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":65,"org.eclipse.jgit.ignore.IgnoreNodeTest.testSlashOnlyMatchesDirectory":12,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":42,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":22,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":50,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":43,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":21,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":63,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":26,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":10,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegation":13,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":20,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":53,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":16,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegation":11,"org.eclipse.jgit.util.BlockListTest.testAddToEnd":38,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":18,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":37,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":61,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":49,"org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink":69,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":27,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":44,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":59,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":31,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":35,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":4,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":5,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":46,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":3,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":30,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":45,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":56}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
