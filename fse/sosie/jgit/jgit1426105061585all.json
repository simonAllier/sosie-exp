[{"failures":[0,1,2,3,4,5],"tindex":"ab9f4cbc-c82b-11e4-a932-e998d1f1a76f","variableMapping":{"repo":"repo"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:279","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.writeCherryPickHead(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:271","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.RepositoryState == (org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState)) || org.eclipse.jgit.api.CommitCommand.(isMergeDuringRebase(org.eclipse.jgit.lib.RepositoryState))) {\n    org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(null);\n    org.eclipse.jgit.lib.Repository.writeMergeHeads(null);\n} else if (org.eclipse.jgit.lib.RepositoryState == (org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState)) {\n    org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(null);\n    org.eclipse.jgit.lib.Repository.writeCherryPickHead(null);\n} else if (org.eclipse.jgit.lib.RepositoryState == (org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState)) {\n    org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(null);\n    org.eclipse.jgit.lib.Repository.writeRevertHead(null);\n} "},"status":-1},{"failures":[],"tindex":"ab9f4cbd-c82b-11e4-a932-8951a140cefa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:249","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid author\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:731","type":"CtThrowImpl","sourcecode":"throw new java.io.EOFException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.storage.dfs.DfsText.org.eclipse.jgit.internal.storage.dfs.DfsText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(long), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackName(), java.lang.Integer.java.lang.Integer.valueOf(int), java.lang.Integer.java.lang.Integer.valueOf(int)))"},"status":-2},{"failures":[6,7,8,5,1,2,3,9,10,11,12,13,14,4,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"ab9f4cbe-c82b-11e4-a932-a95da3892e68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TopoSortGenerator:80","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"ab9f4cbf-c82b-11e4-a932-a953da8f2e53","variableMapping":{"database":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:144","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.delete(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:593","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.fireRefsChanged()"},"status":-2},{"failures":[],"tindex":"ab9f4cc0-c82b-11e4-a932-87f4021aa106","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.MergeConfig:146","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:242","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.lib.TreeEntry[]) != null"},"status":-2},{"failures":[],"tindex":"ab9f4cc1-c82b-11e4-a932-255614f1d510","variableMapping":{"r":"info","b":"smudge_s"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:478","type":"CtIfImpl","sourcecode":"if ((byte[][int++]) == '\\n')\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:337","type":"CtIfImpl","sourcecode":"if (int == int)\n    return int <= org.eclipse.jgit.util.NB.(org.eclipse.jgit.util.NB.decodeInt32(byte[], (int + 4)));\n"},"status":-2},{"failures":[],"tindex":"ab9f4cc2-c82b-11e4-a932-65417ca809ac","variableMapping":{"p":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT","pos":"objCnt","deltaAt":"objCnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:1026","type":"CtAssignmentImpl","sourcecode":"long = (long + int) + 20"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2425","type":"CtOperatorAssignmentImpl","sourcecode":"long += org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>[][org.eclipse.jgit.lib.Constants.int].size()"},"status":-2},{"failures":[],"tindex":"ab9f4cc3-c82b-11e4-a932-afd64648bfc0","variableMapping":{"delayFreeFlags":"n","carryFlags":"n","freeFlags":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1190","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    int |= int;\n    int &= ~(int);\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.StreamCopyThread:130","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"status":-2},{"failures":[],"tindex":"ab9f73d4-c82b-11e4-a932-d55d677bfc4a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:544","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectId(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper:126","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.PackBitmapIndex.getObject(int)"},"status":-2},{"failures":[5,0,4,1,2,3],"tindex":"ab9f73d5-c82b-11e4-a932-91e058a42d12","variableMapping":{"this":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:827","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getRefDatabase().close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1346","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.writeCherryPickHead(null)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory":78,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":43,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf":65,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":12,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":13,"org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch":74,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":39,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":30,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":62,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":28,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":50,"org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther":73,"org.eclipse.jgit.revplot.PlotCommitListTest.testMerged":77,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":59,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":35,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1":70,"org.eclipse.jgit.revplot.PlotCommitListTest.testLinear":76,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":60,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":33,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":38,"org.eclipse.jgit.api.GitConstructionTest.testClose":11,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":34,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359":68,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":9,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":8,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":49,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":37,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":41,"org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches":75,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":63,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":29,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":23,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":26,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":42,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":25,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":24,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":47,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":55,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":36,"org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane":79,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":19,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":58,"org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges":66,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":15,"org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2":72,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":54,"org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1":71,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":40,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":57,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":61,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927":67,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":21,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":17,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":52,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":45}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
