[{"failures":[0,1,2,3,4,5],"tindex":"683ad62d-c876-11e4-a267-25e6c8eb9326","variableMapping":{"data":"sb"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:234","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1},{"failures":[2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,3,4,5,0,1,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"683fdf3e-c876-11e4-a267-dbc1883184d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:95","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[0,117,1,2,3,4,5],"tindex":"683fdf3f-c876-11e4-a267-edd071d49662","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.TreeFilter:159","type":"CtReturnImpl","sourcecode":"return \"ANY_DIFF\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:424","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[118,0,1,2,3,4,5],"tindex":"684117c0-c876-11e4-a267-1b9de9cde095","variableMapping":{"segmentIdx":"position","segmentLength":"position"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:266","type":"CtIfImpl","sourcecode":"if (int < (int - 1)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:83","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.InflatingBitSet.get(int))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"684117c1-c876-11e4-a267-090f425fedb3","variableMapping":{"otp":"mergeCommitTree"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:467","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setFound()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:766","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        else\n            org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"status":-2},{"failures":[],"tindex":"684117c2-c876-11e4-a267-5538688cb2e8","variableMapping":{"dirOnly":"requiresCommitBody","isDirectory":"requiresCommitBody"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:271","type":"CtReturnImpl","sourcecode":"return (!(boolean)) || boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.OrRevFilter:139","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"684117c3-c876-11e4-a267-e9d4704d4ac9","variableMapping":{"contents":"contents","n":"contents"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Tree:378","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry[] = org.eclipse.jgit.lib.TreeEntry[]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:251","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry[] = null"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"684117c4-c876-11e4-a267-f5ecd642b16e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:188","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final int int = java.lang.String.indexOf('\\n');\n    final int int = java.lang.String.indexOf('\\r');\n    final int int;\n    if ((0 <= int) && (0 <= int))\n        int = java.lang.Math.java.lang.Math.min(int, int);\n    else if (0 <= int)\n        int = int;\n    else if (0 <= int)\n        int = int;\n    else\n        break;\n    \n    org.eclipse.jgit.transport.SideBandInputStream.doProgressLine(java.lang.String.substring(0, (int + 1)));\n    java.lang.String = java.lang.String.substring((int + 1));\n}"},"status":-1},{"failures":[0,1,2,119,3,4,5,120,121],"tindex":"684117c5-c876-11e4-a267-efff59764376","variableMapping":{"s":"array","offset":"cnt","length":"cnt","slash":"cnt"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:281","type":"CtForImpl","sourcecode":"for (int = int ; (int < (byte[].int)) && ((byte[][int]) != '/') ; int++) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ByteArrayWindow:83","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.update(byte[], ((int)(long - (long))), int)"},"status":-1},{"failures":[],"tindex":"684117c6-c876-11e4-a267-d9076557949f","variableMapping":{"outRegion":"a"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:471","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.blame.Region org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:307","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.blame.Region org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":106,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":103,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":14,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":15,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":121,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":32,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":38,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":91,"org.eclipse.jgit.api.FetchCommandTest.testFetch":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":22,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":76,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":113,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":19,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":57,"org.eclipse.jgit.util.FileUtilTest.testRelativize_equalPaths":117,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":56,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":55,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":20,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":48,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":111,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":101,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":21,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":30,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":66,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":27,"org.eclipse.jgit.api.PushCommandTest.testPush":11,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":35,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":87,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":13,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":82,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":79,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":51,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":78,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":67,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":81,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":102,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":114,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":98,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":105,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":24,"org.eclipse.jgit.api.TagCommandTest.testTagging":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":88,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":115,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":59,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":60,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":86,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":43,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":61,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":7,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":85,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":75,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":95,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":65,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":71,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":93,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":92,"org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes":9,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":109,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":107,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":80,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany":118,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":6,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":73,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":10,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":8,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":49,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":74,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":112,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":37,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":100,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":90,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":34,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":96,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":99,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":29,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":16,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":64,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":47,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":62,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":72,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":104,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":89,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":12,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":17,"org.eclipse.jgit.api.TagCommandTest.testDelete":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":116,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":120,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":119}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
