[{"failures":[],"tindex":"ba9e1ca0-c88f-11e4-b3dc-9fdedf707d16","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:112","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.eclipse.jgit.revwalk.RevWalk.isRetainBody()"},"status":-2},{"failures":[],"tindex":"ba9e1ca1-c88f-11e4-b3dc-8da33fc8ac0b","variableMapping":{"data":"buffer","length":"length","maxByteCount":"count"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache:93","type":"CtIfImpl","sourcecode":"if ((byte[].int) > (int))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:165","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last();\n    if (org.eclipse.jgit.util.TemporaryBuffer.Block.isFull()) {\n        if (org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit())\n            break;\n        \n        org.eclipse.jgit.util.TemporaryBuffer.Block = new org.eclipse.jgit.util.TemporaryBuffer.Block();\n        java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(org.eclipse.jgit.util.TemporaryBuffer.Block);\n    } \n    int int = java.io.InputStream.read(org.eclipse.jgit.util.TemporaryBuffer.Block.byte[], org.eclipse.jgit.util.TemporaryBuffer.Block.int, ((org.eclipse.jgit.util.TemporaryBuffer.Block.byte[].int) - (org.eclipse.jgit.util.TemporaryBuffer.Block.int)));\n    if (int < 1)\n        return ;\n    \n    org.eclipse.jgit.util.TemporaryBuffer.Block.int += int;\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"ba9e1ca2-c88f-11e4-b3dc-752fadf0df59","variableMapping":{"r":"toInsert","resultTail":"toInsert","resultHead":"toInsert","queueNext":"toInsert"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:799","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.blame.Candidate != null) {\n    org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate;\n    org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate;\n} else {\n    org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate;\n    org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:576","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.revwalk.RevFlag)"},"status":-1},{"failures":[],"tindex":"ba9e1ca3-c88f-11e4-b3dc-85c397c36caa","variableMapping":{"matches":"exc"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:175","type":"CtIfImpl","sourcecode":"if (256 <= (java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:202","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>)\n    java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.revwalk.RevCommit.getId());"},"status":-2},{"failures":[],"tindex":"ba9e1ca4-c88f-11e4-b3dc-8f5ade5b367d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FileUtils:380","type":"CtLocalVariableImpl","sourcecode":"final int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.BlameCommand:271","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0)"},"status":-2},{"failures":[],"tindex":"ba9e1ca5-c88f-11e4-b3dc-edb409ca6403","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:157","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:375","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteParser.org.eclipse.jgit.notes.NoteParser.parse(org.eclipse.jgit.lib.AbbreviatedObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectReader)"},"status":-2},{"failures":[0,3,4,5,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,2],"tindex":"ba9e43b6-c88f-11e4-b3dc-c9fc334a060d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:144","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.dircache.DirCache(null , null)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:467","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache"},"status":-1},{"failures":[1,3,4,5,2,0],"tindex":"ba9e43b7-c88f-11e4-b3dc-2fbca7faed80","variableMapping":{"org.eclipse.jgit.lib.InflaterCache.openInflaterCount":"mid"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.InflaterCache:76","type":"CtUnaryOperatorImpl","sourcecode":"--(org.eclipse.jgit.lib.InflaterCache.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:100","type":"CtAssignmentImpl","sourcecode":"int = int - 1"},"status":-1},{"failures":[],"tindex":"ba9e43b8-c88f-11e4-b3dc-23f45919124d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:91","type":"CtReturnImpl","sourcecode":"return \"None\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:709","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String);\n    return org.eclipse.jgit.lib.Ref != null ? org.eclipse.jgit.lib.Ref.getLeaf().getName() : null;\n} finally {\n    org.eclipse.jgit.lib.Repository.close();\n}"},"status":-2},{"failures":[],"tindex":"ba9e43b9-c88f-11e4-b3dc-4d97e108e923","variableMapping":{"this":"repo","org.eclipse.jgit.lib.Constants.R_TAGS":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_REMOTE_SECTION"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:931","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.Constants.java.lang.String);\n} catch (java.io.IOException java.io.IOException) {\n    return new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:114","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    if (!(java.util.Collection<java.lang.String>.isEmpty()))\n        org.eclipse.jgit.submodule.SubmoduleWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>));\n    \n    java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n    org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl();\n        if (java.lang.String == null)\n            continue;\n        \n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getPath();\n        org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n        org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n        if (org.eclipse.jgit.lib.Repository == null)\n            continue;\n        \n        org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig;\n        java.lang.String java.lang.String;\n        try {\n            org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n            java.lang.String = org.eclipse.jgit.api.SubmoduleSyncCommand.getHeadBranch(org.eclipse.jgit.lib.Repository);\n            java.lang.String java.lang.String = null;\n            if (java.lang.String != null)\n                java.lang.String = org.eclipse.jgit.lib.StoredConfig.getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n            \n            if (java.lang.String == null)\n                java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n            \n            org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n            org.eclipse.jgit.lib.StoredConfig.save();\n        } finally {\n            org.eclipse.jgit.lib.Repository.close();\n        }\n    }\n    if (!(java.util.Map<java.lang.String, java.lang.String>.isEmpty()))\n        org.eclipse.jgit.lib.StoredConfig.save();\n    \n    return java.util.Map<java.lang.String, java.lang.String>;\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n} catch (org.eclipse.jgit.errors.ConfigInvalidException org.eclipse.jgit.errors.ConfigInvalidException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.errors.ConfigInvalidException.getMessage() , org.eclipse.jgit.errors.ConfigInvalidException);\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":55,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":57,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":21,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":59,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":20,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":90,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":72,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":80,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":74,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":82,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":83,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":60,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":70,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":71,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":19,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":27,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":35,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":18,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":26,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":63,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":29,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":37,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":45,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":28,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":36,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":61,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":39,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":47,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":38,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":46,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":49,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":48,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":50,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":51,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":54,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":53,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":9,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":7,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":15,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":8,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":17,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":25,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":16,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":88,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":89,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":10,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":68,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":76,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":11,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":69,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":77,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":85,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":12,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":78,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":86,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":13,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":79,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":87,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":14,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":66,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":67,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":75,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":23,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":31,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":22,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":30,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":33,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":41,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":32,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":40,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":42,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":44,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":6}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
