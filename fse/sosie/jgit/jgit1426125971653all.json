[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"5b010f67-c85c-11e4-9cb8-adae74e00e11","variableMapping":{"bits":"nameB"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:272","type":"CtLocalVariableImpl","sourcecode":"final int int = 1 << (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:774","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-1},{"failures":[14,32,6,7,8,3],"tindex":"5b010f68-c85c-11e4-9cb8-0563abc2921c","variableMapping":{"remoteUri":"pathToBeSaved"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:264","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"local repository\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:244","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.LinkedList<java.lang.String>.removeFirst()"},"status":-2},{"failures":[],"tindex":"5b010f69-c85c-11e4-9cb8-6724711d9dc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackExt:84","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackExt org.eclipse.jgit.internal.storage.pack.PackExt = new org.eclipse.jgit.internal.storage.pack.PackExt(java.lang.String , org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt[].int)"},"status":-2},{"failures":[],"tindex":"5b010f6a-c85c-11e4-9cb8-6fc130d4868d","variableMapping":{"segmentName":"characterClassIsNotSupported"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:200","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:82","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:alpha:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n} else if (java.lang.String.equals(\"[:blank:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(' '));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('\\t'));\n} else if (java.lang.String.equals(\"[:cntrl:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('\u0000' , '\u001f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''));\n} else if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.java.lang.String.format(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[6,7,8,32,3,14],"tindex":"5b010f6b-c85c-11e4-9cb8-edd1131d7fa7","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:945","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.blame.BlameGenerator.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:810","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate)"},"status":-1},{"failures":[],"tindex":"5b010f6c-c85c-11e4-9cb8-e9be2fa6120e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:135","type":"CtReturnImpl","sourcecode":"return \"created\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:346","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"5b010f6d-c85c-11e4-9cb8-556a1ea26dbe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:223","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:154","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[14,35,36,3,37,38,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,6,7,8,68,69,70,71,72],"tindex":"5b01367e-c85c-11e4-9cb8-07849fafa2b4","variableMapping":{"filename":"patternB"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:442","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.lastIndexOf('/')"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:439","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf('*')"},"status":-1},{"failures":[3,32,73,6,7,8,14],"tindex":"5b01367f-c85c-11e4-9cb8-33c3a62166da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:78","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) < 2) || ((org.eclipse.jgit.lib.Constants.int) < (java.lang.String.length())))\n    return false;\n"},"status":-1},{"failures":[6,7,8,74,14,3,32],"tindex":"5b013680-c85c-11e4-9cb8-69d79c380103","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:539","type":"CtSwitchImpl","sourcecode":"switch (byte[][(int + 2)]) {\n    case ((byte)(140)) :\n    case ((byte)(141)) :\n    case ((byte)(142)) :\n    case ((byte)(143)) :\n    case ((byte)(170)) :\n    case ((byte)(171)) :\n    case ((byte)(172)) :\n    case ((byte)(173)) :\n    case ((byte)(174)) :\n        boolean = true;\n        int += 3;\n        continue;\n    default :\n        return false;\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":43,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":23,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":11,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":35,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":8,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":17,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":59,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":29,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":33,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":58,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit":74,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":6,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":34,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":36,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":50,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":32,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":4,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":46,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":38,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":67,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":69,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":37,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":63,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":53,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":44,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":71,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":28,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":60,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":18,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":72,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":57,"org.eclipse.jgit.api.GitConstructionTest.testClose":5,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":24,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testIsId":73,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":52,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":16,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":51,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":26,"org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard":64,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":55,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":39,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":68,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":70,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":9,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":27,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":31,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":41,"org.eclipse.jgit.transport.TestProtocolTest.testPush":49,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":65,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":40,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":15,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":19,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":2,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":61,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":12,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":54,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":13,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":7,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":20,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":30,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":45,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":66,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":62,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":25,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":56,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":48}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
