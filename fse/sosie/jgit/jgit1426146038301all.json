[{"failures":[0,1,2,3,4,5,6,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"13c53cf2-c88b-11e4-9915-fd76270444ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry:115","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry = org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry"},"status":-1},{"failures":[],"tindex":"13c56403-c88b-11e4-9915-ab8aeb2024d4","variableMapping":{"org.eclipse.jgit.util.StringUtils.LC":"newValue","length":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.StringUtils:57","type":"CtForImpl","sourcecode":"for (char char = 0 ; char < (org.eclipse.jgit.util.StringUtils.char[].int) ; char++)\n    org.eclipse.jgit.util.StringUtils.char[][char] = char;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.CredentialItem:196","type":"CtIfImpl","sourcecode":"if (char[] != null) {\n    char[] = new char[char[].int];\n    java.lang.System.java.lang.System.arraycopy(char[], 0, char[], 0, char[].int);\n} "},"status":-2},{"failures":[],"tindex":"13c56404-c88b-11e4-9915-15426d6b7e49","variableMapping":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"depth","flag":"depth","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"depth"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:310","type":"CtUnaryOperatorImpl","sourcecode":"~((int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DescribeCommand:273","type":"CtUnaryOperatorImpl","sourcecode":"(Candidate.int)++"},"status":-2},{"failures":[68,45,46,47,62,44,114,115,116],"tindex":"13c56405-c88b-11e4-9915-511b8e8f0333","variableMapping":{"pathLen":"nContext","pathOffset":"ancestor","nameLen":"nContext"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:509","type":"CtAssignmentImpl","sourcecode":"int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:163","type":"CtUnaryOperatorImpl","sourcecode":"(org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[][int].int)++"},"status":-1},{"failures":[44,68,45,46,47,62],"tindex":"13c56406-c88b-11e4-9915-79d2ec69474a","variableMapping":{"r":"depth"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:318","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:860","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"deepen \")) {\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(7));\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"13c56407-c88b-11e4-9915-0542057fa26d","variableMapping":{"database":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:144","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.delete(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:593","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.fireRefsChanged()"},"status":-2},{"failures":[],"tindex":"13c56408-c88b-11e4-9915-31f1d72f8573","variableMapping":{"n":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:349","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.io.EOFException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:221","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Entry org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Entry : org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper) {\n    if (((org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Entry.getFlags()) & (org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int)) != (org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int))\n        continue;\n    \n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Entry));\n    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.add(new org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit(org.eclipse.jgit.revwalk.RevCommit , false , org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Entry.getFlags()));\n        org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevCommit);\n        com.googlecode.javaewah.EWAHCompressedBitmap com.googlecode.javaewah.EWAHCompressedBitmap = org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.ofObjectType(org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.revwalk.RevCommit), org.eclipse.jgit.lib.Constants.int);\n        org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(org.eclipse.jgit.revwalk.RevCommit, com.googlecode.javaewah.EWAHCompressedBitmap, 0);\n        org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.Constants.int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"13c56409-c88b-11e4-9915-dd6db1bd0021","variableMapping":{"startCommit":"id"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:477","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit.getId()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:176","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId"},"status":-2},{"failures":[44,68,45,46,47,62],"tindex":"13c5640a-c88b-11e4-9915-af023f4e4bdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1239","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevFlag org.eclipse.jgit.revwalk.RevFlag : org.eclipse.jgit.revwalk.RevFlag[])\n    int |= org.eclipse.jgit.revwalk.RevFlag.int;"},"status":-1},{"failures":[68,45,46,47,62,117,118,119,120,121,122,123,124,125,126,127,128,129,130,44],"tindex":"13c5640b-c88b-11e4-9915-b538a60db3fd","variableMapping":{"newRoot":"result"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteMap:314","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket = new org.eclipse.jgit.notes.LeafBucket(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:251","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":92,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":89,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":17,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":18,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":128,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":64,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":130,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":28,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":119,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":41,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":25,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":104,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":125,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":99,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":32,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":97,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":108,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":118,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":24,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":10,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":40,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":44,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":127,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":30,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":81,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":66,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":120,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":1,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":38,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":70,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":58,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":36,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":34,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":122,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":87,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":50,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":105,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":46,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":115,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":94,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":107,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":100,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":84,"org.eclipse.jgit.api.GitConstructionTest.testWrap":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":91,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":73,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":42,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":65,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":110,"org.eclipse.jgit.api.GitConstructionTest.testOpen":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":31,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":114,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":27,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":48,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":121,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":109,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":101,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":45,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":15,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":68,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":12,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":51,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":117,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":33,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":61,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":2,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":49,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":11,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":95,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":96,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":123,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":93,"org.eclipse.jgit.api.GitConstructionTest.testClose":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":62,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":52,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":71,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":103,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":129,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":14,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":79,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":106,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":69,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":124,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":83,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":63,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":9,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":56,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":74,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":116,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":77,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":59,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":112,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":72,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":5,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":60,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":113,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":39,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":90,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":20,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":37,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":78,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":86,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":102,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":111,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":75}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
