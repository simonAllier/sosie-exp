[{"failures":[],"tindex":"452a8c94-c876-11e4-9cfc-03a099d8ba6a","variableMapping":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"org.eclipse.jgit.internal.storage.file.PackIndexV2.NO_BYTES"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.QuotedString:215","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[] = new byte[128]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:114","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = org.eclipse.jgit.internal.storage.file.PackIndexV2.byte[]"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"452b9e05-c876-11e4-9cfc-fd906f02ce31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:287","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.internal.storage.pack.DeltaWindow = org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.stealWork(this)) != null)\n    org.eclipse.jgit.internal.storage.pack.DeltaTask.runWindow(org.eclipse.jgit.internal.storage.pack.DeltaWindow);"},"status":-1},{"failures":[],"tindex":"452b9e06-c876-11e4-9cfc-41138134008a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:226","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ShowNoteCommand:79","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,0,1,2,4,5,3],"tindex":"4530a717-c876-11e4-9cfc-9d04205a52b1","variableMapping":{"nextNamePos":"newX","nextPtr":"k"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:330","type":"CtIfImpl","sourcecode":"if ((int + 1) == int)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:446","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.EditPaths.meets(int, int, int, long))\n    return true;\n"},"status":-1},{"failures":[0,1,2,3,4,5,16,17,18],"tindex":"4534ecd8-c876-11e4-9cfc-0531c78b8c06","variableMapping":{"conflictingPaths":"unmergedPaths"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.errors.CheckoutConflictException:98","type":"CtAssignmentImpl","sourcecode":"java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String>()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:191","type":"CtAssignmentImpl","sourcecode":"java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths()"},"status":-1},{"failures":[],"tindex":"453784e9-c876-11e4-9cfc-ffebd0bb045e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1359","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1118","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.java.lang.System.currentTimeMillis()"},"status":-2},{"failures":[],"tindex":"4537d30a-c876-11e4-9cfc-f540b0911937","variableMapping":{"r":"corruptObjectInvalidMode2","org.eclipse.jgit.diff.DiffEntry.DEV_NULL":"corruptObjectInvalidMode2"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:534","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(org.eclipse.jgit.diff.DiffEntry.java.lang.String))\n    java.lang.String = org.eclipse.jgit.diff.DiffEntry.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:528","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int int = byte[][int++];\n    if ((int < '0') || (int > '7'))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    int int = int - '0';\n    for ( ;  ; ) {\n        int = byte[][int++];\n        if (' ' == int)\n            break;\n        else if ((int < '0') || (int > '7'))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        int <<= 3;\n        int += int - '0';\n    }\n    int int = 0;\n    while ((byte[][(int + int)]) != 0)\n        int++;\n    final byte[] byte[] = new byte[int];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    int += int + 1;\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int);\n    int += org.eclipse.jgit.lib.Constants.int;\n    final org.eclipse.jgit.lib.TreeEntry org.eclipse.jgit.lib.TreeEntry;\n    if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , false);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , true);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.Tree(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.SymlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.GitlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.toOctalString(int)));\n    \n    org.eclipse.jgit.lib.TreeEntry[][int++] = org.eclipse.jgit.lib.TreeEntry;\n}"},"status":-2},{"failures":[0,1,2,4,5,3],"tindex":"4537d30b-c876-11e4-9cfc-eb3a6f71e88c","variableMapping":{"or":"or","blobId":"treeish","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BlobBasedConfig:109","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.BlobBasedConfig.org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BlobBasedConfig:150","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = org.eclipse.jgit.treewalk.TreeWalk.org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.BlobBasedConfig.org.eclipse.jgit.lib.BlobBasedConfig.asTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId));\n    if (org.eclipse.jgit.treewalk.TreeWalk == null)\n        throw new java.io.FileNotFoundException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    return org.eclipse.jgit.lib.BlobBasedConfig.org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.treewalk.TreeWalk.getObjectId(0));\n} finally {\n    org.eclipse.jgit.lib.ObjectReader.release();\n}"},"status":-1},{"failures":[],"tindex":"4537d30c-c876-11e4-9cfc-fb2cacf0a5de","variableMapping":{"formatName":"invalidModeForPath"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:323","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.ArchiveCommand.UnsupportedFormatException(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:501","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.dircache.DirCacheEntry.getPathString()))"},"status":-2},{"failures":[0,1,2,4,19,5,3],"tindex":"4537d30d-c876-11e4-9cfc-5147edf5208c","variableMapping":{"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT":"org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_HEADER","pruneExpireStr":"p"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:313","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.internal.storage.file.GC.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:782","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length())"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonReplaceCommonDeleteCommon":15,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":19,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":12,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_DuplicateAButCommonUniqueInB":10,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_ReplaceCommonDelete":7,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonGrowsPrefixAndSuffix":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":17,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":18,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":16,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InvertBlocks":13,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":8,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InsertNearCommonTail":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_MoveBlock":9}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
