[{"failures":[],"tindex":"9c8e63ca-c855-11e4-aa03-a51b2dee4ad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:294","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.Heap org.eclipse.jgit.util.TemporaryBuffer.Heap = null"},"status":-2},{"failures":[],"tindex":"9c8e8adb-c855-11e4-aa03-cbbd6c942b7c","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:264","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectInserter.Formatter().idFor(org.eclipse.jgit.notes.FanoutBucket.build(false, null))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:263","type":"CtTryImpl","sourcecode":"try {\n    return new org.eclipse.jgit.lib.ObjectInserter.Formatter().idFor(org.eclipse.jgit.notes.FanoutBucket.build(false, null));\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"9c8e8adc-c855-11e4-aa03-b540eb8018d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:366","type":"CtWhileImpl","sourcecode":"while ((int) < (org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.size())) {\n    if (!(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.get(int).getName().startsWith(java.lang.String)))\n        break;\n    \n    if ((org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>) == null)\n        org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.copy(int);\n    \n    (int)++;\n}"},"status":-1},{"failures":[0,1,2,5,3,6],"tindex":"9c8e8add-c855-11e4-aa03-9feb6aaea969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkPushConnection:271","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":-1},{"failures":[],"tindex":"9c8e8ade-c855-11e4-aa03-bdf3be177fd1","variableMapping":{"f":"ref"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:690","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getStorage().isPacked()) && (org.eclipse.jgit.lib.Ref.isPeeled()))\n    return org.eclipse.jgit.lib.Ref;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:111","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref"},"status":-2},{"failures":[],"tindex":"9c8e8adf-c855-11e4-aa03-fffa570c4fff","variableMapping":{"o":"objectId"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotWalk:171","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)\n    return ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getCommitTime();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.CachedObjectDirectory:209","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)"},"status":-2},{"failures":[7,0,1,2,3,5,6],"tindex":"9c8e8ae0-c855-11e4-aa03-2fa72c7c1bfa","variableMapping":{"next":"next","auth":"auth","this":"this","eq":"next","value":"auth"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:475","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt((int + 1))) == '\\\"') {\n    int int = java.lang.String.indexOf('\\\"', (int + 2));\n    if (int < 0) {\n        return java.util.Collections.java.util.Collections.emptyMap();\n    } \n    java.lang.String = java.lang.String.substring((int + 2), int);\n    int = int + 1;\n} else {\n    int int = java.lang.String.indexOf(' ', (int + 1));\n    int int = java.lang.String.indexOf(',', (int + 1));\n    if (int < 0)\n        int = java.lang.String.length();\n    \n    if (int < 0)\n        int = java.lang.String.length();\n    \n    final int int = java.lang.Math.java.lang.Math.min(int, int);\n    java.lang.String = java.lang.String.substring((int + 1), int);\n    int = int + 1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:459","type":"CtWhileImpl","sourcecode":"while (int < (java.lang.String.length())) {\n    if ((int < (java.lang.String.length())) && ((java.lang.String.charAt(int)) == ',')) {\n        int++;\n    } \n    while ((int < (java.lang.String.length())) && java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n        int++;\n    }\n    int int = java.lang.String.indexOf('=', int);\n    if ((int < 0) || ((int + 1) == (java.lang.String.length()))) {\n        return java.util.Collections.java.util.Collections.emptyMap();\n    } \n    final java.lang.String java.lang.String = java.lang.String.substring(int, int);\n    final java.lang.String java.lang.String;\n    if ((java.lang.String.charAt((int + 1))) == '\\\"') {\n        int int = java.lang.String.indexOf('\\\"', (int + 2));\n        if (int < 0) {\n            return java.util.Collections.java.util.Collections.emptyMap();\n        } \n        java.lang.String = java.lang.String.substring((int + 2), int);\n        int = int + 1;\n    } else {\n        int int = java.lang.String.indexOf(' ', (int + 1));\n        int int = java.lang.String.indexOf(',', (int + 1));\n        if (int < 0)\n            int = java.lang.String.length();\n        \n        if (int < 0)\n            int = java.lang.String.length();\n        \n        final int int = java.lang.Math.java.lang.Math.min(int, int);\n        java.lang.String = java.lang.String.substring((int + 1), int);\n        int = int + 1;\n    }\n    java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"9c8e8ae1-c855-11e4-aa03-4f0e54aa5e25","variableMapping":{"pathIdx":"param","base":"param"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkPushConnection:251","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (\"pack/\" + java.lang.String) + \".idx\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:174","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.HttpAuthMethod.java.lang.String"},"status":-2},{"failures":[],"tindex":"9c8e8ae2-c855-11e4-aa03-a39db9d3dc26","variableMapping":{"method":"org.eclipse.jgit.util.FS_POSIX_Java6.setExecute","org.eclipse.jgit.lib.ObjectChecker.Normalizer.normalize":"org.eclipse.jgit.util.FS_POSIX_Java6.setExecute"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:768","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectChecker.Normalizer.java.lang.reflect.Method = java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS_POSIX_Java6:65","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.FS_POSIX_Java6.java.lang.reflect.Method = org.eclipse.jgit.util.FS_POSIX_Java6.org.eclipse.jgit.util.FS_POSIX_Java6.needMethod(java.io.File.java.io.File, \"setExecutable\", java.lang.Boolean.java.lang.Class<java.lang.Boolean>)"},"status":-2},{"failures":[],"tindex":"9c8eb1f3-c855-11e4-aa03-ebca34f84dfb","variableMapping":{"pathLen":"org.eclipse.jgit.util.TemporaryBuffer.Block.SZ","pathOffset":"inCoreLimit"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:770","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:273","type":"CtIfImpl","sourcecode":"if ((int) < (org.eclipse.jgit.util.TemporaryBuffer.Block.int)) {\n    java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block> = new java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>(1);\n    java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(new org.eclipse.jgit.util.TemporaryBuffer.Block(int));\n} else {\n    java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block> = new java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>(((int) / (org.eclipse.jgit.util.TemporaryBuffer.Block.int)));\n    java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(new org.eclipse.jgit.util.TemporaryBuffer.Block());\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.transport.HttpAuthTest.testHttpAuthScanResponse":7}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
