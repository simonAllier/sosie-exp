[{"failures":[0,1,2,3,4,5],"tindex":"ed0f9e12-c82b-11e4-9b90-45c131a52548","variableMapping":{"canonLen":"len","len":"canonLen","this":"this","is":"is"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:374","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.treewalk.WorkingTreeIterator.(mightNeedCleaning())) {\n    long = long;\n    return java.io.InputStream;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:392","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator.isBinary(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)) {\n    long = long;\n    return java.io.InputStream;\n} "},"status":-1},{"failures":[],"tindex":"ed1199e3-c82b-11e4-9b90-53d5144e5b77","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:122","type":"CtReturnImpl","sourcecode":"return java.util.LinkedList<java.io.InputStream>.isEmpty()"},"status":-2},{"failures":[6,7,8,9,10,11,11,12,12,13,13,1,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,2,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,3,4,5,103,104,105,106,107,108,109,110],"tindex":"ed11c0f4-c82b-11e4-9b90-a14ad24e4754","variableMapping":{"pckOut":"pckOut"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:910","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.writeString(\"NAK\\n\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:86","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.end()"},"status":-1},{"failures":[],"tindex":"ed134795-c82b-11e4-9b90-85675c227eb3","variableMapping":{"buf":"raw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeFormatter:266","type":"CtAssignmentImpl","sourcecode":"byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:209","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"status":-2},{"failures":[],"tindex":"ed134796-c82b-11e4-9b90-099a54f617dc","variableMapping":{"org.eclipse.jgit.lib.Constants.DOT_GIT":"pathNotConfigured","name":"pathNotConfigured"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:752","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Constants.java.lang.String.equals(java.lang.String))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:710","type":"CtIfImpl","sourcecode":"if ((java.io.InputStream) == null) {\n    if (((java.lang.String) == null) || ((java.lang.String.length()) == 0))\n        throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    try {\n        java.io.InputStream = new java.io.FileInputStream(java.lang.String);\n    } catch (java.io.IOException java.io.IOException) {\n        throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n} "},"status":-2},{"failures":[1,0,2,3,4,5],"tindex":"ed13bcc7-c82b-11e4-9b90-fdc97a90d34c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:331","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"ed14a728-c82b-11e4-9b90-3db669f3064e","variableMapping":{"target":"section"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\")))\n    java.lang.String = \"/\" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:811","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Config.setStringList(java.lang.String, java.lang.String, java.lang.String, java.util.Collections.java.util.Collections.<java.lang.String>emptyList())"},"status":-2},{"failures":[],"tindex":"ed154369-c82b-11e4-9b90-89bf024f6e8d","variableMapping":{"pList":"parents","parents":"org.eclipse.jgit.revwalk.RevCommit.NO_PARENTS"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:196","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1437","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.ObjectId).org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"ed15436a-c82b-11e4-9b90-8388c187e9c9","variableMapping":{"walker":"walk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:126","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:211","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.transport.ReceiveCommand org.eclipse.jgit.transport.ReceiveCommand : org.eclipse.jgit.lib.BatchRefUpdate.getCommands()) {\n    org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk);\n    if ((((org.eclipse.jgit.transport.ReceiveCommand.getType()) == (org.eclipse.jgit.transport.ReceiveCommand.Type.org.eclipse.jgit.transport.ReceiveCommand.Type)) && (org.eclipse.jgit.transport.ReceiveCommand instanceof org.eclipse.jgit.transport.TrackingRefUpdate.Command)) && (!(((org.eclipse.jgit.transport.TrackingRefUpdate.Command)(org.eclipse.jgit.transport.ReceiveCommand)).canForceUpdate())))\n        org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result);\n    \n}"},"status":-1},{"failures":[],"tindex":"ed15436b-c82b-11e4-9b90-419ab9af0dc8","variableMapping":{"len":"org.eclipse.jgit.lib.Constants.OBJ_TREE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1125","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.addAll(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>[][org.eclipse.jgit.lib.Constants.int])"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":85,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":73,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":47,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":72,"org.eclipse.jgit.api.FetchCommandTest.testFetch":61,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":55,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":57,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":81,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":54,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":104,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":92,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":96,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":37,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":90,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":9,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":53,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":78,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":80,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":59,"org.eclipse.jgit.api.PushCommandTest.testPush":21,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":33,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":69,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":102,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":20,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":100,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":39,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":105,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":87,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":107,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":93,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":36,"org.eclipse.jgit.api.GitConstructionTest.testWrap":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":84,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":25,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":67,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":74,"org.eclipse.jgit.api.GitConstructionTest.testOpen":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":60,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":56,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":109,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":94,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":68,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":77,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":18,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":15,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":62,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":65,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":97,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":44,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":88,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":89,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":58,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":86,"org.eclipse.jgit.api.GitConstructionTest.testClose":11,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":22,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":103,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":17,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":31,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":106,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":19,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":35,"org.eclipse.jgit.transport.TestProtocolTest.testPush":76,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":71,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":8,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":110,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":48,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":7,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":23,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":66,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":41,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":49,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":101,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":30,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":38,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":95,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":75,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":45,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":27}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
