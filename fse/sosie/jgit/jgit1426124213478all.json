[{"failures":[],"tindex":"430b527c-c858-11e4-a32a-19c76a13b123","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:83","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:992","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.diff.DiffEntry.getChangeType()) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType)) || ((org.eclipse.jgit.diff.DiffEntry.getChangeType()) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"430b527d-c858-11e4-a32a-112a36f1052b","variableMapping":{"s":"lineStart","lf":"lineStart","cr":"lineStart"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:194","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse if (0 <= int)\n    int = int;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:131","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case '\\n' :\n        if (boolean) {\n            java.lang.StringBuilder.append('\\\"');\n            boolean = false;\n        } \n        java.lang.StringBuilder.append(\"\\\\n\\\\\\n\");\n        int = java.lang.StringBuilder.length();\n        break;\n    case '\\t' :\n        java.lang.StringBuilder.append(\"\\\\t\");\n        break;\n    case '\\b' :\n        java.lang.StringBuilder.append(\"\\\\b\");\n        break;\n    case '\\\\' :\n        java.lang.StringBuilder.append(\"\\\\\\\\\");\n        break;\n    case '\\\"' :\n        java.lang.StringBuilder.append(\"\\\\\\\"\");\n        break;\n    case ';' :\n    case '#' :\n        if (!boolean) {\n            java.lang.StringBuilder.insert(int, '\\\"');\n            boolean = true;\n        } \n        java.lang.StringBuilder.append(char);\n        break;\n    case ' ' :\n        if (((!boolean) && ((java.lang.StringBuilder.length()) > 0)) && ((java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))) == ' ')) {\n            java.lang.StringBuilder.insert(int, '\\\"');\n            boolean = true;\n        } \n        java.lang.StringBuilder.append(' ');\n        break;\n    default :\n        java.lang.StringBuilder.append(char);\n        break;\n}"},"status":-1},{"failures":[],"tindex":"430b527e-c858-11e4-a32a-e5842df5c395","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"commitMessage","n":"commitMessage"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:294","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.hooks.CommitMsgHook:89","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.hooks.CommitMsgHook.canRun()) {\n    org.eclipse.jgit.hooks.GitHook<java.lang.String>.getRepository().writeCommitEditMsg(java.lang.String);\n    org.eclipse.jgit.hooks.GitHook<java.lang.String>.doRun();\n    java.lang.String = org.eclipse.jgit.hooks.GitHook<java.lang.String>.getRepository().readCommitEditMsg();\n} "},"status":-2},{"failures":[6,1,7,8,9,5,10,11,12,13,14,15,16,17,18,19,2,3,4,0,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"430b527f-c858-11e4-a32a-0f2417459cb2","variableMapping":{"insz":"v"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:373","type":"CtReturnImpl","sourcecode":"return ((int + ((int + 7) >> 3)) + ((int + 63) >> 6)) + 11"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:334","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.AbbreviatedObjectId.org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, int, int)"},"status":-1},{"failures":[64,65,66,67,68,69,70,8,71,72,73,74,75,76,77,78,79,80,81,82,83,84,1,85,86,0,5,2,3,4,87,88,89,90,91,92,93],"tindex":"430b5280-c858-11e4-a32a-a7d68e7ac78a","variableMapping":{"b":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:450","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))) != '/')\n    java.lang.StringBuilder.append('/');\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:506","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.(getDestination()) != null) {\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(org.eclipse.jgit.transport.RefSpec.getDestination());\n} "},"status":-1},{"failures":[],"tindex":"430b5281-c858-11e4-a32a-ed21b846b78f","variableMapping":{"f":"org.eclipse.jgit.treewalk.WorkingTreeIterator.class","this":"this","i":"org.eclipse.jgit.dircache.DirCacheBuildIterator.class","m":"org.eclipse.jgit.treewalk.CanonicalTreeParser.class","walk":"walk"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:331","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry()) != null) {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry(), true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())) || ((org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry().getStage()) != 0))\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryPathString(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode());\n    else {\n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry();\n        if ((org.eclipse.jgit.dircache.DirCacheEntry.getLastModified()) == 0)\n            org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry());\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:292","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.NameConflictTreeWalk.next()) {\n    org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTree(0, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTree(1, org.eclipse.jgit.dircache.DirCacheBuildIterator.org.eclipse.jgit.dircache.DirCacheBuildIterator), org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTree(2, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator));\n    if (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isSubtree())\n        org.eclipse.jgit.treewalk.NameConflictTreeWalk.enterSubtree();\n    \n}"},"status":-2},{"failures":[0,5,2,3,4,1],"tindex":"430b5282-c858-11e4-a32a-f3a749cdead4","variableMapping":{"modeT":"cmp","modeO":"cmp"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:835","type":"CtIfImpl","sourcecode":"if (int == int)\n    return int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.PathFilterGroup:232","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-1},{"failures":[1,5,2,3,4,0],"tindex":"430b5283-c858-11e4-a32a-07d2cc973160","variableMapping":{"pattern":"startPointOrHead"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:105","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + (java.lang.String);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:284","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId == null)\n    throw new org.eclipse.jgit.api.errors.RefNotFoundException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1},{"failures":[1,5,0,2,3,4,94],"tindex":"430b5284-c858-11e4-a32a-4910e29f030c","variableMapping":{"value":"capacity"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:178","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 10"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:146","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,5,0,1,2,3,4],"tindex":"430b5285-c858-11e4-a32a-ed88b23f0615","variableMapping":{"cmp":"bi"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:393","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:263","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.Note != null)\n    int++;\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":56,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":105,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":107,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":31,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":69,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":97,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":82,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":90,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":40,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":93,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":29,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":85,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":6,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":55,"org.eclipse.jgit.transport.RefSpecTest.testMaster":81,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":96,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":52,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":35,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":39,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":33,"org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster":72,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags":89,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":53,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":32,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":64,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":102,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":15,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_9":61,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":14,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7":59,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_8":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":26,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":99,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":25,"org.eclipse.jgit.transport.RefSpecTest.testMasterMaster":77,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":28,"org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate":79,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":8,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1":58,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":46,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":18,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":67,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":54,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":49,"org.eclipse.jgit.transport.RefSpecTest.testForceMaster":73,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":100,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":48,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17":62,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks2":94,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull":83,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":9,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":7,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":95,"org.eclipse.jgit.transport.RefSpecTest.testSetSourceDestination":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":22,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":70,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":86,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":23,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":19,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":65,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":24,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":71,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":43,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob":17,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":16,"org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full":63,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":101,"org.eclipse.jgit.transport.RefSpecTest.testSetSource":80,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":66,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":47,"org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster":78,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":37,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":104,"org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon":84,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":42,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":98,"org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin":87,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination":75,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags":91,"org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":10,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":92}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
