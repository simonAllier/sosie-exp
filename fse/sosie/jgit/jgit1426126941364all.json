[{"failures":[],"tindex":"9ea71b29-c85e-11e4-9e9e-ef8656c3fd60","variableMapping":{"work":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:689","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:434","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.diff.RawText.org.eclipse.jgit.diff.RawText.isBinary(java.io.InputStream);\n} finally {\n    org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator.safeClose(java.io.InputStream);\n}"},"status":-2},{"failures":[],"tindex":"9ea8a1ca-c85e-11e4-9e9e-c9236e74f411","variableMapping":{"dstHash":"dstHash","dstIdx":"dstIdx","srcIdx":"srcIdx","srcHash":"dstHash","length":"srcIdx"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:236","type":"CtIfImpl","sourcecode":"if ((int == (long[].int)) || (int == (long[].int)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:231","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.common(long[], int, long[], int)"},"status":-2},{"failures":[],"tindex":"9ea8a1cb-c85e-11e4-9e9e-7376b5e30709","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:547","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException = new java.io.IOException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:241","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-2},{"failures":[],"tindex":"9ea8a1cc-c85e-11e4-9e9e-9fd8aa51c011","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.EditList:60","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.EditList org.eclipse.jgit.diff.EditList = new org.eclipse.jgit.diff.EditList(1)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:650","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.EditList org.eclipse.jgit.diff.EditList = org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.RawTextComparator, org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.diff.RawText, org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.diff.RawText)"},"status":-2},{"failures":[0,1],"tindex":"9ea8c8dd-c85e-11e4-9e9e-b1e97db3e272","variableMapping":{"e":"dce"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:669","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.smudgeRacilyClean()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:887","type":"CtIfImpl","sourcecode":"if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\nelse if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n    if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n    } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n    }\n} else {\n    org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n}"},"status":-1},{"failures":[2,3,4,5,6,0,1,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"9ea8c8de-c85e-11e4-9e9e-13dc28ead9c6","variableMapping":{"name":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:237","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:321","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return boolean;\n"},"status":-1},{"failures":[],"tindex":"9ea8c8df-c85e-11e4-9e9e-11988a4ba211","variableMapping":{"name":"pattern"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:208","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".pack\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:211","type":"CtIfImpl","sourcecode":"if (boolean && ((java.util.regex.Matcher.start()) < int)) {\n    final java.lang.String java.lang.String = java.util.regex.Matcher.group(0);\n    final java.lang.String java.lang.String = (java.lang.String.charAt(1)) + \"]\";\n    final int int = java.util.regex.Matcher.start();\n    final int int = java.lang.String.indexOf(java.lang.String, (int + 2));\n    if (int == (-1))\n        throw new org.eclipse.jgit.errors.NoClosingBracketException(int , java.lang.String , java.lang.String , java.lang.String);\n    \n    int = int + 2;\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[2,3,4,5,6,0,1,7,8,9,12,14,15,16,17],"tindex":"9ea8c8e0-c85e-11e4-9e9e-2bea769f2d3f","variableMapping":{"name":"message"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:207","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"pack-\".length())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:578","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"9ea9da51-c85e-11e4-9e9e-3b80686be54e","variableMapping":{"c":"last","last":"last"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:175","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:127","type":"CtTryImpl","sourcecode":"try {\n    for ( ;  ; ) {\n        final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.DateRevQueue.next();\n        if (org.eclipse.jgit.revwalk.RevCommit == null) {\n            org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.lib.ObjectReader.walkAdviceEnd();\n            return null;\n        } \n        final boolean boolean;\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) != 0)\n            boolean = false;\n        else {\n            if (org.eclipse.jgit.revwalk.filter.RevFilter.requiresCommitBody())\n                org.eclipse.jgit.revwalk.RevCommit.parseBody(org.eclipse.jgit.revwalk.RevWalk);\n            \n            boolean = org.eclipse.jgit.revwalk.filter.RevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit);\n        }\n        for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]) {\n            if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) != 0)\n                continue;\n            \n            if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) == 0)\n                org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk);\n            \n            org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.PendingGenerator.int;\n            org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit);\n        }\n        org.eclipse.jgit.revwalk.RevWalk.carryFlagsImpl(org.eclipse.jgit.revwalk.RevCommit);\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) != 0) {\n            if (org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(org.eclipse.jgit.revwalk.PendingGenerator.int)) {\n                final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.DateRevQueue.peek();\n                if ((org.eclipse.jgit.revwalk.RevCommit != null) && ((org.eclipse.jgit.revwalk.RevCommit.int) >= (org.eclipse.jgit.revwalk.RevCommit.int))) {\n                    int = org.eclipse.jgit.revwalk.PendingGenerator.int;\n                } else if ((--(int)) == 0)\n                    throw org.eclipse.jgit.errors.StopWalkException.org.eclipse.jgit.errors.StopWalkException;\n                \n            } else {\n                int = org.eclipse.jgit.revwalk.PendingGenerator.int;\n            }\n            if (boolean)\n                org.eclipse.jgit.revwalk.RevCommit.disposeBody();\n            \n            continue;\n        } \n        if (boolean)\n            return org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n        else if (boolean)\n            org.eclipse.jgit.revwalk.RevCommit.disposeBody();\n        \n    }\n} catch (org.eclipse.jgit.errors.StopWalkException org.eclipse.jgit.errors.StopWalkException) {\n    org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.lib.ObjectReader.walkAdviceEnd();\n    org.eclipse.jgit.revwalk.DateRevQueue.clear();\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"9eaa0162-c85e-11e4-9e9e-bbfa29609276","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:136","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":15,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":8,"org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink":19,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":9,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":17,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":6,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":3,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":5,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":7,"org.eclipse.jgit.util.HookTest.testRunHook":13,"org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit":10,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":4,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":1,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":14,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":12,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testFileModeSymLinkIsNotATree":18,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":0,"org.eclipse.jgit.util.HookTest.testFindHook":11,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":16,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
