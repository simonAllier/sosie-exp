[{"failures":[0,1,2,3,4,5],"tindex":"6c97d8fe-c87f-11e4-b9de-91c99767afd7","variableMapping":{"localCommit":"c","walk":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BranchTrackingStatus:96","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DepthWalk:200","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevObject)"},"status":-1},{"failures":[5,1,0,2,3,4],"tindex":"6c97d8ff-c87f-11e4-b9de-d9128a1c560f","variableMapping":{"p":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.TreeEntry:193","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Tree.setId(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:423","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Tree.ensureLoaded()"},"status":-1},{"failures":[2,3,4,5,0,1],"tindex":"6c97d900-c87f-11e4-b9de-6591a2acbfa0","variableMapping":{"e":"dcEntry"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:356","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n    throw new org.eclipse.jgit.errors.UnmergedPathException(org.eclipse.jgit.dircache.DirCacheEntry);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:790","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)"},"status":-1},{"failures":[],"tindex":"6c97d901-c87f-11e4-b9de-050c13974f74","variableMapping":{"p":"childCnt","tmp":"path","length":"entrySpan","octalBytes":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.FileMode:191","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = byte[][(int + int)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:354","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheEntry[][int];\n    if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n        throw new org.eclipse.jgit.errors.UnmergedPathException(org.eclipse.jgit.dircache.DirCacheEntry);\n    \n    final byte[] byte[] = org.eclipse.jgit.dircache.DirCacheEntry.byte[];\n    if (int < (int)) {\n        final org.eclipse.jgit.dircache.DirCacheTree org.eclipse.jgit.dircache.DirCacheTree = org.eclipse.jgit.dircache.DirCacheTree[][int];\n        if (org.eclipse.jgit.dircache.DirCacheTree.contains(byte[], int, byte[].int)) {\n            final int int = (int + (org.eclipse.jgit.dircache.DirCacheTree.nameLength())) + 1;\n            org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter);\n            int += org.eclipse.jgit.lib.TreeFormatter.org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.dircache.DirCacheTree.nameLength());\n            int += org.eclipse.jgit.dircache.DirCacheTree.int;\n            int++;\n            continue;\n        } \n    } \n    int += org.eclipse.jgit.lib.TreeFormatter.org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode(), ((byte[].int) - int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"6c97d902-c87f-11e4-b9de-bbbb05abfe41","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:767","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:314","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout()"},"status":-2},{"failures":[5,6,0,2,3,4,1],"tindex":"6c97d903-c87f-11e4-b9de-2bd64a240f7f","variableMapping":{"s":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:137","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(',');\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.MissingBundlePrerequisiteException:62","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> : java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.entrySet()) {\n    java.lang.StringBuilder.append(\"\\n  \");\n    java.lang.StringBuilder.append(java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getKey().name());\n    if ((java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getValue()) != null)\n        java.lang.StringBuilder.append(\" \").append(java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getValue());\n    \n}"},"status":-1},{"failures":[],"tindex":"6c97d904-c87f-11e4-b9de-495d5170fe63","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportLocal:200","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.transport.TransportLocal.ForkLocalPushConnection()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:402","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.TransportHttp.isSmartHttp(org.eclipse.jgit.transport.http.HttpConnection, java.lang.String)) {\n    org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(java.io.InputStream, java.lang.String);\n    return new org.eclipse.jgit.transport.TransportHttp.SmartHttpPushConnection(java.io.InputStream);\n} else if (!(boolean)) {\n    final java.lang.String java.lang.String = org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n    throw new org.eclipse.jgit.errors.NotSupportedException(java.lang.String);\n} else {\n    final java.lang.String java.lang.String = org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n    throw new org.eclipse.jgit.errors.NotSupportedException(java.lang.String);\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,5,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,0,1,82,83,84,85,86,87,88,2,3,4,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"6c980015-c87f-11e4-b9de-7f63c1874007","variableMapping":{"uri":"uri","local":"local"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:127","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.transport.TransportGitSsh(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.transport.URIish)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:560","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String))\n    return org.eclipse.jgit.transport.TransportProtocol.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"6c980016-c87f-11e4-b9de-7b865b7f5cef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:1197","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"6c980017-c87f-11e4-b9de-55e17ff6790c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:435","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":99,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":59,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":80,"org.eclipse.jgit.api.FetchCommandTest.testFetch":73,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":69,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":66,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":21,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":106,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":45,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":104,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":25,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":65,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":13,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":50,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":71,"org.eclipse.jgit.api.PushCommandTest.testPush":29,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":41,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":94,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":88,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":28,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":86,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":84,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":47,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":22,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":62,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":101,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":24,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":107,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":44,"org.eclipse.jgit.api.GitConstructionTest.testWrap":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":98,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":33,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":52,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":81,"org.eclipse.jgit.api.GitConstructionTest.testOpen":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":72,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":68,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":26,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":108,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":12,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":58,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":55,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":74,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":77,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":83,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":100,"org.eclipse.jgit.api.GitConstructionTest.testClose":14,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":30,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":57,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":39,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":23,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":27,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":105,"org.eclipse.jgit.transport.TestProtocolTest.testPush":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":43,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":79,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":91,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":60,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":90,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":31,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":78,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":17,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":61,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":87,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":46,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":93,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":89,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":109,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":10,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":35}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
