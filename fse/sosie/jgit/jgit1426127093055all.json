[{"failures":[],"tindex":"f76c5303-c85e-11e4-a3a3-af5e6e847829","variableMapping":{"tmp":"dst","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:298","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(java.io.File)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:608","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.mkdir(java.io.File.getParentFile(), true)"},"status":-2},{"failures":[],"tindex":"f76c5304-c85e-11e4-a3a3-c79948564432","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:996","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.NoWorkTreeException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS_POSIX_Java6:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error(java.lang.reflect.InvocationTargetException)"},"status":-2},{"failures":[],"tindex":"f76c5305-c85e-11e4-a3a3-ad52548503d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:547","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException = new java.io.IOException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:169","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-2},{"failures":[],"tindex":"f76c5306-c85e-11e4-a3a3-1b090f83930c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteParser:156","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:183","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"f76c5307-c85e-11e4-a3a3-a13f6be5a35e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:792","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot)"},"status":-2},{"failures":[],"tindex":"f76c5308-c85e-11e4-a3a3-0fa808418bdd","variableMapping":{"org.eclipse.jgit.util.Base64.ENC":"org.eclipse.jgit.patch.FileHeader.RENAME_TO","org.eclipse.jgit.util.Base64.DEC":"org.eclipse.jgit.patch.FileHeader.RENAME_NEW"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.Base64:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 64 ; int++)\n    org.eclipse.jgit.util.Base64.byte[][org.eclipse.jgit.util.Base64.byte[][int]] = ((byte)(int));"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:406","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n    break;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f76c5309-c85e-11e4-a3a3-d9267b685e7d","variableMapping":{"b":"toAdd","this":"toAdd"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:581","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.transport.URIish.(org.eclipse.jgit.transport.URIish.eq(org.eclipse.jgit.transport.URIish.getPass(), org.eclipse.jgit.transport.URIish.getPass())))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:363","type":"CtReturnImpl","sourcecode":"return java.util.List<org.eclipse.jgit.transport.URIish>.add(org.eclipse.jgit.transport.URIish)"},"status":-2},{"failures":[],"tindex":"f76c530a-c85e-11e4-a3a3-e76930453f6a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteParser:156","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:872","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"f76c530b-c85e-11e4-a3a3-212fc1bdaa6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:388","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(org.eclipse.jgit.lib.Constants.java.nio.charset.Charset, byte[], int, (int - 1))"},"status":-2},{"failures":[],"tindex":"f76c530c-c85e-11e4-a3a3-1dccab68f9a1","variableMapping":{"sb":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:246","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:259","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((((\"DELTA( BASE=\" + long) + \" RESULT=\") + long) + \" )\\n\"))"},"status":-2},{"failureDictionary":{}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
