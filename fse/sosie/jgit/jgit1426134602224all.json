[{"failures":[],"tindex":"7392a51c-c870-11e4-94eb-c9c066fb6d34","variableMapping":{"singleByteBuffer":"buf"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:547","type":"CtIfImpl","sourcecode":"if ((byte[]) == null)\n    byte[] = new byte[1];\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.SimpleDataInput:73","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte[], 0, 8)"},"status":-2},{"failures":[],"tindex":"7392a51d-c870-11e4-94eb-41b796fee8e1","variableMapping":{"data":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevObject:170","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(' ')"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"7392a51e-c870-11e4-94eb-fb498d726941","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:447","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.transport.UploadPack.RequestPolicy) {\n    case ADVERTISED :\n    default :\n        org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.AdvertisedRequestValidator();\n        break;\n    case REACHABLE_COMMIT :\n        org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.ReachableCommitRequestValidator();\n        break;\n    case TIP :\n        org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.TipRequestValidator();\n        break;\n    case REACHABLE_COMMIT_TIP :\n        org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.ReachableCommitTipRequestValidator();\n        break;\n    case ANY :\n        org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.AnyRequestValidator();\n        break;\n}"},"status":-1},{"failures":[],"tindex":"7392a51f-c870-11e4-94eb-e12022b39cfa","variableMapping":{"org.eclipse.jgit.notes.LeafBucket.MAX_SIZE":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:184","type":"CtReturnImpl","sourcecode":"return 1 + (org.eclipse.jgit.notes.LeafBucket.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:423","type":"CtReturnImpl","sourcecode":"return ++int"},"status":-2},{"failures":[1,2,3,4,6,7,8,9,10,11,5,0],"tindex":"7392a520-c870-11e4-94eb-279e24981ac6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:430","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null) {\n    return org.eclipse.jgit.util.TemporaryBuffer.toByteArray();\n} "},"status":-1},{"failures":[5,1,2,3,4,0],"tindex":"7392a521-c870-11e4-94eb-8df5d363d1c9","variableMapping":{"sb":"b"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:246","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:455","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((java.lang.StringBuilder.indexOf(\"?\")) < 0 ? '?' : '&'))"},"status":-1},{"failures":[4,1,2,3,5,0],"tindex":"7392a522-c870-11e4-94eb-b38fd5d1cd6e","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1205","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.reset(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1422","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)\n    org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.ObjectId).org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[];"},"status":-1},{"failures":[5,12,13,1,2,3,0,4],"tindex":"7392a523-c870-11e4-94eb-0b5ba13d7ffd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:281","type":"CtIfImpl","sourcecode":"if ((int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])) > 0) {\n    if (((int = org.eclipse.jgit.lib.ObjectChecker.personIdent(byte[], int)) < 0) || ((byte[][int++]) != '\\n'))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid tagger\");\n    \n} "},"status":-1},{"failures":[1,2,3,0,4,5],"tindex":"7392a524-c870-11e4-94eb-9952b8562749","variableMapping":{"rw":"rw"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:176","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:445","type":"CtIfImpl","sourcecode":"if ((int + 1) < (char[].int)) {\n    switch (char[][(int + 1)]) {\n        case '0' :\n        case '1' :\n        case '2' :\n        case '3' :\n        case '4' :\n        case '5' :\n        case '6' :\n        case '7' :\n        case '8' :\n        case '9' :\n            int int;\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n            for (int = int + 1 ; int < (char[].int) ; ++int) {\n                if (!java.lang.Character.(java.lang.Character.isDigit(char[][int])))\n                    break;\n                \n            }\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n            int int;\n            try {\n                int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n            } catch (java.lang.NumberFormatException java.lang.NumberFormatException) {\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n            }\n            if (int != 0) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n                \n            } \n            int = int - 1;\n            int = int;\n            break;\n        case '{' :\n            int int;\n            java.lang.String java.lang.String = null;\n            for (int = int + 2 ; int < (char[].int) ; ++int) {\n                if ((char[][int]) == '}') {\n                    java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                    break;\n                } \n            }\n            int = int;\n            if (java.lang.String != null)\n                if (java.lang.String.equals(\"tree\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"commit\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"blob\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                    if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                    \n                } else if (java.lang.String.equals(\"\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                } else\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n            else\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n            \n            int = int;\n            break;\n        default :\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                \n            } else\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n            \n    }\n} else {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n        if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n            org.eclipse.jgit.revwalk.RevObject = null;\n        else\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n        \n    } else\n        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n}"},"status":-1},{"failures":[1,2,3,4,5,0],"tindex":"7392a525-c870-11e4-94eb-a7be0c4b1e45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:471","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(org.eclipse.jgit.util.HttpSupport.java.lang.String, (java.lang.String + \", */*\"))"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_Copy":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.util.TemporaryBufferTest.testOneByte":6,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_SingleWrite":10,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3":13,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlock_BulkWrite":8,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1":12,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_BulkWrite":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.util.TemporaryBufferTest.testEmpty":7}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
