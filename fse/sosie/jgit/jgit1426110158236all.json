[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"8a314a9b-c837-11e4-8e5d-65a74c72cb79","variableMapping":{"want":"r","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:292","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchProcess.removeTrackingRefUpdate(org.eclipse.jgit.lib.Ref.getObjectId())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref)"},"status":-1},{"failures":[],"tindex":"8a3171ac-c837-11e4-8e5d-718125bf7cb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:785","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdSubclassMap<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.transport.PackParser.DeltaChain)"},"status":-2},{"failures":[],"tindex":"8a33bb9d-c837-11e4-8e5d-89afe8df5d82","variableMapping":{"b":"obj"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1286","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1047","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[0,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,3,4,9],"tindex":"8a34cd0e-c837-11e4-8e5d-2d71392b17c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1360","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String));\n    org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n    try {\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n    } catch (org.eclipse.jgit.errors.CheckoutConflictException org.eclipse.jgit.errors.CheckoutConflictException) {\n        throw new org.eclipse.jgit.api.errors.CheckoutConflictException(org.eclipse.jgit.dircache.DirCacheCheckout.getConflicts() , org.eclipse.jgit.errors.CheckoutConflictException);\n    }\n    org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String, true);\n    org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.lib.RefUpdate.setRefLogMessage((((\"checkout: moving from \" + org.eclipse.jgit.lib.Repository.(org.eclipse.jgit.lib.Repository.shortenRefName(java.lang.String))) + \" to \") + (org.eclipse.jgit.revwalk.RevCommit.getName())), false);\n    org.eclipse.jgit.lib.RefUpdate.Result org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.forceUpdate();\n    switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n        case FAST_FORWARD :\n        case NO_CHANGE :\n        case FORCED :\n            break;\n        default :\n            throw new java.io.IOException(\"Could not rewind to upstream commit\");\n    }\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n    org.eclipse.jgit.lib.ProgressMonitor.endTask();\n}"},"status":-1},{"failures":[],"tindex":"8a34cd0f-c837-11e4-8e5d-13eb21920411","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:238","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"status":-2},{"failures":[4,3,0,1,2,9],"tindex":"8a34cd10-c837-11e4-8e5d-b7021520e142","variableMapping":{"tw":"treeWalk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:125","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.TreeWalk.isSubtree()) {\n    org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:351","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, 0)"},"status":-1},{"failures":[],"tindex":"8a34cd11-c837-11e4-8e5d-b5088e552d92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:173","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(org.eclipse.jgit.dircache.DirCacheEntry[], 0, org.eclipse.jgit.dircache.DirCacheEntry[], 0, int)"},"status":-2},{"failures":[],"tindex":"8a34cd12-c837-11e4-8e5d-1b83ade190b6","variableMapping":{"r":"n","resultTail":"n","queueNext":"queueNext"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:800","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:589","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate"},"status":-2},{"failures":[3,4,9,0,1,2],"tindex":"8a34cd13-c837-11e4-8e5d-f75a31537e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.BlockList:151","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.util.BlockList<T>.int) == 0)\n    return ;\n"},"status":-1},{"failures":[],"tindex":"8a34cd14-c837-11e4-8e5d-5d80d4453ebc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:198","type":"CtReturnImpl","sourcecode":"return 21"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:533","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":45,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":50,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":49,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":19,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":59,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":57,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":53,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":34,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":44,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":22,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":41,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":33,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":32,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":48,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":27,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":36,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":46,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":42,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":29,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
