[{"failures":[],"tindex":"dc5925a8-c831-11e4-bbde-1581116c2e81","variableMapping":{"r":"length"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:422","type":"CtIfImpl","sourcecode":"if (boolean && (org.eclipse.jgit.internal.storage.file.PackFile.idx().hasCRC32Support())) {\n    long = org.eclipse.jgit.internal.storage.file.PackFile.idx().findCRC32(org.eclipse.jgit.internal.storage.file.LocalObjectToPack);\n    if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n        org.eclipse.jgit.internal.storage.file.ByteArrayWindow.crc32(java.util.zip.CRC32, long, ((int)(long)));\n    } else {\n        long long = long;\n        long long = long;\n        while (long > 0) {\n            final int int = java.lang.Math.((int)(java.lang.Math.min(long, byte[].int)));\n            org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n            java.util.zip.CRC32.update(byte[], 0, int);\n            long += int;\n            long -= int;\n        }\n    }\n    if ((java.util.zip.CRC32.getValue()) != long) {\n        org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long);\n        throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long), org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()));\n    } \n} else if (boolean) {\n    java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n    byte[] byte[] = new byte[1024];\n    if (org.eclipse.jgit.internal.storage.file.ByteArrayWindow != null) {\n        org.eclipse.jgit.internal.storage.file.ByteArrayWindow.check(java.util.zip.Inflater, byte[], long, ((int)(long)));\n    } else {\n        long long = long;\n        long long = long;\n        while (long > 0) {\n            final int int = java.lang.Math.((int)(java.lang.Math.min(long, byte[].int)));\n            org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n            java.util.zip.CRC32.update(byte[], 0, int);\n            java.util.zip.Inflater.setInput(byte[], 0, int);\n            while ((java.util.zip.Inflater.inflate(byte[], 0, byte[].int)) > 0)\n                continue;\n            long += int;\n            long -= int;\n        }\n    }\n    if ((!(java.util.zip.Inflater.finished())) || ((java.util.zip.Inflater.getBytesRead()) != long)) {\n        org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long);\n        throw new java.io.EOFException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long)));\n    } \n    long = java.util.zip.CRC32.getValue();\n} else {\n    long = -1;\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"dc5be4c9-c831-11e4-bbde-751a01ed2291","variableMapping":{"tryRebase":"needsCommit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1218","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:955","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand = new org.eclipse.jgit.api.Git(org.eclipse.jgit.lib.Repository).commit();\n    org.eclipse.jgit.api.CommitCommand.setMessage(org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String));\n    org.eclipse.jgit.api.CommitCommand.setAuthor(org.eclipse.jgit.api.RebaseCommand.parseAuthor());\n    return org.eclipse.jgit.api.CommitCommand.call();\n} "},"status":-1},{"failures":[0,2,1,3,4,5],"tindex":"dc5c0bda-c831-11e4-bbde-f37a12133d5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1309","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.InvalidPathException.initCause(org.eclipse.jgit.errors.CorruptObjectException)"},"status":-1},{"failures":[],"tindex":"dc5c0bdb-c831-11e4-bbde-2d5718c2cc68","variableMapping":{"r":"deleted","in":"deleted"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:205","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry : java.util.List<org.eclipse.jgit.diff.DiffEntry>) {\n    if (org.eclipse.jgit.diff.DiffEntry != null)\n        java.util.ArrayList<org.eclipse.jgit.diff.DiffEntry>.add(org.eclipse.jgit.diff.DiffEntry);\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RenameDetector:633","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.ChangeType) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))\n    java.util.List<org.eclipse.jgit.diff.DiffEntry>.add(org.eclipse.jgit.diff.DiffEntry);\n"},"status":-2},{"failures":[0,2,1,3,4,5],"tindex":"dc5e07ac-c831-11e4-bbde-73e41b990271","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:229","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackedObjectInfo.setCRC(((int)(java.util.zip.CRC32.getValue())))"},"status":-1},{"failures":[],"tindex":"dc5e07ad-c831-11e4-bbde-7fae5bc95b92","variableMapping":{"name":"oldPath"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:750","type":"CtIfImpl","sourcecode":"if ((\".\".equals(java.lang.String)) || (\"..\".equals(java.lang.String)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffEntry:508","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.diff.DiffEntry.ChangeType) {\n    case ADD :\n        java.lang.StringBuilder.append(java.lang.String);\n        break;\n    case COPY :\n        java.lang.StringBuilder.append((((java.lang.String) + \"->\") + (java.lang.String)));\n        break;\n    case DELETE :\n        java.lang.StringBuilder.append(java.lang.String);\n        break;\n    case MODIFY :\n        java.lang.StringBuilder.append(java.lang.String);\n        break;\n    case RENAME :\n        java.lang.StringBuilder.append((((java.lang.String) + \"->\") + (java.lang.String)));\n        break;\n}"},"status":-2},{"failures":[],"tindex":"dc5e07ae-c831-11e4-bbde-a9bd82e19e85","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:217","type":"CtReturnImpl","sourcecode":"return \"DIRTY\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawSubStringPattern:136","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawSubStringPattern.pattern()"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"dc5e07af-c831-11e4-bbde-033b7b8b5427","variableMapping":{"data":"buf","length":"length","openByteCount":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.DeltaBaseCache:112","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[].int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.BinaryHunk:121","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.BinaryHunk.byte[].int)), null)"},"status":-1},{"failures":[2,3,4,5,0,1,7],"tindex":"dc5e07b0-c831-11e4-bbde-fbdc6628e25b","variableMapping":{"pattern":"branchName"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:109","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"^\"))) && (!(java.lang.String.startsWith(\".*\"))))\n    java.lang.String = \".*\" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:258","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, ((org.eclipse.jgit.lib.Constants.java.lang.String) + java.lang.String))"},"status":-1},{"failures":[],"tindex":"dc5e07b1-c831-11e4-bbde-b5c6738448e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS:631","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.SymlinksNotSupportedException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":7}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
