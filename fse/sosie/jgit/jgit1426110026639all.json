[{"failures":[],"tindex":"3b072d7c-c837-11e4-8c18-edb309b702b1","variableMapping":{"org.eclipse.jgit.transport.TransportGitAnon.GIT_PORT":"levelOne"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitAnon:96","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.TransportGitAnon.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:135","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"3b072d7d-c837-11e4-8c18-331f181bdf00","variableMapping":{"pathIdx":"pattern","base":"pattern"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkPushConnection:251","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (\"pack/\" + java.lang.String) + \".idx\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:123","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.regex.Matcher.replaceFirst(\"\")"},"status":-1},{"failures":[0,1,2,3,4,22],"tindex":"3b072d7e-c837-11e4-8c18-33cf213061dd","variableMapping":{"this":"generator"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:738","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:155","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.release()"},"status":-1},{"failures":[],"tindex":"3b072d7f-c837-11e4-8c18-bf719153a016","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:295","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndex org.eclipse.jgit.internal.storage.file.PackIndex = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:253","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndex org.eclipse.jgit.internal.storage.file.PackIndex"},"status":-2},{"failures":[],"tindex":"3b072d80-c837-11e4-8c18-cd4a55b85e78","variableMapping":{"this":"pm"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:249","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet != null) && (java.util.BitSet.get(int))) {\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"3b072d81-c837-11e4-8c18-8dd1d2bb1e66","variableMapping":{"this":"progress"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:594","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.update(1)"},"status":-2},{"failures":[3,23,24,25,26,27,28,29,30,31,32,33,34,0,1,2,22,35,36,37,38,39,40,41,42,43,44,45,4,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"3b072d82-c837-11e4-8c18-0f4a6a469c4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:295","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.transport.ReceiveCommand org.eclipse.jgit.transport.ReceiveCommand : java.util.List<org.eclipse.jgit.transport.ReceiveCommand>) {\n    try {\n        if ((org.eclipse.jgit.transport.ReceiveCommand.getResult()) == (org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result)) {\n            org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk);\n            org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand);\n            SWITCH : switch (org.eclipse.jgit.transport.ReceiveCommand.getType()) {\n                case DELETE :\n                    break;\n                case UPDATE :\n                case UPDATE_NONFASTFORWARD :\n                    org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand);\n                    org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk));\n                    break;\n                case CREATE :\n                    for (java.lang.String java.lang.String : org.eclipse.jgit.lib.BatchRefUpdate.org.eclipse.jgit.lib.BatchRefUpdate.getPrefixes(org.eclipse.jgit.transport.ReceiveCommand.getRefName())) {\n                        if (java.util.Collection<java.lang.String>.contains(java.lang.String)) {\n                            org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result);\n                            break SWITCH;\n                        } \n                    }\n                    if (java.util.Collection<java.lang.String>.contains(org.eclipse.jgit.transport.ReceiveCommand.getRefName())) {\n                        org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result);\n                        break SWITCH;\n                    } \n                    org.eclipse.jgit.lib.RefUpdate.setCheckConflicting(false);\n                    org.eclipse.jgit.lib.BatchRefUpdate.org.eclipse.jgit.lib.BatchRefUpdate.addRefToPrefixes(java.util.Collection<java.lang.String>, org.eclipse.jgit.transport.ReceiveCommand.getRefName());\n                    java.util.Collection<java.lang.String>.add(org.eclipse.jgit.transport.ReceiveCommand.getRefName());\n                    org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk));\n            }\n        } \n    } catch (java.io.IOException java.io.IOException) {\n        org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result, java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.IOException.getMessage()));\n    } finally {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n}"},"status":-1},{"failures":[0,1,2,3,22,4],"tindex":"3b072d83-c837-11e4-8c18-e778e3d0155b","variableMapping":{"eIdx":"index"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:882","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = -(int + 1);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.BlockList:128","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int) <= int))\n    throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.valueOf(int));\n"},"status":-1},{"failures":[],"tindex":"3b072d84-c837-11e4-8c18-a52126ed3e78","variableMapping":{"a":"subsection","b":"subsection","bDirLen":"insertPosition","aDirLen":"insertPosition","dirSim":"insertPosition"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:347","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int))))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:920","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    final org.eclipse.jgit.lib.ConfigLine org.eclipse.jgit.lib.ConfigLine = new org.eclipse.jgit.lib.ConfigLine();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String;\n    java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n    int = java.util.List<org.eclipse.jgit.lib.ConfigLine>.size();\n} "},"status":-2},{"failures":[0,1,2,4,3,22],"tindex":"3b072d85-c837-11e4-8c18-0f7636abedfc","variableMapping":{"index":"index"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:426","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackIndex> = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:246","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackIndex> = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackIndex>"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":60,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":49,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":45,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":65,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testLowerGroupCase5":7,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testWordroupCase5":19,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase4":12,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":47,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":46,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":53,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCntrlGroupCase0":8,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":31,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":62,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":41,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase3":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":61,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":57,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase5":16,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":22,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":27,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCombinedRangesInOneGroupCase1":5,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUpperGroupCase0":15,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":52,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testXDigitGroupCase7":18,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":66,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":43,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":55,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":30,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":25,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":33,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpaceGroupCase4":11,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":29,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase3":10,"org.eclipse.jgit.transport.TestProtocolTest.testPush":64,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":23,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":26,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":40,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":50,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":32,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testMixedGroupCase9":6,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":28,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":38,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":54,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":59,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testBlankGroupCase4":17,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testInversedGroupCase0":9,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleGroupRangeCase0":13,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":39,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":24,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":35,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":56,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":42,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase0":20,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":63,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testTwoRangesInOneGroupCase3":21}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
