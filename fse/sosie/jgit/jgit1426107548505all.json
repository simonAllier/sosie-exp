[{"failures":[],"tindex":"76231271-c831-11e4-8e41-21e8c57a312b","variableMapping":{"cmp":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:393","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:364","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = long[][int];\n    if (long != 0) {\n        int int = org.eclipse.jgit.diff.SimilarityIndex.slot(org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long));\n        while ((long[][int]) != 0)\n            if ((++int) >= (long[].int))\n                int = 0;\n            \n        long[][int] = long;\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"76231272-c831-11e4-8e41-7567f4c60be0","variableMapping":{"minusGroups":"paths"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:369","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.add(\"notdefault\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleInitCommand:90","type":"CtInvocationImpl","sourcecode":"java.util.Collection<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[0,3,4,5,2,1],"tindex":"76231273-c831-11e4-8e41-174c592da8a2","variableMapping":{"cnt":"pCnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:145","type":"CtIfImpl","sourcecode":"if ((int) < 1)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:692","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.RenameDetector) != null) {\n    org.eclipse.jgit.diff.DiffEntry[] = new org.eclipse.jgit.diff.DiffEntry[int];\n    for (int int = 0 ; int < int ; int++) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.blame.Candidate.getParent(int);\n        if ((org.eclipse.jgit.lib.ObjectId[] != null) && ((org.eclipse.jgit.lib.ObjectId[][int]) != null))\n            continue;\n        \n        org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.treewalk.filter.PathFilter);\n        if (org.eclipse.jgit.diff.DiffEntry == null)\n            continue;\n        \n        if (org.eclipse.jgit.blame.Candidate instanceof org.eclipse.jgit.blame.Candidate.ReverseCandidate) {\n            if (org.eclipse.jgit.lib.ObjectId[] == null)\n                org.eclipse.jgit.lib.ObjectId[] = new org.eclipse.jgit.lib.ObjectId[int];\n            \n            org.eclipse.jgit.lib.ObjectId[][int] = org.eclipse.jgit.diff.DiffEntry.getOldId().toObjectId();\n        } else if (0 == (org.eclipse.jgit.diff.DiffEntry.getOldId().prefixCompare(org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.lib.ObjectId))) {\n            org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.treewalk.filter.PathFilter = org.eclipse.jgit.treewalk.filter.PathFilter.org.eclipse.jgit.treewalk.filter.PathFilter.create(org.eclipse.jgit.diff.DiffEntry.getOldPath());\n            return org.eclipse.jgit.blame.BlameGenerator.blameEntireRegionOnParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit);\n        } \n        org.eclipse.jgit.diff.DiffEntry[][int] = org.eclipse.jgit.diff.DiffEntry;\n    }\n} "},"status":-1},{"failures":[0,1,3,4,5,2],"tindex":"76231274-c831-11e4-8e41-2dfd4d79c67c","variableMapping":{"cfg":"modulesConfig"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:682","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.load()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:200","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.save()"},"status":-1},{"failures":[6,7,8,9,10,11,0,12,13,14,15,16,17,2,1,18,3,4,5],"tindex":"76231275-c831-11e4-8e41-297589c9fc9d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteParser:156","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.EolCanonicalizingInputStream:189","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"76231276-c831-11e4-8e41-5396cfc06113","variableMapping":{"blkEnd":"ptr","end":"ptr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:375","type":"CtIfImpl","sourcecode":"if (int <= int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:235","type":"CtIfImpl","sourcecode":"if ((int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])) < 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"no tree header\");\n"},"status":-2},{"failures":[],"tindex":"76231277-c831-11e4-8e41-8f4827f5f6dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.SymbolicRef:110","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:286","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.FetchResult.getAdvertisedRef(((org.eclipse.jgit.lib.Constants.java.lang.String) + (org.eclipse.jgit.lib.Constants.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"76231278-c831-11e4-8e41-cdb616b0ce58","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:767","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:314","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout()"},"status":-2},{"failures":[],"tindex":"76231279-c831-11e4-8e41-2df6e0848856","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:101","type":"CtReturnImpl","sourcecode":"return 10"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:114","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.dircache.DirCacheEntry.getStage()) - (org.eclipse.jgit.dircache.DirCacheEntry.getStage())"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"7623127a-c831-11e4-8e41-47b4f8d491d2","variableMapping":{"ru":"ru","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceiveCommand:317","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId().equals(org.eclipse.jgit.transport.ReceiveCommand.getOldId()))) {\n    org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.transport.ReceiveCommand.getOldId());\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceiveCommand:333","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.transport.ReceiveCommand.getNewId())"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDetect":10,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDontDetect":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCR":8,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":12,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":18,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLF":9,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":17,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCRLF":6,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":15,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLFCR":7,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":14,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":16}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
