[{"failures":[0,1,2,3,4,5],"tindex":"11d4592b-c852-11e4-8691-81800c0718d2","variableMapping":{"this":"db"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:827","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getRefDatabase().close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.close()"},"status":-1},{"failures":[5,0,2,3,4,1],"tindex":"11d4803c-c852-11e4-8691-d5e91dbdfcbc","variableMapping":{"ref":"currentTask"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashCreateCommand:207","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:225","type":"CtIfImpl","sourcecode":"if (java.util.regex.Matcher.matches()) {\n    final java.lang.String java.lang.String = java.util.regex.Matcher.group(1);\n    if (!(java.lang.String.equals(java.lang.String))) {\n        java.lang.String = java.lang.String;\n        int = 0;\n        org.eclipse.jgit.transport.SideBandInputStream.beginTask(org.eclipse.jgit.lib.ProgressMonitor.int);\n    } \n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.util.regex.Matcher.group(2));\n    org.eclipse.jgit.lib.ProgressMonitor.update((int - (int)));\n    int = int;\n    return ;\n} "},"status":-1},{"failures":[2,3,4,0,5,1],"tindex":"11d4803d-c852-11e4-8691-e330fb41738d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:680","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n    try {\n        org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.Ref.getObjectId()));\n    } catch (java.io.IOException java.io.IOException) {\n        throw new org.eclipse.jgit.errors.TransportException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.Ref.getName()) , java.io.IOException);\n    }\n}"},"status":-1},{"failures":[6,7,8,9,10,2,3,4,5,11,1,0,12,13,14,15],"tindex":"11d4803e-c852-11e4-8691-0f5e768b6556","variableMapping":{"packFile":"tmpPack","keepFile":"tmpPack"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:239","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    java.io.File = new java.io.File(((java.io.File.getPath()) + \".keep\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:814","type":"CtIfImpl","sourcecode":"if ((java.io.File != null) && (java.io.File.exists()))\n    java.io.File.delete();\n"},"status":-1},{"failures":[],"tindex":"11d4803f-c852-11e4-8691-238389cdb756","variableMapping":{"a":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFlagFilter:117","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.revwalk.filter.RevFlagFilter.HasAny(new org.eclipse.jgit.revwalk.RevFlagSet(org.eclipse.jgit.revwalk.RevFlagSet))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.RevFlagFilter:67","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.revwalk.filter.RevFlagFilter.HasAll(org.eclipse.jgit.revwalk.RevFlagSet)"},"status":-2},{"failures":[0,2,3,4,5,1],"tindex":"11d48040-c852-11e4-8691-db4334b91348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1038","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.ArrayList<java.lang.String>) {\n    java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String);\n    if (!(java.io.File.delete()))\n        throw new org.eclipse.jgit.errors.CheckoutConflictException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath()));\n    \n    org.eclipse.jgit.dircache.DirCacheCheckout.removeEmptyParents(java.io.File);\n}"},"status":-1},{"failures":[],"tindex":"11d48041-c852-11e4-8691-e3b2fe45331c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddCommand:155","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:1126","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.transport.RefSpec.getSource()"},"status":-2},{"failures":[],"tindex":"11d48042-c852-11e4-8691-832f0772dc68","variableMapping":{"tableSize":"n","ptr":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:426","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:200","type":"CtIfImpl","sourcecode":"if ((int - int) < 6) {\n    int = int;\n    continue;\n} "},"status":-2},{"failures":[5,2,3,4,1,0],"tindex":"11d48043-c852-11e4-8691-733093fffcf7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:236","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"no tree header\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:456","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.IndexWriteException()"},"status":-1},{"failures":[2,3,4,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,0,5,59,60,61,1,62,63,64,65,66,67],"tindex":"11d48044-c852-11e4-8691-851e54cc1747","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:93","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    int = int;\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    int int = int;\n    int int = int - 2;\n    if ((int >= 0) && ((byte[][int]) == '\\r'))\n        int--;\n    \n    if ((byte[][int]) == '#') {\n        if (boolean)\n            org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int);\n        \n    } else {\n        int = org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.nextParsableToken(byte[], int, int);\n        if (int == (-1)) {\n            if (boolean)\n                java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(new org.eclipse.jgit.lib.RebaseTodoLine(org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (1 + int))));\n            \n            continue;\n        } \n        org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine = org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int);\n        if (org.eclipse.jgit.lib.RebaseTodoLine == null)\n            continue;\n        \n        java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(org.eclipse.jgit.lib.RebaseTodoLine);\n    }\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":6,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":14,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":53,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":48,"org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo":45,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":47,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":57,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":7,"org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo":54,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":61,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":59,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":56,"org.eclipse.jgit.api.GitConstructionTest.testClose":15,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":51,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":31,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":41,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":32,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":11,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":29,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":27,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":67,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":66,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":40,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":19,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":22,"org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":65,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":39,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":60,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":62}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
