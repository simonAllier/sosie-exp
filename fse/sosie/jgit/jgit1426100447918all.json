[{"failures":[],"tindex":"eda8d188-c820-11e4-92fd-cfac36879fbc","variableMapping":{"newTree":"t"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.DiffCommand:203","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:935","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)"},"status":-2},{"failures":[],"tindex":"eda8d189-c820-11e4-92fd-f1d676413df8","variableMapping":{"len":"flags"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:280","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) != int) {\n    org.eclipse.jgit.revwalk.RevCommit.int |= int;\n    if ((org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]) != null)\n        org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit);\n    \n} "},"status":-2},{"failures":[],"tindex":"eda8d18a-c820-11e4-92fd-91d5277bcf67","variableMapping":{"c":"pos"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:1157","type":"CtIfImpl","sourcecode":"if ('=' == int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:145","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.toArray(int, org.eclipse.jgit.dircache.DirCacheEntry[], int, int)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"eda8d18b-c820-11e4-92fd-4d54e354c661","variableMapping":{"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.IS_SUPPORTED":"outNeedsEnd"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:104","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:325","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"eda8d18c-c820-11e4-92fd-878c11123bdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:237","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((int) - (int)))"},"status":-2},{"failures":[1,2,3,0,4,5],"tindex":"eda8f89d-c820-11e4-92fd-5f0010932086","variableMapping":{"sz":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:334","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 4"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:1056","type":"CtAssignmentImpl","sourcecode":"int = (byte[][int++]) & 255"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"eda8f89e-c820-11e4-92fd-c18a2f3f18d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeConfig:146","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:199","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache.commit()"},"status":-1},{"failures":[0,1,2,3,4,18,5],"tindex":"eda8f89f-c820-11e4-92fd-cf518bb3ddb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:676","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.api.CheckoutCommand.Stage) != null) && (!org.eclipse.jgit.api.CheckoutCommand.(isCheckoutIndex())))\n    throw new java.lang.IllegalStateException((\"Checking out ours/theirs is only possible when checking out index, \" + \"not when switching branches.\"));\n"},"status":-1},{"failures":[],"tindex":"eda8f8a0-c820-11e4-92fd-c7587b3eb9a3","variableMapping":{"this":"list"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.LongList:57","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.LongList.this(10)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:1114","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.LongList = org.eclipse.jgit.util.LongList"},"status":-2},{"failures":[19,20,21,1,2,3,0,5,4],"tindex":"eda8f8a1-c820-11e4-92fd-175c83bd6194","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:1086","type":"CtIfImpl","sourcecode":"if ((((org.eclipse.jgit.diff.DiffEntry.ChangeType == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType)) || (org.eclipse.jgit.diff.DiffEntry.ChangeType == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))) || (org.eclipse.jgit.diff.DiffEntry.ChangeType == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))) && (!(org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))) {\n    java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encodeASCII(\"old mode \"));\n    org.eclipse.jgit.lib.FileMode.copyTo(java.io.ByteArrayOutputStream);\n    java.io.ByteArrayOutputStream.write('\\n');\n    java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encodeASCII(\"new mode \"));\n    org.eclipse.jgit.lib.FileMode.copyTo(java.io.ByteArrayOutputStream);\n    java.io.ByteArrayOutputStream.write('\\n');\n} "},"status":-1},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":6,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":18,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":19,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":8,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":13,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":10,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":12,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":11,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":15,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine":21,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":14,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":7,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":9}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
