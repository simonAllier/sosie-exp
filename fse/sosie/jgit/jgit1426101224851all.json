[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"bd06cc32-c822-11e4-abee-23d3e05e3cab","variableMapping":{"tmp":"refDirUpdate"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:104","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.disableRefLog()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:525","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.setDetachingSymbolicRef()"},"status":-1},{"failures":[],"tindex":"bd06f343-c822-11e4-abee-87172618ebc9","variableMapping":{"this":"a"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:223","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:510","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.reset()"},"status":-2},{"failures":[],"tindex":"bd06f344-c822-11e4-abee-3d1f20da4348","variableMapping":{"same":"tableOverflow","diff":"tableOverflow"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:247","type":"CtIfImpl","sourcecode":"if (boolean && (!boolean)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:191","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"bd06f345-c822-11e4-abee-73b5fe512102","variableMapping":{"available":"pOff"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:166","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:624","type":"CtIfImpl","sourcecode":"if (0 < int)\n    int--;\n"},"status":-2},{"failures":[],"tindex":"bd06f346-c822-11e4-abee-c389f4517628","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:161","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectLoader:313","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bd06f347-c822-11e4-abee-d1dcc0bffd28","variableMapping":{"mid":"size","org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"size"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:232","type":"CtReturnImpl","sourcecode":"return ((4 + (org.eclipse.jgit.lib.Constants.int)) * int) + 4"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Subsequence:161","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"bd06f348-c822-11e4-abee-630e4b1c2184","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS:1082","type":"CtLocalVariableImpl","sourcecode":"long long = 0L"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:162","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"bd06f349-c822-11e4-abee-d51b1638303c","variableMapping":{"cmp":"eol"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:135","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue CHECK_BASE;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:169","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"bd06f34a-c822-11e4-abee-2115872c938e","variableMapping":{"firstCommit":"obj","r":"obj"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:284","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) == null)\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:315","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject)"},"status":-2},{"failures":[8,9,1,2,3,4],"tindex":"bd06f34b-c822-11e4-abee-c14151e9e678","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:398","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    if (org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId))\n        return ;\n    \n    final java.lang.String java.lang.String = org.eclipse.jgit.lib.AnyObjectId.name();\n    final java.lang.String java.lang.String = java.lang.String.substring(0, 2);\n    final java.lang.String java.lang.String = java.lang.String.substring(2);\n    final java.lang.String java.lang.String = (java.lang.String + \"/\") + java.lang.String;\n    for (int int = int ; int < (java.util.List<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.size()) ; int++) {\n        if (org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, java.util.List<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.get(int))) {\n            int = int;\n            return ;\n        } \n    }\n    for (int int = 0 ; int < (int) ; int++) {\n        if (org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, java.util.List<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.get(int))) {\n            int = int;\n            return ;\n        } \n    }\n    while (!(java.util.LinkedList<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.isEmpty())) {\n        final org.eclipse.jgit.transport.WalkRemoteObjectDatabase org.eclipse.jgit.transport.WalkRemoteObjectDatabase = java.util.LinkedList<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.removeFirst();\n        final java.util.Collection<java.lang.String> java.util.Collection<java.lang.String>;\n        try {\n            org.eclipse.jgit.lib.ProgressMonitor.beginTask(\"Listing packs\", org.eclipse.jgit.lib.ProgressMonitor.int);\n            java.util.Collection<java.lang.String> = org.eclipse.jgit.transport.WalkRemoteObjectDatabase.getPackNames();\n        } catch (java.io.IOException java.io.IOException) {\n            org.eclipse.jgit.transport.WalkFetchConnection.recordError(org.eclipse.jgit.lib.AnyObjectId, java.io.IOException);\n            continue;\n        } finally {\n            org.eclipse.jgit.lib.ProgressMonitor.endTask();\n        }\n        if ((java.util.Collection<java.lang.String> == null) || (java.util.Collection<java.lang.String>.isEmpty()))\n            continue;\n        \n        for (final java.lang.String java.lang.String : java.util.Collection<java.lang.String>) {\n            if (java.util.Set<java.lang.String>.add(java.lang.String))\n                java.util.LinkedList<org.eclipse.jgit.transport.WalkFetchConnection.RemotePack>.add(new org.eclipse.jgit.transport.WalkFetchConnection.RemotePack(org.eclipse.jgit.transport.WalkRemoteObjectDatabase , java.lang.String));\n            \n        }\n        if (org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId))\n            return ;\n        \n    }\n    java.util.Collection<org.eclipse.jgit.transport.WalkRemoteObjectDatabase> java.util.Collection<org.eclipse.jgit.transport.WalkRemoteObjectDatabase> = org.eclipse.jgit.transport.WalkFetchConnection.expandOneAlternate(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ProgressMonitor);\n    if ((java.util.Collection<org.eclipse.jgit.transport.WalkRemoteObjectDatabase> != null) && (!(java.util.Collection<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.isEmpty()))) {\n        for (final org.eclipse.jgit.transport.WalkRemoteObjectDatabase org.eclipse.jgit.transport.WalkRemoteObjectDatabase : java.util.Collection<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>) {\n            java.util.List<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.add(org.eclipse.jgit.transport.WalkRemoteObjectDatabase);\n            java.util.LinkedList<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.add(org.eclipse.jgit.transport.WalkRemoteObjectDatabase);\n            java.util.LinkedList<org.eclipse.jgit.transport.WalkRemoteObjectDatabase>.add(org.eclipse.jgit.transport.WalkRemoteObjectDatabase);\n        }\n        continue;\n    } \n    java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = java.util.HashMap<org.eclipse.jgit.lib.ObjectId, java.util.List<java.lang.Throwable>>.get(org.eclipse.jgit.lib.AnyObjectId);\n    final org.eclipse.jgit.errors.TransportException org.eclipse.jgit.errors.TransportException;\n    org.eclipse.jgit.errors.TransportException = new org.eclipse.jgit.errors.TransportException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.AnyObjectId.name()));\n    if ((java.util.List<java.lang.Throwable> != null) && (!(java.util.List<java.lang.Throwable>.isEmpty()))) {\n        if ((java.util.List<java.lang.Throwable>.size()) == 1)\n            org.eclipse.jgit.errors.TransportException.initCause(java.util.List<java.lang.Throwable>.get(0));\n        else\n            org.eclipse.jgit.errors.TransportException.initCause(new org.eclipse.jgit.errors.CompoundException(java.util.List<java.lang.Throwable>));\n        \n    } \n    throw org.eclipse.jgit.errors.TransportException;\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":5,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
