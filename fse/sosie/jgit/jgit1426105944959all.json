[{"failures":[],"tindex":"ba651e89-c82d-11e4-a3e3-77e91076f421","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:624","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'CON\\'\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1096","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.PackProtocolException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.util.List<org.eclipse.jgit.lib.ObjectId>.iterator().next().name()))"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"ba651e8a-c82d-11e4-a3e3-2d33b519571b","variableMapping":{"allHeads":"tagTargets","tagTargets":"tagTargets"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:544","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Set<org.eclipse.jgit.lib.ObjectId>)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:536","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getPeeledObjectId())"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,4,1,2,3,14,0],"tindex":"ba651e8b-c82d-11e4-a3e3-cf94f2895384","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:238","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setTreeId(org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[],"tindex":"ba651e8c-c82d-11e4-a3e3-bb05f16d6a43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandProgressMonitor:65","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[4,15,16,0,17,18,5,1,19,2,3],"tindex":"ba651e8d-c82d-11e4-a3e3-75ac7e13632b","variableMapping":{"modeT":"org.eclipse.jgit.merge.ResolveMerger.T_THEIRS","tw":"tw","org.eclipse.jgit.merge.ResolveMerger.T_FILE":"modeT","modeB":"org.eclipse.jgit.merge.ResolveMerger.T_OURS","toBeDeleted":"unmergedPaths"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:549","type":"CtIfImpl","sourcecode":"if ((int == 0) && (int != 0)) {\n    if (((org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTreeCount()) > (org.eclipse.jgit.merge.ResolveMerger.int)) && ((org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawMode(org.eclipse.jgit.merge.ResolveMerger.int)) == 0))\n        return true;\n    \n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:617","type":"CtIfImpl","sourcecode":"if (((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int)))) || ((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int))))) {\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    if (int == 0) {\n        if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n            return false;\n        \n        if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n            if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n                java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n            \n        } \n    } \n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser));\n} "},"status":-1},{"failures":[],"tindex":"ba651e8e-c82d-11e4-a3e3-477e8091f61c","variableMapping":{"org.eclipse.jgit.lib.RepositoryState.REBASING":"org.eclipse.jgit.lib.RepositoryState.REBASING_INTERACTIVE","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1072","type":"CtIfImpl","sourcecode":"if (new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , \".dotest\").exists())\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1085","type":"CtIfImpl","sourcecode":"if (new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"rebase-merge/interactive\").exists())\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n"},"status":-2},{"failures":[20,4,5,21,22,0,1,2,3,23],"tindex":"ba651e8f-c82d-11e4-a3e3-43f212dda346","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:239","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 8"},"status":-1},{"failures":[],"tindex":"ba6545a0-c82d-11e4-a3e3-17d55fa54333","variableMapping":{"c":"rc","depth":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.DepthWalk:131","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit instanceof org.eclipse.jgit.revwalk.DepthWalk.Commit)\n    ((org.eclipse.jgit.revwalk.DepthWalk.Commit)(org.eclipse.jgit.revwalk.RevCommit)).int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:265","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.revwalk.RevCommit)) {\n    for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.getParents())\n        org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.Constants.int);\n} "},"status":-2},{"failures":[4,0,5,1,2,3],"tindex":"ba6545a1-c82d-11e4-a3e3-1de1a394c848","variableMapping":{"r":"cnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:318","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:308","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < (int) ; int++) {\n    java.lang.StringBuilder.append(\", \");\n    java.lang.StringBuilder.append(org.eclipse.jgit.lib.Ref[][int]);\n}"},"status":-1},{"failures":[],"tindex":"ba6545a2-c82d-11e4-a3e3-afedd5e7eee2","variableMapping":{"this":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:393","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.FileRepository.loadRepoConfig();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:398","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectInserter == null)\n    org.eclipse.jgit.lib.ObjectInserter = org.eclipse.jgit.lib.Repository.newObjectInserter();\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":8,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":23,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":9,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":7,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":10,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":16,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":15,"org.eclipse.jgit.util.NBTest.testEncodeInt64":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":19,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":11,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":21,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":22,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":18}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
