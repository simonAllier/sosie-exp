[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"ef135e7c-c820-11e4-ac95-2faf5097c9d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:360","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.RefSpec.org.eclipse.jgit.transport.RefSpec.expandWildcard(java.lang.String, java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"ef15333d-c820-11e4-ac95-898d1b344ad8","variableMapping":{"line":"org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_PEELED"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:136","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:161","type":"CtInvocationImpl","sourcecode":"java.io.StringWriter.write(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String)"},"status":-2},{"failures":[],"tindex":"ef15333e-c820-11e4-ac95-4bec44b504ed","variableMapping":{"trackingRefUpdate":"trackingRefUpdate"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:319","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.TrackingRefUpdate = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:310","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.TrackingRefUpdate = new org.eclipse.jgit.transport.TrackingRefUpdate(true , java.lang.String , java.lang.String , ((org.eclipse.jgit.lib.RefUpdate.getOldObjectId()) != null ? org.eclipse.jgit.lib.RefUpdate.getOldObjectId() : org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId()) , org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"ef15333f-c820-11e4-ac95-47af72aaad48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:189","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LocalObjectToPack org.eclipse.jgit.internal.storage.file.LocalObjectToPack = ((org.eclipse.jgit.internal.storage.file.LocalObjectToPack)(org.eclipse.jgit.internal.storage.pack.ObjectToPack))"},"status":-2},{"failures":[5,6,7,14,15,46,47,48,16,20,17,22,24,26,39],"tindex":"ef153340-c820-11e4-ac95-db522aef2ffc","variableMapping":{"data":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:746","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandProgressMonitor:89","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"   \\r\")"},"status":-1},{"failures":[49,50,5,6,7,20,17,22],"tindex":"ef15f691-c820-11e4-ac95-df3670406e12","variableMapping":{"retainOnReset":"adds","org.eclipse.jgit.revwalk.RevWalk.PARSED":"adds","retainFlags":"adds"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1257","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (org.eclipse.jgit.revwalk.RevWalk.int) | (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:155","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"ef161da2-c820-11e4-ac95-fde16ba6abeb","variableMapping":{"stringValue":"org.eclipse.jgit.lib.RefDatabase.ALL"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.StringUtils:280","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:194","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.clearCache();\n    org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.clearCache();\n    java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(org.eclipse.jgit.lib.RefDatabase.java.lang.String);\n    java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile> = org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packsToRebuild();\n    if (java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>.isEmpty())\n        return true;\n    \n    java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n        if ((org.eclipse.jgit.lib.Ref.isSymbolic()) || ((org.eclipse.jgit.lib.Ref.getObjectId()) == null))\n            continue;\n        \n        if (org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.isHead(org.eclipse.jgit.lib.Ref))\n            java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getObjectId());\n        else\n            java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getObjectId());\n        \n        if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n            java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getPeeledObjectId());\n        \n    }\n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    boolean boolean = true;\n    try {\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor);\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor);\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor);\n        org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.commitPack(java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>, org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.toPrune());\n        boolean = false;\n        return true;\n    } finally {\n        if (boolean)\n            org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.rollbackPack(java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>);\n        \n    }\n} finally {\n    org.eclipse.jgit.internal.storage.dfs.DfsReader.release();\n}"},"status":-2},{"failures":[20,5,6,7,22,17],"tindex":"ef161da3-c820-11e4-ac95-8784bf89cd7e","variableMapping":{"dst":"currentRef"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.SymbolicRef:80","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.lib.Ref.isSymbolic())\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getTarget();"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DeleteBranchCommand:131","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref == null)\n    continue;\n"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,5,6,7,64,65,66,67,68,69,70,11,12,71,72,13,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,91,9,9,10,10,92,93,20,94,95,17,14,15,47,48,96,97,98,99,100,18,19,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,22,129,27,28,34,35,36,37,38,39,40,130,131,132,133,134,135,136,137,138,139,140,141,43,142,44,143,144,145,146,147,148,45,149,150,151,152,153,154,155],"tindex":"ef172f14-c820-11e4-ac95-733fafc25e9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:460","type":"CtAssignmentImpl","sourcecode":"byte = byte[][++int]"},"status":-1},{"failures":[],"tindex":"ef172f15-c820-11e4-ac95-b9c5bc3659dc","variableMapping":{"filenameSuffix":"filenameSuffix","fmt":"format"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:313","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : org.eclipse.jgit.api.ArchiveCommand.Format<?>.suffixes())\n    if (java.lang.String.endsWith(java.lang.String))\n        return org.eclipse.jgit.api.ArchiveCommand.Format<?>;\n    "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:311","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.api.ArchiveCommand.FormatEntry org.eclipse.jgit.api.ArchiveCommand.FormatEntry : org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>.values()) {\n    org.eclipse.jgit.api.ArchiveCommand.Format<?> org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?>;\n    for (java.lang.String java.lang.String : org.eclipse.jgit.api.ArchiveCommand.Format<?>.suffixes())\n        if (java.lang.String.endsWith(java.lang.String))\n            return org.eclipse.jgit.api.ArchiveCommand.Format<?>;\n        \n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":141,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":105,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":93,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":123,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":102,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":72,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":55,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":140,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":60,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":11,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":33,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":35,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":152,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":45,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":57,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":87,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":69,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":147,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":70,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":20,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":26,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":137,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":139,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":73,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":2,"org.eclipse.jgit.api.PushCommandTest.testPush":46,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":83,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":4,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":94,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":121,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":153,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":122,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":115,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":120,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":119,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":61,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":59,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":114,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":90,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":89,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":111,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":107,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":67,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":109,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":144,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":38,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":98,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":149,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":86,"org.eclipse.jgit.api.GitConstructionTest.testWrap":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":142,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":75,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":18,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":103,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":125,"org.eclipse.jgit.api.GitConstructionTest.testOpen":9,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":74,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":71,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":92,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":104,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":29,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":40,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":56,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":52,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":131,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":150,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":19,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":25,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":100,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":17,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":97,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":41,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":50,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":135,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":113,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":8,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":3,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":49,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":58,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":42,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":133,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":0,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":106,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":154,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":145,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":146,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":13,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":129,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":143,"org.eclipse.jgit.api.GitConstructionTest.testClose":91,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":22,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":53,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":54,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":110,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":47,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":99,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":81,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":37,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":14,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":148,"org.eclipse.jgit.transport.TestProtocolTest.testPush":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":85,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":51,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":27,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":101,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":118,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":136,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":76,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":117,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":116,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":78,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":65,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":79,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":124,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":127,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":48,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":132,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":155,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":128,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":138,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":43,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":134,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":62,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":66,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":88,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":21,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":28,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":151,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":23,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":112,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":126,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":130,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":77}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
