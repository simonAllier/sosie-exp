[{"failures":[],"tindex":"0c0139c0-c83b-11e4-9d4a-9fc26e7e0f99","variableMapping":{"org.eclipse.jgit.transport.SideBandOutputStream.SMALL_BUF":"length"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:1317","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.transport.SideBandOutputStream.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:104","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.revplot.PlotLane[].int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"0c0139c1-c83b-11e4-9d4a-fdb0136a1d89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:349","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:992","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.diff.DiffEntry.getChangeType()) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType)) || ((org.eclipse.jgit.diff.DiffEntry.getChangeType()) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))"},"status":-1},{"failures":[0,11,5,12,7,8,9,6],"tindex":"0c0139c2-c83b-11e4-9d4a-7947620c86c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:253","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n    final org.eclipse.jgit.transport.RemoteRefUpdate.Status org.eclipse.jgit.transport.RemoteRefUpdate.Status = org.eclipse.jgit.transport.RemoteRefUpdate.getStatus();\n    if ((org.eclipse.jgit.transport.RemoteRefUpdate.hasTrackingRefUpdate()) && ((org.eclipse.jgit.transport.RemoteRefUpdate.Status == (org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status)) || (org.eclipse.jgit.transport.RemoteRefUpdate.Status == (org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status)))) {\n        try {\n            org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(org.eclipse.jgit.revwalk.RevWalk);\n        } catch (java.io.IOException java.io.IOException) {\n        }\n    } \n}"},"status":-1},{"failures":[0,5,7,8,9,6],"tindex":"0c0139c3-c83b-11e4-9d4a-219ad67c522c","variableMapping":{"remotePrefix":"value","refName":"value","remote":"value"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1304","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:283","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"\\\"\")) && (java.lang.String.endsWith(\"\\\"\")))\n    return java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n"},"status":-1},{"failures":[13,14,0,6,7,8,9,5],"tindex":"0c0139c4-c83b-11e4-9d4a-23d6b6c5dc8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:697","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.InvalidRebaseStepException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.get(0).getAction().name()))"},"status":-1},{"failures":[],"tindex":"0c0139c5-c83b-11e4-9d4a-f5701249f2f2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportLocal:219","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \".\" }"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[])"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,0,6,7,8,9,5],"tindex":"0c0139c6-c83b-11e4-9d4a-df96d5cc1183","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:299","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[0,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,5,6,7,8,9],"tindex":"0c0160d7-c83b-11e4-9d4a-45c9c6c60573","variableMapping":{"this":"rw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:510","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.ObjectWalk.next()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:208","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[],"tindex":"0c0160d8-c83b-11e4-9d4a-bdb8346b2279","variableMapping":{"url":"u"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.http.JDKHttpConnectionFactory:56","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.transport.http.JDKHttpConnection(java.net.URL)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:467","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.transport.http.HttpConnection org.eclipse.jgit.transport.http.HttpConnection = org.eclipse.jgit.transport.TransportHttp.httpOpen(java.net.URL);\n    if (boolean) {\n        java.lang.String java.lang.String = (\"application/x-\" + java.lang.String) + \"-advertisement\";\n        org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(org.eclipse.jgit.util.HttpSupport.java.lang.String, (java.lang.String + \", */*\"));\n    } else {\n        org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(org.eclipse.jgit.util.HttpSupport.java.lang.String, \"*/*\");\n    }\n    final int int = org.eclipse.jgit.util.HttpSupport.org.eclipse.jgit.util.HttpSupport.response(org.eclipse.jgit.transport.http.HttpConnection);\n    switch (int) {\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            if (((org.eclipse.jgit.transport.HttpAuthMethod.getType()) == (org.eclipse.jgit.transport.HttpAuthMethod.Type.org.eclipse.jgit.transport.HttpAuthMethod.Type)) && ((org.eclipse.jgit.transport.http.HttpConnection.getHeaderField(org.eclipse.jgit.util.HttpSupport.java.lang.String)) != null))\n                org.eclipse.jgit.transport.HttpAuthMethod = org.eclipse.jgit.transport.HttpAuthMethod.org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(org.eclipse.jgit.transport.http.HttpConnection);\n            \n            return org.eclipse.jgit.transport.http.HttpConnection;\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            throw new org.eclipse.jgit.errors.NoRemoteRepositoryException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.net.URL));\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            org.eclipse.jgit.transport.HttpAuthMethod = org.eclipse.jgit.transport.HttpAuthMethod.org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(org.eclipse.jgit.transport.http.HttpConnection);\n            if ((org.eclipse.jgit.transport.HttpAuthMethod.getType()) == (org.eclipse.jgit.transport.HttpAuthMethod.Type.org.eclipse.jgit.transport.HttpAuthMethod.Type))\n                throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.transport.URIish));\n            \n            org.eclipse.jgit.transport.CredentialsProvider org.eclipse.jgit.transport.CredentialsProvider = org.eclipse.jgit.transport.Transport.getCredentialsProvider();\n            if (org.eclipse.jgit.transport.CredentialsProvider == null)\n                throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n            if (int > 1)\n                org.eclipse.jgit.transport.CredentialsProvider.reset(org.eclipse.jgit.transport.URIish);\n            \n            if ((3 < int) || (!(org.eclipse.jgit.transport.HttpAuthMethod.authorize(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider)))) {\n                throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            } \n            int++;\n            continue;\n        case org.eclipse.jgit.transport.http.HttpConnection.int :\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n        default :\n            java.lang.String java.lang.String = (int + \" \") + (org.eclipse.jgit.transport.http.HttpConnection.getResponseMessage());\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.lang.String);\n    }\n}"},"status":-2},{"failures":[],"tindex":"0c0160d9-c83b-11e4-9d4a-89ee112409ee","variableMapping":{"org.eclipse.jgit.internal.storage.pack.DeltaWindow.NEXT_RES":"reuseDeltas"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:264","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.pack.DeltaWindow.boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:236","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1":16,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":9,"org.eclipse.jgit.api.BlameCommandTest.testRename":4,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":23,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":7,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":12,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2":15,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":11,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":39,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":29,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":24,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":13,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":27,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":35,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":8,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":38,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF":20,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":21,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":2,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":34,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":3,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":30}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
