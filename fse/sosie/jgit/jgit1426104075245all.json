[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"5fc6b5bf-c829-11e4-896d-95d11f9a532b","variableMapping":{"len":"p","length":"p"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:715","type":"CtIfImpl","sourcecode":"if (0 <= long)\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:481","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setOffset(long)"},"status":-1},{"failures":[10,11,12,13,14,7,15,8,9,0,6,16,1,17,18],"tindex":"5fc6b5c0-c829-11e4-896d-c91a3a616bfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:361","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheBuildIterator != null) {\n    org.eclipse.jgit.dircache.DirCacheCheckout.remove(org.eclipse.jgit.dircache.DirCacheBuildIterator.getEntryPathString());\n    java.util.ArrayList<java.lang.String>.remove(org.eclipse.jgit.dircache.DirCacheBuildIterator.getEntryPathString());\n} else {\n}"},"status":-1},{"failures":[0,6,19,20,21,22,23,24,25,7,8,9,26,27,28,29,1],"tindex":"5fc6b5c1-c829-11e4-896d-dfc0c60af29f","variableMapping":{"refLogMessage":"newPath","baseCommit":"oldPath"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:161","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"branch: Created from commit \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:390","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[30,31,32,33,34,35,16,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,7,15,8,9,0,51,52,53,54,55,56,57,1,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,12,86,13,14,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,6,105],"tindex":"5fc6b5c2-c829-11e4-896d-dfe19774cb64","variableMapping":{"i":"modeT","ol":"toBeDeleted","nl":"toBeDeleted"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:256","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.String>.get(int).equals(java.util.List<java.lang.String>.get(int))))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:540","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n        java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n    \n    return true;\n} else if ((int == 0) && (int != 0)) {\n    if (((org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTreeCount()) > (org.eclipse.jgit.merge.ResolveMerger.int)) && ((org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawMode(org.eclipse.jgit.merge.ResolveMerger.int)) == 0))\n        return true;\n    \n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"5fc6b5c3-c829-11e4-896d-d330d0e1e70d","variableMapping":{"fileLastModified":"ageMillis"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:868","type":"CtLocalVariableImpl","sourcecode":"long long = long % 1000"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RelativeDateFormatter:120","type":"CtLocalVariableImpl","sourcecode":"long long = org.eclipse.jgit.util.RelativeDateFormatter.org.eclipse.jgit.util.RelativeDateFormatter.round((long % (org.eclipse.jgit.util.RelativeDateFormatter.long)), org.eclipse.jgit.util.RelativeDateFormatter.long)"},"status":-2},{"failures":[6,0,7,8,9,106,107,108,1],"tindex":"5fc6b5c4-c829-11e4-896d-bbd413a5de74","variableMapping":{"remaining":"left"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:267","type":"CtIfImpl","sourcecode":"if ((--int) == 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:120","type":"CtIfImpl","sourcecode":"if ((int - int) > 0)\n    if (int == 1)\n        java.util.List<java.lang.String>.add(java.lang.String.substring((int - 1), int));\n    else if (int == ((java.lang.String.length()) - 1))\n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, (int + 1)));\n    else\n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n    \n"},"status":-1},{"failures":[1,6,0,7,8,9],"tindex":"5fc6b5c5-c829-11e4-896d-7bc308b3eea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:952","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.transport.RefAdvertiser.advertiseCapability(org.eclipse.jgit.transport.GitProtocolConstants.java.lang.String);\n"},"status":-1},{"failures":[1,0,6,7,8,9],"tindex":"5fc6b5c6-c829-11e4-896d-953ff46de9d8","variableMapping":{"handle":"handle","list":"list"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.events.ListenerList:134","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.events.ListenerHandle>.add(org.eclipse.jgit.events.ListenerHandle)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.events.ListenerList:140","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.events.ListenerHandle>.remove(org.eclipse.jgit.events.ListenerHandle)"},"status":-1},{"failures":[],"tindex":"5fc6dcd7-c829-11e4-896d-e7fb51be02ce","variableMapping":{"deltaBase":"commitTree"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:142","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:166","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.api.ResetCommand.parseCommit(org.eclipse.jgit.lib.ObjectId).getTree()"},"status":-2},{"failures":[6,0,7,8,9,1],"tindex":"5fc6dcd8-c829-11e4-896d-d7bb5e70c9c0","variableMapping":{"this":"pw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1093","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:313","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.internal.storage.dfs.DfsReader);\n    org.eclipse.jgit.lib.ProgressMonitor.beginTask(\"Finding garbage\", org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.objectsBefore());\n    for (org.eclipse.jgit.internal.storage.dfs.DfsPackFile org.eclipse.jgit.internal.storage.dfs.DfsPackFile : java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>) {\n        org.eclipse.jgit.internal.storage.file.PackIndex org.eclipse.jgit.internal.storage.file.PackIndex = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader);\n        for (org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry : org.eclipse.jgit.internal.storage.file.PackIndex) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.toObjectId();\n            if (((org.eclipse.jgit.revwalk.RevWalk.lookupOrNull(org.eclipse.jgit.lib.ObjectId)) != null) || org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.(anyPackHas(org.eclipse.jgit.lib.ObjectId)))\n                continue;\n            \n            int int = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.getOffset());\n            org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.ObjectId, int));\n        }\n    }\n    org.eclipse.jgit.lib.ProgressMonitor.endTask();\n    if (0 < (org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectCount()))\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource.org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor);\n    \n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":94,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":9,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":102,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":55,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":98,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":28,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":43,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":80,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar":20,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":41,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":50,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":60,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":38,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar":24,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":52,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":86,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":39,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo":25,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":42,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":36,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":87,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":62,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":89,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":83,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":68,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":82,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":106,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":67,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":84,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":18,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":35,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":95,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":8,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":34,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":16,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":63,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":108,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":96,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":79,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix":23,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":48,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":58,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar":19,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":7,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":12,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":17,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":101,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":54,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":90,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":100,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":65,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":93,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":27,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":14,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":26,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":30,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":59,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":69,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":107,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":31,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":88,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":29,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":11,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":85,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":91,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":33,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":77,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":76,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":51,"org.eclipse.jgit.transport.TestProtocolTest.testPush":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":78,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":15,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":47,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":44,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":66,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":71,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":92,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":75,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":53,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":103,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":81,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":45,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":70,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":10,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":2,"org.eclipse.jgit.api.RevertCommandTest.testRevert":104,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":73}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
