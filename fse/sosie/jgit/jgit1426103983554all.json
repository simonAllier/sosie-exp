[{"failures":[],"tindex":"291147d3-c829-11e4-9a05-55b7e544c9b8","variableMapping":{"this":"out"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:300","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.switchToOverflow()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:284","type":"CtTryImpl","sourcecode":"try {\n    for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : org.eclipse.jgit.transport.BaseConnection.getRefs()) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        if (org.eclipse.jgit.lib.Repository.hasObject(org.eclipse.jgit.lib.ObjectId))\n            java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n        \n    }\n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n        if (!(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId().equals(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId())))\n            java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId());\n        \n    }\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setUseCachedPacks(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setUseBitmaps(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(boolean);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(false);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(boolean);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"29116ee4-c829-11e4-9a05-d3744d9727fa","variableMapping":{"tableSize":"index","ptr":"lengthOfReservedLane"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:426","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:177","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotLane != null) {\n    org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotLane;\n    java.util.HashMap<org.eclipse.jgit.revplot.PlotLane, java.lang.Integer>.put(org.eclipse.jgit.revplot.PlotLane, java.lang.Integer.java.lang.Integer.valueOf((int + 1)));\n    org.eclipse.jgit.revplot.PlotCommitList<L>.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit<L>, org.eclipse.jgit.revplot.PlotCommit);\n} else {\n    org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane = org.eclipse.jgit.revplot.PlotCommitList<L>.nextFreeLane();\n    org.eclipse.jgit.revplot.PlotCommitList<L>.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit<L>, null);\n}"},"status":-1},{"failures":[],"tindex":"29116ee5-c829-11e4-9a05-33c051d03be9","variableMapping":{"c":"c"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.ReverseWalk:66","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.getParentCount()) ; int++)\n    ((org.eclipse.jgit.blame.ReverseWalk.ReverseCommit)(org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.getParent(int))).addChild(org.eclipse.jgit.blame.ReverseWalk.ReverseCommit);"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:250","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevCommit.getTree())"},"status":-2},{"failures":[],"tindex":"29116ee6-c829-11e4-9a05-792ec11d7785","variableMapping":{"parser":"minRef","cmp":"cmp"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:130","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    org.eclipse.jgit.treewalk.CanonicalTreeParser.next();\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:960","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n} else if (int == 0) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n} "},"status":-2},{"failures":[],"tindex":"29116ee7-c829-11e4-9a05-653d07e5c9d7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:966","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:501","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"29116ee8-c829-11e4-9a05-67e47afbdc96","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:380","type":"CtLocalVariableImpl","sourcecode":"final int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:344","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[18,19,20],"tindex":"29116ee9-c829-11e4-9a05-7b519843272c","variableMapping":{"available":"stIdx","org.eclipse.jgit.transport.SideBandOutputStream.HDR_SIZE":"stIdx"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:165","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.eclipse.jgit.transport.SideBandOutputStream.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:484","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"29116eea-c829-11e4-9a05-73221433f0cc","variableMapping":{"org.eclipse.jgit.transport.Transport.protocols":"org.eclipse.jgit.transport.Transport.protocols","proto":"proto"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.Transport:224","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.Transport.java.util.List<java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol>>.add(0, new java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol>(org.eclipse.jgit.transport.TransportProtocol))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:240","type":"CtForEachImpl","sourcecode":"for (java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol> java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol> : org.eclipse.jgit.transport.Transport.java.util.List<java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol>>) {\n    org.eclipse.jgit.transport.TransportProtocol org.eclipse.jgit.transport.TransportProtocol = java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol>.get();\n    if ((org.eclipse.jgit.transport.TransportProtocol == null) || (org.eclipse.jgit.transport.TransportProtocol == org.eclipse.jgit.transport.TransportProtocol))\n        org.eclipse.jgit.transport.Transport.java.util.List<java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol>>.remove(java.lang.ref.WeakReference<org.eclipse.jgit.transport.TransportProtocol>);\n    \n}"},"status":-2},{"failures":[11,12,13,15,16,14],"tindex":"29116eeb-c829-11e4-9a05-d93fe0041cda","variableMapping":{"grandchild":"gitExe"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:126","type":"CtIfImpl","sourcecode":"if (java.io.File != null) {\n    java.io.File java.io.File = java.io.File.getParentFile();\n    if (java.io.File != null)\n        return java.io.File.getParentFile();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS_POSIX:66","type":"CtIfImpl","sourcecode":"if (java.io.File != null)\n    return java.io.File.getParentFile().getParentFile();\n"},"status":-1},{"failures":[16,15,21,14,22,11,12,13],"tindex":"29116eec-c829-11e4-9a05-918f559e49bb","variableMapping":{"b":"ac"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.PathFilter:106","type":"CtIfImpl","sourcecode":"if (byte == '/')\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:115","type":"CtIfImpl","sourcecode":"if (byte != byte)\n    return false;\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory":10,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":20,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1":5,"org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":13,"org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch":7,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":18,"org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches":8,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":19,"org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":11,"org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":14,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":15,"org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd":22,"org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest.testEqualsWithoutWhitespace":21,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927":2,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359":3,"org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther":6,"org.eclipse.jgit.revplot.PlotCommitListTest.testMerged":9,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":17,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":16}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
