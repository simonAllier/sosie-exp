[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"3ab9d016-c88c-11e4-9331-1b2b3ab277dc","variableMapping":{"buffer":"raw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry:60","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:385","type":"CtAssignmentImpl","sourcecode":"byte[] = java.nio.ByteBuffer.array()"},"status":-1},{"failures":[9,15,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,0,1,2],"tindex":"3ab9f727-c88c-11e4-9331-a3e1d0d13c82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:840","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, org.eclipse.jgit.lib.Constants.int)"},"status":-1},{"failures":[],"tindex":"3ab9f728-c88c-11e4-9331-715fea407064","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:403","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref[] org.eclipse.jgit.lib.Ref[] = new org.eclipse.jgit.lib.Ref[java.lang.Math.java.lang.Math.max(((int) * 2), ((int) + int))]"},"status":-2},{"failures":[14,9,15,0,1,2],"tindex":"3ab9f729-c88c-11e4-9331-2b1ff1dad4a7","variableMapping":{"cnt":"renameScore","org.eclipse.jgit.internal.storage.pack.DeltaEncoder.MAX_INSERT_DATA_SIZE":"renameScore","hdrs":"renameScore"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:194","type":"CtIfImpl","sourcecode":"if ((int % (org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int)) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:227","type":"CtForImpl","sourcecode":"SRC : for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) ; int++) {\n    org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int);\n    if (!org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size());\n        continue;\n    } \n    org.eclipse.jgit.diff.SimilarityIndex org.eclipse.jgit.diff.SimilarityIndex = null;\n    for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) ; int++) {\n        org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int);\n        if (!org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        } \n        if (!org.eclipse.jgit.diff.RenameDetector.(org.eclipse.jgit.diff.RenameDetector.sameType(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        } \n        if ((java.util.BitSet != null) && (java.util.BitSet.get(int))) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        } \n        long long = long[][int];\n        if (long == 0) {\n            long = org.eclipse.jgit.diff.SimilarityRenameDetector.(size(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)) + 1;\n            long[][int] = long;\n        } \n        long long = long[][int];\n        if (long == 0) {\n            long = org.eclipse.jgit.diff.SimilarityRenameDetector.(size(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)) + 1;\n            long[][int] = long;\n        } \n        long long = java.lang.Math.java.lang.Math.max(long, long);\n        long long = java.lang.Math.java.lang.Math.min(long, long);\n        if (((long * 100) / long) < (int)) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        } \n        if (org.eclipse.jgit.diff.SimilarityIndex == null) {\n            try {\n                org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n            } catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException org.eclipse.jgit.diff.SimilarityIndex.TableFullException) {\n                boolean = true;\n                continue SRC;\n            }\n        } \n        org.eclipse.jgit.diff.SimilarityIndex org.eclipse.jgit.diff.SimilarityIndex;\n        try {\n            org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n        } catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException org.eclipse.jgit.diff.SimilarityIndex.TableFullException) {\n            if (java.util.BitSet == null)\n                java.util.BitSet = new java.util.BitSet(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size());\n            \n            java.util.BitSet.set(int);\n            boolean = true;\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        }\n        int int = org.eclipse.jgit.diff.SimilarityIndex.score(org.eclipse.jgit.diff.SimilarityIndex, 10000);\n        int int = org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.nameScore(org.eclipse.jgit.diff.DiffEntry.java.lang.String, org.eclipse.jgit.diff.DiffEntry.java.lang.String)) * 100;\n        int int = ((int * 99) + (int * 1)) / 10000;\n        if (int < (int)) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        } \n        long[][int++] = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int);\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n}"},"status":-1},{"failures":[37,38,15,0,1,2,39,40,41,42,43,44,45,46,9,14],"tindex":"3ab9f72a-c88c-11e4-9331-452ea10eddb7","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:206","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.lib.Ref>.setCallable(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:359","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.lib.Ref>.checkCallable()"},"status":-1},{"failures":[],"tindex":"3ab9f72b-c88c-11e4-9331-59b5e8117104","variableMapping":{"tab":"count","end":"count","ptr":"cntOffered"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:529","type":"CtIfImpl","sourcecode":"if (int == int)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PreUploadHookChain:85","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++)\n    org.eclipse.jgit.transport.PreUploadHook[][int].onBeginNegotiateRound(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, int);"},"status":-2},{"failures":[0,1,2,14,9,15],"tindex":"3ab9f72c-c88c-11e4-9331-f98b87169932","variableMapping":{"noCommit":"isMerge","repo":"repo","srcCommit":"commitToPick"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:589","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand = new org.eclipse.jgit.api.Git(org.eclipse.jgit.lib.Repository).commit();\n    org.eclipse.jgit.api.CommitCommand.setAuthor(org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent());\n    org.eclipse.jgit.api.CommitCommand.setReflogComment((((org.eclipse.jgit.api.RebaseCommand.java.lang.String) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())));\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CommitCommand.call();\n} else\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CherryPickResult.getNewHead();\n"},"status":-1},{"failures":[],"tindex":"3ab9f72d-c88c-11e4-9331-9331b15472fd","variableMapping":{"nextPosition":"tree","end":"tree"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:109","type":"CtIfImpl","sourcecode":"if (int < (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:174","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawMode(int))) {\n    org.eclipse.jgit.dircache.DirCacheBuilder.addTree(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectId(int));\n} else {\n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry;\n    org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath() , int);\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(org.eclipse.jgit.treewalk.AbstractTreeIterator.idBuffer(), org.eclipse.jgit.treewalk.AbstractTreeIterator.idOffset());\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getFileMode(int));\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n}"},"status":-2},{"failures":[15,14,9,0,1,2],"tindex":"3ab9f72e-c88c-11e4-9331-1f508c37cb54","variableMapping":{"p":"len","o64cnt":"cnt","ofs":"buf"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:150","type":"CtIfImpl","sourcecode":"if ((byte[][int]) < 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:505","type":"CtIfImpl","sourcecode":"if (int > ((byte[].int) - (int)))\n    throw new java.io.IOException();\n"},"status":-1},{"failures":[],"tindex":"3ab9f72f-c88c-11e4-9331-5301577991cf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:434","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:424","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":19,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":10,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":37,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":35,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":33,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":43,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":9,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":12,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":39,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":34,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":32,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":8,"org.eclipse.jgit.api.BranchCommandTest.testDelete":45,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":30,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":29,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":28,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":23,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":4,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":40,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":22,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":44,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":38,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":15,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":42,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":46,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":41,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":24,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":14,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":13,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":5}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
