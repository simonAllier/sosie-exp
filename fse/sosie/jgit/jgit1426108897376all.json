[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"99ee198a-c834-11e4-b640-858eee99cf1b","variableMapping":{"remoteBranchName":"content","branchName":"content"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:234","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1666","type":"CtTryImpl","sourcecode":"try {\n    java.io.FileOutputStream.write(java.lang.String.getBytes(org.eclipse.jgit.lib.Constants.java.lang.String));\n    java.io.FileOutputStream.write('\\n');\n} finally {\n    java.io.FileOutputStream.close();\n}"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"99ee198b-c834-11e4-b640-0368a403990a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:457","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == '/') {\n    org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte[], int, int);\n    int = int + 1;\n} "},"status":-1},{"failures":[0,11,10,7,8,9],"tindex":"99ee198c-c834-11e4-b640-aff4612b62be","variableMapping":{"baseCommit":"objectId","baseCommitId":"objectId"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ThreeWayMerger:139","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevCommit.toObjectId()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:776","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, byte[])"},"status":-1},{"failures":[],"tindex":"99ee198d-c834-11e4-b640-63ea79d0a19e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:999","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"status":-2},{"failures":[],"tindex":"99ee198e-c834-11e4-b640-0b14087c5ebc","variableMapping":{"db":"db"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.StrategyRecursive:57","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.merge.RecursiveMerger(org.eclipse.jgit.lib.Repository , false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:83","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger(org.eclipse.jgit.lib.Repository)"},"status":-2},{"failures":[0,11,7,8,9,19,10],"tindex":"99ee198f-c834-11e4-b640-f98e5bcc6d36","variableMapping":{"shallowPack":"failOnConflict"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:544","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1020","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"99ee3fa0-c834-11e4-b640-81748ce5ffde","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitAnon:83","type":"CtReturnImpl","sourcecode":"return java.util.Collections.java.util.Collections.singleton(\"git\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:225","type":"CtReturnImpl","sourcecode":"return java.util.Collections.java.util.Collections.emptySet()"},"status":-2},{"failures":[7,8,9,0,11,10],"tindex":"99ee3fa1-c834-11e4-b640-6ff6578479f5","variableMapping":{"update":"ignoreLastBracket"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.AddCommand:238","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:287","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,10,7,8,9,11],"tindex":"99ee3fa2-c834-11e4-b640-7758fadbb1eb","variableMapping":{"data":"org.eclipse.jgit.patch.FileHeader.INDEX","pos":"score","length":"ptr","hash":"score"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:278","type":"CtWhileImpl","sourcecode":"while ((int) < (int))\n    int = ((int) * 31) + (byte[][(int)++]);"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:434","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[0,7,8,9,11,10],"tindex":"99ee3fa3-c834-11e4-b640-a53212f7c429","variableMapping":{"s":"b","pcnt":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TextProgressMonitor:124","type":"CtIfImpl","sourcecode":"if (int < 100)\n    java.lang.StringBuilder.append(' ');\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawCharSequence:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++)\n    java.lang.StringBuilder.append(org.eclipse.jgit.util.RawCharSequence.charAt(int));"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":9,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":41,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":37,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":36,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":43,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":72,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":78,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":7,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":77,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":47,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":65,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":10,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":44,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":22,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":74,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":75,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":53,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":29,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":20,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":49,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":12,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":42,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew":59,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":51,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld":60,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":13,"org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong":63,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":39,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":11,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":26,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":58,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":66,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":54,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":14,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":27,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":52,"org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary":57,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":24,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":35,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":23,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":71,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":2,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":28,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":76,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":17,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":8,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":4,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":31,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":34,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":69,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":1,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":45}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
