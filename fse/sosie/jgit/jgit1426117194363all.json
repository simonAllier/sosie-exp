[{"failures":[],"tindex":"eb555a25-c847-11e4-9eb3-0daecf9a07d5","variableMapping":{"v":"context"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:395","type":"CtLocalVariableImpl","sourcecode":"final int int = int / 100"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:753","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.((int)(java.lang.Math.max(0, (((long)(org.eclipse.jgit.diff.Edit.getBeginA())) - (int)))))"},"status":-2},{"failures":[],"tindex":"eb555a26-c847-11e4-9eb3-713ac26f9f7c","variableMapping":{"p":"length","c":"actLen","ib":"data"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:960","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0)\n    int = (byte[][int++]) & 255;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaCache:114","type":"CtIfImpl","sourcecode":"if ((byte[].int) != int) {\n    byte[] byte[] = new byte[int];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    byte[] = byte[];\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"eb555a27-c847-11e4-9eb3-8d926d3c1f8b","variableMapping":{"revPool":"rw"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:174","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevWalk) != null)\n    org.eclipse.jgit.revwalk.RevWalk.release();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1390","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(org.eclipse.jgit.transport.GitProtocolConstants.java.lang.String)) && ((java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>) != null)) {\n    for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        if (java.util.Set<org.eclipse.jgit.revwalk.RevObject>.isEmpty()) {\n            if (java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))\n                continue;\n            \n        } else {\n            org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.lookupOrNull(org.eclipse.jgit.lib.ObjectId);\n            if ((org.eclipse.jgit.revwalk.RevObject != null) && (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag)))\n                continue;\n            \n        }\n        if (!(org.eclipse.jgit.lib.Ref.isPeeled()))\n            org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.peel(org.eclipse.jgit.lib.Ref);\n        \n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n        if (org.eclipse.jgit.lib.ObjectId == null)\n            continue;\n        \n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        if ((org.eclipse.jgit.internal.storage.pack.PackWriter.willInclude(org.eclipse.jgit.lib.ObjectId)) && (!(org.eclipse.jgit.internal.storage.pack.PackWriter.willInclude(org.eclipse.jgit.lib.ObjectId))))\n            org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId));\n        \n    }\n} "},"status":-1},{"failures":[],"tindex":"eb555a28-c847-11e4-9eb3-57c5849d7c04","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:586","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,3,4,5,2,16,17,18,19,20,21,22,23,24,1,0],"tindex":"eb555a29-c847-11e4-9eb3-5f429eb154d5","variableMapping":{"msgOut":"out"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:371","type":"CtTryImpl","sourcecode":"try {\n    java.io.OutputStream.flush();\n} catch (java.io.IOException java.io.IOException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:165","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)"},"status":-1},{"failures":[1,0,2,25,26,27,28,29,3,4,5],"tindex":"eb555a2a-c847-11e4-9eb3-c3ae1c14cee6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:165","type":"CtForImpl","sourcecode":"for ( ; !org.eclipse.jgit.treewalk.CanonicalTreeParser.(eof()) ; org.eclipse.jgit.treewalk.CanonicalTreeParser.next(1)) {\n    final int int = org.eclipse.jgit.notes.NoteParser.parseFanoutCell();\n    if (0 <= int)\n        org.eclipse.jgit.notes.FanoutBucket.setBucket(int, org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId());\n    else\n        org.eclipse.jgit.notes.NoteParser.storeNonNote();\n    \n}"},"status":-1},{"failures":[],"tindex":"eb555a2b-c847-11e4-9eb3-03df17e1e948","variableMapping":{"n64":"countingStart"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:116","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1683","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.long = java.lang.System.(java.lang.System.currentTimeMillis()) - long"},"status":-2},{"failures":[2,1,3,4,5,0],"tindex":"eb555a2c-c847-11e4-9eb3-ff47970c25d9","variableMapping":{"r":"r","inquote":"includeHeader"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:180","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append('\\\"');\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:258","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(((((\"DELTA( BASE=\" + long) + \" RESULT=\") + long) + \" )\\n\"));\n"},"status":-1},{"failures":[2,1,0,3,4,5],"tindex":"eb555a2d-c847-11e4-9eb3-f11bd0e25e91","variableMapping":{"flags":"w5","org.eclipse.jgit.internal.storage.pack.ObjectToPack.DELTA_ATTEMPTED":"w5"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:263","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.internal.storage.pack.ObjectToPack.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:208","type":"CtAssignmentImpl","sourcecode":"int = int[][(int + 4)]"},"status":-1},{"failures":[],"tindex":"eb555a2e-c847-11e4-9eb3-fdef482546f5","variableMapping":{"path":"b"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:653","type":"CtReturnImpl","sourcecode":"return byte[].clone()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectInserter:196","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":16,"org.eclipse.jgit.api.PushCommandTest.testPush":18,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":15,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":6,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":21,"org.eclipse.jgit.transport.TestProtocolTest.testPush":22,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":8,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":13,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":17,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":9,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":27,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":20,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":11,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":25,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":10,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":24,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":19,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":14,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":28,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":23,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":12}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
