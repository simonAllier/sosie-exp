[{"failures":[0,1,2,3,4,5],"tindex":"535ba853-c842-11e4-97b9-c90c2ec67fb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:245","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.release()"},"status":-1},{"failures":[6,7,8,9,10,0,4,1,2,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"535ba854-c842-11e4-97b9-1b7abfcfc744","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:760","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if ((int < (org.eclipse.jgit.diff.Edit.getBeginA())) || ((int + 1) < int)) {\n        org.eclipse.jgit.diff.DiffFormatter.writeContextLine(org.eclipse.jgit.diff.RawText, int);\n        if (org.eclipse.jgit.diff.DiffFormatter.org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(org.eclipse.jgit.diff.RawText, int))\n            java.io.OutputStream.write(org.eclipse.jgit.diff.DiffFormatter.byte[]);\n        \n        int++;\n        int++;\n    } else if (int < (org.eclipse.jgit.diff.Edit.getEndA())) {\n        org.eclipse.jgit.diff.DiffFormatter.writeRemovedLine(org.eclipse.jgit.diff.RawText, int);\n        if (org.eclipse.jgit.diff.DiffFormatter.org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(org.eclipse.jgit.diff.RawText, int))\n            java.io.OutputStream.write(org.eclipse.jgit.diff.DiffFormatter.byte[]);\n        \n        int++;\n    } else if (int < (org.eclipse.jgit.diff.Edit.getEndB())) {\n        org.eclipse.jgit.diff.DiffFormatter.writeAddedLine(org.eclipse.jgit.diff.RawText, int);\n        if (org.eclipse.jgit.diff.DiffFormatter.org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(org.eclipse.jgit.diff.RawText, int))\n            java.io.OutputStream.write(org.eclipse.jgit.diff.DiffFormatter.byte[]);\n        \n        int++;\n    } \n    if (org.eclipse.jgit.diff.DiffFormatter.(org.eclipse.jgit.diff.DiffFormatter.end(org.eclipse.jgit.diff.Edit, int, int)) && ((++int) < (org.eclipse.jgit.diff.EditList.size())))\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.EditList.get(int);\n    \n}"},"status":-2},{"failures":[1,2,3,5,0,4],"tindex":"535ba855-c842-11e4-97b9-974b9cd25f10","variableMapping":{"org.eclipse.jgit.internal.storage.pack.DeltaEncoder.MAX_V2_COPY":"size","offset":"pos"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:235","type":"CtOperatorAssignmentImpl","sourcecode":"long += org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:705","type":"CtAssignmentImpl","sourcecode":"long = (long / int) * int"},"status":-1},{"failures":[],"tindex":"535ba856-c842-11e4-97b9-916360078687","variableMapping":{"rc":"org.eclipse.jgit.lib.RefUpdate.Result.REJECTED_CURRENT_BRANCH"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.errors.ConcurrentRefUpdateException:96","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TrackingRefUpdate:192","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"status":-2},{"failures":[1,2,3,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,5,4],"tindex":"535ba857-c842-11e4-97b9-fb3e50490c20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:301","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final byte byte = byte[][int++];\n    if (byte != '\\\\') {\n        byte[][int++] = byte;\n        continue;\n    } \n    if (int == int) {\n        byte[][int++] = '\\\\';\n        break;\n    } \n    switch (byte[][int++]) {\n        case 'a' :\n            byte[][int++] = 7;\n            continue;\n        case 'b' :\n            byte[][int++] = '\\b';\n            continue;\n        case 'f' :\n            byte[][int++] = '\\f';\n            continue;\n        case 'n' :\n            byte[][int++] = '\\n';\n            continue;\n        case 'r' :\n            byte[][int++] = '\\r';\n            continue;\n        case 't' :\n            byte[][int++] = '\\t';\n            continue;\n        case 'v' :\n            byte[][int++] = 11;\n            continue;\n        case '\\\\' :\n        case '\\\"' :\n            byte[][int++] = byte[][(int - 1)];\n            continue;\n        case '0' :\n        case '1' :\n        case '2' :\n        case '3' :\n            {\n                int int = (byte[][(int - 1)]) - '0';\n                for (int int = 1 ; (int < 3) && (int < int) ; int++) {\n                    final byte byte = byte[][int];\n                    if (('0' <= byte) && (byte <= '7')) {\n                        int <<= 3;\n                        int |= byte - '0';\n                        int++;\n                    } else {\n                        break;\n                    }\n                }\n                byte[][int++] = ((byte)(int));\n                continue;\n            }\n        default :\n            byte[][int++] = '\\\\';\n            byte[][int++] = byte[][(int - 1)];\n            continue;\n    }\n}"},"status":-1},{"failures":[1,2,3,4,5,0],"tindex":"535ba858-c842-11e4-97b9-9f613a8ad6d3","variableMapping":{"dst":"out"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.StreamCopyThread:158","type":"CtTryImpl","sourcecode":"try {\n    java.io.OutputStream.close();\n} catch (java.io.IOException java.io.IOException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectLoader:249","type":"CtTryImpl","sourcecode":"try {\n    final long long = org.eclipse.jgit.lib.ObjectStream.getSize();\n    byte[] byte[] = new byte[8192];\n    long long = 0;\n    while (long < long) {\n        int int = org.eclipse.jgit.lib.ObjectStream.read(byte[]);\n        if (int < 0)\n            throw new java.io.EOFException();\n        \n        java.io.OutputStream.write(byte[], 0, int);\n        long += int;\n    }\n    if (0 <= (org.eclipse.jgit.lib.ObjectStream.read()))\n        throw new java.io.EOFException();\n    \n} finally {\n    org.eclipse.jgit.lib.ObjectStream.close();\n}"},"status":-1},{"failures":[1,2,3,5,0,4],"tindex":"535ba859-c842-11e4-97b9-57ab18bce91a","variableMapping":{"fmt":"fmt"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:315","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.ArchiveCommand.Format<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:314","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(java.lang.String))\n    return org.eclipse.jgit.api.ArchiveCommand.Format<?>;\n"},"status":-1},{"failures":[1,2,3,4,0,5],"tindex":"535ba85a-c842-11e4-97b9-e3d1008894ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:521","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.errors.TransportException org.eclipse.jgit.errors.TransportException"},"status":-1},{"failures":[],"tindex":"535ba85b-c842-11e4-97b9-fbbc5a839736","variableMapping":{"subfilters":"obj","walker":"obj"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.AndTreeFilter:162","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.treewalk.filter.TreeFilter org.eclipse.jgit.treewalk.filter.TreeFilter : org.eclipse.jgit.treewalk.filter.TreeFilter[]) {\n    if (!(org.eclipse.jgit.treewalk.filter.TreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk)))\n        return false;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:205","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.eclipse.jgit.ignore.FastIgnoreRule))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"535ba85c-c842-11e4-97b9-230d32acae80","variableMapping":{"data":"buf","pos":"n","length":"n","hash":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:278","type":"CtWhileImpl","sourcecode":"while ((int) < (int))\n    int = ((int) * 31) + (byte[][(int)++]);"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:518","type":"CtWhileImpl","sourcecode":"while ((int = java.io.InputStream.read(byte[])) >= 0)\n    java.io.ByteArrayOutputStream.write(byte[], 0, int);"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_NamedEscapes":42,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":21,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_RawUTF8":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":28,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":24,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_OctalAll":38,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar":32,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":37,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_FooTabBar":45,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":17,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_UnknownEscapeQ":43,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":9,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_UTF8":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":30,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":16,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuoteAtAndNumber":47,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":7,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":8,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":6,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_RawLatin1":44,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":18,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":31,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":14,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar":34,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_LoneBackslash":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":11,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_Latin1":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":13,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":10,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":23,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":35,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":33}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
