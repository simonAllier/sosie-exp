[{"failures":[],"tindex":"2e96296c-c827-11e4-ac26-697f4cfe7eac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:272","type":"CtLocalVariableImpl","sourcecode":"int int = int + (int)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"2e96507d-c827-11e4-ac26-559c3e019dc8","variableMapping":{"number":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ReflogReaderImpl:92","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1134","type":"CtIfImpl","sourcecode":"if ((' ' == int) || ('\\t' == int))\n    continue;\n"},"status":-1},{"failures":[4,6,3,0,1,2,5,7],"tindex":"2e96507e-c827-11e4-ac26-a53e3bd9811c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:98","type":"CtReturnImpl","sourcecode":"return \"Already-up-to-date\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1270","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"status":-1},{"failures":[],"tindex":"2e96507f-c827-11e4-ac26-27650867f9d0","variableMapping":{"str":"shortReadOfBlock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectId:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid id: \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:722","type":"CtThrowImpl","sourcecode":"throw new java.io.EOFException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.storage.dfs.DfsText.org.eclipse.jgit.internal.storage.dfs.DfsText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(long), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackName(), java.lang.Long.java.lang.Long.valueOf(0), java.lang.Long.java.lang.Long.valueOf(0)))"},"status":-2},{"failures":[],"tindex":"2e965080-c827-11e4-ac26-ef73a6950692","variableMapping":{"line":"objectAtHasBadZlibStream","comment":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.Transport:162","type":"CtIfImpl","sourcecode":"if (int != (-1))\n    java.lang.String = java.lang.String.substring(0, int).trim();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:506","type":"CtIfImpl","sourcecode":"if (long <= (byte[].int)) {\n    if (!boolean) {\n        long long = long;\n        long long = long;\n        while (long > 0) {\n            final int int = java.lang.Math.((int)(java.lang.Math.min(long, byte[].int)));\n            org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n            long += int;\n            long -= int;\n        }\n    } \n    org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.file.LocalObjectToPack, long);\n    org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte[], 0, ((int)(long)));\n} else {\n    org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.file.LocalObjectToPack, long);\n    long long = long;\n    long long = long;\n    while (long > 0) {\n        final int int = java.lang.Math.((int)(java.lang.Math.min(long, byte[].int)));\n        org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.file.WindowCursor);\n        if (boolean)\n            java.util.zip.CRC32.update(byte[], 0, int);\n        \n        org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte[], 0, int);\n        long += int;\n        long -= int;\n    }\n    if (boolean && ((java.util.zip.CRC32.getValue()) != long)) {\n        throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long), org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()));\n    } \n}"},"status":-2},{"failures":[],"tindex":"2e965081-c827-11e4-ac26-475b20a1a60d","variableMapping":{"xmlInRead":"time"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:477","type":"CtIfImpl","sourcecode":"if ((int) != 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:588","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.blame.Candidate org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate ;  ; org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate) {\n    org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate;\n    if ((org.eclipse.jgit.blame.Candidate == null) || (int >= (org.eclipse.jgit.blame.Candidate.getTime()))) {\n        org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate;\n        org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate;\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2e965082-c827-11e4-ac26-057890147e15","variableMapping":{"name":"refAlreadyExists"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:750","type":"CtIfImpl","sourcecode":"if ((\".\".equals(java.lang.String)) || (\"..\".equals(java.lang.String)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:498","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null)\n    throw new org.eclipse.jgit.api.errors.RefAlreadyExistsException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-2},{"failures":[0,1,2,5,3,4],"tindex":"2e965083-c827-11e4-ac26-f3bca35addf8","variableMapping":{"msg":"current"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackLock:85","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"\\n\")))\n    java.lang.String += \"\\n\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:671","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.RebaseCommand.RebaseState.org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(org.eclipse.jgit.api.RebaseCommand.RebaseState.getRewrittenDir(), java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"2e965084-c827-11e4-ac26-8755987e6069","variableMapping":{"a":"result","b":"result"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.NB:65","type":"CtReturnImpl","sourcecode":"return (int & 1) - (int & 1)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:121","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2e965085-c827-11e4-ac26-9b6e25ff4c64","variableMapping":{"xorOffset":"binbufcnt","i":"binbufcnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:164","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:145","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":6,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
