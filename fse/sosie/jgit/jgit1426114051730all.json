[{"failures":[0,1,2,3,4,5,6,7],"tindex":"9a4f55a2-c840-11e4-bdc5-e50e71af7d5e","variableMapping":{"bb":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:684","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.destroy()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:168","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit())\n    break;\n"},"status":-1},{"failures":[4,5,6,0,2,7],"tindex":"9a4fcad3-c840-11e4-bdc5-a1a1689d5fb6","variableMapping":{"other":"other"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:144","type":"CtIfImpl","sourcecode":"if ((com.googlecode.javaewah.EWAHCompressedBitmap.sizeInBits()) == 0)\n    return this;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:156","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.InflatingBitSet.isEmpty()) {\n    if ((com.googlecode.javaewah.EWAHCompressedBitmap.sizeInBits()) == 0)\n        return this;\n    \n    return new org.eclipse.jgit.internal.storage.file.InflatingBitSet(com.googlecode.javaewah.EWAHCompressedBitmap);\n} "},"status":-1},{"failures":[],"tindex":"9a4fcad4-c840-11e4-bdc5-75ba7c56b167","variableMapping":{"n":"java.net.HttpURLConnection.HTTP_INTERNAL_ERROR"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:175","type":"CtIfImpl","sourcecode":"if (int < 1)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:493","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    final java.net.HttpURLConnection java.net.HttpURLConnection = org.eclipse.jgit.transport.AmazonS3.open(\"PUT\", java.lang.String, java.lang.String);\n    java.net.HttpURLConnection.setRequestProperty(\"Content-Length\", java.lang.String);\n    java.net.HttpURLConnection.setRequestProperty(\"Content-MD5\", java.lang.String);\n    java.net.HttpURLConnection.setRequestProperty(org.eclipse.jgit.transport.AmazonS3.java.lang.String, java.lang.String);\n    org.eclipse.jgit.transport.WalkEncryption.request(java.net.HttpURLConnection, org.eclipse.jgit.transport.AmazonS3.java.lang.String);\n    org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection);\n    java.net.HttpURLConnection.setDoOutput(true);\n    java.net.HttpURLConnection.setFixedLengthStreamingMode(((int)(long)));\n    org.eclipse.jgit.lib.ProgressMonitor.beginTask(java.lang.String, ((int)(long / 1024)));\n    final java.io.OutputStream java.io.OutputStream = java.net.HttpURLConnection.getOutputStream();\n    try {\n        org.eclipse.jgit.util.TemporaryBuffer.writeTo(java.io.OutputStream, org.eclipse.jgit.lib.ProgressMonitor);\n    } finally {\n        org.eclipse.jgit.lib.ProgressMonitor.endTask();\n        java.io.OutputStream.close();\n    }\n    switch (org.eclipse.jgit.util.HttpSupport.org.eclipse.jgit.util.HttpSupport.response(java.net.HttpURLConnection)) {\n        case java.net.HttpURLConnection.int :\n            return ;\n        case java.net.HttpURLConnection.int :\n            continue;\n        default :\n            throw org.eclipse.jgit.transport.AmazonS3.error(\"Writing\", java.lang.String, java.net.HttpURLConnection);\n    }\n}"},"status":-2},{"failures":[0,2,4,5,6,7],"tindex":"9a4fcad5-c840-11e4-bdc5-df23e36407fe","variableMapping":{"n":"mode"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectLoader:255","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:210","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))) {\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.MutableObjectId.toObjectId();\n    throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.lib.ObjectId , org.eclipse.jgit.lib.Constants.java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"9a4fcad6-c840-11e4-bdc5-7b275ff96dfa","variableMapping":{"lenbuffer":"s","o":"length"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineOut:168","type":"CtWhileImpl","sourcecode":"while (int >= 0)\n    byte[][int--] = '0';"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:467","type":"CtForImpl","sourcecode":"for (int = int ; (int < (byte[].int)) && ((byte[][int]) != '/') ; int++) {\n}"},"status":-2},{"failures":[8,9,10,0,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,4,5,6,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,2,7,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"9a4fcad7-c840-11e4-bdc5-4fc858cf15ab","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:294","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BasePackConnection.endOut()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:175","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl();\n} catch (org.eclipse.jgit.errors.TransportException org.eclipse.jgit.errors.TransportException) {\n    org.eclipse.jgit.transport.BasePackConnection.close();\n    throw org.eclipse.jgit.errors.TransportException;\n} catch (java.io.IOException java.io.IOException) {\n    org.eclipse.jgit.transport.BasePackConnection.close();\n    throw new org.eclipse.jgit.errors.TransportException(java.io.IOException.getMessage() , java.io.IOException);\n} catch (java.lang.RuntimeException java.lang.RuntimeException) {\n    org.eclipse.jgit.transport.BasePackConnection.close();\n    throw new org.eclipse.jgit.errors.TransportException(java.lang.RuntimeException.getMessage() , java.lang.RuntimeException);\n}"},"status":-1},{"failures":[],"tindex":"9a4fcad8-c840-11e4-bdc5-ffce60c5674f","variableMapping":{"org.eclipse.jgit.transport.NetRC.NETRC":"org.eclipse.jgit.fnmatch.FileNameMatcher.characterClassStartPattern"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRC:217","type":"CtLocalVariableImpl","sourcecode":"java.util.regex.Matcher java.util.regex.Matcher = org.eclipse.jgit.transport.NetRC.java.util.regex.Pattern.matcher(\"\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:196","type":"CtLocalVariableImpl","sourcecode":"final java.util.regex.Matcher java.util.regex.Matcher = org.eclipse.jgit.fnmatch.FileNameMatcher.java.util.regex.Pattern.matcher(java.lang.String)"},"status":-2},{"failures":[2,4,5,6,0,7],"tindex":"9a4fcad9-c840-11e4-bdc5-abc7c31e631f","variableMapping":{"reader":"reader"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:380","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectReader.walkAdviceEnd()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1298","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectReader.close()"},"status":-1},{"failures":[2,7,4,5,6,0],"tindex":"9a4fcada-c840-11e4-bdc5-612b139c7f08","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"packName","n":"packName"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:294","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:229","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.internal.storage.pack.PackExt.org.eclipse.jgit.internal.storage.pack.PackExt.equals(org.eclipse.jgit.internal.storage.pack.PackExt))) {\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.GC.nameFor(java.lang.String, (\".\" + (org.eclipse.jgit.internal.storage.pack.PackExt.getExtension())));\n    org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(java.io.File, int);\n} "},"status":-1},{"failures":[],"tindex":"9a4ff1eb-c840-11e4-bdc5-450cc50bf77a","variableMapping":{"curs":"reader"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:350","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCursor.pin(this, 0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1823","type":"CtIfImpl","sourcecode":"if ((boolean) && (!(java.util.Set<org.eclipse.jgit.revwalk.RevTree>.isEmpty()))) {\n    org.eclipse.jgit.internal.storage.pack.BaseSearch org.eclipse.jgit.internal.storage.pack.BaseSearch = new org.eclipse.jgit.internal.storage.pack.BaseSearch(org.eclipse.jgit.lib.ProgressMonitor , java.util.Set<org.eclipse.jgit.revwalk.RevTree> , org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.pack.ObjectToPack> , java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack> , org.eclipse.jgit.lib.ObjectReader);\n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject;\n    while ((org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.nextObject()) != null) {\n        if (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag.org.eclipse.jgit.revwalk.RevFlag))\n            continue;\n        \n        if (org.eclipse.jgit.internal.storage.pack.PackWriter.exclude(org.eclipse.jgit.revwalk.RevObject))\n            continue;\n        \n        int int = org.eclipse.jgit.revwalk.ObjectWalk.getPathHashCode();\n        byte[] byte[] = org.eclipse.jgit.revwalk.ObjectWalk.getPathBuffer();\n        int int = org.eclipse.jgit.revwalk.ObjectWalk.getPathLength();\n        org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(org.eclipse.jgit.revwalk.RevObject.getType(), byte[], int, int);\n        org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject, int);\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n} else {\n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject;\n    while ((org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.nextObject()) != null) {\n        if (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag.org.eclipse.jgit.revwalk.RevFlag))\n            continue;\n        \n        if (org.eclipse.jgit.internal.storage.pack.PackWriter.exclude(org.eclipse.jgit.revwalk.RevObject))\n            continue;\n        \n        org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.revwalk.ObjectWalk.getPathHashCode());\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":90,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":87,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":42,"org.eclipse.jgit.api.FetchCommandTest.testFetch":53,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":77,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":75,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":60,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":97,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":73,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":95,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":64,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":74,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":11,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":50,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":80,"org.eclipse.jgit.api.PushCommandTest.testPush":15,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":33,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":79,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":24,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":14,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":39,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":61,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":72,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":5,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":92,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":63,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":98,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":36,"org.eclipse.jgit.api.GitConstructionTest.testWrap":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":89,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":25,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":44,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":45,"org.eclipse.jgit.api.GitConstructionTest.testOpen":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":65,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":99,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":4,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":46,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":49,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":85,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":82,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":54,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":57,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":20,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":81,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":94,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":91,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":7,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":16,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":1,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":84,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":31,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":62,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":13,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":18,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":96,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":35,"org.eclipse.jgit.transport.TestProtocolTest.testPush":48,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":41,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":68,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":86,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":29,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_Copy":3,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":67,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":17,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":58,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":88,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":71,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":38,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":70,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":100,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":27}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
