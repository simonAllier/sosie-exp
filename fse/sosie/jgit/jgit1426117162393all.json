[{"failures":[],"tindex":"d86eca9b-c847-11e4-a7ca-d9feb1a52e10","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriter:129","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:368","type":"CtReturnImpl","sourcecode":"return -(org.eclipse.jgit.revwalk.RevCommit.getCommitTime())"},"status":-2},{"failures":[],"tindex":"d86eca9c-c847-11e4-a7ca-81a927715066","variableMapping":{"srcParent":"srcCommit","merger":"merger"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:155","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:337","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.Merger instanceof org.eclipse.jgit.merge.ResolveMerger) {\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.Merger));\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , \"HEAD\" , org.eclipse.jgit.lib.Ref.getName() });\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    boolean = org.eclipse.jgit.merge.Merger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit);\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<?>> = org.eclipse.jgit.merge.ResolveMerger.getMergeResults();\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n    java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n} else\n    boolean = org.eclipse.jgit.merge.Merger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit);\n"},"status":-2},{"failures":[],"tindex":"d86eca9d-c847-11e4-a7ca-274973b9b0f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:238","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid tree\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:478","type":"CtThrowImpl","sourcecode":"throw org.eclipse.jgit.errors.TransportException"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d86eca9e-c847-11e4-a7ca-3b01fa31f87d","variableMapping":{"path":"tmp"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:308","type":"CtTryImpl","sourcecode":"try {\n    return java.io.File.getCanonicalFile();\n} catch (java.io.IOException java.io.IOException) {\n    return java.io.File.getAbsoluteFile();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter:217","type":"CtReturnImpl","sourcecode":"return java.io.File"},"status":-1},{"failures":[],"tindex":"d86eca9f-c847-11e4-a7ca-51b7ab12f5fa","variableMapping":{"pattern":"shortReadOfBlock","this":"this","cannotMatchOnEmptyString":"shortReadOfBlock"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.AuthorRevFilter:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:247","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.io.EOFException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2},{"failures":[3,0,1,2,5,4],"tindex":"d86ecaa0-c847-11e4-a7ca-3b879c074683","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:650","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.update(byte[], 0, int)"},"status":-1},{"failures":[6,7,8,9,10,11,0,12,1,2,3,13,14,15,5,4,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"d86ecaa1-c847-11e4-a7ca-55a70acbd918","variableMapping":{"startCommit":"commit"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:606","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.revwalk.RevCommit = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:577","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0)"},"status":-1},{"failures":[],"tindex":"d86ecaa2-c847-11e4-a7ca-9f34b592842e","variableMapping":{"path":"org.eclipse.jgit.transport.PacketLineIn.END"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:308","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"/\"))\n    return java.lang.String;\nelse\n    return (java.lang.String) + \"/\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:171","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.PacketLineIn.java.lang.String"},"status":-2},{"failures":[],"tindex":"d86ecaa3-c847-11e4-a7ca-23f38d6d7c5b","variableMapping":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"pathOffset"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:626","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.Constants.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:746","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.treewalk.AbstractTreeIterator.int"},"status":-2},{"failures":[],"tindex":"d86ecaa4-c847-11e4-a7ca-a1bf4229fb16","variableMapping":{"p":"p","parent":"parent","currPtr":"prevPtr","nextPtr":"currPtr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:169","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.AbstractTreeIterator) == null) {\n    org.eclipse.jgit.treewalk.CanonicalTreeParser.int = org.eclipse.jgit.treewalk.CanonicalTreeParser.int;\n    return org.eclipse.jgit.treewalk.CanonicalTreeParser;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:166","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser.int) == (org.eclipse.jgit.treewalk.CanonicalTreeParser.byte[].int)) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.AbstractTreeIterator) == null) {\n            org.eclipse.jgit.treewalk.CanonicalTreeParser.int = org.eclipse.jgit.treewalk.CanonicalTreeParser.int;\n            return org.eclipse.jgit.treewalk.CanonicalTreeParser;\n        } \n        org.eclipse.jgit.treewalk.CanonicalTreeParser = ((org.eclipse.jgit.treewalk.CanonicalTreeParser)(org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.AbstractTreeIterator));\n        continue;\n    } \n    org.eclipse.jgit.treewalk.CanonicalTreeParser.int = org.eclipse.jgit.treewalk.CanonicalTreeParser.int;\n    org.eclipse.jgit.treewalk.CanonicalTreeParser.int = org.eclipse.jgit.treewalk.CanonicalTreeParser.int;\n    org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry();\n    return org.eclipse.jgit.treewalk.CanonicalTreeParser;\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":13,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":11,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":19,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":20,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":9,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":26,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":22,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":34,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":28,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":31,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":12,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":27,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":32,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":30,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":21}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
