[{"failures":[0,1,2,3,4,5],"tindex":"320fcc5d-c85c-11e4-89d9-fdb399d6da0a","variableMapping":{"c":"builder"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:241","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setCommitter(org.eclipse.jgit.lib.CommitBuilder.getAuthor())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:342","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setParentIds(new org.eclipse.jgit.lib.ObjectId[0])"},"status":-1},{"failures":[],"tindex":"3211ef3e-c85c-11e4-89d9-0381283c178d","variableMapping":{"remoteUrl":"blameNotCommittedYet"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:508","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"/\")))\n    java.lang.String = java.lang.String + \"/\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:290","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"3211ef3f-c85c-11e4-89d9-07a3600ce13e","variableMapping":{"key":"pStageShifted"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:301","type":"CtAssignmentImpl","sourcecode":"int = (int * -1640562687) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:699","type":"CtAssignmentImpl","sourcecode":"int = int & int"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,1,43,44,45,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,2,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,3,4,5],"tindex":"3211ef40-c85c-11e4-89d9-b9af9a873a4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:909","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.transport.PackParser.onBeginWholeObject(long, int, long);\n        org.eclipse.jgit.transport.PackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, byte[], 0, int);\n        org.eclipse.jgit.transport.PackParser.whole(long, int, long);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = org.eclipse.jgit.transport.PackParser.readFrom(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source);\n            byte[][int++] = ((byte)(int));\n            long long = int & 127;\n            while ((int & 128) != 0) {\n                long += 1;\n                int = org.eclipse.jgit.transport.PackParser.readFrom(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source);\n                byte[][int++] = ((byte)(int));\n                long <<= 7;\n                long += int & 127;\n            }\n            final long long = long - long;\n            org.eclipse.jgit.transport.PackParser.onBeginOfsDelta(long, long, long);\n            org.eclipse.jgit.transport.PackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, byte[], 0, int);\n            org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, long);\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta org.eclipse.jgit.transport.PackParser.UnresolvedDelta = org.eclipse.jgit.transport.PackParser.onEndDelta();\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta.long = long;\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta.org.eclipse.jgit.transport.PackParser.UnresolvedDelta = org.eclipse.jgit.transport.LongMap<org.eclipse.jgit.transport.PackParser.UnresolvedDelta>.put(long, org.eclipse.jgit.transport.PackParser.UnresolvedDelta);\n            (int)++;\n            break;\n        }\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = org.eclipse.jgit.transport.PackParser.fill(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, 20);\n            final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int);\n            java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], int, 20);\n            int += 20;\n            org.eclipse.jgit.transport.PackParser.use(20);\n            org.eclipse.jgit.transport.PackParser.DeltaChain org.eclipse.jgit.transport.PackParser.DeltaChain = org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.transport.PackParser.DeltaChain>.get(org.eclipse.jgit.lib.ObjectId);\n            if (org.eclipse.jgit.transport.PackParser.DeltaChain == null) {\n                org.eclipse.jgit.transport.PackParser.DeltaChain = new org.eclipse.jgit.transport.PackParser.DeltaChain(org.eclipse.jgit.lib.ObjectId);\n                org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.transport.PackParser.DeltaChain>.add(org.eclipse.jgit.transport.PackParser.DeltaChain);\n            } \n            org.eclipse.jgit.transport.PackParser.onBeginRefDelta(long, org.eclipse.jgit.lib.ObjectId, long);\n            org.eclipse.jgit.transport.PackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, byte[], 0, int);\n            org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, long);\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta org.eclipse.jgit.transport.PackParser.UnresolvedDelta = org.eclipse.jgit.transport.PackParser.onEndDelta();\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta.long = long;\n            org.eclipse.jgit.transport.PackParser.DeltaChain.add(org.eclipse.jgit.transport.PackParser.UnresolvedDelta);\n            (int)++;\n            break;\n        }\n    default :\n        throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int)));\n}"},"status":-1},{"failures":[],"tindex":"3211ef41-c85c-11e4-89d9-437e590bbcfb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS:1082","type":"CtLocalVariableImpl","sourcecode":"long long = 0L"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:105","type":"CtLocalVariableImpl","sourcecode":"final long long = java.lang.System.java.lang.System.currentTimeMillis()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"3211ef42-c85c-11e4-89d9-71881f268f4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:115","type":"CtIfImpl","sourcecode":"if (boolean && (!boolean)) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"3211ef43-c85c-11e4-89d9-95f934ab16ac","variableMapping":{"p":"b"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:239","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsPackDescription org.eclipse.jgit.internal.storage.dfs.DfsPackDescription = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackDescription()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackDescription:273","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsPackDescription org.eclipse.jgit.internal.storage.dfs.DfsPackDescription = ((org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)(java.lang.Object))"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"3211ef44-c85c-11e4-89d9-8b6bd161d1b7","variableMapping":{"org.eclipse.jgit.lib.InflaterCache.openInflaterCount":"lastSlash"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.InflaterCache:76","type":"CtUnaryOperatorImpl","sourcecode":"--(org.eclipse.jgit.lib.InflaterCache.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefDatabase:143","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.lastIndexOf('/', (int - 1))"},"status":-1},{"failures":[3,4,5,0,1,2],"tindex":"3211ef45-c85c-11e4-89d9-1f9e5ed25836","variableMapping":{"eb":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:249","type":"CtIfImpl","sourcecode":"if (int < 4)\n    int = 4;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:223","type":"CtWhileImpl","sourcecode":"while ((int = java.io.FileInputStream.read(byte[])) >= 0)\n    java.io.FileOutputStream.write(byte[], 0, int);"},"status":-1},{"failures":[0,2,1,3,4,5],"tindex":"3211ef46-c85c-11e4-89d9-d18f0814f350","variableMapping":{"walk":"treeWalk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:362","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.TreeWalk.isSubtree())\n    org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:763","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))) {\n    org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlag);\n    org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n} "},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":6,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":129,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":82,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":41,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":103,"org.eclipse.jgit.api.FetchCommandTest.testFetch":96,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":92,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":22,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":89,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":108,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":16,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":114,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":62,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":86,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":87,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":14,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":75,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":112,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":127,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":88,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":21,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":135,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":94,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":58,"org.eclipse.jgit.api.PushCommandTest.testPush":68,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":48,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":39,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":40,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":120,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":38,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":67,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":37,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":118,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":116,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":31,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":128,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":65,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":126,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":64,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":109,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":85,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":11,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":98,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":111,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":17,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":61,"org.eclipse.jgit.api.GitConstructionTest.testWrap":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":8,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":50,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":43,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":104,"org.eclipse.jgit.api.GitConstructionTest.testOpen":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":91,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":113,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":44,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":134,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":81,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":78,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":97,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":100,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":115,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":29,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":125,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":121,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":27,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":77,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":12,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":93,"org.eclipse.jgit.transport.PackParserTest.test1":122,"org.eclipse.jgit.api.GitConstructionTest.testClose":45,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.transport.PackParserTest.test2":123,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":69,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":130,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":107,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":80,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":56,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":110,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":15,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":71,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":60,"org.eclipse.jgit.transport.TestProtocolTest.testPush":133,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":131,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":102,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":105,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":74,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":35,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":34,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":83,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":42,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":73,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":70,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":101,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":28,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":20,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":84,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":119,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":63,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":76,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":124,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":72,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":19,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":132,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":52}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
