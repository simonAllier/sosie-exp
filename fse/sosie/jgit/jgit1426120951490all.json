[{"failures":[0,1,2,3,4,5,6],"tindex":"aac20b82-c850-11e4-9298-9f4ee475e020","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:320","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectLoader != null) {\n    java.io.InputStream java.io.InputStream = org.eclipse.jgit.lib.ObjectLoader.openStream();\n    try {\n        org.eclipse.jgit.attributes.AttributesNode.parse(java.io.InputStream);\n    } finally {\n        java.io.InputStream.close();\n    }\n} "},"status":-1},{"failures":[0,1,2,4,6,5],"tindex":"aac20b83-c850-11e4-9298-395fa781956d","variableMapping":{"pckOut":"pckOut"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:642","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.flush()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportGitAnon:227","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportGitAnon.service(\"git-receive-pack\", org.eclipse.jgit.transport.PacketLineOut)"},"status":-1},{"failures":[],"tindex":"aac23294-c850-11e4-9298-85d36cde1933","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.transport.URIish.getHost()"},"status":-2},{"failures":[],"tindex":"aac23295-c850-11e4-9298-91ec8b81f4c9","variableMapping":{"unpackLine":"message"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:317","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(\"unpack \".length())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.ChangeIdUtil.org.eclipse.jgit.util.ChangeIdUtil.clean(java.lang.String)"},"status":-2},{"failures":[0,1,2,4,7,8,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"aac23296-c850-11e4-9298-f959480c8817","variableMapping":{"g":"maxChainLength"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:582","type":"CtIfImpl","sourcecode":"if (int == 4)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:189","type":"CtForImpl","sourcecode":"SCAN : for (int int = (org.eclipse.jgit.diff.Edit.int) - 1 ; (org.eclipse.jgit.diff.Edit.int) <= int ; int--) {\n    final int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.hash(org.eclipse.jgit.diff.HashedSequence<S>, int);\n    int int = 0;\n    for (int int = int[][int] ; int != 0 ; ) {\n        final long long = long[][int];\n        if (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long), org.eclipse.jgit.diff.HashedSequence<S>, int)) {\n            int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.(org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)) + 1;\n            if ((org.eclipse.jgit.diff.HistogramDiffIndex.int) < int)\n                int = org.eclipse.jgit.diff.HistogramDiffIndex.int;\n            \n            long[][int] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long), int, int);\n            int[][(int - (int))] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long);\n            int[][(int - (int))] = int;\n            continue SCAN;\n        } \n        int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long);\n        int++;\n    }\n    if (int == (int))\n        return false;\n    \n    final int int = ++(int);\n    if (int == (long[].int)) {\n        int int = java.lang.Math.java.lang.Math.min(((long[].int) << 1), (1 + (org.eclipse.jgit.diff.Edit.getLengthA())));\n        long[] long[] = new long[int];\n        java.lang.System.java.lang.System.arraycopy(long[], 0, long[], 0, long[].int);\n        long[] = long[];\n    } \n    long[][int] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(int[][int], int, 1);\n    int[][(int - (int))] = int;\n    int[][int] = int;\n}"},"status":-1},{"failures":[4,0,1,2,6,5],"tindex":"aac23297-c850-11e4-9298-6dc11eb341c3","variableMapping":{"this":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.SymbolicRef:102","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.SymbolicRef.getLeaf()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:225","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = new org.eclipse.jgit.lib.ObjectIdRef.Unpeeled(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-1},{"failures":[0,1,2,4,6,5],"tindex":"aac23298-c850-11e4-9298-fb43a7c90681","variableMapping":{"r":"canonLen","pos":"canonLen"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:217","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:399","type":"CtAssignmentImpl","sourcecode":"long = org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator.computeLength(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"aac23299-c850-11e4-9298-0f9d0a087d2c","variableMapping":{"remotePrefix":"newPath","refName":"newPath","remote":"newPath"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1304","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffEntry:381","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"aac2329a-c850-11e4-9298-6ff1f279d029","variableMapping":{"this":"matches"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:211","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator.eof())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:250","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) || (org.eclipse.jgit.treewalk.AbstractTreeIterator.eof()))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"aac2329b-c850-11e4-9298-016a059a34fb","variableMapping":{"monitor":"monitor"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:558","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor.isCancelled())\n    throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:226","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor.isCancelled())\n    throw org.eclipse.jgit.errors.StopWalkException.org.eclipse.jgit.errors.StopWalkException;\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_DuplicateAButCommonUniqueInB":20,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":22,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":6,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks":14,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":13,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_ReplaceCommonDelete":17,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":10,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":11,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":7,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":18,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonGrowsPrefixAndSuffix":24,"org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules":3,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":23,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InsertNearCommonTail":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":16,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonReplaceCommonDeleteCommon":25,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":9,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":12,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":8}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
