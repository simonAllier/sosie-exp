[{"failures":[],"tindex":"8843943f-c870-11e4-999f-85d6b18de763","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:321","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:113","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.lib.RepositoryBuilder.build()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"8843bb50-c870-11e4-999f-cd09a1ff23f8","variableMapping":{"data":"ret"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:746","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:178","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.toString(org.eclipse.jgit.lib.ObjectId))"},"status":-1},{"failures":[],"tindex":"8843bb51-c870-11e4-999f-471875c92e2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileObjectDatabase:69","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.WindowCursor(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:522","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newReader()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"8843bb52-c870-11e4-999f-df7b67b926cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:165","type":"CtWhileImpl","sourcecode":"while (0 < long) {\n    int int = java.io.InputStream.read(byte[], 0, java.lang.Math.((int)(java.lang.Math.min(byte[].int, long))));\n    if (int <= 0)\n        throw new java.io.EOFException();\n    \n    java.security.MessageDigest.update(byte[], 0, int);\n    org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.java.util.zip.DeflaterOutputStream.write(byte[], 0, int);\n    long -= int;\n}"},"status":-1},{"failures":[],"tindex":"8843bb53-c870-11e4-999f-610354485be3","variableMapping":{"number":"shift"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:780","type":"CtAssertImpl","sourcecode":"assert int >= 0"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:317","type":"CtWhileImpl","sourcecode":"while ((int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int)) >= (org.eclipse.jgit.revwalk.RevObjectList.int)) {\n    org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) + (org.eclipse.jgit.revwalk.RevObjectList.int)));\n    org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][0] = org.eclipse.jgit.revwalk.RevObjectList.Block;\n    org.eclipse.jgit.revwalk.RevObjectList.Block = org.eclipse.jgit.revwalk.RevObjectList.Block;\n}"},"status":-2},{"failures":[],"tindex":"8843bb54-c870-11e4-999f-5599c1eb01cf","variableMapping":{"first":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1329","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.this.next()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:144","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[][--(int)] = org.eclipse.jgit.revwalk.RevCommit"},"status":-2},{"failures":[],"tindex":"8843bb55-c870-11e4-999f-91d7897f24f2","variableMapping":{"currPtr":"si","length":"fi","raw":"firstBuffer"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:272","type":"CtReturnImpl","sourcecode":"return (int) == (byte[].int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectId:130","type":"CtReturnImpl","sourcecode":"return ((((((((((((((((((((byte[][int]) == (byte[][int])) && ((byte[][(int + 1)]) == (byte[][(int + 1)]))) && ((byte[][(int + 2)]) == (byte[][(int + 2)]))) && ((byte[][(int + 3)]) == (byte[][(int + 3)]))) && ((byte[][(int + 4)]) == (byte[][(int + 4)]))) && ((byte[][(int + 5)]) == (byte[][(int + 5)]))) && ((byte[][(int + 6)]) == (byte[][(int + 6)]))) && ((byte[][(int + 7)]) == (byte[][(int + 7)]))) && ((byte[][(int + 8)]) == (byte[][(int + 8)]))) && ((byte[][(int + 9)]) == (byte[][(int + 9)]))) && ((byte[][(int + 10)]) == (byte[][(int + 10)]))) && ((byte[][(int + 11)]) == (byte[][(int + 11)]))) && ((byte[][(int + 12)]) == (byte[][(int + 12)]))) && ((byte[][(int + 13)]) == (byte[][(int + 13)]))) && ((byte[][(int + 14)]) == (byte[][(int + 14)]))) && ((byte[][(int + 15)]) == (byte[][(int + 15)]))) && ((byte[][(int + 16)]) == (byte[][(int + 16)]))) && ((byte[][(int + 17)]) == (byte[][(int + 17)]))) && ((byte[][(int + 18)]) == (byte[][(int + 18)]))) && ((byte[][(int + 19)]) == (byte[][(int + 19)]))"},"status":-2},{"failures":[5,4,3,12,13,14,15,16,17,18,19,20,21,22,23,24,0,1,2,25,26,27,28,29,30,31,32],"tindex":"8843bb56-c870-11e4-999f-153e58687982","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:578","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit)"},"status":-1},{"failures":[],"tindex":"8843bb57-c870-11e4-999f-5be5a4d2e6e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:547","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException = new java.io.IOException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefRename:153","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-2},{"failures":[0,1,2,3,5,4,33,34,35,36,37,38,39,40],"tindex":"8843bb58-c870-11e4-999f-05034a695fc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:251","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.beginObject(int, long)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":18,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":35,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":6,"org.eclipse.jgit.transport.TestProtocolTest.testPush":34,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":29,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":15,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":27,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":11,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":26,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":37,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterDiscardsPack":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":17,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":24,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":7,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":20,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":8,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":21,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":30,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":39,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":10,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":23,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":16}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
