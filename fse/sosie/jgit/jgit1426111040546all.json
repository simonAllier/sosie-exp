[{"failures":[0,1,2,3,4,5],"tindex":"975b94c4-c839-11e4-94fb-abadfadbd262","variableMapping":{"pckOut":"plo"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:288","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.end()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1483","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.setFlushOnEnd(false)"},"status":-1},{"failures":[0,1,5,2,3,4],"tindex":"975b94c5-c839-11e4-94fb-f34a451ef2b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.StreamCopyThread:149","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[1,0,2,3,4,5],"tindex":"975b94c6-c839-11e4-94fb-ed4a6b087a0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:291","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNote(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)"},"status":-1},{"failures":[2,3,4,0,1,5],"tindex":"975b94c7-c839-11e4-94fb-4d3575f098bd","variableMapping":{"walker":"walk"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1670","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.setRetainBody(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:426","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommitList<org.eclipse.jgit.revwalk.RevCommit>)"},"status":-1},{"failures":[],"tindex":"975b94c8-c839-11e4-94fb-b9e62c659aa7","variableMapping":{"cx":"pathLen","org.eclipse.jgit.revplot.AbstractPlotRenderer.LANE_WIDTH":"pathOffset","myLaneX":"pathLen","ix":"pathOffset"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:124","type":"CtIfImpl","sourcecode":"if (int < int)\n    int = int - ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2);\nelse\n    int = int + ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:210","type":"CtForImpl","sourcecode":"for (int int = int ; int < (int) ; int++)\n    org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte[][int]);"},"status":-2},{"failures":[5,2,3,4,0,1],"tindex":"975b94c9-c839-11e4-94fb-bbf307f29745","variableMapping":{"org.eclipse.jgit.transport.PreReceiveHook.NULL":"hook","h":"hook","preReceive":"hook"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:106","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.PreReceiveHook = org.eclipse.jgit.transport.PreReceiveHook != null ? org.eclipse.jgit.transport.PreReceiveHook : org.eclipse.jgit.transport.PreReceiveHook.org.eclipse.jgit.transport.PreReceiveHook"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PreReceiveHookChain:70","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.PreReceiveHook[][int++] = org.eclipse.jgit.transport.PreReceiveHook"},"status":-1},{"failures":[5,2,3,4,1,6,7,0],"tindex":"975b94ca-c839-11e4-94fb-c7f2eda173e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:295","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final V[] V[] = V[][][int];\n    final V[] V[] = org.eclipse.jgit.lib.ObjectIdOwnerMap<V>.newSegment();\n    for (int int = 0 ; int < (V[].int) ; int++) {\n        V V = null;\n        V V = null;\n        V V;\n        for (V V = V[][int] ; V != null ; V = V) {\n            V = ((V)(V.org.eclipse.jgit.lib.ObjectIdOwnerMap.Entry));\n            if (((V.int) & int) == 0) {\n                V.org.eclipse.jgit.lib.ObjectIdOwnerMap.Entry = V;\n                V = V;\n            } else {\n                V.org.eclipse.jgit.lib.ObjectIdOwnerMap.Entry = V;\n                V = V;\n            }\n        }\n        V[][int] = V;\n        V[][int] = V;\n    }\n    V[][][(int + int)] = V[];\n}"},"status":-1},{"failures":[5,8,0,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,1,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,2,3,4],"tindex":"975b94cb-c839-11e4-94fb-779b65c781f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:414","type":"CtTryImpl","sourcecode":"try {\n    final org.eclipse.jgit.internal.storage.file.PackIndexWriter org.eclipse.jgit.internal.storage.file.PackIndexWriter;\n    if ((int) <= 0)\n        org.eclipse.jgit.internal.storage.file.PackIndexWriter = org.eclipse.jgit.internal.storage.file.PackIndexWriter.org.eclipse.jgit.internal.storage.file.PackIndexWriter.createOldestPossible(java.io.FileOutputStream, java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>);\n    else\n        org.eclipse.jgit.internal.storage.file.PackIndexWriter = org.eclipse.jgit.internal.storage.file.PackIndexWriter.org.eclipse.jgit.internal.storage.file.PackIndexWriter.createVersion(java.io.FileOutputStream, int);\n    \n    org.eclipse.jgit.internal.storage.file.PackIndexWriter.write(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>, byte[]);\n    java.io.FileOutputStream.getChannel().force(true);\n} finally {\n    java.io.FileOutputStream.close();\n}"},"status":-1},{"failures":[1,0,5,106,107,108,109,110,111,112,2,3,4],"tindex":"975b94cc-c839-11e4-94fb-6da9f59412c8","variableMapping":{"childOnLane":"id","child":"id"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:223","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit == org.eclipse.jgit.revplot.PlotCommit)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:348","type":"CtIfImpl","sourcecode":"if (java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))\n    continue;\n"},"status":-1},{"failures":[5,0,1,113,114,2,3,4],"tindex":"975b94cd-c839-11e4-94fb-bf2e225f42a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:589","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.api.CommitCommand org.eclipse.jgit.api.CommitCommand = new org.eclipse.jgit.api.Git(org.eclipse.jgit.lib.Repository).commit();\n    org.eclipse.jgit.api.CommitCommand.setAuthor(org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent());\n    org.eclipse.jgit.api.CommitCommand.setReflogComment((((org.eclipse.jgit.api.RebaseCommand.java.lang.String) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())));\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CommitCommand.call();\n} else\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CherryPickResult.getNewHead();\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":91,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":88,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":111,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":41,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":61,"org.eclipse.jgit.api.FetchCommandTest.testFetch":24,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":72,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":51,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":83,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":10,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":110,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects":7,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":85,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":98,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":34,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":45,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":96,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":12,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":47,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":82,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":53,"org.eclipse.jgit.api.PushCommandTest.testPush":18,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":71,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":113,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":86,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":40,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":105,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":38,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":78,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":77,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":104,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":11,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":93,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":99,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":74,"org.eclipse.jgit.api.GitConstructionTest.testWrap":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":90,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":63,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":19,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":62,"org.eclipse.jgit.api.GitConstructionTest.testOpen":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":50,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":13,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":80,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":100,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":59,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned":108,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":56,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":35,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":102,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":87,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":112,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":55,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":94,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":92,"org.eclipse.jgit.transport.PackParserTest.test1":14,"org.eclipse.jgit.api.GitConstructionTest.testClose":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.transport.PackParserTest.test2":15,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":58,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":69,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":97,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":73,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned":109,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":60,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":31,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":106,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":66,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":67,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects":6,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":84,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":81,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":89,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":43,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":68,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":76,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":30,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":101,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":79,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":65}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
