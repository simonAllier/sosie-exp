[{"failures":[],"tindex":"626113ae-c82d-11e4-8ce1-cfa2f4a0bfa7","variableMapping":{"fileMode":"foundNew","off":"foundNew","on":"foundNew"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:300","type":"CtAssignmentImpl","sourcecode":"boolean = boolean && (!boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:783","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"62613abf-c82d-11e4-8ce1-d56bbc2790bd","variableMapping":{"headCommit":"newHead","walk":"revWalk","newCommit":"newHead"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1205","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevWalk.isMergedInto(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit))\n    return org.eclipse.jgit.revwalk.RevCommit;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:142","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) != 1)\n        throw new org.eclipse.jgit.api.errors.MultipleParentsNotAllowedException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit.name(), java.lang.Integer.java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RevertCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n    java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n    java.lang.String java.lang.String = (\"Revert \\\"\" + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())) + \"\\\"\";\n    java.lang.String java.lang.String = (((java.lang.String + \"\\n\\n\") + \"This reverts commit \") + (org.eclipse.jgit.revwalk.RevCommit.getId().getName())) + \".\\n\";\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n        if (org.eclipse.jgit.lib.AnyObjectId.org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n            continue;\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.revwalk.RevCommit>.getRepository()).commit().setMessage(java.lang.String).setReflogComment((\"revert: \" + java.lang.String)).call();\n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n    } else {\n        java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n        if (java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> != null)\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        else\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        \n        if ((!(org.eclipse.jgit.merge.ResolveMerger.failed())) && (!(java.util.List<java.lang.String>.isEmpty()))) {\n            java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(java.lang.String, org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n            org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n            org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n        } \n        return null;\n    }\n}"},"status":-2},{"failures":[],"tindex":"62613ac0-c82d-11e4-8ce1-81e6bab6e83b","variableMapping":{"org.eclipse.jgit.transport.ReceiveCommand.Result.NOT_ATTEMPTED":"org.eclipse.jgit.transport.ReceiveCommand.Result.REJECTED_NONFASTFORWARD","cmd":"cmd"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1131","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.ReceiveCommand.getResult()) != (org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1218","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result)"},"status":-2},{"failures":[],"tindex":"62613ac1-c82d-11e4-8ce1-bb1b84695a41","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:696","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:146","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"62613ac2-c82d-11e4-8ce1-151d6fd5bd45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1153","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.update(1)"},"status":-2},{"failures":[],"tindex":"62613ac3-c82d-11e4-8ce1-8582fab1c139","variableMapping":{"r":"r","offset":"offset","intbuf":"intbuf"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.NB:123","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte[][(int + 2)]) & 255"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:135","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte[][(int + 6)]) & 255"},"status":-2},{"failures":[],"tindex":"62613ac4-c82d-11e4-8ce1-6d8b06a829a6","variableMapping":{"sz":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.MAX_CHAIN_LENGTH","worstCaseBlockCnt":"h"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:126","type":"CtIfImpl","sourcecode":"if (int < int)\n    int <<= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:163","type":"CtDoImpl","sourcecode":"do {\n    if ((++int) == (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int)) {\n        org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.int[][int] = 0;\n        break;\n    } \n    int = org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.int[][int];\n} while (int != 0 )"},"status":-2},{"failures":[],"tindex":"62613ac5-c82d-11e4-8ce1-8b3426ef259c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:544","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectId(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation:89","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"62613ac6-c82d-11e4-8ce1-cb7b283f6c3b","variableMapping":{"bestBitmap":"toAddCompressed","bitmap":"toAddCompressed"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:282","type":"CtAssignmentImpl","sourcecode":"com.googlecode.javaewah.EWAHCompressedBitmap = com.googlecode.javaewah.EWAHCompressedBitmap"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:136","type":"CtAssignmentImpl","sourcecode":"com.googlecode.javaewah.EWAHCompressedBitmap = org.eclipse.jgit.internal.storage.file.BitSet.toEWAHCompressedBitmap()"},"status":-2},{"failures":[],"tindex":"62613ac7-c82d-11e4-8ce1-c7fa1b8450c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:933","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.lib.Repository.readDirCache()"},"status":-2},{"failureDictionary":{}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
