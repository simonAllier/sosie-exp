[{"failures":[0,1,2,3,4,5],"tindex":"0fbf0477-c821-11e4-b915-09de6ac3996c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider:102","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.transport.CredentialItem org.eclipse.jgit.transport.CredentialItem : org.eclipse.jgit.transport.CredentialItem[]) {\n    if (org.eclipse.jgit.transport.CredentialItem instanceof org.eclipse.jgit.transport.CredentialItem.Username) {\n        ((org.eclipse.jgit.transport.CredentialItem.Username)(org.eclipse.jgit.transport.CredentialItem)).setValue(java.lang.String);\n        continue;\n    } \n    if (org.eclipse.jgit.transport.CredentialItem instanceof org.eclipse.jgit.transport.CredentialItem.Password) {\n        ((org.eclipse.jgit.transport.CredentialItem.Password)(org.eclipse.jgit.transport.CredentialItem)).setValue(char[]);\n        continue;\n    } \n    if (org.eclipse.jgit.transport.CredentialItem instanceof org.eclipse.jgit.transport.CredentialItem.StringType) {\n        if (org.eclipse.jgit.transport.CredentialItem.getPromptText().equals(\"Password: \")) {\n            ((org.eclipse.jgit.transport.CredentialItem.StringType)(org.eclipse.jgit.transport.CredentialItem)).setValue(new java.lang.String(char[]));\n            continue;\n        } \n    } \n    throw new org.eclipse.jgit.errors.UnsupportedCredentialItem(org.eclipse.jgit.transport.URIish , (((org.eclipse.jgit.transport.CredentialItem.getClass().getName()) + \":\") + (org.eclipse.jgit.transport.CredentialItem.getPromptText())));\n}"},"status":-1},{"failures":[6,7,0,1,3,4,5,2],"tindex":"0fbf0478-c821-11e4-b915-c7853fc5df53","variableMapping":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"destination"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:239","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[]['_'] = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:144","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = org.eclipse.jgit.util.Base64.byte"},"status":-1},{"failures":[],"tindex":"0fbf0479-c821-11e4-b915-a95d22e44119","variableMapping":{"org.eclipse.jgit.transport.NetRC.State.COMMAND":"org.eclipse.jgit.transport.NetRC.State.MACHINE","state":"org.eclipse.jgit.transport.NetRC.State.MACHINE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRC:240","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.NetRC.State = org.eclipse.jgit.transport.NetRC.State.org.eclipse.jgit.transport.NetRC.State"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.NetRC:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.String, org.eclipse.jgit.transport.NetRC.State>.put(\"machine\", org.eclipse.jgit.transport.NetRC.State.org.eclipse.jgit.transport.NetRC.State)"},"status":-2},{"failures":[8,0,2,1,9,10,11,12,13,14,15,16,17,3,4,5],"tindex":"0fbf047a-c821-11e4-b915-7b2651569b5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:1085","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"0fbf047b-c821-11e4-b915-c5d9d47d3789","variableMapping":{"cAlg":"target"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:248","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = \"PBEWithMD5AndDES\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\")))\n    java.lang.String = \"/\" + java.lang.String;\n"},"status":-1},{"failures":[0,1,3,4,5,2],"tindex":"0fbf047c-c821-11e4-b915-152de2fe367f","variableMapping":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.DO_NOT_DELTA":"p","flags":"p"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:241","type":"CtReturnImpl","sourcecode":"return ((int) & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:238","type":"CtIfImpl","sourcecode":"if ((byte[].int) < (int + (org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int))) {\n    if (((int) != 0) && ((int) < ((int) + int)))\n        return false;\n    \n    java.io.OutputStream.write(byte[], 0, int);\n    int += int;\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"0fbf047d-c821-11e4-b915-1d7bc2e6f673","variableMapping":{"walk":"walk","o":"start"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:356","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevObject)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId));\n    boolean = true;\n} else\n    org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId));\n"},"status":-2},{"failures":[],"tindex":"0fbf047e-c821-11e4-b915-eb97ebcd12a9","variableMapping":{"n":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:471","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1235","type":"CtIfImpl","sourcecode":"if ('\\\\' == int) {\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    switch (int) {\n        case -1 :\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        case '\\n' :\n            continue;\n        case 't' :\n            java.lang.StringBuilder.append('\\t');\n            continue;\n        case 'b' :\n            java.lang.StringBuilder.append('\\b');\n            continue;\n        case 'n' :\n            java.lang.StringBuilder.append('\\n');\n            continue;\n        case '\\\\' :\n            java.lang.StringBuilder.append('\\\\');\n            continue;\n        case '\\\"' :\n            java.lang.StringBuilder.append('\\\"');\n            continue;\n        default :\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Character.java.lang.Character.valueOf(((char)(int)))));\n    }\n} "},"status":-2},{"failures":[0,2,3,4,5,1],"tindex":"0fbf047f-c821-11e4-b915-5908d9c740e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DeleteTagCommand:102","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n    case IO_FAILURE :\n    case LOCK_FAILURE :\n    case REJECTED :\n        boolean = false;\n        break;\n    default :\n        break;\n}"},"status":-1},{"failures":[0,2,1,3,4,5],"tindex":"0fbf0480-c821-11e4-b915-4f43a3396ffe","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:744","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:567","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":16,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.transport.PackParserTest.test2":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":15,"org.eclipse.jgit.util.Base64Test.testEncode":6,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":11}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
