[{"failures":[],"tindex":"8c3ee3ee-c82e-11e4-9d42-d50229e26010","variableMapping":{"dst":"out","this":"out"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:135","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.util.io.TimeoutOutputStream.beginWrite();\n    java.io.OutputStream.close();\n} catch (java.io.InterruptedIOException java.io.InterruptedIOException) {\n    throw org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut();\n} finally {\n    org.eclipse.jgit.util.io.TimeoutOutputStream.endWrite();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:538","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.Heap.writeTo(java.io.OutputStream, null)"},"status":-2},{"failures":[],"tindex":"8c3ee3ef-c82e-11e4-9d42-839a854bffd9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:338","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.LinkedHashMap<java.lang.String, java.lang.String>()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:457","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"8c3ee3f0-c82e-11e4-9d42-b5757b29753d","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:97","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.lib.ThreadSafeProgressMonitor.(isMainThread()))\n    throw new java.lang.IllegalStateException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:130","type":"CtAssertImpl","sourcecode":"assert org.eclipse.jgit.lib.ThreadSafeProgressMonitor.isMainThread()"},"status":-1},{"failures":[],"tindex":"8c3ee3f1-c82e-11e4-9d42-df89c0fe6a0a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:657","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'PRN\\'\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:160","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException)"},"status":-2},{"failures":[],"tindex":"8c3ee3f2-c82e-11e4-9d42-4544bb100f28","variableMapping":{"this":"revWalk"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:510","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.ObjectWalk.next()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:137","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-2},{"failures":[2,3,4,0,1,5],"tindex":"8c3ee3f3-c82e-11e4-9d42-f58d47f74795","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:394","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"://\")"},"status":-1},{"failures":[],"tindex":"8c3ee3f4-c82e-11e4-9d42-7b0e13d1edf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:166","type":"CtTryImpl","sourcecode":"try {\n    if ((org.eclipse.jgit.lib.Repository) instanceof org.eclipse.jgit.internal.storage.file.FileRepository) {\n        org.eclipse.jgit.internal.storage.file.GC org.eclipse.jgit.internal.storage.file.GC = new org.eclipse.jgit.internal.storage.file.GC(((org.eclipse.jgit.internal.storage.file.FileRepository)(org.eclipse.jgit.lib.Repository)));\n        org.eclipse.jgit.internal.storage.file.GC.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig);\n        org.eclipse.jgit.internal.storage.file.GC.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor);\n        if ((this.java.util.Date) != null)\n            org.eclipse.jgit.internal.storage.file.GC.setExpire(java.util.Date);\n        \n        try {\n            org.eclipse.jgit.internal.storage.file.GC.gc();\n            return org.eclipse.jgit.api.GarbageCollectCommand.org.eclipse.jgit.api.GarbageCollectCommand.toProperties(org.eclipse.jgit.internal.storage.file.GC.getStatistics());\n        } catch (java.text.ParseException java.text.ParseException) {\n            throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.text.ParseException);\n        }\n    } else if ((org.eclipse.jgit.lib.Repository) instanceof org.eclipse.jgit.internal.storage.dfs.DfsRepository) {\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector = new org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector(((org.eclipse.jgit.internal.storage.dfs.DfsRepository)(org.eclipse.jgit.lib.Repository)));\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig);\n        org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor);\n        return new java.util.Properties();\n    } else {\n        throw new java.lang.UnsupportedOperationException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.Repository.getClass().toString()));\n    }\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n}"},"status":-2},{"failures":[6,7,2,3,4,5,0,1],"tindex":"8c3ee3f5-c82e-11e4-9d42-f99991eb4307","variableMapping":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"path","doConfigure":"match","baseBranch":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:243","type":"CtAssignmentImpl","sourcecode":"boolean = java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:207","type":"CtAssignmentImpl","sourcecode":"boolean = org.eclipse.jgit.ignore.internal.PathMatcher.matches(int, java.lang.String, int, int, boolean)"},"status":-1},{"failures":[],"tindex":"8c3ee3f6-c82e-11e4-9d42-af66f4289536","variableMapping":{"nibbles":"size","b":"size"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:175","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:175","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8c3ee3f7-c82e-11e4-9d42-6bbb36c29a28","variableMapping":{"c":"c"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:413","type":"CtIfImpl","sourcecode":"if (byte == '/')\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"name contains \\'/\\'\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:461","type":"CtIfImpl","sourcecode":"if (' ' == byte)\n    break;\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
