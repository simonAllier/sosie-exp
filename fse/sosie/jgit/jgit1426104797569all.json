[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"0f8f83ff-c82b-11e4-a50b-c1f0d1d9a2c0","variableMapping":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"end","flag":"end","flags":"c","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"end"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:310","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~((int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:289","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.patch.HunkHeader.parseBody(this, int)"},"status":-1},{"failures":[],"tindex":"0f92df60-c82b-11e4-a50b-af682d59e373","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:278","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"no tag header\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportSftp:256","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException((((\"Can\\'t ls \" + (java.lang.String)) + \"/pack: \") + (com.jcraft.jsch.SftpException.getMessage())) , com.jcraft.jsch.SftpException)"},"status":-2},{"failures":[],"tindex":"0f937ba1-c82b-11e4-a50b-adcb93904c42","variableMapping":{"dir":"url","n":"url"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:397","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = (java.lang.String + \"/\") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:298","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[1,2,3,0,4,5],"tindex":"0f937ba2-c82b-11e4-a50b-97c4fa0ec59b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:373","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException(java.lang.RuntimeException.getMessage() , java.lang.RuntimeException)"},"status":-1},{"failures":[1,2,3,4,5,0],"tindex":"0f937ba3-c82b-11e4-a50b-176b06bd8fa6","variableMapping":{"rawPtr":"curIdx","nameLen":"curIdx"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:548","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:360","type":"CtAssignmentImpl","sourcecode":"int = -((org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String)) + 1)"},"status":-1},{"failures":[1,2,3,0,4,5],"tindex":"0f937ba4-c82b-11e4-a50b-a57fa5004d43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:270","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.clearCache()"},"status":-1},{"failures":[],"tindex":"0f93a2b5-c82b-11e4-a50b-5341b6204a57","variableMapping":{"target":"wholePattern"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\")))\n    java.lang.String = \"/\" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:79","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:alnum:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:alpha:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n} else if (java.lang.String.equals(\"[:blank:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(' '));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('\\t'));\n} else if (java.lang.String.equals(\"[:cntrl:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('\u0000' , '\u001f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''));\n} else if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.java.lang.String.format(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"0f94b426-c82b-11e4-a50b-5b98efd81829","variableMapping":{"repo":"repo","notesRef":"org.eclipse.jgit.lib.Constants.ORIG_HEAD"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddNoteCommand:91","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:738","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"0f959e87-c82b-11e4-a50b-f1940b9a736e","variableMapping":{"size":"beginA","index":"endB"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.BlockList:317","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    throw new java.util.NoSuchElementException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:251","type":"CtForImpl","sourcecode":"TRY_LOCATIONS : for ( ;  ; ) {\n    int int = int[][(int - (int))];\n    int int = int;\n    int int = int + 1;\n    int int = int + 1;\n    int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long);\n    while ((((org.eclipse.jgit.diff.Edit.int) < int) && ((org.eclipse.jgit.diff.Edit.int) < int)) && (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, (int - 1), org.eclipse.jgit.diff.HashedSequence<S>, (int - 1)))) {\n        int--;\n        int--;\n        if (1 < int)\n            int = java.lang.Math.java.lang.Math.min(int, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long[][int[][(int - (int))]]));\n        \n    }\n    while (((int < (org.eclipse.jgit.diff.Edit.int)) && (int < (org.eclipse.jgit.diff.Edit.int))) && (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, int, org.eclipse.jgit.diff.HashedSequence<S>, int))) {\n        if (1 < int)\n            int = java.lang.Math.java.lang.Math.min(int, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long[][int[][(int - (int))]]));\n        \n        int++;\n        int++;\n    }\n    if (int < int)\n        int = int;\n    \n    if (((org.eclipse.jgit.diff.Edit.getLengthA()) < (int - int)) || (int < (int))) {\n        org.eclipse.jgit.diff.Edit.int = int;\n        org.eclipse.jgit.diff.Edit.int = int;\n        org.eclipse.jgit.diff.Edit.int = int;\n        org.eclipse.jgit.diff.Edit.int = int;\n        int = int;\n    } \n    if (int == 0)\n        break TRY_LOCATIONS;\n    \n    while (int < int) {\n        int = int[][(int - (int))];\n        if (int == 0)\n            break TRY_LOCATIONS;\n        \n    }\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"0f959e88-c82b-11e4-a50b-ed78e2644d70","variableMapping":{"c":"id","t":"id"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:814","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevTree = ((org.eclipse.jgit.revwalk.RevTree)(org.eclipse.jgit.revwalk.RevObject))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:662","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevTree = new org.eclipse.jgit.revwalk.RevTree(org.eclipse.jgit.lib.AnyObjectId)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":7,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":6}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
