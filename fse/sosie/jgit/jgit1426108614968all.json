[{"failures":[0,1,2,3,4,5],"tindex":"f1a24c1f-c833-11e4-a738-dbc1362764b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:661","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.revwalk.RevObject> = new java.util.ArrayList<org.eclipse.jgit.revwalk.RevObject>()"},"status":-1},{"failures":[6,7,8,9,10,11,0,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,1,137,138,2,139,140,141,142,143,144,145,146,3,4,5],"tindex":"f1a27330-c833-11e4-a738-0992bd562e2e","variableMapping":{"ref":"ref"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:895","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:938","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef != null) && (!(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))) && (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getTarget().getObjectId().equals(org.eclipse.jgit.lib.ObjectId))) {\n    org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot);\n    return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef;\n} "},"status":-1},{"failures":[],"tindex":"f1a27331-c833-11e4-a738-cb7e14a1c039","variableMapping":{"hits":"timeWriting","total":"timeWriting"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:241","type":"CtReturnImpl","sourcecode":"return (long * 100) / long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2373","type":"CtReturnImpl","sourcecode":"return ((((long) + (long)) + (long)) + (long)) + (long)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"f1a27332-c833-11e4-a738-c9a7d25f375f","variableMapping":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"buf","carry":"buf"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:160","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:110","type":"CtAssignmentImpl","sourcecode":"int = '\\r'"},"status":-1},{"failures":[],"tindex":"f1a27333-c833-11e4-a738-a5ffe35bc53a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:544","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectId(this)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:477","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit.getId()"},"status":-2},{"failures":[0,1,3,4,5,2],"tindex":"f1a27334-c833-11e4-a738-81b88f418063","variableMapping":{"pw":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor:252","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.PackWriter != null)\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1783","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.util.BlockList<org.eclipse.jgit.revwalk.RevCommit>) {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevCommit, 0);\n}"},"status":-1},{"failures":[],"tindex":"f1a27335-c833-11e4-a738-3d087ca72323","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:364","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in mode\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackExt:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"maximum number of pack extensions exceeded\")"},"status":-2},{"failures":[],"tindex":"f1a27336-c833-11e4-a738-f36bb24249c1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:197","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.AndTreeFilter:109","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2},{"failures":[],"tindex":"f1a27337-c833-11e4-a738-9f7393d9046b","variableMapping":{"n":"ptr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:265","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException(\"Unexpected end of input\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:434","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f1a27338-c833-11e4-a738-6bd232c131b5","variableMapping":{"parent":"org.eclipse.jgit.treewalk.AbstractTreeIterator.class","o":"org.eclipse.jgit.treewalk.AbstractTreeIterator.class"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:399","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) != null)\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ResetCommand:357","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator == null) {\n        continue;\n    } \n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.TreeWalk.getRawPath());\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(org.eclipse.jgit.treewalk.AbstractTreeIterator.idBuffer(), org.eclipse.jgit.treewalk.AbstractTreeIterator.idOffset());\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && (org.eclipse.jgit.dircache.DirCacheIterator.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n        org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.dircache.DirCacheEntry.getLastModified());\n        org.eclipse.jgit.dircache.DirCacheEntry.setLength(org.eclipse.jgit.dircache.DirCacheEntry.getLength());\n    } \n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":33,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":84,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":30,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":83,"org.eclipse.jgit.api.FetchCommandTest.testFetch":12,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":60,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":7,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":143,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":58,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":120,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":88,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":140,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":105,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":104,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":92,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":38,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":23,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":47,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":135,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":91,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":6,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":111,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":96,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":89,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":95,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":74,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":114,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":62,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":146,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":50,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":138,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":144,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":142,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":121,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":80,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":99,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":20,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":55,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":136,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":35,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":22,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":41,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":77,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":64,"org.eclipse.jgit.api.GitConstructionTest.testWrap":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":32,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":132,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":66,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":10,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":85,"org.eclipse.jgit.api.GitConstructionTest.testOpen":8,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":24,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":124,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":29,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":106,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":123,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":13,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":107,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":16,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":119,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":141,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":130,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked":139,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":110,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":129,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":115,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":128,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":86,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":63,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":100,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":61,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":122,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":18,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":117,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":137,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":87,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":73,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":72,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":21,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":98,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":118,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":49,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":65,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":39,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":76,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":82,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":134,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":126,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":131,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":67,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":133,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":112,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":70,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":45,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":109,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":17,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":52,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":93,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":31,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":116,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":125,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":145,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":71,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":79,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":44,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":90,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":68}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
