[{"failures":[0,1,2,3,4,5],"tindex":"ba6e538d-c862-11e4-ada2-294e013f7419","variableMapping":{"finalPack":"idx"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:491","type":"CtInvocationImpl","sourcecode":"java.io.File.deleteOnExit()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:181","type":"CtIfImpl","sourcecode":"if ((java.io.File.exists()) && (java.io.File.isFile()))\n    long += java.io.File.length();\n"},"status":-1},{"failures":[4,0,5,1,2,3],"tindex":"ba6e538e-c862-11e4-ada2-0971c442dc5b","variableMapping":{"out":"out"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:377","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:212","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.close()"},"status":-1},{"failures":[4,0,5,1,2,3],"tindex":"ba6e538f-c862-11e4-ada2-a937f64b5f5c","variableMapping":{"d":"rPtr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:195","type":"CtOperatorAssignmentImpl","sourcecode":"int += int & 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:329","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[0,4,5,1,2,3],"tindex":"ba6e5390-c862-11e4-ada2-2db0e4b27771","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:376","type":"CtLocalVariableImpl","sourcecode":"java.net.URISyntaxException java.net.URISyntaxException"},"status":-1},{"failures":[],"tindex":"ba6e5391-c862-11e4-ada2-313393188549","variableMapping":{"p":"hc"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:281","type":"CtReturnImpl","sourcecode":"return (int << 2) + int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:237","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[6,4,5,0,1,2,3],"tindex":"ba6e5392-c862-11e4-ada2-07bc02bae0b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:111","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry[] = org.eclipse.jgit.dircache.DirCacheEntry[]"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,1,2,3],"tindex":"ba6e7aa3-c862-11e4-ada2-05d6180559fc","variableMapping":{"depth":"idx","org.eclipse.jgit.lib.RefDatabase.MAX_SYMBOLIC_REF_DEPTH":"idx"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:712","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.RefDatabase.int) <= int)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:856","type":"CtIfImpl","sourcecode":"if (0 <= int) {\n    final org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.get(int);\n    final org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String);\n    if (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) {\n        if (java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int)))\n            java.util.concurrent.atomic.AtomicInteger.incrementAndGet();\n        \n        return org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n    } \n    if (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)\n        return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef;\n    \n    if (java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.set(int, org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)))\n        java.util.concurrent.atomic.AtomicInteger.incrementAndGet();\n    \n    return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef;\n} "},"status":-1},{"failures":[],"tindex":"ba6e7aa4-c862-11e4-ada2-4bd4475a7e84","variableMapping":{"data":"w"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:341","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\n')"},"status":-2},{"failures":[],"tindex":"ba6e7aa5-c862-11e4-ada2-c73ec54d8cd4","variableMapping":{"score":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","this":"this","similarityScoreMustBeWithinBounds":"corruptObjectInvalidMode3"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:179","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > 100))\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:750","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    final org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.TreeWalk.getFileMode(0);\n    final int int = org.eclipse.jgit.lib.FileMode.getObjectType();\n    switch (int) {\n        case org.eclipse.jgit.lib.Constants.int :\n            org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, 0);\n            org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.MutableObjectId, int).add(org.eclipse.jgit.revwalk.RevFlag);\n            continue;\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, 0);\n                final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.MutableObjectId, int);\n                if (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))) {\n                    org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlag);\n                    org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n                } \n                continue;\n            }\n        default :\n            if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode))\n                continue;\n            \n            org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, 0);\n            throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.MutableObjectId.name(), org.eclipse.jgit.treewalk.TreeWalk.getPathString(), org.eclipse.jgit.revwalk.RevTree.name()));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ba6e7aa6-c862-11e4-ada2-d517eba6b93f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.Git:157","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.api.CloneCommand()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:471","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":93,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":98,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":18,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":64,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":147,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":48,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":114,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":56,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":86,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":29,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":34,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":87,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":21,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":106,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":76,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":127,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":60,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":23,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":112,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":131,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":133,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":119,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":57,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":67,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":94,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":130,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":81,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":136,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":142,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":63,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":96,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":115,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":128,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":51,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":124,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":85,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":49,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":110,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":120,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":89,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":95,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":45,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":37,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":13,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":145,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":83,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":144,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":154,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":24,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":52,"org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":25,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":38,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":77,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":111,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":6,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":54,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":79,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":58,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":148,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":47,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":152,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":123,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":19,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":104,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":91,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":138,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":7,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":8,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":103,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":78,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":146,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":122,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":32,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":117,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":11,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":72,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":141,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":125,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":46,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":153,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":20,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":108,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":66,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":27,"org.eclipse.jgit.api.GitConstructionTest.testClose":134,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":14,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":116,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":42,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":118,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":105,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":22,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":44,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":43,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":126,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":10,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":12,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":55,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":74,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":16,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":109,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":50,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":100,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":65,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":135,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":68,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":40,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":107,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":70,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog":99,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":61,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":88,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":140,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":150,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":15,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":84,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":113,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":53,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":139,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":151,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":101,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":143,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":92,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":137,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":132,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":75,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":80,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":30,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":90,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":129,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":59,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":71,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":102,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":149}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
