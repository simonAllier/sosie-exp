[{"failures":[],"tindex":"1a489e2f-c846-11e4-acee-bda663f50353","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:198","type":"CtReturnImpl","sourcecode":"return 21"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.SimpleDataInput:69","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.NB.org.eclipse.jgit.util.NB.decodeInt32(byte[], 0)"},"status":-2},{"failures":[],"tindex":"1a489e30-c846-11e4-acee-c930e983630b","variableMapping":{"ourCommitName":"name"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:329","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.SymbolicRef:71","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"1a489e31-c846-11e4-acee-4f75bec5f5cc","variableMapping":{"cnt":"index","org.eclipse.jgit.internal.storage.pack.DeltaEncoder.MAX_INSERT_DATA_SIZE":"index"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:193","type":"CtLocalVariableImpl","sourcecode":"int int = int / (org.eclipse.jgit.internal.storage.pack.DeltaEncoder.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevObjectList:116","type":"CtLocalVariableImpl","sourcecode":"final int int = int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"1a489e32-c846-11e4-acee-8df736e923cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:464","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setOffset(0)"},"status":-1},{"failures":[2,3,4,0,1,9],"tindex":"1a489e33-c846-11e4-acee-b98a8616f4d2","variableMapping":{"fmt":"fmt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:315","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.ArchiveCommand.Format<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:314","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(java.lang.String))\n    return org.eclipse.jgit.api.ArchiveCommand.Format<?>;\n"},"status":-1},{"failures":[1,2,3,4,10,11,12,13,0,9,14],"tindex":"1a489e34-c846-11e4-acee-395ca86418bb","variableMapping":{"index":"in_brackets"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.BlockList:333","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    throw new java.lang.IllegalStateException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:228","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    char char = java.lang.String.charAt(int);\n    switch (char) {\n        case '*' :\n            if (boolean || (int > 0))\n                java.lang.StringBuilder.append(char);\n            else\n                java.lang.StringBuilder.append('.').append(char);\n            \n            break;\n        case '.' :\n            if (boolean)\n                java.lang.StringBuilder.append(char);\n            else\n                java.lang.StringBuilder.append('\\\\').append('.');\n            \n            break;\n        case '?' :\n            if (boolean || (int > 0))\n                java.lang.StringBuilder.append(char);\n            else\n                java.lang.StringBuilder.append('.');\n            \n            break;\n        case ':' :\n            if (int > 0)\n                if ((org.eclipse.jgit.ignore.internal.Strings.(org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder)) == '[') && java.lang.Character.(java.lang.Character.isLetter(org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int))))\n                    boolean = true;\n                \n            \n            java.lang.StringBuilder.append(':');\n            break;\n        case '-' :\n            if (int > 0) {\n                if (org.eclipse.jgit.ignore.internal.Strings.(org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int)) == ']')\n                    java.lang.StringBuilder.append('\\\\').append(char);\n                else\n                    java.lang.StringBuilder.append(char);\n                \n            } else\n                java.lang.StringBuilder.append('-');\n            \n            break;\n        case '\\\\' :\n            if (int > 0) {\n                char char = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int);\n                if ((char == ']') || (char == '['))\n                    boolean = true;\n                \n            } \n            java.lang.StringBuilder.append(char);\n            break;\n        case '[' :\n            if (int > 0) {\n                java.lang.StringBuilder.append('\\\\').append('[');\n                boolean = true;\n            } else {\n                if (!boolean) {\n                    int++;\n                    boolean = false;\n                } \n                java.lang.StringBuilder.append('[');\n            }\n            break;\n        case ']' :\n            if (boolean) {\n                java.lang.StringBuilder.append(']');\n                boolean = true;\n                break;\n            } \n            if (int <= 0) {\n                java.lang.StringBuilder.append('\\\\').append(']');\n                boolean = true;\n                break;\n            } \n            char char = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder);\n            if (((char == '[') && (!boolean)) || (char == '^')) {\n                java.lang.StringBuilder.append('\\\\');\n                java.lang.StringBuilder.append(']');\n                boolean = true;\n            } else {\n                boolean = false;\n                if (!boolean) {\n                    int--;\n                    java.lang.StringBuilder.append(']');\n                } else {\n                    boolean = false;\n                    java.lang.String java.lang.String = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.checkPosixCharClass(char[]);\n                    if (java.lang.String != null) {\n                        java.lang.StringBuilder.setLength(((java.lang.StringBuilder.length()) - 4));\n                        java.lang.StringBuilder.append(java.lang.String);\n                    } \n                    org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.reset(char[]);\n                }\n            }\n            break;\n        case '!' :\n            if (int > 0) {\n                if (org.eclipse.jgit.ignore.internal.Strings.(org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder)) == '[')\n                    java.lang.StringBuilder.append('^');\n                else\n                    java.lang.StringBuilder.append(char);\n                \n            } else\n                java.lang.StringBuilder.append(char);\n            \n            break;\n        default :\n            if (boolean)\n                org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.setNext(char[], char);\n            else\n                java.lang.StringBuilder.append(char);\n            \n            break;\n    }\n    boolean = char == '\\\\';\n}"},"status":-1},{"failures":[],"tindex":"1a489e35-c846-11e4-acee-6353a6835b2a","variableMapping":{"rawPtr":"ae","c":"as","raw":"content"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:534","type":"CtAssignmentImpl","sourcecode":"int = byte[][int++]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:149","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawCharUtil.org.eclipse.jgit.util.RawCharUtil.trimLeadingWhitespace(org.eclipse.jgit.diff.RawText.byte[], int, int)"},"status":-2},{"failures":[0,1,2,3,4,9],"tindex":"1a489e36-c846-11e4-acee-afa137bf07ed","variableMapping":{"next":"q","r":"next"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.Candidate:204","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Region:113","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region"},"status":-1},{"failures":[],"tindex":"1a489e37-c846-11e4-acee-739432b287de","variableMapping":{"this":"oldObj","walk":"walk"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:145","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(this))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1264","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.transport.ReceiveCommand.getOldId());\n} catch (java.io.IOException java.io.IOException) {\n    org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result, org.eclipse.jgit.transport.ReceiveCommand.getOldId().name());\n    continue;\n}"},"status":-2},{"failures":[],"tindex":"1a489e38-c846-11e4-acee-9d73023db055","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FileUtils:380","type":"CtLocalVariableImpl","sourcecode":"final int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:179","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.find(java.lang.String)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.ignore.BasicRuleTest.test":14,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":7,"org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters":13,"org.eclipse.jgit.transport.TestProtocolTest.testPush":6,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":10,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":9,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":11,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":8}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
