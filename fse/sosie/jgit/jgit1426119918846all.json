[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"433e7b45-c84e-11e4-9dbf-d54fe0118816","variableMapping":{"eol":"cmp","aStart":"cmp"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:358","type":"CtIfImpl","sourcecode":"if (int >= int)\n    return int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:713","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-1},{"failures":[45,44,3,117,119,120],"tindex":"433e7b46-c84e-11e4-9dbf-b370443b7c43","variableMapping":{"in":"is"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:496","type":"CtInvocationImpl","sourcecode":"java.io.BufferedInputStream.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:1082","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, ((int)(long)))"},"status":-1},{"failures":[],"tindex":"433e7b47-c84e-11e4-9dbf-b9b1d668aaf2","variableMapping":{"cAlg":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_KEY_REMOTE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:248","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = \"PBEWithMD5AndDES\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:247","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n    java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getRemoteName(java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.shortenRemoteBranchName(java.lang.String);\n        org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, ((org.eclipse.jgit.lib.Constants.java.lang.String) + java.lang.String));\n    } else {\n        org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, \".\");\n        org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n    }\n    org.eclipse.jgit.lib.StoredConfig.save();\n} "},"status":-2},{"failures":[3,117,119,120,45,44],"tindex":"433e7b48-c84e-11e4-9dbf-49f8efc5307c","variableMapping":{"removed":"segments","conflicts":"segments"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<java.lang.String>.removeAll(java.util.ArrayList<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:126","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String.substring(int, (int + 1)))"},"status":-1},{"failures":[44,45,3,117,119,120],"tindex":"433e7b49-c84e-11e4-9dbf-4dd0e936e831","variableMapping":{"refLogMessage":"refLogMessage","startPointFullName":"refLogMessage"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:167","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"branch: Reset start-point to branch \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"433e7b4a-c84e-11e4-9dbf-f97e3db5a3a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:226","type":"CtIfImpl","sourcecode":"if ((byte[][(int + 3)]) == (org.eclipse.jgit.util.Base64.byte)) {\n    int int = ((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6);\n    byte[][int] = ((byte)(int >>> 16));\n    byte[][(int + 1)] = ((byte)(int >>> 8));\n    return 2;\n} else {\n    int int = (((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6)) | ((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 3)]]) & 255);\n    byte[][int] = ((byte)(int >> 16));\n    byte[][(int + 1)] = ((byte)(int >> 8));\n    byte[][(int + 2)] = ((byte)(int));\n    return 3;\n}"},"status":-2},{"failures":[],"tindex":"433e7b4b-c84e-11e4-9dbf-63bfffa86232","variableMapping":{"cnt":"length","length":"length","raw":"in","buffer":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawText:248","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    final int int = java.io.InputStream.read(byte[], int, ((byte[].int) - int));\n    if (int == (-1))\n        break;\n    \n    int += int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:511","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, byte[].int)"},"status":-2},{"failures":[],"tindex":"433e7b4c-c84e-11e4-9dbf-650e204af23b","variableMapping":{"prefix":"attribute"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:345","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = (java.lang.String) == null ? \"\" : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:93","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"433e7b4d-c84e-11e4-9dbf-6b20e43a29a9","variableMapping":{"eof":"validate"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:141","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:237","type":"CtInvocationImpl","sourcecode":"((org.eclipse.jgit.internal.storage.file.LocalCachedPack)(org.eclipse.jgit.internal.storage.pack.CachedPack)).copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, boolean, this)"},"status":-2},{"failures":[44,3,45,117,119,120],"tindex":"433e7b4e-c84e-11e4-9dbf-ff3fe9c35d88","variableMapping":{"statEvict":"position"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:403","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:228","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testNoMatchingAttributes":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":120,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":106,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":107,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":105,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":57,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":85,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":86,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":16,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":101,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":43,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":99,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":53,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":14,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":33,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":72,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":74,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":111,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":23,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":31,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":45,"org.eclipse.jgit.api.CleanCommandTest.testClean":110,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":19,"org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testNoAttributes":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":17,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":36,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":112,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":29,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":2,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":48,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":104,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":92,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testGetEntryContentLength":6,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":102,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":103,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":90,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":91,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":28,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":59,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":12,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":38,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":71,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":30,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":115,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":116,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":11,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":13,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":46,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":47,"org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testEmptyGitAttributeFile":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":117,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":44,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":63,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":108,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":118,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":94,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":113,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate":7,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":95,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":35,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":93,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRules":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":8,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":67,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":89,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":66,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":68,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":88,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":87,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":79,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":78,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":80,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":9,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":37,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":82,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":83,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":15,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":61,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":26,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":96,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":51,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":54,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":97,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":55,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":98,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":22,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":75,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":65,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":109,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":76,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":77,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":27,"org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testRules":40,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId":4,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":49}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
