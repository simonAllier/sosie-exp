[{"failures":[0,1,2,3,4,5],"tindex":"3c05198c-c855-11e4-8ffd-8d8dbc9823f5","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:620","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:216","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()"},"status":-1},{"failures":[],"tindex":"3c05409d-c855-11e4-8ffd-cff53732b21f","variableMapping":{"this":"monitor"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:202","type":"CtInvocationImpl","sourcecode":"((org.eclipse.jgit.lib.BatchingProgressMonitor)(org.eclipse.jgit.lib.ProgressMonitor)).setDelayStart(250, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)"},"status":-2},{"failures":[3,5,0,1,2,4],"tindex":"3c05409e-c855-11e4-8ffd-47579d423e29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:133","type":"CtAssignmentImpl","sourcecode":"int = -(int + 1)"},"status":-1},{"failures":[],"tindex":"3c05409f-c855-11e4-8ffd-4564981d4947","variableMapping":{"os":"buf","tmp":"bRaw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:332","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[][0])"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:965","type":"CtIfImpl","sourcecode":"if ((((byte[] == (org.eclipse.jgit.diff.DiffFormatter.byte[])) || (byte[] == (org.eclipse.jgit.diff.DiffFormatter.byte[]))) || org.eclipse.jgit.diff.RawText.(org.eclipse.jgit.diff.RawText.isBinary(byte[]))) || org.eclipse.jgit.diff.RawText.(org.eclipse.jgit.diff.RawText.isBinary(byte[]))) {\n    org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry);\n    java.io.ByteArrayOutputStream.write(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encodeASCII(\"Binary files differ\\n\"));\n    org.eclipse.jgit.diff.EditList = new org.eclipse.jgit.diff.EditList();\n    org.eclipse.jgit.patch.FileHeader.PatchType = org.eclipse.jgit.patch.FileHeader.PatchType.org.eclipse.jgit.patch.FileHeader.PatchType;\n} else {\n    org.eclipse.jgit.diff.DiffFormatter.FormatResult.org.eclipse.jgit.diff.RawText = new org.eclipse.jgit.diff.RawText(byte[]);\n    org.eclipse.jgit.diff.DiffFormatter.FormatResult.org.eclipse.jgit.diff.RawText = new org.eclipse.jgit.diff.RawText(byte[]);\n    org.eclipse.jgit.diff.EditList = org.eclipse.jgit.diff.DiffFormatter.diff(org.eclipse.jgit.diff.DiffFormatter.FormatResult.org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.DiffFormatter.FormatResult.org.eclipse.jgit.diff.RawText);\n    org.eclipse.jgit.patch.FileHeader.PatchType = org.eclipse.jgit.patch.FileHeader.PatchType.org.eclipse.jgit.patch.FileHeader.PatchType;\n    switch (org.eclipse.jgit.diff.DiffEntry.getChangeType()) {\n        case RENAME :\n        case COPY :\n            if (!(org.eclipse.jgit.diff.EditList.isEmpty()))\n                org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry);\n            \n            break;\n        default :\n            org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry);\n            break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"3c0540a0-c855-11e4-8ffd-bba1e5125123","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:164","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:642","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(int, byte[])"},"status":-2},{"failures":[3,4,0,1,2,5],"tindex":"3c0540a1-c855-11e4-8ffd-07609581fc7d","variableMapping":{"this":"local"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:307","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"tmplink\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:172","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getFS().userHome() , org.eclipse.jgit.transport.URIish.getUser())"},"status":-1},{"failures":[3,6,0,1,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,5,40,41,42,43,44,45,46,47,48,49,50],"tindex":"3c0540a2-c855-11e4-8ffd-93ebfa40b8d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1351","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.writeCommitMsg(java.io.File, java.lang.String)"},"status":-1},{"failures":[],"tindex":"3c0540a3-c855-11e4-8ffd-634f033b1888","variableMapping":{"avail":"avail","name":"target"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:725","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:350","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3c0567b4-c855-11e4-8ffd-671e7a7d6c65","variableMapping":{"this":"uploadPack"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:1292","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.UploadPack.sendPack(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AbstractAdvertiseRefsHook:62","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.UploadPack.setAdvertisedRefs(org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.getAdvertisedRefs(org.eclipse.jgit.transport.UploadPack.getRepository(), org.eclipse.jgit.transport.UploadPack.getRevWalk()))"},"status":-2},{"failures":[],"tindex":"3c0567b5-c855-11e4-8ffd-477828618cb1","variableMapping":{"first":"currentBase"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1329","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.this.next()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:201","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":12,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":40,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":47,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":33,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":42,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":39,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":16,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":29,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":43,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":34,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":49,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":19,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":45,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":7,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":26,"org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":25,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":41,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":36,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":27,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":38,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":37,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":15,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":17,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":32,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":31,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":50,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":35,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":9,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":20,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":30,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":46,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":14,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":22}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
