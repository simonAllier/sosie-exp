[{"failures":[],"tindex":"7c6c7afd-c83a-11e4-9931-9b0b6c9a2b71","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:368","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.api.RebaseResult != null) {\n    return org.eclipse.jgit.api.RebaseResult;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1317","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String);\n    org.eclipse.jgit.lib.ProgressMonitor.beginTask(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String), org.eclipse.jgit.lib.ProgressMonitor.int);\n    org.eclipse.jgit.lib.RefUpdate.Result org.eclipse.jgit.lib.RefUpdate.Result = null;\n    org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String, false);\n    org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(\"rebase: aborting\", false);\n    if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n        org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.link(java.lang.String);\n    } else {\n        org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.Repository.readOrigHead());\n        org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.forceUpdate();\n    }\n    switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n        case FAST_FORWARD :\n        case FORCED :\n        case NO_CHANGE :\n            break;\n        default :\n            throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    boolean boolean = org.eclipse.jgit.api.RebaseCommand.autoStashApply();\n    org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.api.RebaseCommand.RebaseState.getDir(), org.eclipse.jgit.util.FileUtils.int);\n    org.eclipse.jgit.lib.Repository.writeCherryPickHead(null);\n    org.eclipse.jgit.lib.Repository.writeMergeHeads(null);\n    if (boolean)\n        return org.eclipse.jgit.api.RebaseResult.org.eclipse.jgit.api.RebaseResult;\n    \n    return org.eclipse.jgit.api.RebaseResult;\n} finally {\n    org.eclipse.jgit.lib.ProgressMonitor.endTask();\n}"},"status":-2},{"failures":[],"tindex":"7c6c7afe-c83a-11e4-9931-5dc58ce2c7e9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"Mark not set\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:465","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int)))"},"status":-2},{"failures":[],"tindex":"7c6c7aff-c83a-11e4-9931-4580da506788","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RawText:295","type":"CtReturnImpl","sourcecode":"return \"\\n\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1658","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], 0, (int + 1))"},"status":-2},{"failures":[],"tindex":"7c6c7b00-c83a-11e4-9931-7105be603a69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFilter:167","type":"CtReturnImpl","sourcecode":"return \"NO_MERGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:264","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"7c6c7b01-c83a-11e4-9931-6162d9e1f79b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:238","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7c6c7b02-c83a-11e4-9931-913e1a5066c9","variableMapping":{"currCommit":"c","lane":"lane"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:204","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotLane != (org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane))\n    org.eclipse.jgit.revplot.PlotCommit.addPassingLane(org.eclipse.jgit.revplot.PlotLane);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:193","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.closeLane(org.eclipse.jgit.revplot.PlotCommit.org.eclipse.jgit.revplot.PlotLane)"},"status":-2},{"failures":[],"tindex":"7c6c7b03-c83a-11e4-9931-df98bf3cdc87","variableMapping":{"advertiseError":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:767","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder) == null)\n    java.lang.StringBuilder = new java.lang.StringBuilder();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:205","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry.appendFullName(java.lang.StringBuilder)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"7c6c7b04-c83a-11e4-9931-89ba0f4ed33e","variableMapping":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"minBSize","flag":"commonPrefix","flags":"commonPrefix","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"commonPrefix"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:310","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~((int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:266","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"7c6c7b05-c83a-11e4-9931-81bbfd900a59","variableMapping":{"this":"gen"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:448","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.blame.BlameResult org.eclipse.jgit.blame.BlameResult = org.eclipse.jgit.blame.BlameResult.org.eclipse.jgit.blame.BlameResult.create(this);\n    if (org.eclipse.jgit.blame.BlameResult != null)\n        org.eclipse.jgit.blame.BlameResult.computeAll();\n    \n    return org.eclipse.jgit.blame.BlameResult;\n} finally {\n    org.eclipse.jgit.blame.BlameGenerator.release();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:91","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.blame.BlameResult(org.eclipse.jgit.blame.BlameGenerator , java.lang.String , org.eclipse.jgit.diff.RawText)"},"status":-2},{"failures":[],"tindex":"7c6c7b06-c83a-11e4-9931-ffbe10cef148","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:382","type":"CtLocalVariableImpl","sourcecode":"int int = java.nio.ByteBuffer.limit()"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":1}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
