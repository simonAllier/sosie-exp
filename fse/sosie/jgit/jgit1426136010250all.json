[{"failures":[0,1,2,3,4,5],"tindex":"bb5ac639-c873-11e4-b4b3-1f6fb9e3351c","variableMapping":{"data":"s"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TextProgressMonitor:115","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[1,0,2,3,4,5],"tindex":"bb606b8a-c873-11e4-b4b3-cdb598063830","variableMapping":{"hostname":"version"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.SystemReader:124","type":"CtAssertImpl","sourcecode":"assert (java.lang.String) != null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkEncryption:89","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1},{"failures":[2,3,4,1,5,0],"tindex":"bb606b8b-c873-11e4-b4b3-e9126b3693ec","variableMapping":{"state":"state"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:128","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.InterruptTimer.AlarmState.end()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.InterruptTimer:164","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.InterruptTimer.AlarmState.terminate()"},"status":-1},{"failures":[],"tindex":"bb606b8c-c873-11e4-b4b3-a1d6a9e407a3","variableMapping":{"data":"urlstr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:568","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('/')"},"status":-2},{"failures":[],"tindex":"bb606b8d-c873-11e4-b4b3-7b64f9342f21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:323","type":"CtThrowImpl","sourcecode":"throw new java.util.zip.DataFormatException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:520","type":"CtThrowImpl","sourcecode":"throw org.eclipse.jgit.errors.NotSupportedException"},"status":-2},{"failures":[6,1,7,8,9,10,11,12,13,14,15,0,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,2,3,4,89,5,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"bb606b8e-c873-11e4-b4b3-5578859b1d1d","variableMapping":{"walk":"treeWalk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:258","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.NameConflictTreeWalk.enterSubtree()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:406","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevTree) != null)\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.revwalk.RevTree);\nelse\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.treewalk.EmptyTreeIterator());\n"},"status":-1},{"failures":[],"tindex":"bb606b8f-c873-11e4-b4b3-59197ab5e282","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:580","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.blame.Candidate.getTime()"},"status":-2},{"failures":[],"tindex":"bb606b90-c873-11e4-b4b3-3dc140beee9a","variableMapping":{"res":"buf","resPtr":"tokenBegin","src":"buf","length":"tokenBegin","srcPtr":"length"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:400","type":"CtForImpl","sourcecode":"for ( ; (int < (byte[].int)) && (int < (byte[].int)) ; int++ , int++) {\n    if ((byte[][int]) != (byte[][int]))\n        break;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:93","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    int = int;\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    int int = int;\n    int int = int - 2;\n    if ((int >= 0) && ((byte[][int]) == '\\r'))\n        int--;\n    \n    if ((byte[][int]) == '#') {\n        if (boolean)\n            org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int);\n        \n    } else {\n        int = org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.nextParsableToken(byte[], int, int);\n        if (int == (-1)) {\n            if (boolean)\n                java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(new org.eclipse.jgit.lib.RebaseTodoLine(org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (1 + int))));\n            \n            continue;\n        } \n        org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine = org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int);\n        if (org.eclipse.jgit.lib.RebaseTodoLine == null)\n            continue;\n        \n        java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(org.eclipse.jgit.lib.RebaseTodoLine);\n    }\n}"},"status":-2},{"failures":[],"tindex":"bb606b91-c873-11e4-b4b3-79a57a42a09a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:757","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"status":-2},{"failures":[1,2,3,4,5,0],"tindex":"bb606b92-c873-11e4-b4b3-c93d4cc033ef","variableMapping":{"pw":"pw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:312","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseDeltaCommits(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:277","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":68,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":6,"org.eclipse.jgit.lib.IndexDiffTest.testModified":80,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":90,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":30,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":72,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":16,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":12,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":78,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":84,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":42,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":92,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":27,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":115,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":67,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":81,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":123,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":39,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":97,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":74,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":61,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.CleanCommandTest.testClean":122,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":35,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":46,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":95,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":37,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":87,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":33,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":32,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":77,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":99,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":124,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":31,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":107,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":75,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":89,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":101,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":121,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":120,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":49,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":76,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":85,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":24,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":106,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":60,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":127,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":128,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":23,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":26,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":88,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":111,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":108,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":54,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":65,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":58,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":57,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":82,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":96,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":73,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":94,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":112,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":113,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":110,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":104,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":10,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":125,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":41,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":19,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":8,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":71,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":45,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":20,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":100,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":62,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":93,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":102,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":21,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":83,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":50,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":56,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":86,"org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":44,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":117,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":118,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":25,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":38,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":119,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":53,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":116}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
