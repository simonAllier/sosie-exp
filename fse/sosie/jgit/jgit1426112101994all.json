[{"failures":[0,1,2,3,4,5,6],"tindex":"10084d8d-c83c-11e4-b6e9-07d394740c83","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:165","type":"CtReturnImpl","sourcecode":"return 80"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:398","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RefMap.Ent.getKey().hashCode()"},"status":-1},{"failures":[],"tindex":"10084d8e-c83c-11e4-b6e9-4d4052fa380e","variableMapping":{"or":"or","noteOn":"noteData","this":"b","noteData":"noteData"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:359","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.load(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader).set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:213","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteBucket == null) {\n    if (org.eclipse.jgit.lib.AnyObjectId == null)\n        return this;\n    \n    org.eclipse.jgit.notes.LeafBucket org.eclipse.jgit.notes.LeafBucket = new org.eclipse.jgit.notes.LeafBucket(((int) + 2));\n    org.eclipse.jgit.notes.NoteBucket[][int] = org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader);\n    (int)++;\n    return this;\n} else {\n    org.eclipse.jgit.notes.NoteBucket org.eclipse.jgit.notes.NoteBucket = org.eclipse.jgit.notes.NoteBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader);\n    if (org.eclipse.jgit.notes.NoteBucket == null) {\n        org.eclipse.jgit.notes.NoteBucket[][int] = null;\n        (int)--;\n        if ((int) == 0)\n            return null;\n        \n        return org.eclipse.jgit.notes.FanoutBucket.contractIfTooSmall(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader);\n    } else if (org.eclipse.jgit.notes.NoteBucket != org.eclipse.jgit.notes.NoteBucket) {\n        org.eclipse.jgit.notes.NoteBucket[][int] = org.eclipse.jgit.notes.NoteBucket;\n    } \n    return this;\n}"},"status":-2},{"failures":[],"tindex":"10084d8f-c83c-11e4-b6e9-87cca57a6d59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddNoteCommand:90","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    if (org.eclipse.jgit.lib.Ref != null) {\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId());\n        org.eclipse.jgit.notes.NoteMap = org.eclipse.jgit.notes.NoteMap.org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), org.eclipse.jgit.revwalk.RevCommit);\n    } \n    org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.revwalk.RevObject, java.lang.String, org.eclipse.jgit.lib.ObjectInserter);\n    org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, \"Notes added by \\'git notes add\\'\");\n    return org.eclipse.jgit.notes.NoteMap.getNote(org.eclipse.jgit.revwalk.RevObject);\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n} finally {\n    org.eclipse.jgit.lib.ObjectInserter.release();\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,2,3,4,23,24,5,25,0,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"100874a0-c83c-11e4-b6e9-55e2911c240e","variableMapping":{"fw":"w"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:249","type":"CtInvocationImpl","sourcecode":"java.io.FileWriter.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:180","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.write('\\n')"},"status":-1},{"failures":[],"tindex":"100874a1-c83c-11e4-b6e9-3dbea31cb3d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:323","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.ArchiveCommand.UnsupportedFormatException(java.lang.String)"},"status":-2},{"failures":[],"tindex":"100874a2-c83c-11e4-b6e9-9777e9bf66d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:198","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.mkdir(java.io.File)"},"status":-2},{"failures":[],"tindex":"100874a3-c83c-11e4-b6e9-cfa1f9687cb6","variableMapping":{"noteData":"noteData"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:214","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.AnyObjectId == null)\n    return this;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:150","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.AnyObjectId != null) {\n    org.eclipse.jgit.notes.Note[][int].setData(org.eclipse.jgit.lib.AnyObjectId.copy());\n    return this;\n} else {\n    java.lang.System.java.lang.System.arraycopy(org.eclipse.jgit.notes.Note[], (int + 1), org.eclipse.jgit.notes.Note[], int, (((int) - int) - 1));\n    (int)--;\n    return 0 < (int) ? this : null;\n}"},"status":-2},{"failures":[],"tindex":"100874a4-c83c-11e4-b6e9-31ac1d29730a","variableMapping":{"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.IS_SUPPORTED":"willIgnoreRepositoryState"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:102","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:129","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"100874a5-c83c-11e4-b6e9-63250ea1eac2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:819","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"100874a6-c83c-11e4-b6e9-d387eb6a1478","variableMapping":{"vlst":"vlst","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.RemoteConfig:229","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs())\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.transport.RefSpec.toString());"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:219","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.URIish org.eclipse.jgit.transport.URIish : org.eclipse.jgit.transport.RemoteConfig.getURIs())\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.transport.URIish.toPrivateString());"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":11,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":37,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":77,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":8,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":23,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":46,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":60,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":36,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":40,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":105,"org.eclipse.jgit.api.FetchCommandTest.testFetch":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":53,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":90,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":18,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":50,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":71,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":51,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":62,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":16,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":52,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":25,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":80,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":45,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":58,"org.eclipse.jgit.api.PushCommandTest.testPush":39,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":43,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":98,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":101,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":61,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":96,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":93,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":65,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":111,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":92,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":49,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":81,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":95,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":83,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":13,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":10,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":112,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":55,"org.eclipse.jgit.api.TagCommandTest.testTagging":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":73,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":74,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":100,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":30,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":75,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":27,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":99,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":89,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":109,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":79,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":108,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":85,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":107,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":106,"org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes":22,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":57,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":94,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":87,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":24,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":28,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":63,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":88,"org.eclipse.jgit.util.RefMapTest.testEntryType":6,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":17,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":35,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":114,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":104,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":42,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":110,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":113,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":7,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":47,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":78,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":34,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":76,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":9,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":86,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":103,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":72,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":48,"org.eclipse.jgit.api.TagCommandTest.testDelete":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":21}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
