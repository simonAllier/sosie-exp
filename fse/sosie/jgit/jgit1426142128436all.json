[{"failures":[],"tindex":"f9504066-c881-11e4-9266-33f03e4e614a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:410","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:396","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"f9504067-c881-11e4-9266-8d9db849ddfc","variableMapping":{"cmp":"MAX_BASES"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:393","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:164","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<org.eclipse.jgit.revwalk.RevCommit>.size()) >= (int))\n    throw new org.eclipse.jgit.errors.NoMergeBaseException(org.eclipse.jgit.errors.NoMergeBaseException.MergeBaseFailureReason.org.eclipse.jgit.errors.NoMergeBaseException.MergeBaseFailureReason , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int), org.eclipse.jgit.revwalk.RevCommit.name(), org.eclipse.jgit.revwalk.RevCommit.name(), java.lang.Integer.java.lang.Integer.valueOf(java.util.ArrayList<org.eclipse.jgit.revwalk.RevCommit>.size())));\n"},"status":-1},{"failures":[],"tindex":"f9504068-c881-11e4-9266-979fb7d787cd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1343","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.eclipse.jgit.api.RebaseCommand.autoStashApply()"},"status":-2},{"failures":[],"tindex":"f9504069-c881-11e4-9266-1788f8d50c37","variableMapping":{"path":"invalidManifest","lastAddedFile":"filename"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:375","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:423","type":"CtIfImpl","sourcecode":"if (\"copyfile\".equals(java.lang.String)) {\n    if ((org.eclipse.jgit.gitrepo.RepoCommand.Project) == null)\n        throw new org.xml.sax.SAXException(org.eclipse.jgit.gitrepo.internal.RepoText.org.eclipse.jgit.gitrepo.internal.RepoText.get().java.lang.String);\n    \n    org.eclipse.jgit.gitrepo.RepoCommand.Project.addCopyFile(new org.eclipse.jgit.gitrepo.RepoCommand.CopyFile(org.eclipse.jgit.gitrepo.RepoCommand.org.eclipse.jgit.lib.Repository , org.eclipse.jgit.gitrepo.RepoCommand.Project.java.lang.String , org.xml.sax.Attributes.getValue(\"src\") , org.xml.sax.Attributes.getValue(\"dest\")));\n} else if (\"include\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = org.xml.sax.Attributes.getValue(\"name\");\n    java.io.InputStream java.io.InputStream = null;\n    if ((org.eclipse.jgit.gitrepo.RepoCommand.IncludedFileReader) != null) {\n        try {\n            java.io.InputStream = org.eclipse.jgit.gitrepo.RepoCommand.IncludedFileReader.readIncludeFile(java.lang.String);\n        } catch (java.lang.Exception java.lang.Exception) {\n            throw new org.xml.sax.SAXException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.gitrepo.internal.RepoText.org.eclipse.jgit.gitrepo.internal.RepoText.get().java.lang.String, java.lang.String) , java.lang.Exception);\n        }\n    } else if ((java.lang.String) != null) {\n        int int = java.lang.String.lastIndexOf('/');\n        java.lang.String java.lang.String = (java.lang.String.substring(0, (int + 1))) + java.lang.String;\n        try {\n            java.io.InputStream = new java.io.FileInputStream(java.lang.String);\n        } catch (java.io.IOException java.io.IOException) {\n            throw new org.xml.sax.SAXException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.gitrepo.internal.RepoText.org.eclipse.jgit.gitrepo.internal.RepoText.get().java.lang.String, java.lang.String) , java.io.IOException);\n        }\n    } \n    if (java.io.InputStream == null) {\n        throw new org.xml.sax.SAXException(org.eclipse.jgit.gitrepo.internal.RepoText.org.eclipse.jgit.gitrepo.internal.RepoText.get().java.lang.String);\n    } \n    try {\n        org.eclipse.jgit.gitrepo.RepoCommand.XmlManifest.read(java.io.InputStream);\n    } catch (java.io.IOException java.io.IOException) {\n        throw new org.xml.sax.SAXException(java.io.IOException);\n    }\n} "},"status":-2},{"failures":[],"tindex":"f950406a-c881-11e4-9266-138a80c1ea65","variableMapping":{"numSteps":"endB"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1029","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:162","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.int) >= (org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.int)) && ((org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.int) >= (org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.int)))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"f950406b-c881-11e4-9266-2df7044c7a82","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:332","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.diff.SimilarityIndex.TableFullException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:202","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException)"},"status":-2},{"failures":[],"tindex":"f950406c-c881-11e4-9266-edaeb6b04ea4","variableMapping":{"entrySpan":"ptr","cIdx":"end"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:349","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:147","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.lib.AbbreviatedObjectId.org.eclipse.jgit.lib.AbbreviatedObjectId.hexUInt32(byte[], (int + 32), int)"},"status":-2},{"failures":[],"tindex":"f950406d-c881-11e4-9266-db6ba84c6a97","variableMapping":{"dco":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1365","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n} catch (org.eclipse.jgit.errors.CheckoutConflictException org.eclipse.jgit.errors.CheckoutConflictException) {\n    throw new org.eclipse.jgit.api.errors.CheckoutConflictException(org.eclipse.jgit.dircache.DirCacheCheckout.getConflicts() , org.eclipse.jgit.errors.CheckoutConflictException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:613","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":-2},{"failures":[],"tindex":"f950406e-c881-11e4-9266-2d1a75430793","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:199","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:320","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f950406f-c881-11e4-9266-bd099da9b458","variableMapping":{"plusGroups":"changed"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:552","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(\"all\"))) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:576","type":"CtIfImpl","sourcecode":"if ((((((java.util.Set<java.lang.String>.isEmpty()) && (java.util.Set<java.lang.String>.isEmpty())) && (java.util.Set<java.lang.String>.isEmpty())) && (java.util.Set<java.lang.String>.isEmpty())) && (java.util.Set<java.lang.String>.isEmpty())) && (java.util.Set<java.lang.String>.isEmpty()))\n    return false;\nelse\n    return true;\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":11,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":5,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":6,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":7,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":10,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":14,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":8,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":3,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":12}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
