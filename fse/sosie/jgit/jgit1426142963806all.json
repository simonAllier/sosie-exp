[{"failures":[0,1,2,3,4,5],"tindex":"eb1af197-c883-11e4-b442-c3f2ea802cc3","variableMapping":{"refLogIdent":"srcAuthor","pi":"srcAuthor"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:138","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.lib.PersonIdent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:350","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent[][int] = org.eclipse.jgit.lib.PersonIdent"},"status":-1},{"failures":[],"tindex":"eb1b18a8-c883-11e4-b442-41caafc2ce40","variableMapping":{"org.eclipse.jgit.lib.RepositoryState.REBASING":"org.eclipse.jgit.lib.RepositoryState.CHERRY_PICKING_RESOLVED","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1082","type":"CtIfImpl","sourcecode":"if (new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"rebase-apply\").exists())\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1109","type":"CtIfImpl","sourcecode":"if (new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , org.eclipse.jgit.lib.Constants.java.lang.String).exists()) {\n    try {\n        if (!(org.eclipse.jgit.lib.Repository.readDirCache().hasUnmergedPaths())) {\n            return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n        } \n    } catch (java.io.IOException java.io.IOException) {\n    }\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n} "},"status":-2},{"failures":[],"tindex":"eb1b18a9-c883-11e4-b442-0929a4b711c5","variableMapping":{"o":"info"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:201","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()) || (org.eclipse.jgit.internal.storage.pack.ObjectToPack.doNotAttemptDelta()))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:363","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackedObjectInfo.setCRC(((int)(java.util.zip.CRC32.getValue())))"},"status":-2},{"failures":[5,0,1,2,3,4],"tindex":"eb1b18aa-c883-11e4-b442-1dbadf635e0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:236","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[]['='] = 0"},"status":-1},{"failures":[],"tindex":"eb1b18ab-c883-11e4-b442-214759d8c317","variableMapping":{"pList":"commits","length":"headIndex"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:142","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit[].int) == 0) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:148","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit[][(int)++]"},"status":-2},{"failures":[],"tindex":"eb1b18ac-c883-11e4-b442-43f9a1b32d26","variableMapping":{"renameDetectionType":"org.eclipse.jgit.diff.DiffConfig.RenameDetectionType.FALSE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffConfig:102","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.DiffConfig.RenameDetectionType"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffConfig:129","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean.booleanValue())\n    return org.eclipse.jgit.diff.DiffConfig.RenameDetectionType.org.eclipse.jgit.diff.DiffConfig.RenameDetectionType;\nelse\n    return org.eclipse.jgit.diff.DiffConfig.RenameDetectionType.org.eclipse.jgit.diff.DiffConfig.RenameDetectionType;\n"},"status":-2},{"failures":[],"tindex":"eb1b18ad-c883-11e4-b442-992a91765580","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:336","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject.int = int = (org.eclipse.jgit.revwalk.RevObject.int) | (org.eclipse.jgit.revwalk.RevWalk.int)"},"status":-2},{"failures":[],"tindex":"eb1b18ae-c883-11e4-b442-0f31524c627e","variableMapping":{"count":"e","skip":"b"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.SkipRevFilter:85","type":"CtIfImpl","sourcecode":"if ((int) > ((int)++))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:477","type":"CtWhileImpl","sourcecode":"while (int < int)\n    if ((byte[][int++]) == '\\n')\n        return true;\n    "},"status":-2},{"failures":[0,5,1,2,3,4],"tindex":"eb1b18af-c883-11e4-b442-7dd852e8590c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:1193","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.IOException.getMessage()) , java.io.IOException)"},"status":-1},{"failures":[],"tindex":"eb1b18b0-c883-11e4-b442-375030470996","variableMapping":{"aPtr":"flags","bPtr":"tailIndex","bEnd":"flags","aEnd":"flags"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:568","type":"CtIfImpl","sourcecode":"if ((int - int) != (int - int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:132","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.revwalk.BlockRevQueue.Block org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block ; org.eclipse.jgit.revwalk.BlockRevQueue.Block != null ; org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block) {\n    for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n        if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) == 0)\n            return false;\n        \n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
