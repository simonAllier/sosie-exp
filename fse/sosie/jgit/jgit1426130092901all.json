[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"f3765cd8-c865-11e4-b909-dd1c044084a5","variableMapping":{"baseObjectIds":"providedObjects"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PackParser:777","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdSubclassMap<org.eclipse.jgit.lib.ObjectId> = new org.eclipse.jgit.lib.ObjectIdSubclassMap<org.eclipse.jgit.lib.ObjectId>()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1118","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdSubclassMap<org.eclipse.jgit.lib.ObjectId> = org.eclipse.jgit.transport.PackParser.getNewObjectIds()"},"status":-1},{"failures":[],"tindex":"f3765cd9-c865-11e4-b909-2b9efdd94b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineOut:169","type":"CtAssignmentImpl","sourcecode":"byte[][int--] = '0'"},"status":-2},{"failures":[],"tindex":"f3765cda-c865-11e4-b909-e57eb5cb43e9","variableMapping":{"length":"numberOfLooseObjects"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:180","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:910","type":"CtUnaryOperatorImpl","sourcecode":"(org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)++"},"status":-2},{"failures":[0,1,2,4,3,5],"tindex":"f3765cdb-c865-11e4-b909-9bf31ae89ae5","variableMapping":{"org.eclipse.jgit.lib.NullProgressMonitor.INSTANCE":"monitor","pm":"monitor"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:367","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ProgressMonitor == null)\n    org.eclipse.jgit.lib.ProgressMonitor = org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:455","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.dfs.DfsPackFile org.eclipse.jgit.internal.storage.dfs.DfsPackFile : org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPacks()) {\n    java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack> java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack> = org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>);\n    if (java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack>.isEmpty())\n        continue;\n    \n    java.util.Collections.java.util.Collections.sort(java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack>, org.eclipse.jgit.internal.storage.dfs.DfsReader.java.util.Comparator<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack>);\n    org.eclipse.jgit.internal.storage.file.PackReverseIndex org.eclipse.jgit.internal.storage.file.PackReverseIndex = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(this);\n    org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation = new org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation(org.eclipse.jgit.internal.storage.dfs.DfsPackFile);\n    for (org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack : java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack>) {\n        org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.getOffset(), this, org.eclipse.jgit.internal.storage.file.PackReverseIndex);\n        org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setOffset(0);\n        org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation);\n        if (!(org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.isFound())) {\n            org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setFound();\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"f3765cdc-c865-11e4-b909-27a555b74ee5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:124","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.transport.resolver.ServiceNotEnabledException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:430","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.InvalidMergeHeadsException((java.util.List<org.eclipse.jgit.lib.Ref>.isEmpty() ? org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String : java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.merge.MergeStrategy.getName(), java.lang.Integer.java.lang.Integer.valueOf(java.util.List<org.eclipse.jgit.lib.Ref>.size()))))"},"status":-2},{"failures":[0,1,2,4,5,3],"tindex":"f3765cdd-c865-11e4-b909-1b78124cc09f","variableMapping":{"newObjectId":"key","this":"val"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:375","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.zeroId().equals(org.eclipse.jgit.lib.ObjectId)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:406","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.lang.String) && (java.lang.Object instanceof org.eclipse.jgit.lib.Ref)) {\n    final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = ((org.eclipse.jgit.lib.Ref)(java.lang.Object));\n    if (org.eclipse.jgit.lib.Ref.getName().equals(org.eclipse.jgit.lib.Ref.getName())) {\n        final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        if (((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId != null)) && org.eclipse.jgit.lib.AnyObjectId.(org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)))\n            return true;\n        \n    } \n} "},"status":-1},{"failures":[4,0,1,2,5,3],"tindex":"f3765cde-c865-11e4-b909-c3fedfc3081f","variableMapping":{"pattern":"org.eclipse.jgit.fnmatch.FileNameMatcher.characterClassStartPattern","firstLine":"pattern"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:843","type":"CtLocalVariableImpl","sourcecode":"java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:196","type":"CtLocalVariableImpl","sourcecode":"final java.util.regex.Matcher java.util.regex.Matcher = org.eclipse.jgit.fnmatch.FileNameMatcher.java.util.regex.Pattern.matcher(java.lang.String)"},"status":-1},{"failures":[3,4,0,1,2,5,11],"tindex":"f3765cdf-c865-11e4-b909-2580190d6dbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:286","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.notes.NonNoteEntry.format(org.eclipse.jgit.lib.TreeFormatter)"},"status":-1},{"failures":[],"tindex":"f3765ce0-c865-11e4-b909-b57c10eacc2b","variableMapping":{"sz":"sizeInBits"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:221","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = new long[int]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:99","type":"CtLocalVariableImpl","sourcecode":"long[] long[] = new long[org.eclipse.jgit.internal.storage.file.InflatingBitSet.(org.eclipse.jgit.internal.storage.file.InflatingBitSet.block(int)) + 1]"},"status":-2},{"failures":[6,7,8,12,13,9,10,3,0,1,2,5,4,14,15,16,17,18,19,20,21],"tindex":"f37683f1-c865-11e4-b909-e9ba8c4df43c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceivePack:161","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.ReceivePack.service()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":7,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":16,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":10,"org.eclipse.jgit.api.PushCommandTest.testPush":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":8,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":21,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":9,"org.eclipse.jgit.transport.TestProtocolTest.testPush":14,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":19,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":6,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":13,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":17,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":15}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
