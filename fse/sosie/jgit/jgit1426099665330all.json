[{"failures":[],"tindex":"1b4ba174-c81f-11e4-ade3-8d7211ec902b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1164","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:97","type":"CtLocalVariableImpl","sourcecode":"int int = int - 2"},"status":-2},{"failures":[0,1,2],"tindex":"1b4ba175-c81f-11e4-ade3-2d1fba834c85","variableMapping":{"position":"cmp"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:486","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    return int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:247","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-2},{"failures":[2,1,3,4,5],"tindex":"1b4ba176-c81f-11e4-ade3-ed1fe9e360b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectInserter:261","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(((byte)(0)))"},"status":-2},{"failures":[],"tindex":"1b4bc887-c81f-11e4-ade3-83161fe33121","variableMapping":{"org.eclipse.jgit.transport.RemoteConfig.DEFAULT_RECEIVE_PACK":"cannotDeleteFile","optionReceivePack":"renameFileFailed"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:930","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n    this.java.lang.String = java.lang.String;\nelse\n    this.java.lang.String = org.eclipse.jgit.transport.RemoteConfig.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ApplyCommand:126","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.diff.DiffEntry.ChangeType) {\n    case ADD :\n        java.io.File = org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getNewPath(), true);\n        org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader);\n        break;\n    case MODIFY :\n        java.io.File = org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getOldPath(), false);\n        org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader);\n        break;\n    case DELETE :\n        java.io.File = org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getOldPath(), false);\n        if (!(java.io.File.delete()))\n            throw new org.eclipse.jgit.api.errors.PatchApplyException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n        \n        break;\n    case RENAME :\n        java.io.File = org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getOldPath(), false);\n        java.io.File java.io.File = org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getNewPath(), false);\n        if (!(java.io.File.renameTo(java.io.File)))\n            throw new org.eclipse.jgit.api.errors.PatchApplyException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File, java.io.File));\n        \n        break;\n    case COPY :\n        java.io.File = org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getOldPath(), false);\n        byte[] byte[] = org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.File);\n        java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(org.eclipse.jgit.api.ApplyCommand.getFile(org.eclipse.jgit.patch.FileHeader.getNewPath(), true));\n        try {\n            java.io.FileOutputStream.write(byte[]);\n        } finally {\n            java.io.FileOutputStream.close();\n        }\n}"},"status":-2},{"failures":[],"tindex":"1b4bc888-c81f-11e4-ade3-63fe17c498a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitSet:88","type":"CtLocalVariableImpl","sourcecode":"com.googlecode.javaewah.EWAHCompressedBitmap com.googlecode.javaewah.EWAHCompressedBitmap = new com.googlecode.javaewah.EWAHCompressedBitmap(long[].int)"},"status":-2},{"failures":[],"tindex":"1b4bc889-c81f-11e4-ade3-e131ba7470cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:256","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:123","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,2,1,3,4,5],"tindex":"1b4bc88a-c81f-11e4-ade3-a95b732bf94f","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:201","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:488","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.cleanupTemporaryFiles()"},"status":-2},{"failures":[],"tindex":"1b4bc88b-c81f-11e4-ade3-078e88bc0dc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1199","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"1b4bc88c-c81f-11e4-ade3-bb5e7458c042","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Collections.java.util.Collections.<org.eclipse.jgit.lib.ObjectId>emptySet())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:459","type":"CtInvocationImpl","sourcecode":"java.util.Collections.java.util.Collections.sort(java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack>, org.eclipse.jgit.internal.storage.dfs.DfsReader.java.util.Comparator<org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack>)"},"status":-2},{"failures":[],"tindex":"1b4bc88d-c81f-11e4-ade3-87d4505760e1","variableMapping":{"pList":"pList","packList":"packList","this":"this","packs":"packs","curs":"curs","objectId":"objectId"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:413","type":"CtForImpl","sourcecode":"SEARCH : for ( ;  ; ) {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n    for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n        try {\n            org.eclipse.jgit.lib.ObjectLoader org.eclipse.jgit.lib.ObjectLoader = org.eclipse.jgit.internal.storage.file.PackFile.get(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId);\n            if (org.eclipse.jgit.lib.ObjectLoader != null)\n                return org.eclipse.jgit.lib.ObjectLoader;\n            \n        } catch (org.eclipse.jgit.errors.PackMismatchException org.eclipse.jgit.errors.PackMismatchException) {\n            if (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList))\n                continue SEARCH;\n            \n        } catch (java.io.IOException java.io.IOException) {\n            org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile);\n        }\n    }\n    break SEARCH;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:412","type":"CtDoImpl","sourcecode":"do {\n    SEARCH : for ( ;  ; ) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n        for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n            try {\n                org.eclipse.jgit.lib.ObjectLoader org.eclipse.jgit.lib.ObjectLoader = org.eclipse.jgit.internal.storage.file.PackFile.get(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId);\n                if (org.eclipse.jgit.lib.ObjectLoader != null)\n                    return org.eclipse.jgit.lib.ObjectLoader;\n                \n            } catch (org.eclipse.jgit.errors.PackMismatchException org.eclipse.jgit.errors.PackMismatchException) {\n                if (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList))\n                    continue SEARCH;\n                \n            } catch (java.io.IOException java.io.IOException) {\n                org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile);\n            }\n        }\n        break SEARCH;\n    }\n} while (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList) )"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
