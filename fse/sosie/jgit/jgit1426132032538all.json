[{"failures":[],"tindex":"77b92bb2-c86a-11e4-ac83-a71dab677853","variableMapping":{"i":"mid","off":"mid"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:132","type":"CtLocalVariableImpl","sourcecode":"int int = int == int ? -1 : int - int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:94","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.lib.AnyObjectId.compareTo(org.eclipse.jgit.notes.Note[][int])"},"status":-2},{"failures":[],"tindex":"77b92bb3-c86a-11e4-ac83-cdd55953bfef","variableMapping":{"a":"org.eclipse.jgit.treewalk.AbstractTreeIterator.class","b":"org.eclipse.jgit.treewalk.AbstractTreeIterator.class","ch":"org.eclipse.jgit.treewalk.AbstractTreeIterator.class","matches":"org.eclipse.jgit.treewalk.AbstractTreeIterator.class"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:728","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) && ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator))\n    return org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1109","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.treewalk.NameConflictTreeWalk.addTree(new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.dircache.DirCache));\n    org.eclipse.jgit.treewalk.NameConflictTreeWalk.addTree(org.eclipse.jgit.lib.ObjectId);\n    org.eclipse.jgit.treewalk.NameConflictTreeWalk.setRecursive(true);\n    org.eclipse.jgit.treewalk.NameConflictTreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilter.org.eclipse.jgit.treewalk.filter.PathFilter.create(java.lang.String));\n    while (org.eclipse.jgit.treewalk.NameConflictTreeWalk.next()) {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTree(0, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n        org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.NameConflictTreeWalk.getTree(1, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator == null) || (org.eclipse.jgit.treewalk.AbstractTreeIterator == null))\n            return true;\n        \n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()) != (org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()))\n            return true;\n        \n        if (!(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId().equals(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId())))\n            return true;\n        \n    }\n    return false;\n} finally {\n    org.eclipse.jgit.treewalk.NameConflictTreeWalk.release();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"77b92bb4-c86a-11e4-ac83-4dde7bbb4f10","variableMapping":{"len":"type"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:971","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encodedTypeString(int))"},"status":-1},{"failures":[117,114,115,116,120,121],"tindex":"77b952c5-c86a-11e4-ac83-07568fb1687b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:131","type":"CtReturnImpl","sourcecode":"return \"forced-update\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:491","type":"CtReturnImpl","sourcecode":"return (\"AnyObjectId[\" + org.eclipse.jgit.lib.AnyObjectId.(name())) + \"]\""},"status":-1},{"failures":[],"tindex":"77b952c6-c86a-11e4-ac83-5b062add3ce7","variableMapping":{"cmp":"org.eclipse.jgit.util.FileUtils.RECURSIVE","packedIdx":"org.eclipse.jgit.util.FileUtils.RECURSIVE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:332","type":"CtIfImpl","sourcecode":"if (int == 0)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1115","type":"CtIfImpl","sourcecode":"if (!boolean)\n    org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.api.RebaseCommand.RebaseState.getDir(), org.eclipse.jgit.util.FileUtils.int);\n"},"status":-2},{"failures":[117,120,121,114,115,116],"tindex":"77b952c7-c86a-11e4-ac83-87db3acf6951","variableMapping":{"requestValidator":"requestValidator"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:456","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.TipRequestValidator()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:462","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.UploadPack.RequestValidator = new org.eclipse.jgit.transport.UploadPack.AnyRequestValidator()"},"status":-1},{"failures":[],"tindex":"77b952c8-c86a-11e4-ac83-5f7fe7ea732a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:323","type":"CtThrowImpl","sourcecode":"throw new java.util.zip.DataFormatException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:227","type":"CtThrowImpl","sourcecode":"throw org.eclipse.jgit.errors.StopWalkException.org.eclipse.jgit.errors.StopWalkException"},"status":-2},{"failures":[],"tindex":"77b952c9-c86a-11e4-ac83-c7fb1803c949","variableMapping":{"c":"commit","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:725","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevCommit.getTree())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkFetchConnection:372","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.WalkFetchConnection.needs(org.eclipse.jgit.revwalk.RevCommit.getTree())"},"status":-2},{"failures":[],"tindex":"77b952ca-c86a-11e4-ac83-ef6f1f15b81a","variableMapping":{"eol":"x","sp":"x"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:363","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:512","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[121,114,115,116,117,120],"tindex":"77b952cb-c86a-11e4-ac83-ad5ab6f2f4a3","variableMapping":{"bs":"i","wantSize":"i"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:323","type":"CtIfImpl","sourcecode":"if ((0 < int) && (int < int))\n    int = (int / int) * int;\nelse if (int <= 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1310","type":"CtIfImpl","sourcecode":"if ((!(org.eclipse.jgit.internal.storage.pack.ObjectToPack[][int].isEdge())) && (org.eclipse.jgit.internal.storage.pack.ObjectToPack[][int].isDeltaRepresentation()))\n    (org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.int)++;\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":5,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":92,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":107,"org.eclipse.jgit.api.FetchCommandTest.testFetch":22,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":15,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":30,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":12,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":64,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":59,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":74,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":57,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":68,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":112,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":11,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":29,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":73,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":121,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":119,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":17,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":41,"org.eclipse.jgit.api.PushCommandTest.testPush":98,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":118,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":90,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":103,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":91,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":80,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":83,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":89,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":97,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":88,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":78,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":76,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":82,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":126,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":48,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":47,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":81,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":65,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":115,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":54,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":67,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":60,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":44,"org.eclipse.jgit.api.GitConstructionTest.testWrap":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":51,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":33,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":31,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":18,"org.eclipse.jgit.api.GitConstructionTest.testOpen":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":14,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":69,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":95,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":61,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":32,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":72,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":114,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":4,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":120,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":1,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":23,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":26,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":75,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":130,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":122,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":104,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":53,"org.eclipse.jgit.transport.PackParserTest.test1":123,"org.eclipse.jgit.api.GitConstructionTest.testClose":19,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":117,"org.eclipse.jgit.transport.PackParserTest.test2":124,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":99,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":127,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":63,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":3,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":39,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":66,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":58,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":43,"org.eclipse.jgit.transport.TestProtocolTest.testPush":71,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":106,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":128,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":111,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":87,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":86,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":85,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":84,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":37,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":93,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":110,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":27,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":100,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":105,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":7,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":79,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":46,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":113,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":109,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":129,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":62,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":70,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":94,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":35}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
