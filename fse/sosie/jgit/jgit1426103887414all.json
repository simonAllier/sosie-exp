[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"efc21b53-c828-11e4-aa98-2b1b7401c66c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:346","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n    if (java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))\n        continue;\n    \n    if (java.util.Set<org.eclipse.jgit.lib.ObjectId> == null)\n        java.util.Set<org.eclipse.jgit.lib.ObjectId> = org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects();\n    \n    if (java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))\n        continue;\n    \n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.put(org.eclipse.jgit.lib.ObjectId, java.io.File);\n} catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    continue;\n}"},"status":-1},{"failures":[],"tindex":"efc24264-c828-11e4-aa98-d7b85cb3580b","variableMapping":{"u":"refUpdate","commit":"newCommit"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:244","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit.getId())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:276","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null)\n    org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.link(org.eclipse.jgit.lib.Ref.getName());\nelse if (boolean) {\n    org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.link(org.eclipse.jgit.api.CheckoutCommand.getBranchName());\n    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String);\n} else {\n    org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.forceUpdate();\n}"},"status":-2},{"failures":[1,13,9,0,3,4,5,14,15],"tindex":"efc24265-c828-11e4-aa98-83cc7b82df46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:299","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.api.MergeResult.MergeStatus = org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus"},"status":-1},{"failures":[3,4,5,0,1,9],"tindex":"efc24266-c828-11e4-aa98-a98614d95f8d","variableMapping":{"rw":"rw"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RefUpdate:517","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:253","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n    try {\n        org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId()));\n    } catch (java.io.IOException java.io.IOException) {\n    }\n}"},"status":-1},{"failures":[1,9,16,17,18,19,0,3,4,5],"tindex":"efc24267-c828-11e4-aa98-757fe85f4067","variableMapping":{"dstRef":"dstRef","desiredResult":"desiredResult","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate:134","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase().compareAndRemove(org.eclipse.jgit.lib.Ref)) {\n    org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase().removed(org.eclipse.jgit.lib.Ref.getName());\n    return org.eclipse.jgit.lib.RefUpdate.Result;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate:125","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase().compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectIdRef)) {\n    org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase().stored(org.eclipse.jgit.lib.ObjectIdRef);\n    return org.eclipse.jgit.lib.RefUpdate.Result;\n} "},"status":-1},{"failures":[0,9,3,4,5,1],"tindex":"efc24268-c828-11e4-aa98-93732e464ebb","variableMapping":{"ref":"name","commitId":"mId"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:157","type":"CtIfImpl","sourcecode":"if (((java.lang.String) != null) && (org.eclipse.jgit.lib.ObjectId == null)) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(((\"Invalid ref \" + (java.lang.String)) + \" specified\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:665","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)"},"status":-1},{"failures":[20,3,4,5,1,21,0,22,23,24,25,9],"tindex":"efc24269-c828-11e4-aa98-4d022f378f55","variableMapping":{"ptr":"slash"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:569","type":"CtOperatorAssignmentImpl","sourcecode":"int += 46"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:337","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.lib.Tree.org.eclipse.jgit.lib.Tree.binarySearch(org.eclipse.jgit.lib.TreeEntry[], byte[], ((byte)('/')), int, int)"},"status":-1},{"failures":[],"tindex":"efc2426a-c828-11e4-aa98-db13be93fbff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriter:129","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:325","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.NB.org.eclipse.jgit.util.NB.compareUInt32(int, org.eclipse.jgit.lib.AbbreviatedObjectId.mask(5, int[][(int + 4)]))"},"status":-2},{"failures":[],"tindex":"efc2426b-c828-11e4-aa98-a5adcae1fd96","variableMapping":{"pList":"org.eclipse.jgit.revwalk.RevCommit.NO_PARENTS","p":"id"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:179","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[]{ org.eclipse.jgit.revwalk.RevCommit[][0] , org.eclipse.jgit.revwalk.RevCommit }"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1423","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.ObjectId).org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]"},"status":-2},{"failures":[],"tindex":"efc2426c-c828-11e4-aa98-d32983223756","variableMapping":{"org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.PACK_DELTA":"beginA"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation:115","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Edit:164","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":10,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":20,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":25,"org.eclipse.jgit.lib.T0002_TreeTest.test005_addRecursiveTree":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":18,"org.eclipse.jgit.transport.TestProtocolTest.testPush":17,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned":7,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned":8,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":21,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":2,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":15,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":13,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":12,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":11,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":9,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":24,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":16,"org.eclipse.jgit.lib.T0002_TreeTest.test004_addTree":22,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":19}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
