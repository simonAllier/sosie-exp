[{"failures":[0,1,2,3,4,5],"tindex":"2c4d0e0d-c825-11e4-9f6c-7397099afcae","variableMapping":{"firstCommit":"p","r":"p"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:284","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) == null)\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.AbstractRevQueue:102","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.AbstractRevQueue.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevFlag)"},"status":-1},{"failures":[5,6,7,8,0,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,3,4],"tindex":"2c4d0e0e-c825-11e4-9f6c-2f8a8ad20947","variableMapping":{"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars":"result"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:103","type":"CtForImpl","sourcecode":"for (char char = '0' ; char <= '9' ; char++)\n    org.eclipse.jgit.util.RawParseUtils.byte[][char] = 1;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:162","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    byte[] = new byte[int];\nelse if ((byte[].int) != int)\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"2c4d0e0f-c825-11e4-9f6c-09f1862aab99","variableMapping":{"size":"depth"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:244","type":"CtReturnImpl","sourcecode":"return 0 == (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:566","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.min();\n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator.eof()) {\n        if ((int) > 0) {\n            org.eclipse.jgit.treewalk.TreeWalk.exitSubtree();\n            if (boolean) {\n                boolean = true;\n                boolean = true;\n                return true;\n            } \n            org.eclipse.jgit.treewalk.TreeWalk.popEntriesEqual();\n            continue;\n        } \n        return false;\n    } \n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    if (!(org.eclipse.jgit.treewalk.filter.TreeFilter.include(this))) {\n        org.eclipse.jgit.treewalk.TreeWalk.skipEntriesEqual();\n        continue;\n    } \n    if ((boolean) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.AbstractTreeIterator.int))) {\n        org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n        continue;\n    } \n    boolean = true;\n    return true;\n}"},"status":-2},{"failures":[3,4,0,1,2,5],"tindex":"2c4d0e10-c825-11e4-9f6c-5f7709dd14c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:283","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid tagger\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.SimpleDataInput:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[0,1,2,4,5,3],"tindex":"2c4d0e11-c825-11e4-9f6c-4989024c8829","variableMapping":{"other":"other"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:144","type":"CtIfImpl","sourcecode":"if ((com.googlecode.javaewah.EWAHCompressedBitmap.sizeInBits()) == 0)\n    return this;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:159","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.InflatingBitSet(com.googlecode.javaewah.EWAHCompressedBitmap)"},"status":-1},{"failures":[],"tindex":"2c4d0e12-c825-11e4-9f6c-eb8a9f383e0d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TestProtocol:154","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.URIish org.eclipse.jgit.transport.URIish"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:511","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.URIish org.eclipse.jgit.transport.URIish = new org.eclipse.jgit.transport.URIish(this)"},"status":-2},{"failures":[0,1,2,4,5,3],"tindex":"2c4d0e13-c825-11e4-9f6c-5ffe4a12a360","variableMapping":{"this":"this","n":"o","o":"o"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:348","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList = org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:319","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList = org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)"},"status":-1},{"failures":[],"tindex":"2c4d0e14-c825-11e4-9f6c-5f5ab307ada3","variableMapping":{"otp":"commitToMerge","baseId":"commitToMerge"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1991","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.lib.ObjectId)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:310","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.api.PullCommand.PullRebaseMode.boolean) {\n    org.eclipse.jgit.api.RebaseCommand org.eclipse.jgit.api.RebaseCommand = new org.eclipse.jgit.api.RebaseCommand(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.api.RebaseResult org.eclipse.jgit.api.RebaseResult = org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.lib.AnyObjectId).setUpstreamName(java.lang.String).setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor).setOperation(org.eclipse.jgit.api.RebaseCommand.Operation.org.eclipse.jgit.api.RebaseCommand.Operation).setStrategy(org.eclipse.jgit.merge.MergeStrategy).setPreserveMerges(org.eclipse.jgit.api.PullCommand.PullRebaseMode.boolean).call();\n    org.eclipse.jgit.api.PullResult = new org.eclipse.jgit.api.PullResult(org.eclipse.jgit.transport.FetchResult , java.lang.String , org.eclipse.jgit.api.RebaseResult);\n} else {\n    org.eclipse.jgit.api.MergeCommand org.eclipse.jgit.api.MergeCommand = new org.eclipse.jgit.api.MergeCommand(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.api.MergeCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId);\n    org.eclipse.jgit.api.MergeCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n    org.eclipse.jgit.api.MergeResult org.eclipse.jgit.api.MergeResult = org.eclipse.jgit.api.MergeCommand.call();\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    org.eclipse.jgit.api.PullResult = new org.eclipse.jgit.api.PullResult(org.eclipse.jgit.transport.FetchResult , java.lang.String , org.eclipse.jgit.api.MergeResult);\n}"},"status":-2},{"failures":[],"tindex":"2c4d0e15-c825-11e4-9f6c-05ee260ede30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:644","type":"CtAssignmentImpl","sourcecode":"int = ((int)((long) - long))"},"status":-2},{"failures":[0,1,2,33,34,35,36,37,38,39,40,41,42,43,44,45,46,5,3,4],"tindex":"2c4d0e16-c825-11e4-9f6c-7f8768e9a5db","variableMapping":{"subRepo":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.IndexDiff:537","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:943","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"))"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":23,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":22,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":45,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":44,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":37,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":24,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":29,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":30,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":32,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":20,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":26,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":11,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":38,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":21,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":46,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":33,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":7,"org.eclipse.jgit.transport.PackParserTest.test1":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":9,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.transport.PackParserTest.test2":14,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":42,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":40,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":6,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":25,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":43}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
