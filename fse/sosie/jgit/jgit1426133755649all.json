[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"7e176ea6-c86e-11e4-9522-dfaf4672f0c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:293","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText = org.eclipse.jgit.diff.RawText"},"status":-1},{"failures":[4,0,1,2,3,23,24,25,26,27,28,29,22],"tindex":"7e1f0fc7-c86e-11e4-9522-41aa5f81ad70","variableMapping":{"writer":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:299","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setUseCachedPacks(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1016","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor)"},"status":-1},{"failures":[],"tindex":"7e243fe8-c86e-11e4-9522-9d708ef3ce52","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:248","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:303","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-2},{"failures":[],"tindex":"7e243fe9-c86e-11e4-9522-d9efb7acb0de","variableMapping":{"msg":"lock","strResult":"lock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:113","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((java.lang.String.length()) > 0)\n        java.lang.String = (java.lang.String + \": \") + java.lang.String;\n    else\n        java.lang.String = java.lang.String;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportSftp:339","type":"CtInvocationImpl","sourcecode":"com.jcraft.jsch.ChannelSftp.rm(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7e274d2a-c86e-11e4-9522-b35d37795f52","variableMapping":{"v":"characterClassIsNotSupported"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkEncryption:87","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = \"\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:87","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:cntrl:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('\u0000' , '\u001f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''));\n} else if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.java.lang.String.format(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[0,1,2,4,3,22],"tindex":"7e285e9b-c86e-11e4-9522-3f25099f5fe0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:403","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in object id\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:845","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(long)))"},"status":-1},{"failures":[],"tindex":"7e33822c-c86e-11e4-9522-bbd8b321a153","variableMapping":{"ow":"rw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:347","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.checkConnectivity()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:571","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0) {\n        org.eclipse.jgit.revwalk.RevObject = null;\n        break;\n    } \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit;\n    --int;\n}"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"7e368f6d-c86e-11e4-9522-93d70b641ddf","variableMapping":{"start":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT","ptr":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:605","type":"CtReturnImpl","sourcecode":"return (int - 3) - int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:505","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.int"},"status":-1},{"failures":[4,3,0,1,2,22],"tindex":"7e368f6e-c86e-11e4-9522-3136d0f2d2ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:394","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"://\")"},"status":-1},{"failures":[],"tindex":"7e36b67f-c86e-11e4-9522-d1636731f400","variableMapping":{"path":"prefix","untrackedParentFolders":"takenNames"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:163","type":"CtInvocationImpl","sourcecode":"java.util.LinkedList<java.lang.String>.addFirst(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:311","type":"CtIfImpl","sourcecode":"if (java.util.Collection<java.lang.String>.contains(java.lang.String)) {\n    org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result);\n    break SWITCH;\n} "},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":21,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":30,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":33,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":32,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":14,"org.eclipse.jgit.api.BlameCommandTest.testRename":18,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":28,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":37,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":26,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":27,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":25,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":9,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":12,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":19,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":20,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":5,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":40,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":6,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":7,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":24,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":43,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":29,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":23,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":39,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":36,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":38,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":17,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":13,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":41,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":22,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":10,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":15,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":31,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":35}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
