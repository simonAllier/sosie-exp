[{"failures":[0,1,2,3,4,5],"tindex":"a961f3a5-c882-11e4-aa1a-8507ab585709","variableMapping":{"match":"rcb"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:395","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.OrRevFilter:164","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.eclipse.jgit.revwalk.filter.RevFilter.requiresCommitBody()"},"status":-1},{"failures":[],"tindex":"a961f3a6-c882-11e4-aa1a-b18bfb4ed786","variableMapping":{"this":"initLock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:886","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.setAdvertisedRefs(null, null)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:1110","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    org.eclipse.jgit.util.LongList = org.eclipse.jgit.util.LongList;\n    if (org.eclipse.jgit.util.LongList == null) {\n        org.eclipse.jgit.util.LongList = new org.eclipse.jgit.util.LongList();\n        org.eclipse.jgit.util.LongList = org.eclipse.jgit.util.LongList;\n    } \n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,1,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,3,4,5],"tindex":"a961f3a7-c882-11e4-aa1a-c59ce0c4ba92","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:87","type":"CtReturnImpl","sourcecode":"return "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1703","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort.org.eclipse.jgit.revwalk.RevSort, true)"},"status":-1},{"failures":[],"tindex":"a961f3a8-c882-11e4-aa1a-dd7643228ff0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:299","type":"CtLocalVariableImpl","sourcecode":"int int = 100"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:240","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,3,4,5,2,1],"tindex":"a961f3a9-c882-11e4-aa1a-6d944869dea9","variableMapping":{"entry":"dcEntry","indexEntry":"dcEntry"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:373","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.dircache.DirCacheEntry.getLastModified())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:778","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[28,29,30,2,31,32,33,34,35,36,1,3,4,5,0],"tindex":"a961f3aa-c882-11e4-aa1a-afafd84e32be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:480","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n} "},"status":-1},{"failures":[3,4,5,2,0,37,38,1],"tindex":"a961f3ab-c882-11e4-aa1a-3dc8678d31b8","variableMapping":{"this":"rc"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:877","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Config.notifyUponTransientChanges())\n    org.eclipse.jgit.lib.Config.fireConfigChangedEvent();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:178","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = org.eclipse.jgit.lib.Config.getString(\"user\", null, \"name\");\n} "},"status":-1},{"failures":[],"tindex":"a961f3ac-c882-11e4-aa1a-03149e526730","variableMapping":{"cannotCombineSquashWithNoff":"deltaBuf","squash":"deltaBuf","org.eclipse.jgit.api.MergeCommand.FastForwardMode.NO_FF":"deltaBuf","this":"deltaBuf","fastForwardMode":"deltaBuf"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:424","type":"CtIfImpl","sourcecode":"if ((java.lang.Boolean.booleanValue()) && ((org.eclipse.jgit.api.MergeCommand.FastForwardMode) == (org.eclipse.jgit.api.MergeCommand.FastForwardMode.org.eclipse.jgit.api.MergeCommand.FastForwardMode))) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object) instanceof byte[])\n    org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream.write(((byte[])(java.lang.Object)), 0, int);\nelse\n    ((org.eclipse.jgit.util.TemporaryBuffer.Heap)(java.lang.Object)).writeTo(org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream, null);\n"},"status":-2},{"failures":[3,4,5,2,1,0],"tindex":"a961f3ad-c882-11e4-aa1a-09eb72e58308","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:485","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"zero length name\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:271","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath()))"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,15,16,17,18,53,19,20,21,22,23,24,25,26,27,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,0,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,1,95,96,97,98,3,99,4,5,2,100,101,102,103,104,105,106,107],"tindex":"a961f3ae-c882-11e4-aa1a-bfa7ce5d2bb8","variableMapping":{"org.eclipse.jgit.lib.Constants.R_REFS":"mergeMessage","srcRef":"ref","destSpec":"message"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:634","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)))) {\n    final java.lang.String java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n    final int int = java.lang.String.indexOf('/', org.eclipse.jgit.lib.Constants.java.lang.String.length());\n    java.lang.String = (java.lang.String.substring(0, (int + 1))) + java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:317","type":"CtIfImpl","sourcecode":"if (!(java.lang.Boolean)) {\n    if ((java.lang.String) != null)\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref);\n    \n    org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n    org.eclipse.jgit.lib.Repository.writeMergeHeads(java.util.Arrays.java.util.Arrays.asList(org.eclipse.jgit.lib.Ref.getObjectId()));\n} else {\n    java.util.List<org.eclipse.jgit.revwalk.RevCommit> java.util.List<org.eclipse.jgit.revwalk.RevCommit> = org.eclipse.jgit.revwalk.RevWalkUtils.org.eclipse.jgit.revwalk.RevWalkUtils.find(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit);\n    java.lang.String java.lang.String = new org.eclipse.jgit.merge.SquashMessageFormatter().format(java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Ref);\n    org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(java.lang.String);\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":40,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":101,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":65,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":46,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":67,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":21,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":74,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":69,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":41,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":24,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":32,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":102,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":6,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":95,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":54,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":52,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":77,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":103,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.api.CleanCommandTest.testClean":31,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":51,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":79,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":73,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":61,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":60,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":96,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":33,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":8,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":7,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":39,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":94,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":59,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":43,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":58,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":66,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":12,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":84,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":64,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":10,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":29,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":23,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":14,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":92,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":72,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":78,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":82,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":85,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":11,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":36,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":104,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":89,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":105,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":106,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":28,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":34,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":48,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":86,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":75,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":9,"org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig":38,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":63,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":57,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":83,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":90,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":88,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":30,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":107,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":97,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":20,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":71,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":22,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":68,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":99,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":62,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":47,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":93,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":87,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":15,"org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":18,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":100,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":56,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":42,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":80,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":44,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":25,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":35,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":45,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":16}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
