[{"failures":[0,1,2,3,4,5],"tindex":"69530971-c83c-11e4-aeb1-39a5f65ac79b","variableMapping":{"len":"grow"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:168","type":"CtIfImpl","sourcecode":"if ((++(int)) == (int)) {\n    org.eclipse.jgit.lib.ObjectIdSubclassMap<V>.grow();\n    org.eclipse.jgit.lib.ObjectIdSubclassMap<V>.insert(Q);\n} else {\n    V[][int] = Q;\n}"},"status":-1},{"failures":[],"tindex":"69530972-c83c-11e4-aeb1-c377f38fd548","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:246","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:291","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.internal.storage.file.PackFile.idx().iterator();\n} catch (java.io.IOException java.io.IOException) {\n    return java.util.Collections.java.util.Collections.<org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry>emptyList().iterator();\n}"},"status":-2},{"failures":[2,3,4,5,1,0],"tindex":"69530973-c83c-11e4-aeb1-9f8e4006ddd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:117","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.add(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.revwalk.RevObject.getType())"},"status":-1},{"failures":[],"tindex":"69533084-c83c-11e4-aeb1-358389122bc2","variableMapping":{"id":"objectId","walk":"rw"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:353","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:244","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.AnyObjectId))"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,0,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,1,101,2,3,4,5,102,103,104,105,106,107,108],"tindex":"69533085-c83c-11e4-aeb1-4705141eeb8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:313","type":"CtForImpl","sourcecode":"for (int int = org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.int ; int < (byte[].int) ; ) {\n    int int = int;\n    int = org.eclipse.jgit.revwalk.ObjectWalk.org.eclipse.jgit.revwalk.ObjectWalk.findObjectId(byte[], int);\n    org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte[], int);\n    int += org.eclipse.jgit.revwalk.ObjectWalk.int;\n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.get(org.eclipse.jgit.lib.MutableObjectId);\n    if ((org.eclipse.jgit.revwalk.RevObject != null) && (((org.eclipse.jgit.revwalk.RevObject.int) & (org.eclipse.jgit.revwalk.RevWalk.int)) != 0))\n        continue;\n    \n    int int = org.eclipse.jgit.revwalk.ObjectWalk.org.eclipse.jgit.revwalk.ObjectWalk.parseMode(byte[], int, int, org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit);\n    int int;\n    switch (int >>> (org.eclipse.jgit.revwalk.ObjectWalk.int)) {\n        case org.eclipse.jgit.revwalk.ObjectWalk.int :\n        case org.eclipse.jgit.revwalk.ObjectWalk.int :\n            if (org.eclipse.jgit.revwalk.RevObject == null) {\n                org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevBlob(org.eclipse.jgit.lib.MutableObjectId);\n                org.eclipse.jgit.revwalk.RevObject.int = org.eclipse.jgit.revwalk.RevWalk.int;\n                org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevObject);\n                return org.eclipse.jgit.revwalk.RevObject;\n            } \n            if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.int);\n            \n            org.eclipse.jgit.revwalk.RevObject.int = int = (org.eclipse.jgit.revwalk.RevObject.int) | (org.eclipse.jgit.revwalk.RevWalk.int);\n            if ((int & (org.eclipse.jgit.revwalk.RevWalk.int)) == 0)\n                return org.eclipse.jgit.revwalk.RevObject;\n            \n            if (boolean)\n                return org.eclipse.jgit.revwalk.RevObject;\n            \n            continue;\n        case org.eclipse.jgit.revwalk.ObjectWalk.int :\n            if (org.eclipse.jgit.revwalk.RevObject == null) {\n                org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevTree(org.eclipse.jgit.lib.MutableObjectId);\n                org.eclipse.jgit.revwalk.RevObject.int = org.eclipse.jgit.revwalk.RevWalk.int;\n                org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevObject);\n                return org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject);\n            } \n            if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevTree))\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.int);\n            \n            org.eclipse.jgit.revwalk.RevObject.int = int = (org.eclipse.jgit.revwalk.RevObject.int) | (org.eclipse.jgit.revwalk.RevWalk.int);\n            if ((int & (org.eclipse.jgit.revwalk.RevWalk.int)) == 0)\n                return org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject);\n            \n            if (boolean)\n                return org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject);\n            \n            continue;\n        case org.eclipse.jgit.revwalk.ObjectWalk.int :\n            continue;\n        default :\n            throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String.java.lang.String.format(\"%o\", java.lang.Integer.java.lang.Integer.valueOf(int)), org.eclipse.jgit.lib.MutableObjectId.name(), org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.int, org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.int), org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.org.eclipse.jgit.revwalk.RevObject));\n    }\n}"},"status":-1},{"failures":[109,110,111,112,113,114],"tindex":"69533086-c83c-11e4-aeb1-49c48b1f908a","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:183","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.copyCurrentContent()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.requireLock()"},"status":-1},{"failures":[],"tindex":"69533087-c83c-11e4-aeb1-65134c77cd55","variableMapping":{"org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.SMUDGED":"org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA","entry":"entry","org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.EQUAL":"org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:882","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.dircache.DirCacheEntry.isSmudged()))\n    return org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff;\nelse\n    return org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:858","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(org.eclipse.jgit.dircache.DirCacheEntry.getRawMode()))\n    return org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff.org.eclipse.jgit.treewalk.WorkingTreeIterator.MetadataDiff;\n"},"status":-2},{"failures":[0,5,1,115,116,117,118,119,120,121,122,123,124,125,2,3,4],"tindex":"69533088-c83c-11e4-aeb1-a74a5d1c0cd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:211","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.diff.Edit == null) {\n    org.eclipse.jgit.diff.Edit = new org.eclipse.jgit.diff.Edit((int - 1) , (int - 1));\n    org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit);\n} "},"status":-1},{"failures":[109,111,126],"tindex":"69533089-c83c-11e4-aeb1-19bb92fb4c8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:512","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[1,5,0,55,2,3,4],"tindex":"6953308a-c83c-11e4-aeb1-6fc01b5246ba","variableMapping":{"fos":"output"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1679","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.write('\\n')"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:272","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.close()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":46,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":43,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":62,"org.eclipse.jgit.patch.EditListTest.testTypes":123,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":98,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":110,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":85,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":24,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":70,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":10,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":14,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":105,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":68,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":31,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":53,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":102,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":67,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":13,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":35,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":72,"org.eclipse.jgit.patch.EditListTest.testFileHeader":125,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":23,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":82,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":96,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":97,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":108,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":90,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":95,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":116,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":117,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":94,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":106,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":104,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":89,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":29,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":87,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":38,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":32,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":111,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":65,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":48,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":54,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":45,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":15,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":39,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":74,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":86,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":73,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":11,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":7,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":58,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":55,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":75,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":80,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":77,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":33,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":88,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":103,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":126,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":118,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":112,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":119,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":109,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":37,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":61,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":76,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":47,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":71,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":114,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":8,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":9,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":115,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":79,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":52,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":25,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":6,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":84,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":93,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":34,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":113,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":92,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":19,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":63,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":124,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":99,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":120,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":41,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":81,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":42,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":12,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":44,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":100,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":64,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":107,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":28,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":121,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":122,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":56,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":40,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":17}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
