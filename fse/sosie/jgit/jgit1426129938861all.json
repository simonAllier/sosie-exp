[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"98226317-c865-11e4-b94a-b5035549bf32","variableMapping":{"digest":"objectDigest"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:201","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:619","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(((byte)(' ')))"},"status":-1},{"failures":[],"tindex":"98226318-c865-11e4-b94a-43f1dcd3edb4","variableMapping":{"ref":"initFailedNonBareRepoSameDirs"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:160","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(((\"Invalid ref \" + (java.lang.String)) + \" specified\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:496","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File, java.io.File))"},"status":-2},{"failures":[0,18,15,16,17,2,5],"tindex":"98226319-c865-11e4-b94a-c58c8d339897","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:189","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.formatBase10(byte[], int, int)"},"status":-1},{"failures":[0,15,16,17,2,5],"tindex":"9822631a-c865-11e4-b94a-5f802d7b9146","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:276","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.int = 0"},"status":-1},{"failures":[0,2,5,15,16,17],"tindex":"9822631b-c865-11e4-b94a-79b69a4cceae","variableMapping":{"s":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:137","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(',');\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:407","type":"CtIfImpl","sourcecode":"if ((java.net.URL.getQuery()) != null)\n    java.lang.StringBuilder.append('?').append(java.net.URL.getQuery());\n"},"status":-1},{"failures":[],"tindex":"9822631c-c865-11e4-b94a-8d32193f8229","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:472","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(46)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.MissingBundlePrerequisiteException:60","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"9822631d-c865-11e4-b94a-6bb17a52c978","variableMapping":{"r":"local","repository":"local"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.events.RepositoryEvent:68","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository) == null)\n    org.eclipse.jgit.lib.Repository = org.eclipse.jgit.lib.Repository;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:489","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.URIish org.eclipse.jgit.transport.URIish : java.util.List<org.eclipse.jgit.transport.URIish>) {\n    final org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.Transport = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.RemoteConfig.getName());\n    org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig);\n    java.util.List<org.eclipse.jgit.transport.Transport>.add(org.eclipse.jgit.transport.Transport);\n}"},"status":-2},{"failures":[],"tindex":"9822631e-c865-11e4-b94a-2b4133d332ae","variableMapping":{"idHEAD":"ref","master":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:288","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.Ref.getObjectId().equals(org.eclipse.jgit.lib.Ref.getObjectId())))\n    return org.eclipse.jgit.lib.Ref;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:387","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref"},"status":-2},{"failures":[],"tindex":"9822631f-c865-11e4-b94a-5b450429e2c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:921","type":"CtReturnImpl","sourcecode":"return new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LsRemoteCommand:187","type":"CtTryImpl","sourcecode":"try {\n    if ((org.eclipse.jgit.lib.Repository) != null)\n        org.eclipse.jgit.transport.Transport = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String);\n    else\n        org.eclipse.jgit.transport.Transport = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.Transport.open(new org.eclipse.jgit.transport.URIish(java.lang.String));\n    \n    org.eclipse.jgit.transport.Transport.setOptionUploadPack(java.lang.String);\n    org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.LsRemoteCommand, java.util.Collection<org.eclipse.jgit.lib.Ref>>.configure(org.eclipse.jgit.transport.Transport);\n    java.util.Collection<org.eclipse.jgit.transport.RefSpec> java.util.Collection<org.eclipse.jgit.transport.RefSpec> = new java.util.ArrayList<org.eclipse.jgit.transport.RefSpec>(1);\n    if (boolean)\n        java.util.Collection<org.eclipse.jgit.transport.RefSpec>.add(new org.eclipse.jgit.transport.RefSpec(\"refs/tags/*:refs/remotes/origin/tags/*\"));\n    \n    if (boolean)\n        java.util.Collection<org.eclipse.jgit.transport.RefSpec>.add(new org.eclipse.jgit.transport.RefSpec(\"refs/heads/*:refs/remotes/origin/*\"));\n    \n    java.util.Collection<org.eclipse.jgit.lib.Ref> java.util.Collection<org.eclipse.jgit.lib.Ref>;\n    java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>();\n    org.eclipse.jgit.transport.FetchConnection = org.eclipse.jgit.transport.Transport.openFetch();\n    java.util.Collection<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.transport.FetchConnection.getRefs();\n    if (java.util.Collection<org.eclipse.jgit.transport.RefSpec>.isEmpty())\n        for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Collection<org.eclipse.jgit.lib.Ref>)\n            java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.put(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.lib.Ref);\n    else\n        for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Collection<org.eclipse.jgit.lib.Ref>)\n            for (org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : java.util.Collection<org.eclipse.jgit.transport.RefSpec>)\n                if (org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref)) {\n                    java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.put(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.lib.Ref);\n                    break;\n                } \n    \n    return java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>;\n} catch (java.net.URISyntaxException java.net.URISyntaxException) {\n    throw new org.eclipse.jgit.api.errors.InvalidRemoteException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n} catch (org.eclipse.jgit.errors.NotSupportedException org.eclipse.jgit.errors.NotSupportedException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , org.eclipse.jgit.errors.NotSupportedException);\n} catch (org.eclipse.jgit.errors.TransportException org.eclipse.jgit.errors.TransportException) {\n    throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n} finally {\n    if (org.eclipse.jgit.transport.FetchConnection != null)\n        org.eclipse.jgit.transport.FetchConnection.close();\n    \n    if (org.eclipse.jgit.transport.Transport != null)\n        org.eclipse.jgit.transport.Transport.close();\n    \n}"},"status":-2},{"failures":[0,15,16,17,19,20,21,22,2,5,23,24],"tindex":"98226320-c865-11e4-b94a-bf661ccdd421","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:708","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.Attribute:134","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(org.eclipse.jgit.attributes.Attribute.java.lang.String)))\n    return false;\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.attributes.AttributeNodeTest.testTabSeparator":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":9,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":6,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":13,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyValueKey":22,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyLine":21,"org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules":24,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":1,"org.eclipse.jgit.attributes.AttributeNodeTest.testBasic":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":16,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":4,"org.eclipse.jgit.transport.PackParserTest.test1":14,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":3,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":18,"org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testRules":23,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
