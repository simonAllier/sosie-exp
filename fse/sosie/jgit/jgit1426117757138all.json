[{"failures":[0,1,2,3,4,5],"tindex":"3ac341a4-c849-11e4-b1c7-c7fc50991fd9","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:750","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BasePackFetchConnection.onReceivePack()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:300","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseConnection.markStartedOperation()"},"status":-1},{"failures":[],"tindex":"3ac341a5-c849-11e4-b1c7-ef251ebd4f3b","variableMapping":{"cache":"dc"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:198","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.write()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RmCommand:175","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.unlock()"},"status":-2},{"failures":[1,6,7,0,8,9,10,11,12,13,14,15,16,2,3,4,17,5,18,19,20,21,22,23],"tindex":"3ac341a6-c849-11e4-b1c7-c993d7220127","variableMapping":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"intbuf"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:234","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[][':'] = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:244","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(long))"},"status":-1},{"failures":[0,1,24,25,5,2,3,4],"tindex":"3ac341a7-c849-11e4-b1c7-87149fc10968","variableMapping":{"builder":"builder"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.InitCommand:80","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setBare()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:102","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File)"},"status":-1},{"failures":[],"tindex":"3ac341a8-c849-11e4-b1c7-bf32150adc39","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:955","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:899","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"status":-2},{"failures":[0,5,1,2,3,4,26,27],"tindex":"3ac341a9-c849-11e4-b1c7-e344c8a50d19","variableMapping":{"boundary":"thin","uninteresting":"thin"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:115","type":"CtIfImpl","sourcecode":"if (boolean && (!boolean)) {\n    boolean = false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1698","type":"CtIfImpl","sourcecode":"if (java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>.isEmpty()) {\n    org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort.org.eclipse.jgit.revwalk.RevSort);\n} else {\n    org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort.org.eclipse.jgit.revwalk.RevSort);\n    if (boolean)\n        org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort.org.eclipse.jgit.revwalk.RevSort, true);\n    \n}"},"status":-1},{"failures":[0,5],"tindex":"3ac341aa-c849-11e4-b1c7-ad0fd96b4a02","variableMapping":{"havesSent":"endIndex"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:550","type":"CtIfImpl","sourcecode":"if ((31 & int) != 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:138","type":"CtForImpl","sourcecode":"for ( ; (long < long) && (int < (int)) ; ) {\n    if ((int < (java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.DeltaTask.WeightedPath>.size())) && (int == (java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.DeltaTask.WeightedPath>.get(int).org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice.int))) {\n        if (int < int)\n            org.eclipse.jgit.internal.storage.pack.DeltaTask.add(new org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice(int , int));\n        \n        int = int = java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.DeltaTask.WeightedPath>.get(int++).org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice.int;\n    } else\n        long += org.eclipse.jgit.internal.storage.pack.ObjectToPack[][int++].getWeight();\n    \n}"},"status":-2},{"failures":[0,5,28,29,30,31,32,1,2,3,4],"tindex":"3ac341ab-c849-11e4-b1c7-175defd4c8ae","variableMapping":{"p":"r","org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_HEADER":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:782","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String.length())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:522","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.util.QuotedString.org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, (int - 1))"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,1,0,5,47,48,49,50,51,52,53,54,55,56,57,2,3,4,58,59],"tindex":"3ac341ac-c849-11e4-b1c7-fd1ee4bc9ba3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:485","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"zero length name\")"},"status":-1},{"failures":[1,60,2,3,4,0,5],"tindex":"3ac341ad-c849-11e4-b1c7-556ffe1bc524","variableMapping":{"destination":"newName","this":"this","source":"newName","sourceDestinationMustMatch":"newName"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RefSpec:286","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String)) != org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String)))\n    throw new java.lang.IllegalStateException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:109","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository.getRef(java.lang.String)) != null)\n    throw new org.eclipse.jgit.api.errors.RefAlreadyExistsException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":52,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":6,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":20,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1":41,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":7,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit":43,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":9,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":31,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot":37,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot":42,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":51,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":28,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":21,"org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPathAndStage":35,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":24,"org.eclipse.jgit.dircache.DirCacheEntryTest.testIsValidPath":34,"org.eclipse.jgit.api.GitConstructionTest.testClose":19,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty":36,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":54,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":57,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":15,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":23,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":29,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1":40,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":17,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot":44,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":48,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":27,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":60,"org.eclipse.jgit.lib.ValidRefNameTest.testEmptyString":59,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":26,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":14,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":53,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit":39,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":50,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":12,"org.eclipse.jgit.lib.ValidRefNameTest.testNoDirectorySuffix":58,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":22,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot":38,"org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPath":33,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":16,"org.eclipse.jgit.util.NBTest.testEncodeInt64":18,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":56,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace":45,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":8,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":11,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":30,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":47,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":55}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
