[{"failures":[],"tindex":"60a12fe2-c82c-11e4-9cd3-bf68d329439a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:216","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"60a156f3-c82c-11e4-9cd3-fba2b7d1ca05","variableMapping":{"sb":"ret"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:223","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 1)\n    java.lang.StringBuilder.append(\" , \");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:199","type":"CtForImpl","sourcecode":"for ( ; int < int ; ++int) {\n    java.lang.StringBuilder.append(java.lang.String[][int]);\n    java.lang.StringBuilder.append(\"\\n\");\n}"},"status":-1},{"failures":[30,31,32,29,28,0,1,2,3],"tindex":"60a156f4-c82c-11e4-9cd3-99250319f30e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:233","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write('\\n')"},"status":-1},{"failures":[28,0,1,2,3,29],"tindex":"60a156f5-c82c-11e4-9cd3-cd6b93965bc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.OrTreeFilter:187","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.treewalk.filter.TreeFilter[].int) ; int++) {\n    if (int > 0)\n        java.lang.StringBuilder.append(\" OR \");\n    \n    java.lang.StringBuilder.append(org.eclipse.jgit.treewalk.filter.TreeFilter[][int].toString());\n}"},"status":-1},{"failures":[3,4,29,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,1,2,28],"tindex":"60a156f6-c82c-11e4-9cd3-6da55c505687","variableMapping":{"data":"ret"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:746","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:201","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"status":-1},{"failures":[28,0,1,2,33,34,35,36,37,3,29],"tindex":"60a156f7-c82c-11e4-9cd3-4736c15c4cd1","variableMapping":{"p":"ptr","size":"g","limit":"end"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:239","type":"CtIfImpl","sourcecode":"if (((int) != 0) && ((int) < ((int) + int)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:533","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    switch (byte[][int]) {\n        case ((byte)(226)) :\n            org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int);\n            switch (byte[][(int + 1)]) {\n                case ((byte)(128)) :\n                    switch (byte[][(int + 2)]) {\n                        case ((byte)(140)) :\n                        case ((byte)(141)) :\n                        case ((byte)(142)) :\n                        case ((byte)(143)) :\n                        case ((byte)(170)) :\n                        case ((byte)(171)) :\n                        case ((byte)(172)) :\n                        case ((byte)(173)) :\n                        case ((byte)(174)) :\n                            boolean = true;\n                            int += 3;\n                            continue;\n                        default :\n                            return false;\n                    }\n                case ((byte)(129)) :\n                    switch (byte[][(int + 2)]) {\n                        case ((byte)(170)) :\n                        case ((byte)(171)) :\n                        case ((byte)(172)) :\n                        case ((byte)(173)) :\n                        case ((byte)(174)) :\n                        case ((byte)(175)) :\n                            boolean = true;\n                            int += 3;\n                            continue;\n                        default :\n                            return false;\n                    }\n            }\n            break;\n        case ((byte)(239)) :\n            org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int);\n            if (((byte[][(int + 1)]) == ((byte)(187))) && ((byte[][(int + 2)]) == ((byte)(191)))) {\n                boolean = true;\n                int += 3;\n                continue;\n            } \n            return false;\n        default :\n            if (int == 4)\n                return false;\n            \n            if ((byte[][int++]) != (byte[][int++]))\n                return false;\n            \n    }\n}"},"status":-1},{"failures":[0,1,2,29,38,3,39,40,41,28],"tindex":"60a156f8-c82c-11e4-9cd3-578d8ea2b9ae","variableMapping":{"dirOnly":"dirOnly","pathSeparator":"pathSeparator","segment":"segment"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:147","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.ignore.internal.NameMatcher(java.lang.String , java.lang.Character , boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:143","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher(java.lang.String , java.lang.Character , boolean)"},"status":-1},{"failures":[],"tindex":"60a156f9-c82c-11e4-9cd3-43df19163fb5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:219","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(8)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TrackingRefUpdate:207","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"60a156fa-c82c-11e4-9cd3-fd483bb4e4c8","variableMapping":{"cAlg":"org.eclipse.jgit.lib.RefDatabase.ALL"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:248","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = \"PBEWithMD5AndDES\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:453","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>) == null) {\n    try {\n        java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.RefDatabase.java.lang.String);\n    } catch (java.io.IOException java.io.IOException) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n    }\n} "},"status":-2},{"failures":[3,29,28,0,1,2],"tindex":"60a156fb-c82c-11e4-9cd3-098f9a966585","variableMapping":{"recarryTest":"n","org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED":"n","branchMask":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:110","type":"CtAssignmentImpl","sourcecode":"int = (int) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:352","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":21,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":25,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":19,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit":36,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":24,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":17,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":9,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":29,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":41,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":12,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":27,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":31,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":40,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":8,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":22,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":7,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":20,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd":37,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":39,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":23,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":11,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":6,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":26,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":30,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":4,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":18,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":15,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":5,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":28,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":32,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2":33,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3":34,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2":35,"org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testRules":38,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":16}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
