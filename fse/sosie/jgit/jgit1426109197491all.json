[{"failures":[],"tindex":"4cdb268a-c835-11e4-9221-21a60d48ea32","variableMapping":{"rev":"objectId","commit":"objectId"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:573","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0) {\n    org.eclipse.jgit.revwalk.RevObject = null;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:769","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"4cdb268b-c835-11e4-9221-89af6a41ae75","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:110","type":"CtLocalVariableImpl","sourcecode":"int int = 8"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:210","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) >>> 1"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"4cdb268c-c835-11e4-9221-bbc76fc87376","variableMapping":{"fd":"is"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndex:107","type":"CtTryImpl","sourcecode":"try {\n    java.io.FileInputStream.close();\n} catch (java.io.IOException java.io.IOException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:765","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"4cdb268d-c835-11e4-9221-71d19e1c3ee5","variableMapping":{"size":"curIdx","index":"curIdx"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.BlockList:317","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    throw new java.util.NoSuchElementException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:408","type":"CtIfImpl","sourcecode":"if ((int) < (org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.size())) {\n    do {\n        org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.get(int);\n        int int = org.eclipse.jgit.lib.RefComparator.org.eclipse.jgit.lib.RefComparator.compareTo(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String);\n        if (int < 0) {\n            if ((org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>) == null)\n                org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.copy(int);\n            \n            (int)++;\n            org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = null;\n            continue;\n        } \n        if (int > 0)\n            org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = null;\n        \n        break;\n    } while ((int) < (org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.size()) );\n} else\n    org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = null;\n"},"status":-1},{"failures":[],"tindex":"4cdb268e-c835-11e4-9221-3d7d5d03cb66","variableMapping":{"newCapacity":"len","capacity":"len"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:280","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int > 0))\n    int <<= 1;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"status":-2},{"failures":[],"tindex":"4cdb268f-c835-11e4-9221-f715cd2e4a33","variableMapping":{"data":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1433","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"branch is currently checked out\")"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"4cdb2690-c835-11e4-9221-23ae40e4860e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:244","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:382","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(java.io.IOException)"},"status":-1},{"failures":[],"tindex":"4cdb2691-c835-11e4-9221-8d4983b79a05","variableMapping":{"hostname":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_KEY_BARE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.SystemReader:124","type":"CtAssertImpl","sourcecode":"assert (java.lang.String) != null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:325","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.setBoolean(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, null, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, true)"},"status":-2},{"failures":[],"tindex":"4cdb2692-c835-11e4-9221-2b47a08fdbda","variableMapping":{"t":"matches","minRef":"matches"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:1002","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator == null) || ((org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator)) < 0))\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:397","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator[].int) == 1) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][0];\n    while ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) != null)\n        org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator instanceof org.eclipse.jgit.treewalk.CanonicalTreeParser) {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = null;\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.int = 0;\n        ((org.eclipse.jgit.treewalk.CanonicalTreeParser)(org.eclipse.jgit.treewalk.AbstractTreeIterator)).reset(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId);\n        org.eclipse.jgit.treewalk.AbstractTreeIterator[][0] = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    } else {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator[][0] = org.eclipse.jgit.treewalk.TreeWalk.parserFor(org.eclipse.jgit.lib.AnyObjectId);\n    }\n} else {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator[] = new org.eclipse.jgit.treewalk.AbstractTreeIterator[]{ org.eclipse.jgit.treewalk.TreeWalk.parserFor(org.eclipse.jgit.lib.AnyObjectId) };\n}"},"status":-2},{"failures":[],"tindex":"4cdb2693-c835-11e4-9221-7d7b5c7f4867","variableMapping":{"values":"remoteCapablities"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.IndexDiff:509","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String> == null)\n    java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:210","type":"CtIfImpl","sourcecode":"if (java.util.LinkedHashMap<java.lang.String, org.eclipse.jgit.lib.Ref>.isEmpty()) {\n    final int int = java.lang.String.indexOf('\u0000');\n    if (int >= 0) {\n        for (java.lang.String java.lang.String : java.lang.String.substring((int + 1)).split(\" \"))\n            java.util.Set<java.lang.String>.add(java.lang.String);\n        java.lang.String = java.lang.String.substring(0, int);\n    } \n} "},"status":-2},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":6,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":8,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":18,"org.eclipse.jgit.util.HookTest.testRunHook":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":13,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":25,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":16,"org.eclipse.jgit.util.HookTest.testFindHook":22,"org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink":10,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":19,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":15,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":12,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit":21,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":17,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testFileModeSymLinkIsNotATree":9,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":7,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":11}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
