[{"failures":[0,1,2,3,4,5],"tindex":"26f77115-c840-11e4-960f-cb9427d532af","variableMapping":{"pattern":"what"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:111","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.endsWith(\"$\"))) && (!(java.lang.String.endsWith(\".*\"))))\n    java.lang.String = java.lang.String + \".*\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:830","type":"CtTryImpl","sourcecode":"try {\n    java.io.OutputStream.write(org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encode((java.lang.String + \"\\n\")));\n} catch (java.io.IOException java.io.IOException) {\n}"},"status":-1},{"failures":[2,3,4,5,0,1],"tindex":"26f79826-c840-11e4-960f-7d4d17a671da","variableMapping":{"len":"lastSlash","i":"lastSlash"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1180","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == (int - 1)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:221","type":"CtWhileImpl","sourcecode":"while (0 < int) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    if ((org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.contains(java.lang.String)) || (org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.contains(java.lang.String)))\n        return true;\n    \n    int = java.lang.String.lastIndexOf('/', (int - 1));\n}"},"status":-1},{"failures":[],"tindex":"26f79827-c840-11e4-960f-039addf10f9f","variableMapping":{"offset":"equalsIndex"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GitDateFormatter:169","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int < 0 ? \"-\" : \"+\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1575","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (int - 1))"},"status":-2},{"failures":[1,0,2,3,4,5],"tindex":"26f79828-c840-11e4-960f-e99bd33b2cf2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeResult:127","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"26f79829-c840-11e4-960f-c79f1e3cbf5e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:586","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"26f7982a-c840-11e4-960f-3dac9f6b427a","variableMapping":{"value":"line"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:397","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.replace(' ', '_')"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1009","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(82)"},"status":-2},{"failures":[],"tindex":"26f7982b-c840-11e4-960f-7168fc433d5a","variableMapping":{"a":"this","pathOffset":"aPos"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:365","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.AbstractTreeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:351","type":"CtReturnImpl","sourcecode":"return ((byte[][int]) & 255) - org.eclipse.jgit.treewalk.AbstractTreeIterator.(org.eclipse.jgit.treewalk.AbstractTreeIterator.lastPathChar(int))"},"status":-2},{"failures":[],"tindex":"26f7982c-c840-11e4-960f-e3e228eca9ee","variableMapping":{"r":"buf","inPtr":"n","in":"buf","rPtr":"n","inEnd":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.QuotedString:301","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final byte byte = byte[][int++];\n    if (byte != '\\\\') {\n        byte[][int++] = byte;\n        continue;\n    } \n    if (int == int) {\n        byte[][int++] = '\\\\';\n        break;\n    } \n    switch (byte[][int++]) {\n        case 'a' :\n            byte[][int++] = 7;\n            continue;\n        case 'b' :\n            byte[][int++] = '\\b';\n            continue;\n        case 'f' :\n            byte[][int++] = '\\f';\n            continue;\n        case 'n' :\n            byte[][int++] = '\\n';\n            continue;\n        case 'r' :\n            byte[][int++] = '\\r';\n            continue;\n        case 't' :\n            byte[][int++] = '\\t';\n            continue;\n        case 'v' :\n            byte[][int++] = 11;\n            continue;\n        case '\\\\' :\n        case '\\\"' :\n            byte[][int++] = byte[][(int - 1)];\n            continue;\n        case '0' :\n        case '1' :\n        case '2' :\n        case '3' :\n            {\n                int int = (byte[][(int - 1)]) - '0';\n                for (int int = 1 ; (int < 3) && (int < int) ; int++) {\n                    final byte byte = byte[][int];\n                    if (('0' <= byte) && (byte <= '7')) {\n                        int <<= 3;\n                        int |= byte - '0';\n                        int++;\n                    } else {\n                        break;\n                    }\n                }\n                byte[][int++] = ((byte)(int));\n                continue;\n            }\n        default :\n            byte[][int++] = '\\\\';\n            byte[][int++] = byte[][(int - 1)];\n            continue;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:945","type":"CtWhileImpl","sourcecode":"while ((0 < int) && java.lang.Character.(java.lang.Character.isWhitespace(byte[][(int - 1)])))\n    int--;"},"status":-2},{"failures":[],"tindex":"26f7982d-c840-11e4-960f-af84b9cf58f0","variableMapping":{"ith":"len"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:160","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectInserter:132","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectInserter.Filter.delegate().insert(int, byte[], int, int)"},"status":-2},{"failures":[3,4,5,0,1,2],"tindex":"26f7982e-c840-11e4-960f-af2948b67cbf","variableMapping":{"result":"prefix","org.eclipse.jgit.lib.Constants.DOT_GIT_EXT":"prefix"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:719","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (org.eclipse.jgit.lib.Constants.java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefDatabase:149","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.keySet())\n    if (java.lang.String.startsWith(java.lang.String))\n        java.util.List<java.lang.String>.add(java.lang.String);\n    "},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
