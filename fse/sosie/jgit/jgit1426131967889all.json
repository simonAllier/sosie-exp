[{"failures":[0,1,2,3,4,5],"tindex":"510a1057-c86a-11e4-8280-5badaa5388dc","variableMapping":{"newTree":"o"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.DiffCommand:203","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:400","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-1},{"failures":[2,3,4,1,5,0],"tindex":"510a1058-c86a-11e4-8280-991d942fcc85","variableMapping":{"gzip":"idxStream"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:855","type":"CtInvocationImpl","sourcecode":"java.util.zip.GZIPOutputStream.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:759","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":-1},{"failures":[1,2,3,4,0,5],"tindex":"510a1059-c86a-11e4-8280-39a33dc193d3","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:225","type":"CtReturnImpl","sourcecode":"return java.util.Collections.java.util.Collections.emptySet()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:623","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.file.FileRepository.getIndexFile()) == null)\n    return java.util.Collections.java.util.Collections.emptySet();\n"},"status":-1},{"failures":[6,7,8,9,10,11,0,2,3,4,12,13,14,15,16,17,18,19,20,1,5,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"510a105a-c86a-11e4-8280-adfdde1e709f","variableMapping":{"levelTwo":"context","org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"context"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:155","type":"CtLocalVariableImpl","sourcecode":"final int int = (4 + (org.eclipse.jgit.lib.Constants.int)) * int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:755","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.((int)(java.lang.Math.min(org.eclipse.jgit.diff.RawText.size(), (((long)(org.eclipse.jgit.diff.Edit.getEndA())) + (int)))))"},"status":-1},{"failures":[2,3,4,1,5,0],"tindex":"510a105b-c86a-11e4-8280-d9986b148552","variableMapping":{"lock":"lock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.setNeedStatInformation(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:335","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile.unlock()"},"status":-1},{"failures":[],"tindex":"510a105c-c86a-11e4-8280-71e675148ef1","variableMapping":{"target":"org.eclipse.jgit.api.RebaseCommand.AUTOSTASH"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\")))\n    java.lang.String = \"/\" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:400","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.api.RebaseCommand.RebaseState.getFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String).exists()) {\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(org.eclipse.jgit.api.RebaseCommand.java.lang.String);\n    try {\n        org.eclipse.jgit.api.Git.org.eclipse.jgit.api.Git.wrap(org.eclipse.jgit.lib.Repository).stashApply().setStashRef(java.lang.String).ignoreRepositoryState(true).setStrategy(org.eclipse.jgit.merge.MergeStrategy).call();\n    } catch (org.eclipse.jgit.api.errors.StashApplyFailureException org.eclipse.jgit.api.errors.StashApplyFailureException) {\n        boolean = true;\n        org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository);\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(java.lang.String);\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n        org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent(), org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    }\n} "},"status":-2},{"failures":[],"tindex":"510a105d-c86a-11e4-8280-7fde16b7b0ce","variableMapping":{"self":"r","base":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:476","type":"CtIfImpl","sourcecode":"if (java.lang.String[] == null)\n    return java.lang.String[];\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:281","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":-2},{"failures":[],"tindex":"510a105e-c86a-11e4-8280-1baa006b242d","variableMapping":{"head":"head","next":"next","tailIndex":"f","f":"flags","flags":"f","commits":"commits","headIndex":"tailIndex"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:132","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.revwalk.BlockRevQueue.Block org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block ; org.eclipse.jgit.revwalk.BlockRevQueue.Block != null ; org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block) {\n    for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n        if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) == 0)\n            return false;\n        \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:141","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.revwalk.BlockRevQueue.Block org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block ; org.eclipse.jgit.revwalk.BlockRevQueue.Block != null ; org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block) {\n    for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n        if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) != 0)\n            return true;\n        \n}"},"status":-2},{"failures":[],"tindex":"510a105f-c86a-11e4-8280-95b0dd17225a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:849","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.diff.RawText(new byte[]{  })"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:133","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.RawText"},"status":-2},{"failures":[],"tindex":"510a1060-c86a-11e4-8280-35392513b902","variableMapping":{"object":"objectId"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry:80","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.internal.storage.pack.ObjectToPack) == null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:310","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n    try {\n        if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.AnyObjectId))\n            return true;\n        \n    } catch (java.io.IOException java.io.IOException) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile);\n    }\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":11,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":6,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":33,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":37,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":29,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":44,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":8,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":43,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":21,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":42,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":10,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":27,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":28,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":14,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":46,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":47,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":9,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":45,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":17,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":30,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":23,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":34,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":19,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":32,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":22,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":35,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":12}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
