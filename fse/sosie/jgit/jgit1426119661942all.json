[{"failures":[0,1,2,3,4,5],"tindex":"aa8cab43-c84d-11e4-99f1-5d02d2553c8c","variableMapping":{"entrySpan":"tableIdx","cIdx":"tableIdx","cCnt":"tableIdx"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:428","type":"CtIfImpl","sourcecode":"if (((int) >= 0) && ((int + (int)) <= int)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache:128","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot == org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot) {\n    org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot[][int] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot.org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Slot;\n    return ;\n} "},"status":-1},{"failures":[3,6,7,8,9,0,1,2,10,11,4,5],"tindex":"aa8cab44-c84d-11e4-99f1-b9543bfbb3f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:239","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.reset()"},"status":-1},{"failures":[0,1,2,5,3,4],"tindex":"aa8cab45-c84d-11e4-99f1-f94ba940c107","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:665","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.gc()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:666","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.runFinalization()"},"status":-1},{"failures":[0,1,2,12,3,13,4,5],"tindex":"aa8cd256-c84d-11e4-99f1-3b2a15f94b25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:493","type":"CtIfImpl","sourcecode":"if (int != (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.getBits())) {\n    if (int == int)\n        org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    else {\n        if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n            return false;\n        \n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n    return true;\n} else {\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), new org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>(java.util.Collections.java.util.Collections.<org.eclipse.jgit.diff.RawText>emptyList()));\n}"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"aa8cd257-c84d-11e4-99f1-adef85af488f","variableMapping":{"r":"depth","last":"depth"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:359","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:243","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaDepth(int)"},"status":-1},{"failures":[],"tindex":"aa8cd258-c84d-11e4-99f1-196d63a865f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.NetRC:313","type":"CtInvocationImpl","sourcecode":"java.io.BufferedReader.close()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"aa8cd259-c84d-11e4-99f1-111c2d8d7e2c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:184","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.Transport:166","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"status":-1},{"failures":[0,1,2,5,3,4],"tindex":"aa8cd25a-c84d-11e4-99f1-4d3fd852a68b","variableMapping":{"c":"id"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:151","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.api.NameRevCommand.NameRevCommit == null)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1009","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevWalk.lookupOrNull(org.eclipse.jgit.lib.ObjectId)) == null) {\n    boolean = true;\n    if (org.eclipse.jgit.transport.UploadPack.okToGiveUp()) {\n        switch (org.eclipse.jgit.transport.GitProtocolConstants.MultiAck) {\n            case OFF :\n                break;\n            case CONTINUE :\n                org.eclipse.jgit.transport.PacketLineOut.writeString(((\"ACK \" + (org.eclipse.jgit.lib.ObjectId.name())) + \" continue\\n\"));\n                break;\n            case DETAILED :\n                org.eclipse.jgit.transport.PacketLineOut.writeString(((\"ACK \" + (org.eclipse.jgit.lib.ObjectId.name())) + \" ready\\n\"));\n                boolean = true;\n                break;\n        }\n    } \n    break;\n} "},"status":-1},{"failures":[],"tindex":"aa8cd25b-c84d-11e4-99f1-9f7e5a421795","variableMapping":{"name":"in"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.FooterKey:82","type":"CtReturnImpl","sourcecode":"return (\"FooterKey[\" + (java.lang.String)) + \"]\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:203","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"aa8cd25c-c84d-11e4-99f1-45fb33da2dc5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1075","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"jgit receive-pack\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:157","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.RefUpdate.getRefLogMessage()"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":12,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":10,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.transport.PackParserTest.test2":7,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":9,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
