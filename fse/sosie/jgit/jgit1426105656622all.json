[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"0e4f9f22-c82d-11e4-af6d-8156f4d32c67","variableMapping":{"shallowPack":"thin"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:544","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:448","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-1},{"failures":[1,2,3,0,9,4],"tindex":"0e4fc633-c82d-11e4-af6d-8d460b69238a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:147","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId == null)\n    throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"0e4fc634-c82d-11e4-af6d-9f0342f5c8e8","variableMapping":{"n":"cost"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RawText:250","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1366","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.beginPhase(org.eclipse.jgit.internal.storage.pack.PackWriter.PackingPhase.org.eclipse.jgit.internal.storage.pack.PackWriter.PackingPhase, org.eclipse.jgit.lib.ProgressMonitor, int)"},"status":-2},{"failures":[],"tindex":"0e4fc635-c82d-11e4-af6d-37a43c17e33b","variableMapping":{"checking":"monitor","m":"monitor"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1113","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor = org.eclipse.jgit.transport.SideBandProgressMonitor"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:132","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.ProgressMonitor = org.eclipse.jgit.lib.ProgressMonitor"},"status":-2},{"failures":[],"tindex":"0e4fc636-c82d-11e4-af6d-1b9533bc6d21","variableMapping":{"sz":"java.util.Calendar.MINUTE","worstCaseBlockCnt":"java.util.Calendar.MINUTE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:126","type":"CtIfImpl","sourcecode":"if (int < int)\n    int <<= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:270","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.set(java.util.Calendar.int, 0)"},"status":-2},{"failures":[0,4,1,2,3,10,11,12,13,14,15,16,9],"tindex":"0e4fc637-c82d-11e4-af6d-75c74e29d6cc","variableMapping":{"middleK":"e","beginK":"e","k":"e","endK":"e"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:349","type":"CtAssignmentImpl","sourcecode":"int = int = int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawText:189","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"0e4fc638-c82d-11e4-af6d-73c9214b15ed","variableMapping":{"this":"countingMonitor"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1682","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.endPhase(org.eclipse.jgit.lib.ProgressMonitor)"},"status":-2},{"failures":[1,2,3,9,0,4],"tindex":"0e4fc639-c82d-11e4-af6d-bbeda5723583","variableMapping":{"p":"gitDir"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RmCommand:183","type":"CtAssignmentImpl","sourcecode":"java.io.File = java.io.File.getParentFile()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:379","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-1},{"failures":[],"tindex":"0e4fc63a-c82d-11e4-af6d-dd8f292cd658","variableMapping":{"srcSpec":"invalidRemote","destSpec":"receivePack"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.Transport:628","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:126","type":"CtTryImpl","sourcecode":"try {\n    if (java.util.List<org.eclipse.jgit.transport.RefSpec>.isEmpty()) {\n        org.eclipse.jgit.transport.RemoteConfig org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , org.eclipse.jgit.api.PushCommand.getRemote());\n        java.util.List<org.eclipse.jgit.transport.RefSpec>.addAll(org.eclipse.jgit.transport.RemoteConfig.getPushRefSpecs());\n    } \n    if (java.util.List<org.eclipse.jgit.transport.RefSpec>.isEmpty()) {\n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String);\n        if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.Ref.isSymbolic()))\n            java.util.List<org.eclipse.jgit.transport.RefSpec>.add(new org.eclipse.jgit.transport.RefSpec(org.eclipse.jgit.lib.Ref.getLeaf().getName()));\n        \n    } \n    if (boolean) {\n        for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.transport.RefSpec>.size()) ; int++)\n            java.util.List<org.eclipse.jgit.transport.RefSpec>.set(int, java.util.List<org.eclipse.jgit.transport.RefSpec>.get(int).setForceUpdate(true));\n    } \n    final java.util.List<org.eclipse.jgit.transport.Transport> java.util.List<org.eclipse.jgit.transport.Transport>;\n    java.util.List<org.eclipse.jgit.transport.Transport> = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation.org.eclipse.jgit.transport.Transport.Operation);\n    for (final org.eclipse.jgit.transport.Transport org.eclipse.jgit.transport.Transport : java.util.List<org.eclipse.jgit.transport.Transport>) {\n        org.eclipse.jgit.transport.Transport.setPushThin(boolean);\n        if ((java.lang.String) != null)\n            org.eclipse.jgit.transport.Transport.setOptionReceivePack(java.lang.String);\n        \n        org.eclipse.jgit.transport.Transport.setDryRun(boolean);\n        org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.PushCommand, java.lang.Iterable<org.eclipse.jgit.transport.PushResult>>.configure(org.eclipse.jgit.transport.Transport);\n        final java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate> java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate> = org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.List<org.eclipse.jgit.transport.RefSpec>);\n        try {\n            org.eclipse.jgit.transport.PushResult org.eclipse.jgit.transport.PushResult = org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream);\n            java.util.ArrayList<org.eclipse.jgit.transport.PushResult>.add(org.eclipse.jgit.transport.PushResult);\n        } catch (org.eclipse.jgit.errors.TransportException org.eclipse.jgit.errors.TransportException) {\n            throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n        } finally {\n            org.eclipse.jgit.transport.Transport.close();\n        }\n    }\n} catch (java.net.URISyntaxException java.net.URISyntaxException) {\n    throw new org.eclipse.jgit.api.errors.InvalidRemoteException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n} catch (org.eclipse.jgit.errors.TransportException org.eclipse.jgit.errors.TransportException) {\n    throw new org.eclipse.jgit.api.errors.TransportException(org.eclipse.jgit.errors.TransportException.getMessage() , org.eclipse.jgit.errors.TransportException);\n} catch (org.eclipse.jgit.errors.NotSupportedException org.eclipse.jgit.errors.NotSupportedException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , org.eclipse.jgit.errors.NotSupportedException);\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n}"},"status":-2},{"failures":[4,9,1,2,3,0],"tindex":"0e4fc63b-c82d-11e4-af6d-2b00e3a099b4","variableMapping":{"refWriter":"refWriter"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkPushConnection:207","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefWriter.writeInfoRefs()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkPushConnection:194","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefWriter.writePackedRefs()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":14,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":15,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":11,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":7,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":12,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":9,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":5,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":6,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
