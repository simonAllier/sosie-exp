[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"861bcaad-c84e-11e4-a33e-0f40594cd740","variableMapping":{"canonLen":"ofs","n":"c"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:388","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:928","type":"CtOperatorAssignmentImpl","sourcecode":"long += int & 127"},"status":-1},{"failures":[5,6,7,10,0,4],"tindex":"861bcaae-c84e-11e4-a33e-8380b539ec91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1319","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.transport.SideBandOutputStream.int"},"status":-1},{"failures":[],"tindex":"861bcaaf-c84e-11e4-a33e-e790356756ee","variableMapping":{"line":"pattern","name":"pattern"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:422","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.errors.TransportException((\"Empty ref: \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:111","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.ignore.internal.IMatcher = org.eclipse.jgit.ignore.internal.PathMatcher.org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(java.lang.String, java.lang.Character.java.lang.Character.valueOf(org.eclipse.jgit.ignore.FastIgnoreRule.char), boolean);\n} catch (org.eclipse.jgit.errors.InvalidPatternException org.eclipse.jgit.errors.InvalidPatternException) {\n    org.eclipse.jgit.ignore.internal.IMatcher = org.eclipse.jgit.ignore.internal.IMatcher.org.eclipse.jgit.ignore.internal.IMatcher;\n}"},"status":-2},{"failures":[],"tindex":"861bcab0-c84e-11e4-a33e-11abed94bd35","variableMapping":{"defaultValue":"assumeDirectory","n":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:321","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return boolean;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:154","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.ignore.internal.PathMatcher.iterate(java.lang.String, 0, java.lang.String.length(), boolean)"},"status":-2},{"failures":[4,0,5,6,7,11,12,10],"tindex":"861bcab1-c84e-11e4-a33e-0d4850ccfcd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:277","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 256 ; int++) {\n    org.eclipse.jgit.notes.NoteBucket org.eclipse.jgit.notes.NoteBucket = org.eclipse.jgit.notes.NoteBucket[][int];\n    if (org.eclipse.jgit.notes.NoteBucket == null)\n        continue;\n    \n    byte[][0] = org.eclipse.jgit.notes.FanoutBucket.byte[][(int >>> 4)];\n    byte[][1] = org.eclipse.jgit.notes.FanoutBucket.byte[][(int & 15)];\n    while ((org.eclipse.jgit.notes.NonNoteEntry != null) && ((org.eclipse.jgit.notes.NonNoteEntry.pathCompare(byte[], 0, 2, org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) < 0)) {\n        org.eclipse.jgit.notes.NonNoteEntry.format(org.eclipse.jgit.lib.TreeFormatter);\n        org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry.org.eclipse.jgit.notes.NonNoteEntry;\n    }\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId;\n    if (boolean) {\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.notes.NoteBucket.writeTree(org.eclipse.jgit.lib.ObjectInserter);\n    } else {\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.notes.NoteBucket.getTreeId();\n    }\n    org.eclipse.jgit.lib.TreeFormatter.append(byte[], 0, 2, org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId);\n}"},"status":-1},{"failures":[0,5,6,7,10,4],"tindex":"861bcab2-c84e-11e4-a33e-83d7befe4ff0","variableMapping":{"suffix":"uploadPack"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:446","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LsRemoteCommand:138","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[5,6,7,10,13,14,0,4],"tindex":"861bcab3-c84e-11e4-a33e-6929920c50cf","variableMapping":{"a":"b","r":"bTail","e":"e","length":"rEnd","this":"this","sourceStart":"eIdx","aTail":"bTail"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.Candidate:197","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.blame.Region.int) < (org.eclipse.jgit.diff.Edit.getBeginB())) {\n    int int = (org.eclipse.jgit.diff.Edit.getBeginB()) - (org.eclipse.jgit.blame.Region.int);\n    if ((org.eclipse.jgit.blame.Region.int) <= int) {\n        org.eclipse.jgit.blame.Region org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region;\n        org.eclipse.jgit.blame.Region.int = (org.eclipse.jgit.diff.Edit.getBeginA()) - int;\n        org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region);\n        org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region;\n        continue;\n    } \n    org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region.splitFirst(((org.eclipse.jgit.diff.Edit.getBeginA()) - int), int));\n    org.eclipse.jgit.blame.Region.slideAndShrink(int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:224","type":"CtIfImpl","sourcecode":"if (int <= (org.eclipse.jgit.diff.Edit.getEndB())) {\n    org.eclipse.jgit.blame.Region org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region.org.eclipse.jgit.blame.Region;\n    org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region);\n    org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region;\n    if (int == (org.eclipse.jgit.diff.Edit.getEndB()))\n        int++;\n    \n    continue;\n} "},"status":-1},{"failures":[4,10,0,5,6,7],"tindex":"861bcab4-c84e-11e4-a33e-699729a014ac","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:554","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LocalCachedPack:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,4,25,26,27,28,29,10,30,31,0,5,6,7],"tindex":"861bcab5-c84e-11e4-a33e-9fe8a0fce142","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1409","type":"CtIfImpl","sourcecode":"if (int != 0)\n    org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.carryFlags(org.eclipse.jgit.revwalk.RevCommit, int);\n"},"status":-1},{"failures":[0,10,4,5,6,7],"tindex":"861bcab6-c84e-11e4-a33e-8726dfd5cbf6","variableMapping":{"uri":"uri"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:132","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.transport.TransportGitSsh(org.eclipse.jgit.transport.URIish)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:174","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.transport.TransportHttp(org.eclipse.jgit.transport.URIish)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":24,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":29,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":9,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":28,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":30,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":13,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":27,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":18,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":22,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":8,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":31,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":25,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":11,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.transport.PackParserTest.test2":3,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":17,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":2,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":21,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":12}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
