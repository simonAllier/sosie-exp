[{"failures":[0,1,2,3,4,5],"tindex":"f36479bd-c87e-11e4-be05-2b614c2b9f84","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"fullName","fullBranch":"fullName"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.PullCommand:193","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n    throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DeleteTagCommand:112","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n} else\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.RefUpdate.Result.name()));\n"},"status":-1},{"failures":[],"tindex":"f364a0ce-c87e-11e4-be05-1b3a2c109511","variableMapping":{"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT":"packHasUnresolvedDeltas","pruneExpireStr":"packHasUnresolvedDeltas"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:312","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.storage.file.GC.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:517","type":"CtIfImpl","sourcecode":"if ((int) < (long)) {\n    throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(((long) - (int)))));\n} "},"status":-2},{"failures":[],"tindex":"f364a0cf-c87e-11e4-be05-9575040fed54","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:966","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeOptions:89","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f364a0d0-c87e-11e4-be05-6b7d048ba4a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.DaemonService:133","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository"},"status":-2},{"failures":[],"tindex":"f364a0d1-c87e-11e4-be05-21d9fb761837","variableMapping":{"pattern":"expectedEOFReceived"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:105","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + (java.lang.String);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:868","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, (\"\\\\x\" + java.lang.Integer.(java.lang.Integer.toHexString(int)))));\n"},"status":-2},{"failures":[],"tindex":"f364a0d2-c87e-11e4-be05-0f374c7b5fbe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:543","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.lib.ObjectId)(this))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectInserter:270","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(java.security.MessageDigest.digest())"},"status":-2},{"failures":[],"tindex":"f364a0d3-c87e-11e4-be05-d3d8128f4d88","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:602","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"0x\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:93","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f364a0d4-c87e-11e4-be05-eb1687d1a47f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:274","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"no type header\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:303","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.UnmergedPathsException(org.eclipse.jgit.errors.UnmergedPathException)"},"status":-2},{"failures":[],"tindex":"f364a0d5-c87e-11e4-be05-2d93bc6f8450","variableMapping":{"total":"c"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:239","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:370","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,1,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,3,23,24,25,4,5],"tindex":"f364a0d6-c87e-11e4-be05-a3b36ca2cfb9","variableMapping":{"typeIsCorrect":"reuseValidate"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceiveCommand:289","type":"CtIfImpl","sourcecode":"if (boolean)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1520","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isReuseAsIs()) {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writeBase(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBase());\n    if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten())\n        return ;\n    \n    java.util.zip.CRC32.reset();\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setOffset(org.eclipse.jgit.internal.storage.pack.PackOutputStream.length());\n    try {\n        org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.copyObjectAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack, boolean);\n        org.eclipse.jgit.internal.storage.pack.PackOutputStream.endObject();\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCRC(((int)(java.util.zip.CRC32.getValue())));\n        (org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.ObjectType.long)++;\n        if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDeltaRepresentation()) {\n            (org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.ObjectType.long)++;\n            org.eclipse.jgit.internal.storage.pack.PackWriter.Statistics.ObjectType.long += (org.eclipse.jgit.internal.storage.pack.PackOutputStream.length()) - (org.eclipse.jgit.internal.storage.pack.ObjectToPack.getOffset());\n        } \n        return ;\n    } catch (org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException) {\n        if ((org.eclipse.jgit.internal.storage.pack.ObjectToPack.getOffset()) == (org.eclipse.jgit.internal.storage.pack.PackOutputStream.length())) {\n            org.eclipse.jgit.internal.storage.pack.ObjectToPack.setOffset(0);\n            org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearDeltaBase();\n            org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearReuseAsIs();\n            org.eclipse.jgit.internal.storage.pack.ObjectReuseAsIs.selectObjectRepresentation(this, org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor, java.util.Collections.java.util.Collections.singleton(org.eclipse.jgit.internal.storage.pack.ObjectToPack));\n            continue;\n        } else {\n            org.eclipse.jgit.errors.CorruptObjectException org.eclipse.jgit.errors.CorruptObjectException;\n            org.eclipse.jgit.errors.CorruptObjectException = new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.internal.storage.pack.ObjectToPack , \"\");\n            org.eclipse.jgit.errors.CorruptObjectException.initCause(org.eclipse.jgit.errors.StoredObjectRepresentationNotAvailableException);\n            throw org.eclipse.jgit.errors.CorruptObjectException;\n        }\n    }\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":25,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":20,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":19,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":15,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":21,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":8,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":24,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":23,"org.eclipse.jgit.api.GitConstructionTest.testClose":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":9,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":11}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
