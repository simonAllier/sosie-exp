[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"3eb9a72c-c85f-11e4-9f89-37c71713fcd0","variableMapping":{"overflow":"b"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:98","type":"CtIfImpl","sourcecode":"if ((java.io.OutputStream) != null) {\n    java.io.OutputStream.write(int);\n    return ;\n} "},"status":-1},{"failures":[11,12,13,8,10,9],"tindex":"3eb9ce3d-c85f-11e4-9f89-294579ebfdf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:190","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId == null)\n    throw new java.lang.IllegalArgumentException();\n"},"status":-1},{"failures":[],"tindex":"3eb9ce3e-c85f-11e4-9f89-9d4551aa3b8c","variableMapping":{"data":"w"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:746","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:341","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\n')"},"status":-2},{"failures":[17,18,9,10,19,20,21,22,23,11,12,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,8,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"3eb9ce3f-c85f-11e4-9f89-279c27d0c540","variableMapping":{"value":"value","space":"quote"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:1229","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(' ');\n    \n    boolean = false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1200","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if (int < 0) {\n        if ((java.lang.StringBuilder.length()) == 0)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        break;\n    } \n    if ('\\n' == int) {\n        if (boolean)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        break;\n    } \n    if (int == int)\n        break;\n    \n    if (!boolean) {\n        if (java.lang.Character.java.lang.Character.isWhitespace(((char)(int)))) {\n            boolean = true;\n            continue;\n        } \n        if ((';' == int) || ('#' == int)) {\n            org.eclipse.jgit.lib.Config.StringReader.reset();\n            break;\n        } \n    } \n    if (boolean) {\n        if ((java.lang.StringBuilder.length()) > 0)\n            java.lang.StringBuilder.append(' ');\n        \n        boolean = false;\n    } \n    if ('\\\\' == int) {\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n        switch (int) {\n            case -1 :\n                throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            case '\\n' :\n                continue;\n            case 't' :\n                java.lang.StringBuilder.append('\\t');\n                continue;\n            case 'b' :\n                java.lang.StringBuilder.append('\\b');\n                continue;\n            case 'n' :\n                java.lang.StringBuilder.append('\\n');\n                continue;\n            case '\\\\' :\n                java.lang.StringBuilder.append('\\\\');\n                continue;\n            case '\\\"' :\n                java.lang.StringBuilder.append('\\\"');\n                continue;\n            default :\n                throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Character.java.lang.Character.valueOf(((char)(int)))));\n        }\n    } \n    if ('\\\"' == int) {\n        boolean = !boolean;\n        continue;\n    } \n    java.lang.StringBuilder.append(((char)(int)));\n}"},"status":-1},{"failures":[8,11,12,13,9,10],"tindex":"3eb9ce40-c85f-11e4-9f89-51701316ac41","variableMapping":{"len":"score","org.eclipse.jgit.dircache.DirCacheEntry.INFO_LEN_EXTENDED":"renameScore"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:153","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.dircache.DirCacheEntry.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RenameDetector:182","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[8,11,12,13,10,9],"tindex":"3eb9ce41-c85f-11e4-9f89-2b3df4c25a4f","variableMapping":{"r":"tagTargets","ref":"ref"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:423","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getPeeledObjectId())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1371","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-1},{"failures":[10,8,64,65,66,67,68,69,70,71,72,73,74,9,11,12,13],"tindex":"3eb9ce42-c85f-11e4-9f89-a5e7037df591","variableMapping":{"pass":"org.eclipse.jgit.api.RebaseCommand.GIT_AUTHOR_DATE","realm":"org.eclipse.jgit.api.RebaseCommand.GIT_AUTHOR_DATE","user":"org.eclipse.jgit.api.RebaseCommand.GIT_AUTHOR_DATE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:347","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ((((java.lang.String) + \":\") + java.lang.String) + \":\") + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1583","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(org.eclipse.jgit.api.RebaseCommand.java.lang.String)"},"status":-1},{"failures":[],"tindex":"3eb9ce43-c85f-11e4-9f89-5148bbf36d25","variableMapping":{"otp":"info"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1316","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDoNotDelta())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:233","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackedObjectInfo.setCRC(((int)(java.util.zip.CRC32.getValue())))"},"status":-2},{"failures":[],"tindex":"3eb9ce44-c85f-11e4-9f89-cfb00ebdefa3","variableMapping":{"err":"err"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.UnionInputStream:206","type":"CtIfImpl","sourcecode":"if (java.io.IOException != null)\n    throw java.io.IOException;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1441","type":"CtIfImpl","sourcecode":"if (java.lang.Throwable instanceof java.lang.RuntimeException)\n    throw ((java.lang.RuntimeException)(java.lang.Throwable));\n"},"status":-2},{"failures":[],"tindex":"3eb9ce45-c85f-11e4-9f89-119e39f4c29c","variableMapping":{"next":"n","this":"this","n":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:630","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:606","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.blame.BlameGenerator.blameEntireRegionOnParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":71,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":13,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":51,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":73,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":59,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":23,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":4,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":11,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":8,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":35,"org.eclipse.jgit.util.TemporaryBufferTest.testRandomWrites":6,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":40,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":55,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":46,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":27,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":16,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":2,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_SingleWrite":7,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":19,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":29,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":0,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":21,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":74,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":14,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":56,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":3,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":9,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":54,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":60,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":43,"org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter":70,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":10,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":18,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":30,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":68,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":31,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":57,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":24,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":45,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":17,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":38,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":47,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":67,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":34,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":5,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":20,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":66,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":36,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":41,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":15,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":42,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":12,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":61,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":48,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":58,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":72,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":25,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":69,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":26,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":22,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":28,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":33,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":37,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":44}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
