[{"failures":[0,1,2,3,4,5],"tindex":"513a611e-c865-11e4-b414-e3cf37a61eed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:555","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"513a611f-c865-11e4-b414-5f237e576b8f","variableMapping":{"org.eclipse.jgit.lib.Constants.DOT_GIT":"charsetName","name":"charsetName"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:752","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Constants.java.lang.String.equals(java.lang.String))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeFormatter:84","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.merge.MergeChunk org.eclipse.jgit.merge.MergeChunk : org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>) {\n    org.eclipse.jgit.diff.RawText org.eclipse.jgit.diff.RawText = org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>.getSequences().get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n    if ((java.lang.String != null) && ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) != (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState))) {\n        java.io.OutputStream.write(((\">>>>>>> \" + java.lang.String) + \"\\n\").getBytes(java.lang.String));\n        java.lang.String = null;\n    } \n    if ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) == (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)) {\n        java.io.OutputStream.write(((\"<<<<<<< \" + (java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex()))) + \"\\n\").getBytes(java.lang.String));\n        java.lang.String = java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n    } else if ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) == (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)) {\n        java.lang.String = java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n        java.io.OutputStream.write((boolean ? \"=======\\n\" : (\"======= \" + java.lang.String) + \"\\n\").getBytes(java.lang.String));\n    } \n    for (int int = org.eclipse.jgit.merge.MergeChunk.getBegin() ; int < (org.eclipse.jgit.merge.MergeChunk.getEnd()) ; int++) {\n        org.eclipse.jgit.diff.RawText.writeLine(java.io.OutputStream, int);\n        java.io.OutputStream.write('\\n');\n    }\n}"},"status":-2},{"failures":[],"tindex":"513a8830-c865-11e4-b414-7de6350156fb","variableMapping":{"org.eclipse.jgit.lib.ObjectId.ZEROID":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectId:77","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:842","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(java.security.MessageDigest.digest())"},"status":-2},{"failures":[2,0,1,3,4,5],"tindex":"513a8831-c865-11e4-b414-359c35281550","variableMapping":{"dst":"out"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.StreamCopyThread:158","type":"CtTryImpl","sourcecode":"try {\n    java.io.OutputStream.close();\n} catch (java.io.IOException java.io.IOException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.CountingOutputStream:83","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-1},{"failures":[],"tindex":"513a8832-c865-11e4-b414-430258236fc1","variableMapping":{"idHEAD":"f","master":"f"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:288","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref != null) && (org.eclipse.jgit.lib.Ref.getObjectId().equals(org.eclipse.jgit.lib.Ref.getObjectId())))\n    return org.eclipse.jgit.lib.Ref;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:694","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n    return new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.Ref.getPeeledObjectId());\nelse\n    return new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId());\n"},"status":-2},{"failures":[6,7,8,9,10,2,11,1,3,4,5,0,12,13],"tindex":"513a8833-c865-11e4-b414-c56684e50864","variableMapping":{"deflate":"def"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter:150","type":"CtAssignmentImpl","sourcecode":"java.util.zip.Deflater = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:349","type":"CtAssignmentImpl","sourcecode":"java.util.zip.Deflater = new java.util.zip.Deflater(java.util.zip.Deflater.int , false)"},"status":-1},{"failures":[0,2,1,3,4,5],"tindex":"513a8834-c865-11e4-b414-99412bf6c7e1","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:924","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportHttp.Service.openStream()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:1005","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportHttp.Service.openResponse()"},"status":-1},{"failures":[],"tindex":"513a8835-c865-11e4-b414-7fcd268f78a5","variableMapping":{"this":"repo"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:291","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = java.io.File.java.io.File.createTempFile(\"try\", \"execute\", org.eclipse.jgit.lib.Repository.getDirectory())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1039","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String)"},"status":-2},{"failures":[2,1,3,4,5,0],"tindex":"513a8836-c865-11e4-b414-33f7381dff70","variableMapping":{"mode":"newMode","org.eclipse.jgit.lib.FileMode.TREE":"newMode"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:368","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:487","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int)"},"status":-1},{"failures":[],"tindex":"513a8837-c865-11e4-b414-ddc1dc297352","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.HttpSupport:221","type":"CtTryImpl","sourcecode":"try {\n    return java.net.ProxySelector.select(java.net.URL.toURI()).get(0);\n} catch (java.net.URISyntaxException java.net.URISyntaxException) {\n    final java.net.ConnectException java.net.ConnectException;\n    java.net.ConnectException = new java.net.ConnectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.net.URL));\n    java.net.ConnectException.initCause(java.net.URISyntaxException);\n    throw java.net.ConnectException;\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":8,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":13,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":10,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":7,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":12,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":2}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
