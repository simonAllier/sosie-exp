[{"failures":[],"tindex":"985e25b1-c86b-11e4-9680-7fa4e6760f06","variableMapping":{"org.eclipse.jgit.lib.RefUpdate.Result.FORCED":"res","res":"res","org.eclipse.jgit.lib.RefUpdate.Result.NO_CHANGE":"res","org.eclipse.jgit.lib.RefUpdate.Result.FAST_FORWARD":"org.eclipse.jgit.lib.RefUpdate.Result.NO_CHANGE"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1379","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n    case FAST_FORWARD :\n    case NO_CHANGE :\n    case FORCED :\n        break;\n    default :\n        throw new java.io.IOException(\"Could not rewind to upstream commit\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:875","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.lib.RefUpdate.Result) {\n    case FAST_FORWARD :\n    case FORCED :\n    case NO_CHANGE :\n        break;\n    default :\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(\"Updating HEAD failed\");\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"985e25b2-c86b-11e4-9680-c3e83c3aa546","variableMapping":{"entrySpan":"currPtr","cIdx":"prevPtr","cCnt":"delta"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:428","type":"CtIfImpl","sourcecode":"if (((int) >= 0) && ((int + (int)) <= int)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:277","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    int = int;\n    int = int;\n    if (!org.eclipse.jgit.treewalk.CanonicalTreeParser.(eof()))\n        org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry();\n    \n    return ;\n} "},"status":-1},{"failures":[],"tindex":"985e25b3-c86b-11e4-9680-251b53edbc68","variableMapping":{"o":"id"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotWalk:171","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)\n    return ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getCommitTime();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:492","type":"CtDoImpl","sourcecode":"do {\n    SEARCH : for ( ;  ; ) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n        for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n            try {\n                long long = org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId);\n                if (0 <= long)\n                    return long;\n                \n            } catch (org.eclipse.jgit.errors.PackMismatchException org.eclipse.jgit.errors.PackMismatchException) {\n                if (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList))\n                    continue SEARCH;\n                \n            } catch (java.io.IOException java.io.IOException) {\n                org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile);\n            }\n        }\n        break SEARCH;\n    }\n} while (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList) )"},"status":-2},{"failures":[],"tindex":"985e25b4-c86b-11e4-9680-3530a0420f56","variableMapping":{"c":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:129","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.DepthWalk.Commit == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:117","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit"},"status":-2},{"failures":[],"tindex":"985e25b5-c86b-11e4-9680-1fc24d597aa9","variableMapping":{"r":"ptr","last":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:361","type":"CtReturnImpl","sourcecode":"return (int << 4) | int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HashedSequenceComparator:75","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.HashedSequence<S>.int[][int]"},"status":-2},{"failures":[],"tindex":"985e25b6-c86b-11e4-9680-733b7787b209","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.SymbolicRef:110","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:213","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.RefUpdate.getRef()"},"status":-2},{"failures":[],"tindex":"985e25b7-c86b-11e4-9680-17b91f8f2519","variableMapping":{"renameDetector":"renameDetector"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:977","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.RenameDetector) == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:984","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry : org.eclipse.jgit.diff.RenameDetector.compute()) {\n    if (org.eclipse.jgit.blame.BlameGenerator.(org.eclipse.jgit.blame.BlameGenerator.isRename(org.eclipse.jgit.diff.DiffEntry)) && (org.eclipse.jgit.diff.DiffEntry.getNewPath().equals(org.eclipse.jgit.treewalk.filter.PathFilter.getPath())))\n        return org.eclipse.jgit.diff.DiffEntry;\n    \n}"},"status":-2},{"failures":[],"tindex":"985e25b8-c86b-11e4-9680-41fd9c1eb678","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Collections.java.util.Collections.<org.eclipse.jgit.lib.ObjectId>emptySet())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:128","type":"CtInvocationImpl","sourcecode":"java.util.Collections.java.util.Collections.sort(java.util.List<org.eclipse.jgit.dircache.DirCacheEditor.PathEdit>, org.eclipse.jgit.dircache.DirCacheEditor.java.util.Comparator<org.eclipse.jgit.dircache.DirCacheEditor.PathEdit>)"},"status":-2},{"failures":[],"tindex":"985e25b9-c86b-11e4-9680-e350d18b397d","variableMapping":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"org.eclipse.jgit.util.HttpSupport.HDR_AUTHORIZATION","name":"org.eclipse.jgit.util.HttpSupport.HDR_AUTHORIZATION","sourceName":"org.eclipse.jgit.util.HttpSupport.HDR_AUTHORIZATION","org.eclipse.jgit.lib.Constants.R_TAGS":"org.eclipse.jgit.util.HttpSupport.HDR_AUTHORIZATION","type":"org.eclipse.jgit.util.HttpSupport.HDR_AUTHORIZATION"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:387","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.http.HttpConnection.setRequestProperty(org.eclipse.jgit.util.HttpSupport.java.lang.String, (((org.eclipse.jgit.transport.HttpAuthMethod.Type.getSchemeName()) + \" \") + java.lang.StringBuilder))"},"status":-2},{"failures":[],"tindex":"985e25ba-c86b-11e4-9680-235d9c65599c","variableMapping":{"res":"ib","resPtr":"p","src":"ib","length":"p","srcPtr":"p"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:400","type":"CtForImpl","sourcecode":"for ( ; (int < (byte[].int)) && (int < (byte[].int)) ; int++ , int++) {\n    if ((byte[][int]) != (byte[][int]))\n        break;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:964","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0) {\n    long += 1;\n    int = (byte[][int++]) & 255;\n    long <<= 7;\n    long += int & 127;\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1":3,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":9,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":14,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":12,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF":7,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2":2,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":8,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":5,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF":6}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
