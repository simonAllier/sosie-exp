[{"failures":[0,1,2,3,4,5],"tindex":"fd592e5b-c826-11e4-93a3-f74bf09be8f4","variableMapping":{"org.eclipse.jgit.util.Base64.DEC":"raw","source":"raw","srcOffset":"b"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.Base64:227","type":"CtLocalVariableImpl","sourcecode":"int int = ((((org.eclipse.jgit.util.Base64.byte[][byte[][int]]) & 255) << 18) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 1)]]) & 255) << 12)) | (((org.eclipse.jgit.util.Base64.byte[][byte[][(int + 2)]]) & 255) << 6)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.AuthorRevFilter:87","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, '>')"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,0,1,20,21,2,22,23,24,25,26,3,4,5],"tindex":"fd592e5c-c826-11e4-93a3-458b9d385a28","variableMapping":{"this":"this","info":"info"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:337","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.PackParser.readObjectHeader(org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:1086","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.PackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,1,2,3,4,5],"tindex":"fd592e5d-c826-11e4-93a3-2d2aa6922acd","variableMapping":{"endOffset":"xmlInRead","eol":"xmlInRead"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:210","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:477","type":"CtIfImpl","sourcecode":"if ((int) != 0)\n    return ;\n"},"status":-1},{"failures":[],"tindex":"fd59556e-c826-11e4-93a3-316c36931b96","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:256","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:130","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"fd59556f-c826-11e4-93a3-634c218c7487","variableMapping":{"s":"ptr","v":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:182","type":"CtReturnImpl","sourcecode":"return (int >>> int) << int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:513","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"fd595570-c826-11e4-93a3-a56de75fc598","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:459","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[],"tindex":"fd595571-c826-11e4-93a3-0bea024dba2b","variableMapping":{"tab":"eol","end":"length","ptr":"eol"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:529","type":"CtIfImpl","sourcecode":"if (int == int)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:446","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[0,2,53,54,55,56,57,1,3,4,5],"tindex":"fd595572-c826-11e4-93a3-3b98a481313e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:538","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ObjectId != null) && (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()))))\n    java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\nelse if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n    org.eclipse.jgit.lib.IndexDiff org.eclipse.jgit.lib.IndexDiff = java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.get(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n    if (org.eclipse.jgit.lib.IndexDiff == null) {\n        org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n        java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n    } \n    if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n        if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n            continue;\n        } \n        java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n    } \n} "},"status":-1},{"failures":[0,2,1,3,4,5],"tindex":"fd595573-c826-11e4-93a3-7b2dc8f54c38","variableMapping":{"session":"session"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:119","type":"CtAssignmentImpl","sourcecode":"com.jcraft.jsch.Session = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:140","type":"CtAssignmentImpl","sourcecode":"com.jcraft.jsch.Session = org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host)"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"fd595574-c826-11e4-93a3-c3e66c13b2d1","variableMapping":{"position":"cmp"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.BitSet:115","type":"CtReturnImpl","sourcecode":"return int >> 6"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:287","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":30,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":27,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":18,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":46,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":1,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":53,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":52,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":20,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":37,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":48,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":31,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":21,"org.eclipse.jgit.transport.PackParserTest.test1":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":50,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.transport.PackParserTest.test2":24,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":42,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":41,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":15,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":11,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":55,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":9,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":19,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":8,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":47,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":6,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":56,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":38,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":44}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
