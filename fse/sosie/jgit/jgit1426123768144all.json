[{"failures":[],"tindex":"39a10030-c857-11e4-8998-f95faf8fe356","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1172","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:149","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"39a12741-c857-11e4-8998-29560b8df6ff","variableMapping":{"result":"result","org.eclipse.jgit.lib.RefUpdate.Result.IO_FAILURE":"result"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RefRename:154","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TrackingRefUpdate:131","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefUpdate.Result"},"status":-1},{"failures":[],"tindex":"39a12742-c857-11e4-8998-b5884f7229e3","variableMapping":{"prefix":"cannotDeleteCheckedOutBranch","name":"fullName"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:285","type":"CtIfImpl","sourcecode":"if (0 < (java.lang.String.length()))\n    java.lang.String = java.lang.String.substring(java.lang.String.length());\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DeleteBranchCommand:134","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    throw new org.eclipse.jgit.api.errors.CannotDeleteCurrentBranchException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"39a12743-c857-11e4-8998-d1be659fb408","variableMapping":{"t":"minRef","n":"minRef"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:937","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator.createEmptyTreeIterator()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:950","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][int]"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,3,0,1,2,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,77,78,78,79,80,81,82,83,84,85,86,87,88,89,90,91,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"39a12744-c857-11e4-8998-dde0b355663a","variableMapping":{"binaryFileThreshold":"resultsPending","threshold":"resultsPending"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:266","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:656","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[0,1,2,4,3,5,110,111],"tindex":"39a12745-c857-11e4-8998-39bc127e8672","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:223","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[][int] = 0"},"status":-1},{"failures":[],"tindex":"39a12746-c857-11e4-8998-99e024e30f8c","variableMapping":{"branchName":"cannotBeRecursiveWhenTreesAreIncluded"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.DeleteBranchCommand:114","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffEntry:172","type":"CtIfImpl","sourcecode":"if (boolean && (org.eclipse.jgit.treewalk.TreeWalk.isRecursive()))\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"39a12747-c857-11e4-8998-bf9f456632c5","variableMapping":{"origflags":"blockSize","org.eclipse.jgit.dircache.DirCacheEntry.NAME_MASK":"p"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:695","type":"CtLocalVariableImpl","sourcecode":"final int int = int & (org.eclipse.jgit.dircache.DirCacheEntry.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:496","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.internal.storage.dfs.DfsOutputStream.read((long + int), java.nio.ByteBuffer.java.nio.ByteBuffer.wrap(byte[], int, ((int) - int)))"},"status":-2},{"failures":[],"tindex":"39a12748-c857-11e4-8998-1568ceff2aa1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1165","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:270","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(int)"},"status":-2},{"failures":[],"tindex":"39a12749-c857-11e4-8998-65b58faeb31f","variableMapping":{"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT":"DIRCExtensionNotSupportedByThisVersion","pruneExpireStr":"DIRCExtensionIsTooLargeAt"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:312","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.storage.file.GC.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:501","type":"CtSwitchImpl","sourcecode":"switch (org.eclipse.jgit.util.NB.org.eclipse.jgit.util.NB.decodeInt32(byte[], 0)) {\n    case org.eclipse.jgit.dircache.DirCache.int :\n        {\n            if ((java.lang.Integer.int) < long) {\n                throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.dircache.DirCache.org.eclipse.jgit.dircache.DirCache.formatExtensionName(byte[]), java.lang.Long.java.lang.Long.valueOf(long)));\n            } \n            final byte[] byte[] = new byte[((int)(long))];\n            org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.BufferedInputStream, byte[], 0, byte[].int);\n            java.security.MessageDigest.update(byte[], 0, byte[].int);\n            org.eclipse.jgit.dircache.DirCacheTree = new org.eclipse.jgit.dircache.DirCacheTree(byte[] , new org.eclipse.jgit.util.MutableInteger() , null);\n            break;\n        }\n    default :\n        if (((byte[][0]) >= 'A') && ((byte[][0]) <= 'Z')) {\n            org.eclipse.jgit.dircache.DirCache.skipOptionalExtension(java.io.BufferedInputStream, java.security.MessageDigest, byte[], long);\n        } else {\n            throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.dircache.DirCache.org.eclipse.jgit.dircache.DirCache.formatExtensionName(byte[])));\n        }\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":95,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":62,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":8,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":80,"org.eclipse.jgit.api.FetchCommandTest.testFetch":56,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":72,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":16,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":102,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":45,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":66,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":100,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":20,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":68,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":50,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":74,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":41,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":31,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":107,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":30,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":111,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":28,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":47,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":110,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":9,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":17,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":65,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":58,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":97,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":19,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":103,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":44,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":6,"org.eclipse.jgit.api.GitConstructionTest.testWrap":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":94,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":33,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":54,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":81,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":75,"org.eclipse.jgit.api.GitConstructionTest.testOpen":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":71,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":21,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":104,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":53,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":55,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":91,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":88,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":57,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":25,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":14,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":10,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":7,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":108,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":87,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":98,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":73,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":96,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":12,"org.eclipse.jgit.api.GitConstructionTest.testClose":76,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":15,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":90,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":39,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":18,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":43,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":79,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":84,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":11,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":63,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":83,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":61,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":109,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":93,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":64,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":46,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":86,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":105,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":52,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":35}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
