[{"failures":[0,1,2,3,4,5],"tindex":"032400fe-c81f-11e4-b15b-df411f16c7e4","variableMapping":{"cacheMap":"cacheMap","location":"location"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:164","type":"CtLocalVariableImpl","sourcecode":"java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> = java.util.concurrent.ConcurrentHashMap<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.get(org.eclipse.jgit.lib.RepositoryCache.Key)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:191","type":"CtLocalVariableImpl","sourcecode":"java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> = java.util.concurrent.ConcurrentHashMap<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.remove(org.eclipse.jgit.lib.RepositoryCache.Key)"},"status":-1},{"failures":[],"tindex":"032400ff-c81f-11e4-b15b-3743aa2fe72a","variableMapping":{"line":"unknownObjectType","name":"unknownObjectType"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:422","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.errors.TransportException((\"Empty ref: \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:909","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.transport.PackParser.onBeginWholeObject(long, int, long);\n        org.eclipse.jgit.transport.PackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, byte[], 0, int);\n        org.eclipse.jgit.transport.PackParser.whole(long, int, long);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = org.eclipse.jgit.transport.PackParser.readFrom(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source);\n            byte[][int++] = ((byte)(int));\n            long long = int & 127;\n            while ((int & 128) != 0) {\n                long += 1;\n                int = org.eclipse.jgit.transport.PackParser.readFrom(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source);\n                byte[][int++] = ((byte)(int));\n                long <<= 7;\n                long += int & 127;\n            }\n            final long long = long - long;\n            org.eclipse.jgit.transport.PackParser.onBeginOfsDelta(long, long, long);\n            org.eclipse.jgit.transport.PackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, byte[], 0, int);\n            org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, long);\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta org.eclipse.jgit.transport.PackParser.UnresolvedDelta = org.eclipse.jgit.transport.PackParser.onEndDelta();\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta.long = long;\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta.org.eclipse.jgit.transport.PackParser.UnresolvedDelta = org.eclipse.jgit.transport.LongMap<org.eclipse.jgit.transport.PackParser.UnresolvedDelta>.put(long, org.eclipse.jgit.transport.PackParser.UnresolvedDelta);\n            (int)++;\n            break;\n        }\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = org.eclipse.jgit.transport.PackParser.fill(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, 20);\n            final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int);\n            java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], int, 20);\n            int += 20;\n            org.eclipse.jgit.transport.PackParser.use(20);\n            org.eclipse.jgit.transport.PackParser.DeltaChain org.eclipse.jgit.transport.PackParser.DeltaChain = org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.transport.PackParser.DeltaChain>.get(org.eclipse.jgit.lib.ObjectId);\n            if (org.eclipse.jgit.transport.PackParser.DeltaChain == null) {\n                org.eclipse.jgit.transport.PackParser.DeltaChain = new org.eclipse.jgit.transport.PackParser.DeltaChain(org.eclipse.jgit.lib.ObjectId);\n                org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.transport.PackParser.DeltaChain>.add(org.eclipse.jgit.transport.PackParser.DeltaChain);\n            } \n            org.eclipse.jgit.transport.PackParser.onBeginRefDelta(long, org.eclipse.jgit.lib.ObjectId, long);\n            org.eclipse.jgit.transport.PackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, byte[], 0, int);\n            org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source.org.eclipse.jgit.transport.PackParser.Source, long);\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta org.eclipse.jgit.transport.PackParser.UnresolvedDelta = org.eclipse.jgit.transport.PackParser.onEndDelta();\n            org.eclipse.jgit.transport.PackParser.UnresolvedDelta.long = long;\n            org.eclipse.jgit.transport.PackParser.DeltaChain.add(org.eclipse.jgit.transport.PackParser.UnresolvedDelta);\n            (int)++;\n            break;\n        }\n    default :\n        throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int)));\n}"},"status":-2},{"failures":[],"tindex":"03240100-c81f-11e4-b15b-a3652b259407","variableMapping":{"isBinary":"bare","abortIfBinary":"bare"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.EolCanonicalizingInputStream:185","type":"CtIfImpl","sourcecode":"if ((boolean) && (boolean))\n    throw new org.eclipse.jgit.util.io.EolCanonicalizingInputStream.IsBinaryException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:394","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.CloneCommand.org.eclipse.jgit.api.CloneCommand.validateDirs(java.io.File, java.io.File, boolean)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"03240101-c81f-11e4-b15b-65951d2bcf19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:667","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return org.eclipse.jgit.lib.Constants.java.nio.charset.Charset;\n"},"status":-1},{"failures":[1,2,3,0,5,20,21,4],"tindex":"03240102-c81f-11e4-b15b-ab8150844811","variableMapping":{"cnt":"ptr","n":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ByteBufferWindow:91","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.BinaryHunk:134","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-1},{"failures":[1,2,3,0,5,4],"tindex":"03240103-c81f-11e4-b15b-e554527f8f39","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ThreeWayMerger:137","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.treewalk.EmptyTreeIterator()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.TreeWalk:952","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-1},{"failures":[],"tindex":"03240104-c81f-11e4-b15b-195cf306732b","variableMapping":{"subpath":"need2Arguments"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:230","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"/\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:546","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) != 2) {\n    java.lang.System.java.io.PrintStream.println(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    java.lang.System.java.lang.System.exit(1);\n} "},"status":-2},{"failures":[22,1,2,3,0,5,4],"tindex":"03240105-c81f-11e4-b15b-03e47a994969","variableMapping":{"ib":"p"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:899","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:884","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCache.nextEntry(byte[], int, int)"},"status":-1},{"failures":[],"tindex":"03240106-c81f-11e4-b15b-71f77550f098","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:156","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[1,2,3,0,23,4,24,25,26,27,28,29,30,31,32,33,34,35,36,37,5],"tindex":"03242817-c81f-11e4-b15b-135bdcf0532a","variableMapping":{"currCommit":"currCommit","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:197","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.continueActiveLanes(org.eclipse.jgit.revplot.PlotCommit<L>)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":6,"org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory":36,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf":24,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":8,"org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch":32,"org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches":33,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":13,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":10,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":20,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":22,"org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther":31,"org.eclipse.jgit.revplot.PlotCommitListTest.testMerged":35,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":16,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":21,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":19,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1":29,"org.eclipse.jgit.revplot.PlotCommitListTest.testLinear":34,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":15,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":12,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":14,"org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane":37,"org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":17,"org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2":30,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents":28,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927":26,"org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359":27,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":23,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":7,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":11}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
