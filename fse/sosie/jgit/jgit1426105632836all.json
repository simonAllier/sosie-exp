[{"failures":[0,1,2,3,4,5],"tindex":"01127e68-c82d-11e4-a1d2-5d2b930c8169","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1093","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1161","type":"CtForImpl","sourcecode":"for (int int = (org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.size()) - 1 ; int >= 0 ; int--) {\n    int int = 0;\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.get(int).getDeltaBase();\n    while (org.eclipse.jgit.internal.storage.pack.ObjectToPack != null) {\n        if (int < (org.eclipse.jgit.internal.storage.pack.ObjectToPack.getChainLength()))\n            break;\n        \n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.setChainLength(++int);\n        if ((int >= int) && (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDeltaRepresentation())) {\n            org.eclipse.jgit.internal.storage.pack.PackWriter.reselectNonDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n            break;\n        } \n        org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBase();\n    }\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"01127e69-c82d-11e4-a1d2-89d5262f1fc9","variableMapping":{"dst":"dst","old":"dst"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:498","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.SymbolicRef(org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.SymbolicRef:82","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref"},"status":-1},{"failures":[],"tindex":"01127e6a-c82d-11e4-a1d2-63637e53902a","variableMapping":{"buf":"out","out":"out"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:852","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.GZIPOutputStream java.util.zip.GZIPOutputStream = new java.util.zip.GZIPOutputStream(org.eclipse.jgit.util.TemporaryBuffer);\n    org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.writeTo(java.util.zip.GZIPOutputStream, null);\n    java.util.zip.GZIPOutputStream.close();\n    if ((org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.length()) < (org.eclipse.jgit.util.TemporaryBuffer.length()))\n        org.eclipse.jgit.util.TemporaryBuffer = org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream;\n    \n} catch (java.io.IOException java.io.IOException) {\n    org.eclipse.jgit.util.TemporaryBuffer = org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:541","type":"CtForImpl","sourcecode":"SEND_HAVES : for ( ;  ; ) {\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next();\n    if (org.eclipse.jgit.revwalk.RevCommit == null)\n        break SEND_HAVES;\n    \n    org.eclipse.jgit.transport.PacketLineOut.writeString(((\"have \" + (org.eclipse.jgit.revwalk.RevCommit.getId().name())) + \"\\n\"));\n    int++;\n    int++;\n    if ((31 & int) != 0) {\n        continue;\n    } \n    if (org.eclipse.jgit.lib.ProgressMonitor.isCancelled())\n        throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException();\n    \n    org.eclipse.jgit.transport.PacketLineOut.end();\n    int++;\n    if ((int == 32) && (!(boolean))) {\n        continue;\n    } \n    READ_RESULT : for ( ;  ; ) {\n        final org.eclipse.jgit.transport.PacketLineIn.AckNackResult org.eclipse.jgit.transport.PacketLineIn.AckNackResult = org.eclipse.jgit.transport.PacketLineIn.readACK(org.eclipse.jgit.lib.MutableObjectId);\n        switch (org.eclipse.jgit.transport.PacketLineIn.AckNackResult) {\n            case NAK :\n                int--;\n                break READ_RESULT;\n            case ACK :\n                org.eclipse.jgit.transport.GitProtocolConstants.MultiAck = org.eclipse.jgit.transport.GitProtocolConstants.MultiAck.org.eclipse.jgit.transport.GitProtocolConstants.MultiAck;\n                int = 0;\n                boolean = true;\n                if (boolean)\n                    org.eclipse.jgit.util.TemporaryBuffer.Heap.writeTo(java.io.OutputStream, null);\n                \n                break SEND_HAVES;\n            case ACK_CONTINUE :\n            case ACK_COMMON :\n            case ACK_READY :\n                org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.MutableObjectId), org.eclipse.jgit.transport.PacketLineIn.AckNackResult);\n                boolean = true;\n                boolean = true;\n                int = 0;\n                if (org.eclipse.jgit.transport.PacketLineIn.AckNackResult == (org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult))\n                    boolean = true;\n                \n                break;\n        }\n        if (org.eclipse.jgit.lib.ProgressMonitor.isCancelled())\n            throw new org.eclipse.jgit.transport.BasePackFetchConnection.CancelledException();\n        \n    }\n    if ((boolean) & boolean)\n        break SEND_HAVES;\n    \n    if (boolean)\n        org.eclipse.jgit.util.TemporaryBuffer.Heap.writeTo(java.io.OutputStream, null);\n    \n    if (boolean && (int > (org.eclipse.jgit.transport.BasePackFetchConnection.int))) {\n        break SEND_HAVES;\n    } \n}"},"status":-2},{"failures":[],"tindex":"01127e6b-c82d-11e4-a1d2-5be784fbab1e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:451","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1024]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:75","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.lib.Constants.org.eclipse.jgit.lib.Constants.encode(java.lang.String)"},"status":-2},{"failures":[1,5,2,3,4,0],"tindex":"01127e6c-c82d-11e4-a1d2-1314be8d0885","variableMapping":{"r":"sz"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:160","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 4"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:409","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 4"},"status":-1},{"failures":[21,22,2,3,4,23,1,24,25,26,5,27,28,29,30,31,32,33,34,35,36,37,38,0,39,40,41,42,43],"tindex":"01127e6d-c82d-11e4-a1d2-2bd78542765a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:885","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndexWriter.write(org.eclipse.jgit.internal.storage.pack.PackWriter.sortByName(), byte[])"},"status":-1},{"failures":[1,2,3,4,0,5],"tindex":"01127e6e-c82d-11e4-a1d2-5fa46d4d10fd","variableMapping":{"flags":"tab","org.eclipse.jgit.revwalk.RevObject.PARSED":"tab"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevBlob:76","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.RevObject.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:528","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"01127e6f-c82d-11e4-a1d2-4d91c00550b5","variableMapping":{"blobs":"mask","bitmap":"mask"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:205","type":"CtReturnImpl","sourcecode":"return com.googlecode.javaewah.EWAHCompressedBitmap.and(com.googlecode.javaewah.EWAHCompressedBitmap)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:482","type":"CtReturnImpl","sourcecode":"return com.googlecode.javaewah.EWAHCompressedBitmap"},"status":-2},{"failures":[],"tindex":"0112a480-c82d-11e4-a1d2-397ec0a4f4f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.attributes.Attribute:125","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:301","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0112a481-c82d-11e4-a1d2-710257cacf17","variableMapping":{"pos":"pos","ofs":"pos"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:921","type":"CtAssignmentImpl","sourcecode":"long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:632","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":6,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":31,"org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter":18,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":35,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":39,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":8,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":22,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":36,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":16,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":34,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":11,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage":20,"org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit":19,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":42,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":26,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":14,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":37,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":17,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":33,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":29,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":13,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":41,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":10,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":40,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":12,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":30,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":23,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":15,"org.eclipse.jgit.api.GitConstructionTest.testClose":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":24,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":28,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":38,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":7,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":32,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":43,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":9}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
