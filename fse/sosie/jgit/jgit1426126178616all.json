[{"failures":[],"tindex":"d7363dae-c85c-11e4-b4ed-b70006c9997c","variableMapping":{"pattern":"path","target":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:191","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(((java.lang.String) + \"/\")))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:202","type":"CtWhileImpl","sourcecode":"while (true) {\n    int int = int;\n    int = java.lang.String.indexOf(char, int);\n    if (int == (-1)) {\n        if (int < int)\n            boolean = org.eclipse.jgit.ignore.internal.PathMatcher.matches(int, java.lang.String, int, int, boolean);\n        \n        if (boolean) {\n            if ((int == ((java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.size()) - 2)) && ((java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.get((int + 1))) == (org.eclipse.jgit.ignore.internal.PathMatcher.org.eclipse.jgit.ignore.internal.WildMatcher)))\n                return true;\n            \n            if ((int < ((java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.size()) - 1)) && ((java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.get(int)) == (org.eclipse.jgit.ignore.internal.PathMatcher.org.eclipse.jgit.ignore.internal.WildMatcher))) {\n                int++;\n                boolean = org.eclipse.jgit.ignore.internal.PathMatcher.matches(int, java.lang.String, int, int, boolean);\n            } else if ((boolean) && (!boolean))\n                return false;\n            \n        } \n        return boolean && ((int + 1) == (java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.size()));\n    } \n    if ((int - int) > 0)\n        boolean = org.eclipse.jgit.ignore.internal.PathMatcher.matches(int, java.lang.String, int, int, boolean);\n    else {\n        int++;\n        continue;\n    }\n    if (boolean) {\n        if ((java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.get(int)) == (org.eclipse.jgit.ignore.internal.PathMatcher.org.eclipse.jgit.ignore.internal.WildMatcher)) {\n            int = int;\n            int = int - 1;\n        } \n        int++;\n        if (int == (java.util.List<org.eclipse.jgit.ignore.internal.IMatcher>.size()))\n            return true;\n        \n    } else if (int != (-1))\n        int = int + 1;\n    else\n        return false;\n    \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"d73664bf-c85c-11e4-b4ed-d7fed5ddc6e2","variableMapping":{"remoteBranchName":"name","branchName":"name"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:234","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:370","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n    org.eclipse.jgit.api.ArchiveCommand.Format<T>.putEntry(T, (java.lang.String + \"/\"), org.eclipse.jgit.lib.FileMode, null);\n    continue;\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d73664c0-c85c-11e4-b4ed-fd19038dc851","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"E-mail address of PersonIdent must not be null.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushCertificateParser:167","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, \"broken push certificate header\"))"},"status":-1},{"failures":[5,6,0,1,2,3,4],"tindex":"d73664c1-c85c-11e4-b4ed-47268460417c","variableMapping":{"d":"srcIdx"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:195","type":"CtOperatorAssignmentImpl","sourcecode":"int += int & 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.BlockList:185","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"d73664c2-c85c-11e4-b4ed-6d4c525cb5b9","variableMapping":{"srcLog":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:189","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS:570","type":"CtReturnImpl","sourcecode":"return java.io.File.exists()"},"status":-2},{"failures":[],"tindex":"d73664c3-c85c-11e4-b4ed-697214301e43","variableMapping":{"last":"target","cmit":"target"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2072","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId = org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:972","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId = org.eclipse.jgit.lib.Ref.getObjectId()"},"status":-2},{"failures":[],"tindex":"d73664c4-c85c-11e4-b4ed-7bfd32bdede5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:233","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"merge \")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:219","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(8)"},"status":-2},{"failures":[],"tindex":"d73664c5-c85c-11e4-b4ed-8b812545bff8","variableMapping":{"tmp":"this","myLock":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:583","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.LockFile.lock()) {\n    org.eclipse.jgit.internal.storage.file.LockFile.setNeedStatInformation(true);\n    org.eclipse.jgit.internal.storage.file.LockFile = org.eclipse.jgit.internal.storage.file.LockFile;\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:181","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.internal.storage.file.LockFile.(lock()))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"d73664c6-c85c-11e4-b4ed-21f2644be246","variableMapping":{"gt":"checkoutNo","valEnd":"checkoutNo"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.FooterLine:142","type":"CtIfImpl","sourcecode":"if ((int) < int)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:762","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ReflogEntry org.eclipse.jgit.lib.ReflogEntry : java.util.List<org.eclipse.jgit.lib.ReflogEntry>) {\n    org.eclipse.jgit.lib.CheckoutEntry org.eclipse.jgit.lib.CheckoutEntry = org.eclipse.jgit.lib.ReflogEntry.parseCheckout();\n    if (org.eclipse.jgit.lib.CheckoutEntry != null)\n        if ((int--) == 1)\n            return org.eclipse.jgit.lib.CheckoutEntry.getFromBranch();\n        \n    \n}"},"status":-2},{"failures":[],"tindex":"d7368bd7-c85c-11e4-b4ed-6f639849ee46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:336","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = null"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.util.BlockListTest.testAddAllFromOtherList":6,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
