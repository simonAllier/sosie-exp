[{"failures":[0,1,2,3,4,5],"tindex":"02ae063e-c877-11e4-9532-49a67ab59a4a","variableMapping":{"walker":"revWalk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1670","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.setRetainBody(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:274","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.release()"},"status":-1},{"failures":[],"tindex":"02b0c55f-c877-11e4-9532-cb5ec2030c99","variableMapping":{"worker":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.InternalPushConnection:121","type":"CtIfImpl","sourcecode":"if ((java.lang.Thread) != null) {\n    try {\n        java.lang.Thread.join();\n    } catch (java.lang.InterruptedException java.lang.InterruptedException) {\n    } finally {\n        java.lang.Thread = null;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.java.lang.Thread.sleep(100)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"02b0c560-c877-11e4-9532-db2b9656112d","variableMapping":{"newEntry":"dce","e":"dce"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:670","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":-1},{"failures":[],"tindex":"02b0ec71-c877-11e4-9532-513ad0ff80bd","variableMapping":{"dirOnly":"inverse","isDirectory":"inverse"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:271","type":"CtReturnImpl","sourcecode":"return (!(boolean)) || boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:137","type":"CtReturnImpl","sourcecode":"return !(boolean)"},"status":-2},{"failures":[],"tindex":"02b0ec72-c877-11e4-9532-1d9e427333aa","variableMapping":{"generator":"smw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:125","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.release()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:522","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode == null)\n    org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore();\n"},"status":-2},{"failures":[],"tindex":"02b0ec73-c877-11e4-9532-dbf2e9108fd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:568","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList.find(java.lang.String)"},"status":-2},{"failures":[],"tindex":"02b0ec74-c877-11e4-9532-456c07207aec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:534","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case ((byte)(226)) :\n        org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int);\n        switch (byte[][(int + 1)]) {\n            case ((byte)(128)) :\n                switch (byte[][(int + 2)]) {\n                    case ((byte)(140)) :\n                    case ((byte)(141)) :\n                    case ((byte)(142)) :\n                    case ((byte)(143)) :\n                    case ((byte)(170)) :\n                    case ((byte)(171)) :\n                    case ((byte)(172)) :\n                    case ((byte)(173)) :\n                    case ((byte)(174)) :\n                        boolean = true;\n                        int += 3;\n                        continue;\n                    default :\n                        return false;\n                }\n            case ((byte)(129)) :\n                switch (byte[][(int + 2)]) {\n                    case ((byte)(170)) :\n                    case ((byte)(171)) :\n                    case ((byte)(172)) :\n                    case ((byte)(173)) :\n                    case ((byte)(174)) :\n                    case ((byte)(175)) :\n                        boolean = true;\n                        int += 3;\n                        continue;\n                    default :\n                        return false;\n                }\n        }\n        break;\n    case ((byte)(239)) :\n        org.eclipse.jgit.lib.ObjectChecker.org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int);\n        if (((byte[][(int + 1)]) == ((byte)(187))) && ((byte[][(int + 2)]) == ((byte)(191)))) {\n            boolean = true;\n            int += 3;\n            continue;\n        } \n        return false;\n    default :\n        if (int == 4)\n            return false;\n        \n        if ((byte[][int++]) != (byte[][int++]))\n            return false;\n        \n}"},"status":-2},{"failures":[],"tindex":"02b0ec75-c877-11e4-9532-eb0104847e88","variableMapping":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"line","name":"line","sourceName":"name","org.eclipse.jgit.lib.Constants.R_TAGS":"name","type":"line"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportSftp:422","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.errors.TransportException((\"Empty ref: \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"02b0ec76-c877-11e4-9532-9d4e0f2de4ad","variableMapping":{"globalAttributeNode":"attributesNode"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:698","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.attributes.AttributesNode = ((org.eclipse.jgit.treewalk.WorkingTreeIterator.GlobalAttributesNode)(org.eclipse.jgit.attributes.AttributesNode)).load()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:663","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.attributes.AttributesNode = ((org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryAttributesNode)(org.eclipse.jgit.attributes.AttributesNode)).load()"},"status":-2},{"failures":[],"tindex":"02b0ec77-c877-11e4-9532-b730a587cc82","variableMapping":{"dirOnly":"first","assumeDirectory":"first"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:220","type":"CtIfImpl","sourcecode":"if ((boolean) && (!boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:232","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
