[{"failures":[],"tindex":"dbac84aa-c851-11e4-b84a-ef626cc2acef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:822","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit()"},"status":-2},{"failures":[],"tindex":"dbac84ab-c851-11e4-b84a-11e881b0e8ac","variableMapping":{"matches":"wantIds"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:175","type":"CtIfImpl","sourcecode":"if (256 <= (java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1067","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.clear()"},"status":-2},{"failures":[],"tindex":"dbac84ac-c851-11e4-b84a-b9e50fed0655","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.TagCommand:161","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.TagBuilder);\n    org.eclipse.jgit.lib.ObjectInserter.flush();\n    java.lang.String java.lang.String = org.eclipse.jgit.lib.TagBuilder.getTag();\n    return org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, org.eclipse.jgit.lib.TagBuilder.toString());\n} finally {\n    org.eclipse.jgit.lib.ObjectInserter.release();\n}"},"status":-2},{"failures":[],"tindex":"dbac84ad-c851-11e4-b84a-7fa30f3b4524","variableMapping":{"result":"result","org.eclipse.jgit.merge.MergeChunk.ConflictState.NEXT_CONFLICTING_RANGE":"org.eclipse.jgit.merge.MergeChunk.ConflictState.FIRST_CONFLICTING_RANGE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:130","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.MergeResult<S>.add(2, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:110","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.diff.EditList.isEmpty())) {\n    org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    org.eclipse.jgit.merge.MergeResult<S>.add(2, 0, S.size(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n} else\n    org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n"},"status":-2},{"failures":[],"tindex":"dbac84ae-c851-11e4-b84a-f5f84bb134a8","variableMapping":{"c":"sourceCommit","last":"sourceCommit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:175","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:840","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.revwalk.RevCommit"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"dbac84af-c851-11e4-b84a-f5580576e002","variableMapping":{"parentFile":"inTree","repo":"repo"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:472","type":"CtWhileImpl","sourcecode":"while ((java.io.File != null) && (!(java.io.File.equals(org.eclipse.jgit.lib.Repository.getWorkTree())))) {\n    if (!(java.io.File.delete()))\n        break;\n    \n    java.io.File = java.io.File.getParentFile();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.BlameCommand:225","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.getFS().isFile(java.io.File)) {\n    org.eclipse.jgit.diff.RawText org.eclipse.jgit.diff.RawText = org.eclipse.jgit.api.BlameCommand.getRawText(java.io.File);\n    org.eclipse.jgit.blame.BlameGenerator.push(null, org.eclipse.jgit.diff.RawText);\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,3,92,93,94,95,96,97,98,99,100,100,101,101,102,102,5,103,104,4,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,0,1,2,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"dbac84b0-c851-11e4-b84a-1b263402097d","variableMapping":{"expireAgeMillis":"sz"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:316","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:724","type":"CtOperatorAssignmentImpl","sourcecode":"long += ((long)((int & 127))) << int"},"status":-1},{"failures":[],"tindex":"dbac84b1-c851-11e4-b84a-0b8cf0975509","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:239","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[193,194,195,196,197,198,199,200,201,202,3,4,5,0,1,2,203,204,205,206,207],"tindex":"dbacabc2-c851-11e4-b84a-7dc80cd7e353","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.UnionInputStream:109","type":"CtInvocationImpl","sourcecode":"java.util.LinkedList<java.io.InputStream>.add(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"dbacabc3-c851-11e4-b84a-b7a2327e312b","variableMapping":{"depth":"rawPtr","line":"corruptObjectInvalidMode","this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:860","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"deepen \")) {\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(7));\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:528","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int int = byte[][int++];\n    if ((int < '0') || (int > '7'))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    int int = int - '0';\n    for ( ;  ; ) {\n        int = byte[][int++];\n        if (' ' == int)\n            break;\n        else if ((int < '0') || (int > '7'))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        int <<= 3;\n        int += int - '0';\n    }\n    int int = 0;\n    while ((byte[][(int + int)]) != 0)\n        int++;\n    final byte[] byte[] = new byte[int];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    int += int + 1;\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int);\n    int += org.eclipse.jgit.lib.Constants.int;\n    final org.eclipse.jgit.lib.TreeEntry org.eclipse.jgit.lib.TreeEntry;\n    if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , false);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.FileTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[] , true);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.Tree(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.SymlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n        org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.GitlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\n    else\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.toOctalString(int)));\n    \n    org.eclipse.jgit.lib.TreeEntry[][int++] = org.eclipse.jgit.lib.TreeEntry;\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":81,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":152,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":21,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":33,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":160,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":162,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":204,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":86,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":159,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":29,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":182,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":71,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":157,"org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes":200,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":38,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":63,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":65,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":27,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":99,"org.eclipse.jgit.util.io.UnionInputStreamTest.testExceptionDuringClose":199,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":164,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":119,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":145,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":205,"org.eclipse.jgit.util.io.UnionInputStreamTest.testCloseDuringClose":197,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":78,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":135,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":12,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit":201,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":69,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":74,"org.eclipse.jgit.util.io.UnionInputStreamTest.testReadByteBlocks":196,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":140,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":148,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":172,"org.eclipse.jgit.util.io.UnionInputStreamTest.testNonBlockingPartialRead":198,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":178,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":122,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":49,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":165,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":161,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":98,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":185,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":24,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":91,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":109,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":188,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd":202,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":190,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":44,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":62,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":173,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":174,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":163,"org.eclipse.jgit.api.GitConstructionTest.testClose":100,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":108,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":90,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":187,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":30,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":103,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":61,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":47,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":53,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":151,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":64,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":186,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":66,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":189,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":192,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":84,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":154,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":73,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":116,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":55,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":79,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":180,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":10,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":67,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":170,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":167,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":110,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":166,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":144,"org.eclipse.jgit.util.io.UnionInputStreamTest.testSkip":194,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":137,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":59,"org.eclipse.jgit.util.io.UnionInputStreamTest.testAutoCloseDuringRead":193,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":76,"org.eclipse.jgit.api.FetchCommandTest.testFetch":147,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":120,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":34,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":132,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":177,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":129,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":123,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":156,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":35,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":139,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":175,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":54,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":94,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":184,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":56,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":203,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":158,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":85,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":60,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":146,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":75,"org.eclipse.jgit.api.PushCommandTest.testPush":107,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":95,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":41,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":19,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":43,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":20,"org.eclipse.jgit.util.io.UnionInputStreamTest.testArrayConstructor":195,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":18,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":106,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":133,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":131,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":126,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":125,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":36,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":183,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":149,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":155,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":72,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":89,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":23,"org.eclipse.jgit.api.GitConstructionTest.testWrap":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":169,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":111,"org.eclipse.jgit.api.GitConstructionTest.testOpen":101,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":206,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":179,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":93,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":127,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":88,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":28,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":96,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":150,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":97,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":130,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":68,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":50,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":26,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":87,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":6,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":171,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":40,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":181,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":31,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":141,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":118,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":117,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":105,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":207,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":176,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":121,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":143,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":16,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":138,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":15,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":83,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":14,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":112,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":142,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":114,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":153,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":22,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":128,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":52,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":58,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":77,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":168,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":80,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":136,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":134,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":124,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":51,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":8,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":191,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":113}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
