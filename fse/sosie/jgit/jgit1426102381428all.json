[{"failures":[],"tindex":"6e1f07de-c825-11e4-abcb-5b9d38efaea2","variableMapping":{"otp":"id"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1518","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.markWantWrite()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:723","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"^{}\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 3));\n    final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n    if (org.eclipse.jgit.lib.Ref == null)\n        throw org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.outOfOrderAdvertisement(java.lang.String);\n    \n    if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n        throw org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.duplicateAdvertisement((java.lang.String + \"^{}\"));\n    \n    java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>.put(java.lang.String, new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.ObjectId));\n} else {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>.put(java.lang.String, new org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , java.lang.String , org.eclipse.jgit.lib.ObjectId));\n    if (org.eclipse.jgit.lib.Ref != null)\n        throw org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.duplicateAdvertisement(java.lang.String);\n    \n}"},"status":-2},{"failures":[],"tindex":"6e1f07df-c825-11e4-abcb-11ab920224dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:685","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.util.NB.org.eclipse.jgit.util.NB.decodeUInt32(byte[], 8)"},"status":-2},{"failures":[],"tindex":"6e1f07e0-c825-11e4-abcb-a9e00be77946","variableMapping":{"clone":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:179","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.api.CloneCommand.call().getRepository()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:132","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.api.CloneCommand.init(org.eclipse.jgit.transport.URIish)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"6e1f07e1-c825-11e4-abcb-9325928fe7f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:213","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"object \")"},"status":-1},{"failures":[],"tindex":"6e1f07e2-c825-11e4-abcb-95e2be993e40","variableMapping":{"blkEnd":"commitCnt","end":"commitCnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:375","type":"CtIfImpl","sourcecode":"if (int <= int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1789","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.util.BlockList<org.eclipse.jgit.revwalk.RevCommit>) {\n    if (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) {\n        org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n        org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevCommit, 0);\n        int++;\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.revwalk.RevCommit.getParentCount()) ; int++) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(int);\n        if (((!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) && (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag.org.eclipse.jgit.revwalk.RevFlag)))) && (!org.eclipse.jgit.internal.storage.pack.PackWriter.(exclude(org.eclipse.jgit.revwalk.RevCommit)))) {\n            org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n            org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevCommit, 0);\n            int++;\n        } \n    }\n    if ((!boolean) && (4096 < int)) {\n        for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.Set<org.eclipse.jgit.lib.ObjectId>) {\n            org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.lookupOrNull(org.eclipse.jgit.lib.ObjectId);\n            if ((((org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) && (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))) && (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag.org.eclipse.jgit.revwalk.RevFlag)))) && (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag)))) {\n                org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlag);\n                org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject, 0);\n            } \n        }\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[4,3,0,1,2,6,7,5],"tindex":"6e1f07e3-c825-11e4-abcb-fbcb5f8f659b","variableMapping":{"n":"rawPath"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1)).trim()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:242","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.regex.Matcher.group(4)"},"status":-1},{"failures":[],"tindex":"6e1f07e4-c825-11e4-abcb-01d8a6f9b2b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,0,1,2,4,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,5,3,92,93,94,95,96,97,98,99,100,101,102,102,103,103,104,104,105,106,107],"tindex":"6e1f07e5-c825-11e4-abcb-a1a3453d5e3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n    if (!(java.util.Set<java.lang.String>.isEmpty())) {\n        java.lang.StringBuilder.append('\u0000');\n        for (final java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n            java.lang.StringBuilder.append(' ');\n            java.lang.StringBuilder.append(java.lang.String);\n        }\n        java.lang.StringBuilder.append(' ');\n    } \n} "},"status":-1},{"failures":[3,4,108,0,1,2,5],"tindex":"6e1f07e6-c825-11e4-abcb-492f00919179","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.BlockList:236","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.BlockList<T>.set((int + 1), org.eclipse.jgit.util.BlockList<T>.get(int))"},"status":-1},{"failures":[],"tindex":"6e1f07e7-c825-11e4-abcb-4903fce68109","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:256","type":"CtLocalVariableImpl","sourcecode":"long long = 12"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:528","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":79,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":74,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":21,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":73,"org.eclipse.jgit.api.FetchCommandTest.testFetch":66,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":31,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":53,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":28,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":96,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":86,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":8,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":47,"org.eclipse.jgit.util.BlockListTest.testAddSlowPath":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":84,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":62,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":100,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":27,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":52,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":33,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":43,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":90,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":16,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":14,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":106,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":49,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath":6,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":97,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":81,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":99,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":87,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":46,"org.eclipse.jgit.api.GitConstructionTest.testWrap":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":78,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":35,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":64,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":34,"org.eclipse.jgit.api.GitConstructionTest.testOpen":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":30,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":101,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":88,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":65,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":93,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":58,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":55,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":67,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":70,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":9,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":17,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":80,"org.eclipse.jgit.api.GitConstructionTest.testClose":102,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":95,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":57,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":41,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":98,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":7,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":105,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":85,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":107,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":45,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":72,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":61,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":94,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":39,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":60,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":71,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":20,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":77,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":23,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":48,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":63,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":89,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":92,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":37}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
