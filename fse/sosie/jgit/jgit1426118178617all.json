[{"failures":[0,1,2,3,4,5,6,7],"tindex":"35fb8ade-c84a-11e4-b5f8-45f71baec309","variableMapping":{"in":"in"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:419","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:1091","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    long long = java.io.InputStream.skip((1 << 20));\n    if (long <= 0)\n        break;\n    \n    long += long;\n}"},"status":-1},{"failures":[0,1,2,5,3,7,8,9],"tindex":"35fb8adf-c84a-11e4-b5f8-5371874ee45b","variableMapping":{"forceUpdate":"first","sb":"r"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TrackingRefUpdate:212","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\" (forced)\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:266","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.AbstractMap<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n    if (boolean)\n        boolean = false;\n    else\n        java.lang.StringBuilder.append(\", \");\n    \n    java.lang.StringBuilder.append(org.eclipse.jgit.lib.Ref);\n}"},"status":-1},{"failures":[],"tindex":"35fb8ae0-c84a-11e4-b5f8-2f82f1817e88","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.Base64:267","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(int * 3) / 4]"},"status":-2},{"failures":[],"tindex":"35fb8ae1-c84a-11e4-b5f8-6d64b3aa42ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:473","type":"CtAssignmentImpl","sourcecode":"int = (int * 31) + (org.eclipse.jgit.transport.RefSpec.getDestination().hashCode())"},"status":-2},{"failures":[0,1,2,5,3,7,10,11,12,13],"tindex":"35fb8ae2-c84a-11e4-b5f8-8f1ae84c5fe9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:156","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-1},{"failures":[],"tindex":"35fb8ae3-c84a-11e4-b5f8-818cbb2cf439","variableMapping":{"blkEnd":"delta","end":"delta"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:375","type":"CtIfImpl","sourcecode":"if (int <= int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:315","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException(int);\n"},"status":-2},{"failures":[],"tindex":"35fb8ae4-c84a-11e4-b5f8-3bc85dc6385d","variableMapping":{"childCnt":"p"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:516","type":"CtLocalVariableImpl","sourcecode":"final int int = --(int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:358","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.byte[][byte[][(int + 7)]]"},"status":-2},{"failures":[],"tindex":"35fb8ae5-c84a-11e4-b5f8-8d966b260fa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RenameDetector:574","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.util.List<org.eclipse.jgit.diff.DiffEntry> java.util.List<org.eclipse.jgit.diff.DiffEntry> = ((java.util.List<org.eclipse.jgit.diff.DiffEntry>)(java.lang.Object));\n    long[] long[] = new long[(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) * (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size())];\n    int int = 0;\n    for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) ; int++) {\n        java.lang.String java.lang.String = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int).java.lang.String;\n        for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) ; int++) {\n            java.lang.String java.lang.String = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int).java.lang.String;\n            int int = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.nameScore(java.lang.String, java.lang.String);\n            long[][int] = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int);\n            int++;\n        }\n    }\n    java.util.Arrays.java.util.Arrays.sort(long[]);\n    for (--int ; int >= 0 ; int--) {\n        long long = long[][int];\n        int int = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.srcFile(long);\n        int int = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.dstFile(long);\n        org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int);\n        org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int);\n        if (org.eclipse.jgit.diff.DiffEntry == null) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            continue;\n        } \n        org.eclipse.jgit.diff.DiffEntry.ChangeType org.eclipse.jgit.diff.DiffEntry.ChangeType;\n        if ((org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.ChangeType) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType)) {\n            org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n            org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n        } else {\n            org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n        }\n        java.util.List<org.eclipse.jgit.diff.DiffEntry>.add(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.pair(org.eclipse.jgit.diff.DiffEntry.ChangeType, org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, 100));\n        java.util.List<org.eclipse.jgit.diff.DiffEntry>.set(int, null);\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    }\n} else {\n    java.util.ArrayList<org.eclipse.jgit.diff.DiffEntry>.addAll(java.util.List<org.eclipse.jgit.diff.DiffEntry>);\n}"},"status":-2},{"failures":[],"tindex":"35fb8ae6-c84a-11e4-b5f8-1fa39bfc3af6","variableMapping":{"str":"tip","org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH":"distance"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectId:231","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != (org.eclipse.jgit.lib.Constants.int))\n    throw new java.lang.IllegalArgumentException((\"Invalid id: \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:155","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParentCount()) ; int++) {\n    org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParent(int))));\n    long long = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long) + (int > 0 ? int : 1);\n    if (((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) == null) || (org.eclipse.jgit.api.NameRevCommand.(compare(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, long, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long)) < 0)) {\n        if (int > 0) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().append('^').append((int + 1)).toString();\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = 0;\n        } else {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String;\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1;\n        }\n        org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long = long;\n        org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.api.NameRevCommand.NameRevCommit);\n    } \n}"},"status":-2},{"failures":[],"tindex":"35fb8ae7-c84a-11e4-b5f8-a1340df4d41a","variableMapping":{"sz":"threads","org.eclipse.jgit.notes.LeafBucket.MAX_SIZE":"threads"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:201","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.notes.LeafBucket.int) < int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2415","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = java.lang.Runtime.java.lang.Runtime.getRuntime().availableProcessors();\n"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":11,"org.eclipse.jgit.util.RefMapTest.testToString_WithPrefix":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":7,"org.eclipse.jgit.util.RefMapTest.testToString_NoPrefix":9,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":6,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":12,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
