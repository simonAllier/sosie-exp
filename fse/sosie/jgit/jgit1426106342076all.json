[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"a6da6a13-c82e-11e4-9c9b-a90a477e3276","variableMapping":{"repo":"db"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:276","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.writeMergeHeads(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:167","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.eclipse.jgit.lib.RepositoryCache.lockFor(org.eclipse.jgit.lib.RepositoryCache.Key)) {\n    java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> = java.util.concurrent.ConcurrentHashMap<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.get(org.eclipse.jgit.lib.RepositoryCache.Key);\n    org.eclipse.jgit.lib.Repository = java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> != null ? java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>.get() : null;\n    if (org.eclipse.jgit.lib.Repository == null) {\n        org.eclipse.jgit.lib.Repository = org.eclipse.jgit.lib.RepositoryCache.Key.open(boolean);\n        java.lang.ref.Reference<org.eclipse.jgit.lib.Repository> = new java.lang.ref.SoftReference<org.eclipse.jgit.lib.Repository>(org.eclipse.jgit.lib.Repository);\n        java.util.concurrent.ConcurrentHashMap<org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>>.put(org.eclipse.jgit.lib.RepositoryCache.Key, java.lang.ref.Reference<org.eclipse.jgit.lib.Repository>);\n    } \n}"},"status":-1},{"failures":[],"tindex":"a6da6a14-c82e-11e4-9c9b-b157be9a24a7","variableMapping":{"l":"len"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:489","type":"CtIfImpl","sourcecode":"if (int < 1)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:274","type":"CtWhileImpl","sourcecode":"while (0 < int) {\n    int int = java.nio.channels.ReadableByteChannel.read(java.nio.ByteBuffer.java.nio.ByteBuffer.wrap(byte[], int, int));\n    if (int <= 0)\n        break;\n    \n    int += int;\n    int -= int;\n    int += int;\n}"},"status":-2},{"failures":[5,1,2,3,4,19],"tindex":"a6da6a15-c82e-11e4-9c9b-9f4ca6524d4b","variableMapping":{"m":"p"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:536","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.CanonicalTreeParser == null ? null : org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeFormatter:356","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode()"},"status":-1},{"failures":[],"tindex":"a6da6a16-c82e-11e4-9c9b-0dfaed749049","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:324","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.Attribute:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[5,1,2,3,19,4],"tindex":"a6da6a17-c82e-11e4-9c9b-6b7d6d464929","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:310","type":"CtUnaryOperatorImpl","sourcecode":"~((int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int))"},"status":-1},{"failures":[21,22,23,24,25,1,2,3,5,4,19],"tindex":"a6da6a18-c82e-11e4-9c9b-f3244bb020f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:509","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.BufferedInputStream, byte[], 0, byte[].int)"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,1,2,3,36,37,5,38,39,4,19],"tindex":"a6da9129-c82e-11e4-9c9b-c7f266977983","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:137","type":"CtIfImpl","sourcecode":"if (((int) == 0) || ((int) < (int)))\n    java.io.OutputStream.write(byte[], 0, int);\n"},"status":-1},{"failures":[1,2,3,19,4,5],"tindex":"a6da912a-c82e-11e4-9c9b-57eef2f78834","variableMapping":{"commitMessage":"name"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.hooks.CommitMsgHook:86","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:208","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".pack\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())));\n"},"status":-1},{"failures":[1,2,3,5,19,4],"tindex":"a6da912b-c82e-11e4-9c9b-d144a3f363a9","variableMapping":{"org.eclipse.jgit.treewalk.AbstractTreeIterator.zeroid":"org.eclipse.jgit.treewalk.AbstractTreeIterator.zeroid","submoduleRepo":"repository"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:328","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository == null)\n    return org.eclipse.jgit.treewalk.AbstractTreeIterator.byte[];\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:304","type":"CtTryImpl","sourcecode":"try {\n    java.io.File = org.eclipse.jgit.lib.Repository.getWorkTree();\n} catch (org.eclipse.jgit.errors.NoWorkTreeException org.eclipse.jgit.errors.NoWorkTreeException) {\n    return org.eclipse.jgit.treewalk.AbstractTreeIterator.byte[];\n}"},"status":-1},{"failures":[5,1,2,3,19,4,40],"tindex":"a6da912c-c82e-11e4-9c9b-9d945a8de608","variableMapping":{"this":"dco"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:409","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeCommand:359","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_InsertFrontFails":28,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":32,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":31,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":21,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":15,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails":33,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":20,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":16,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":9,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":23,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":6,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":29,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":39,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":30,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":37,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":36,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":26,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":19,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":35,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":22,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":24}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
