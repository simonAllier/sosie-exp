[{"failures":[],"tindex":"693947f3-c85e-11e4-87aa-3594e6e32183","variableMapping":{"otp":"otp"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:464","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setOffset(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:535","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n    try {\n        org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation = org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n        if (org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation != null)\n            org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation);\n        \n    } catch (org.eclipse.jgit.errors.PackMismatchException org.eclipse.jgit.errors.PackMismatchException) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacks(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList);\n        continue SEARCH;\n    } catch (java.io.IOException java.io.IOException) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile);\n    }\n}"},"status":-2},{"failures":[],"tindex":"69396f04-c85e-11e4-87aa-37abce9d7dff","variableMapping":{"r":"entry","offset":"offset"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:346","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.long = long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:255","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.long = org.eclipse.jgit.util.NB.org.eclipse.jgit.util.NB.decodeUInt32(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"69396f05-c85e-11e4-87aa-f39818ec4968","variableMapping":{"sz":"nextPosition","org.eclipse.jgit.notes.LeafBucket.MAX_SIZE":"end"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:201","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.notes.LeafBucket.int) < int)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:107","type":"CtWhileImpl","sourcecode":"while (com.googlecode.javaewah.IntIterator.hasNext()) {\n    int = com.googlecode.javaewah.IntIterator.next();\n    if (int < (int))\n        break;\n    \n    int int = org.eclipse.jgit.internal.storage.file.InflatingBitSet.org.eclipse.jgit.internal.storage.file.InflatingBitSet.block(int);\n    long long = org.eclipse.jgit.internal.storage.file.InflatingBitSet.org.eclipse.jgit.internal.storage.file.InflatingBitSet.mask(int);\n    if (int == int) {\n        long |= long;\n    } else {\n        long[][int] = long;\n        int = int;\n        long = long;\n    }\n}"},"status":-2},{"failures":[],"tindex":"69396f06-c85e-11e4-87aa-438ae6292606","variableMapping":{"sz":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT","ptr":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:402","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in object id\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:265","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.revwalk.RevCommit)) {\n    for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.getParents())\n        org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.Constants.int);\n} "},"status":-2},{"failures":[],"tindex":"69396f07-c85e-11e4-87aa-1faea7786c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1411","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"ng \")"},"status":-2},{"failures":[],"tindex":"69396f08-c85e-11e4-87aa-bfd0a96a1bb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:363","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ByteWindow = org.eclipse.jgit.internal.storage.file.WindowCache.scan(org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.PackFile, long)"},"status":-2},{"failures":[],"tindex":"69396f09-c85e-11e4-87aa-2b987134cc67","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:160","type":"CtLocalVariableImpl","sourcecode":"final int int = 24 * 3600"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:325","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"69396f0a-c85e-11e4-87aa-ddfcb0eb6e37","variableMapping":{"index":"i","filters":"subfilters"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.TreeFilterMarker:115","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.TreeFilter[][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.OrTreeFilter:179","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.TreeFilter[][int] = org.eclipse.jgit.treewalk.filter.TreeFilter[][int].clone()"},"status":-2},{"failures":[],"tindex":"69396f0b-c85e-11e4-87aa-75a3c45ffc01","variableMapping":{"onDiskFile":"rewrittenDir"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:479","type":"CtIfImpl","sourcecode":"if ((java.io.File) != null) {\n    try {\n        if (!(java.io.File.delete()))\n            java.io.File.deleteOnExit();\n        \n    } finally {\n        java.io.File = null;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:1150","type":"CtWhileImpl","sourcecode":"pickLoop : while (java.util.Iterator<org.eclipse.jgit.revwalk.RevCommit>.hasNext()) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = java.util.Iterator<org.eclipse.jgit.revwalk.RevCommit>.next();\n    for (int int = 0 ; int < (org.eclipse.jgit.revwalk.RevCommit.getParentCount()) ; int++) {\n        boolean boolean = new java.io.File(java.io.File , org.eclipse.jgit.revwalk.RevCommit.getParent(int).getName()).exists();\n        if (boolean) {\n            new java.io.File(java.io.File , org.eclipse.jgit.revwalk.RevCommit.getName()).createNewFile();\n            continue pickLoop;\n        } \n    }\n    java.util.Iterator<org.eclipse.jgit.revwalk.RevCommit>.remove();\n}"},"status":-2},{"failures":[],"tindex":"6939961c-c85e-11e4-87aa-516230a52df2","variableMapping":{"repo":"repository"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddCommand:146","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.Repository)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:964","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.Repository)"},"status":-2},{"failureDictionary":{}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
