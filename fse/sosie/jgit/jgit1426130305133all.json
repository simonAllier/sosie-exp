[{"failures":[0,1,2,3,4,5],"tindex":"71fd9161-c866-11e4-bf8b-45a6b3718261","variableMapping":{"oldIncore":"all","inCore":"all"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:210","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:689","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"71fdb872-c866-11e4-bf8b-65e0a67ff9a6","variableMapping":{"cur":"nrOfConflicts","end":"nrOfConflicts"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:151","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.MergeResult:432","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.merge.MergeChunk org.eclipse.jgit.merge.MergeChunk : org.eclipse.jgit.merge.MergeResult<?>) {\n    if (org.eclipse.jgit.merge.MergeChunk.getConflictState().equals(org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)) {\n        int++;\n    } \n}"},"status":-2},{"failures":[1,2,3,0,4,5],"tindex":"71fdb873-c866-11e4-bf8b-2775a9f88276","variableMapping":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"k","carry":"beginA"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:160","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:224","type":"CtAssignmentImpl","sourcecode":"this.int = org.eclipse.jgit.diff.MyersDiff<S>.MiddleEdit.EditPaths.snake(int, int)"},"status":-1},{"failures":[1,2,3,0,4,5],"tindex":"71fdb874-c866-11e4-bf8b-d3305c354baa","variableMapping":{"w":"w"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.CommitBuilder:281","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.flush()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:184","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.TagBuilder.(getMessage()) != null)\n    java.io.OutputStreamWriter.write(org.eclipse.jgit.lib.TagBuilder.getMessage());\n"},"status":-1},{"failures":[6,7,8,9,1,2,3,5,0,10,4,11,12],"tindex":"71fdb875-c866-11e4-bf8b-a5bd489c5602","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFilter:167","type":"CtReturnImpl","sourcecode":"return \"NO_MERGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:959","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(java.nio.ByteBuffer, java.nio.charset.Charset);\n} catch (java.nio.charset.CharacterCodingException java.nio.charset.CharacterCodingException) {\n    java.nio.ByteBuffer.reset();\n}"},"status":-1},{"failures":[1,2,3,4,13,14,15,16,17,18,5,0],"tindex":"71fdb876-c866-11e4-bf8b-c3ae5ed1ea7c","variableMapping":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH":"mNext","ptr":"mNext"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:194","type":"CtReturnImpl","sourcecode":"return int + (org.eclipse.jgit.lib.Constants.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:319","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"71fdb877-c866-11e4-bf8b-114054aeb058","variableMapping":{"bs":"end","wantSize":"eol"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:325","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:150","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n    break;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.CombinedFileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[1,2,3,0,4,5],"tindex":"71fdb878-c866-11e4-bf8b-118fab7e2a8b","variableMapping":{"name":"current","org.eclipse.jgit.lib.Constants.HEAD":"path"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:602","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\"))\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.ContentSource:201","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String))) {\n    org.eclipse.jgit.treewalk.WorkingTreeIterator.reset();\n    org.eclipse.jgit.treewalk.TreeWalk.reset();\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilter.org.eclipse.jgit.treewalk.filter.PathFilter.create(java.lang.String));\n    java.lang.String = java.lang.String;\n    if (!(org.eclipse.jgit.treewalk.TreeWalk.next()))\n        throw new java.io.FileNotFoundException(java.lang.String);\n    \n    org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator) == null)\n        throw new java.io.FileNotFoundException(java.lang.String);\n    \n} "},"status":-1},{"failures":[1,2,3,4,0,5],"tindex":"71fdb879-c866-11e4-bf8b-f15ccc35a50c","variableMapping":{"conn":"conn"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:885","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.http.HttpConnection.getInputStream().close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:565","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.HttpAuthMethod.configureRequest(org.eclipse.jgit.transport.http.HttpConnection)"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"71fdb87a-c866-11e4-bf8b-293538452b62","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:86","type":"CtReturnImpl","sourcecode":"return \"Fast-forward-squashed\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:299","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":7,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":16,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":6,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":11,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":14,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":13,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":18,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded":9,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":15,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":5,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":12,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":17}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
