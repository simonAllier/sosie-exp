[{"failures":[],"tindex":"4fd7e653-c852-11e4-8fc1-2df8e1b0f932","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuildIterator:112","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId() , org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"4fd7e654-c852-11e4-8fc1-6f877866da8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:338","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.io.ByteArrayOutputStream.toByteArray()"},"status":-2},{"failures":[],"tindex":"4fd7e655-c852-11e4-8fc1-6779f4151433","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:650","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ConfigSnapshot org.eclipse.jgit.lib.ConfigSnapshot"},"status":-2},{"failures":[],"tindex":"4fd7e656-c852-11e4-8fc1-5b1893665a52","variableMapping":{"next":"next","b":"next"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:104","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:106","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"4fd7e657-c852-11e4-8fc1-d7190f1c2031","variableMapping":{"fileMode":"heads","off":"heads","on":"heads"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:300","type":"CtAssignmentImpl","sourcecode":"boolean = boolean && (!boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LsRemoteCommand:116","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"4fd7e658-c852-11e4-8fc1-470f28360de6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:254","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid committer\")"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,4,3,90,91,92,5,6,7],"tindex":"4fd7e659-c852-11e4-8fc1-25e9c523385b","variableMapping":{"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars":"org.eclipse.jgit.patch.FileHeader.DISSIMILARITY_INDEX"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:107","type":"CtForImpl","sourcecode":"for (char char = 'a' ; char <= 'z' ; char++)\n    org.eclipse.jgit.util.RawParseUtils.byte[][char] = 1;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:434","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"4fd7e65a-c852-11e4-8fc1-efd8644da03b","variableMapping":{"add":"e","entry":"e","newId":"newId"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffEntry:289","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.AbbreviatedObjectId = org.eclipse.jgit.diff.DiffEntry.getNewId()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffEntry:246","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.AbbreviatedObjectId = org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.AbbreviatedObjectId"},"status":-2},{"failures":[],"tindex":"4fd80d6b-c852-11e4-8fc1-6b6e8e978364","variableMapping":{"local":"dstRef"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:385","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate:135","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase().removed(org.eclipse.jgit.lib.Ref.getName())"},"status":-2},{"failures":[0,3,4,5,6,7],"tindex":"4fd80d6c-c852-11e4-8fc1-8513af3dcc47","variableMapping":{"ptr":"maxWork"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:569","type":"CtOperatorAssignmentImpl","sourcecode":"int += 46"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:110","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice.size()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":55,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":2,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":71,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":78,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":75,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":74,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":60,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":89,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":91,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":88,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":16,"org.eclipse.jgit.patch.EditListTest.testTypes":81,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":53,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":1,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":50,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":40,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":43,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":58,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":80,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":65,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":85,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":23,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":86,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":92,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":17,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":56,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":21,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":34,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":68,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":35,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":84,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":79,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew":9,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":41,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld":10,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":42,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":4,"org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong":13,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNegativeContextFails":30,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":12,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":15,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":31,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":8,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":28,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":54,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":22,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":19,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":69,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":46,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":47,"org.eclipse.jgit.patch.EditListTest.testFileHeader":83,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":44,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":48,"org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary":90,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":67,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":45,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":18,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange":26,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":32,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":77,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":29,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":66,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":33,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":27,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":20,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":82,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":36,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":62,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":25,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":49,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":87,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":37,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":61,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":72,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":38,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":70,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":51,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":73,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":57}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
