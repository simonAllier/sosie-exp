[{"failures":[],"tindex":"634b2867-c831-11e4-ad63-5527a1e43fc2","variableMapping":{"org.eclipse.jgit.lib.Constants.DEFAULT_REMOTE_NAME":"stdinArgs","remote":"stdinArgs"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:218","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS:836","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    final java.io.PrintWriter java.io.PrintWriter = new java.io.PrintWriter(java.lang.Process.getOutputStream());\n    java.io.PrintWriter.print(java.lang.String);\n    java.io.PrintWriter.flush();\n    java.io.PrintWriter.close();\n} "},"status":-2},{"failures":[],"tindex":"634b2868-c831-11e4-ad63-2d85485b031e","variableMapping":{"pkt":"refName"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:190","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf('\\r')"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:247","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.lastIndexOf('/')"},"status":-2},{"failures":[],"tindex":"634b2869-c831-11e4-ad63-21359e218920","variableMapping":{"depth":"length","org.eclipse.jgit.lib.RefDatabase.MAX_SYMBOLIC_REF_DEPTH":"length"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:152","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.RefDatabase.int) <= int)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:106","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String;\n    java.lang.String java.lang.String;\n    if ((org.eclipse.jgit.lib.Repository.getRef(java.lang.String)) != null)\n        throw new org.eclipse.jgit.api.errors.RefAlreadyExistsException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    if ((java.lang.String) != null) {\n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n        if (org.eclipse.jgit.lib.Ref == null)\n            throw new org.eclipse.jgit.api.errors.RefNotFoundException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n        \n        if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n            throw new org.eclipse.jgit.api.errors.RefNotFoundException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n        \n        java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n    } else {\n        java.lang.String = org.eclipse.jgit.lib.Repository.getFullBranch();\n        if (org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n            throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n        \n    }\n    if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n        java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n    else {\n        java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n    }\n    if (!org.eclipse.jgit.lib.Repository.(org.eclipse.jgit.lib.Repository.isValidRefName(java.lang.String)))\n        throw new org.eclipse.jgit.api.errors.InvalidRefNameException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    org.eclipse.jgit.lib.RefRename org.eclipse.jgit.lib.RefRename = org.eclipse.jgit.lib.Repository.renameRef(java.lang.String, java.lang.String);\n    org.eclipse.jgit.lib.RefUpdate.Result org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefRename.rename();\n    org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.lib.Ref>.setCallable(false);\n    if ((org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result) != org.eclipse.jgit.lib.RefUpdate.Result)\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.RefUpdate.Result.name()));\n    \n    if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n        java.lang.String java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n        final org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n        for (java.lang.String java.lang.String : org.eclipse.jgit.lib.StoredConfig.getNames(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String)) {\n            java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.StoredConfig.getStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String);\n            if ((java.lang.String[].int) == 0)\n                continue;\n            \n            java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.StoredConfig.getStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String);\n            if ((java.lang.String[].int) > 0) {\n                java.lang.String[] java.lang.String[] = new java.lang.String[(java.lang.String[].int) + (java.lang.String[].int)];\n                java.lang.System.java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], 0, java.lang.String[].int);\n                java.lang.System.java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], java.lang.String[].int, java.lang.String[].int);\n                java.lang.String[] = java.lang.String[];\n            } \n            org.eclipse.jgit.lib.StoredConfig.setStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String, java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n        }\n        org.eclipse.jgit.lib.StoredConfig.unsetSection(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        org.eclipse.jgit.lib.StoredConfig.save();\n    } \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    if (org.eclipse.jgit.lib.Ref == null)\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    return org.eclipse.jgit.lib.Ref;\n} catch (java.io.IOException java.io.IOException) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"634b4f7a-c831-11e4-ad63-cdc6d6e2ea60","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:736","type":"CtReturnImpl","sourcecode":"return ((B)(this))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder:96","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.self()"},"status":-2},{"failures":[],"tindex":"634b4f7b-c831-11e4-ad63-cde86036517c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:736","type":"CtReturnImpl","sourcecode":"return ((B)(this))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:535","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.self()"},"status":-2},{"failures":[],"tindex":"634b4f7c-c831-11e4-ad63-b72fc69449fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:295","type":"CtIfImpl","sourcecode":"if (!(java.util.LinkedList<java.lang.String>.isEmpty())) {\n    java.lang.String java.lang.String = java.util.LinkedList<java.lang.String>.getLast();\n    while ((!(java.util.LinkedList<java.lang.String>.isEmpty())) && (java.util.LinkedList<java.lang.String>.getLast().startsWith(java.lang.String)))\n        java.util.LinkedList<java.lang.String>.removeLast();\n    java.util.LinkedList<java.lang.String>.addLast(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"634b4f7d-c831-11e4-ad63-c31c2da6390b","variableMapping":{"eol":"lasta","end":"k"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:346","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    return -1;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:117","type":"CtIfImpl","sourcecode":"if (int > int)\n    return 1;\nelse if (int == (int - 1))\n    return 0;\nelse\n    return 1;\n"},"status":-2},{"failures":[],"tindex":"634b4f7e-c831-11e4-ad63-71098b205fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:225","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    } else if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"634b4f7f-c831-11e4-ad63-3f14d98c0a9d","variableMapping":{"this":"o","o":"o"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:280","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.eclipse.jgit.lib.AnyObjectId)\n    return org.eclipse.jgit.lib.AnyObjectId.equals(((org.eclipse.jgit.lib.AnyObjectId)(java.lang.Object)));\nelse\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RepositoryCache:333","type":"CtReturnImpl","sourcecode":"return (java.lang.Object instanceof org.eclipse.jgit.lib.RepositoryCache.FileKey) && (java.io.File.equals(((org.eclipse.jgit.lib.RepositoryCache.FileKey)(java.lang.Object)).java.io.File))"},"status":-2},{"failures":[],"tindex":"634b4f80-c831-11e4-ad63-d37e95daac19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:184","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"status":-2},{"failureDictionary":{}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
