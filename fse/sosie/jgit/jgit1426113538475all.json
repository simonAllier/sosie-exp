[{"failures":[0,1,2,3,4,5],"tindex":"68447831-c83f-11e4-991c-3d38791130c1","variableMapping":{"deltaPtr":"ptr","copySize":"ptr","delta":"array","cmd":"cnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:187","type":"CtIfImpl","sourcecode":"if ((int & 16) != 0)\n    int = (byte[][int++]) & 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ByteArrayWindow:91","type":"CtIfImpl","sourcecode":"if (java.security.MessageDigest != null)\n    java.security.MessageDigest.update(byte[], int, int);\n"},"status":-1},{"failures":[0,1,3,4,5,6,2],"tindex":"68449f42-c83f-11e4-991c-af0fab645cc6","variableMapping":{"p":"position","size":"position","limit":"position"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:239","type":"CtIfImpl","sourcecode":"if (((int) != 0) && ((int) < ((int) + int)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitmapIndexImpl:205","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.contains(int))\n    return false;\n"},"status":-1},{"failures":[1,0,3,4,5,2],"tindex":"68449f43-c83f-11e4-991c-f3db90e02dcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:372","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BasePackFetchConnection.close()"},"status":-1},{"failures":[],"tindex":"68449f44-c83f-11e4-991c-ffb8192108ce","variableMapping":{"newComment":"cannotStoreObjects","comment":"pathPack"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoLine:217","type":"CtIfImpl","sourcecode":"if (((java.lang.String.trim().length()) == 0) || (java.lang.String.startsWith(\"#\"))) {\n    this.java.lang.String = java.lang.String;\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.WalkPushConnection:225","type":"CtTryImpl","sourcecode":"try {\n    final java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    final java.util.Set<org.eclipse.jgit.lib.ObjectId> java.util.Set<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>)\n        java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId());\n    for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : org.eclipse.jgit.transport.BaseConnection.getRefs()) {\n        java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getObjectId());\n        if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n            java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.Ref.getPeeledObjectId());\n        \n    }\n    org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    if ((org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectCount()) == 0)\n        return ;\n    \n    java.util.LinkedHashMap<java.lang.String, java.lang.String> = new java.util.LinkedHashMap<java.lang.String, java.lang.String>();\n    for (final java.lang.String java.lang.String : org.eclipse.jgit.transport.WalkRemoteObjectDatabase.getPackNames())\n        java.util.LinkedHashMap<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n    final java.lang.String java.lang.String = \"pack-\" + (org.eclipse.jgit.internal.storage.pack.PackWriter.computeName().name());\n    final java.lang.String java.lang.String = java.lang.String + \".pack\";\n    java.lang.String = \"pack/\" + java.lang.String;\n    java.lang.String = (\"pack/\" + java.lang.String) + \".idx\";\n    if ((java.util.LinkedHashMap<java.lang.String, java.lang.String>.remove(java.lang.String)) != null) {\n        org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeInfoPacks(java.util.LinkedHashMap<java.lang.String, java.lang.String>.keySet());\n        org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteFile(java.lang.String);\n    } \n    final java.lang.String java.lang.String = \"Put \" + (java.lang.String.substring(0, 12));\n    java.io.OutputStream java.io.OutputStream = org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, (java.lang.String + \"..pack\"));\n    try {\n        java.io.OutputStream = new org.eclipse.jgit.util.io.SafeBufferedOutputStream(java.io.OutputStream);\n        org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n    } finally {\n        java.io.OutputStream.close();\n    }\n    java.io.OutputStream = org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, (java.lang.String + \"..idx\"));\n    try {\n        java.io.OutputStream = new org.eclipse.jgit.util.io.SafeBufferedOutputStream(java.io.OutputStream);\n        org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream);\n    } finally {\n        java.io.OutputStream.close();\n    }\n    final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    java.util.ArrayList<java.lang.String>.add(java.lang.String);\n    java.util.ArrayList<java.lang.String>.addAll(java.util.LinkedHashMap<java.lang.String, java.lang.String>.keySet());\n    org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeInfoPacks(java.util.ArrayList<java.lang.String>);\n} catch (java.io.IOException java.io.IOException) {\n    org.eclipse.jgit.transport.WalkPushConnection.safeDelete(java.lang.String);\n    org.eclipse.jgit.transport.WalkPushConnection.safeDelete(java.lang.String);\n    throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-2},{"failures":[],"tindex":"68449f45-c83f-11e4-991c-893305bfbe1f","variableMapping":{"cs":"defcs","b":"b","this":"this","org.eclipse.jgit.lib.Constants.CHARSET":"org.eclipse.jgit.lib.Constants.CHARSET"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:955","type":"CtIfImpl","sourcecode":"if (!(java.nio.charset.Charset.equals(org.eclipse.jgit.lib.Constants.java.nio.charset.Charset))) {\n    try {\n        return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(java.nio.ByteBuffer, java.nio.charset.Charset);\n    } catch (java.nio.charset.CharacterCodingException java.nio.charset.CharacterCodingException) {\n        java.nio.ByteBuffer.reset();\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:970","type":"CtIfImpl","sourcecode":"if ((!(java.nio.charset.Charset.equals(java.nio.charset.Charset))) && (!(java.nio.charset.Charset.equals(org.eclipse.jgit.lib.Constants.java.nio.charset.Charset)))) {\n    try {\n        return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(java.nio.ByteBuffer, java.nio.charset.Charset);\n    } catch (java.nio.charset.CharacterCodingException java.nio.charset.CharacterCodingException) {\n        java.nio.ByteBuffer.reset();\n    }\n} "},"status":-2},{"failures":[1,3,4,5,0,2],"tindex":"68449f46-c83f-11e4-991c-d969f38ba95d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:677","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Checking out ours/theirs is only possible when checking out index, \" + \"not when switching branches.\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:361","type":"CtThrowImpl","sourcecode":"throw org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.TableFullException"},"status":-1},{"failures":[7,0,1,2,3,4,5],"tindex":"68449f47-c83f-11e4-991c-9bb40ccaa552","variableMapping":{"a":"info","cPos":"infoOffset"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:98","type":"CtReturnImpl","sourcecode":"return ((byte[][int]) & 255) - '/'"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:728","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.NB.(org.eclipse.jgit.util.NB.decodeUInt16(byte[], ((int) + (org.eclipse.jgit.dircache.DirCacheEntry.int)))) << 16"},"status":-1},{"failures":[],"tindex":"68449f48-c83f-11e4-991c-875ad5f03373","variableMapping":{"result":"org.eclipse.jgit.api.RebaseResult.NOTHING_TO_COMMIT_RESULT"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1350","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.RebaseResult"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:346","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.RebaseResult.org.eclipse.jgit.api.RebaseResult"},"status":-2},{"failures":[],"tindex":"68449f49-c83f-11e4-991c-b5334e590254","variableMapping":{"n":"levels"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:471","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:589","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int)"},"status":-2},{"failures":[1,8,0,2,3,4,5],"tindex":"68449f4a-c83f-11e4-991c-cf38300c681f","variableMapping":{"headIndex":"idx"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:144","type":"CtUnaryOperatorImpl","sourcecode":"--(int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.diff.SimilarityIndex.packedIndex(int)"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":6,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":7,"org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingSmallObject":8,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
