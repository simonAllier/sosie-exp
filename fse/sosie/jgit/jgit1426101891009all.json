[{"failures":[],"tindex":"4a76926b-c824-11e4-b86c-612546edd515","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteParser:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.notes.NoteParser.storeNonNote()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:301","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry()"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"4a76926c-c824-11e4-b86c-3dcdc8cae7d2","variableMapping":{"data":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:722","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:259","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((((\"DELTA( BASE=\" + long) + \" RESULT=\") + long) + \" )\\n\"))"},"status":-1},{"failures":[],"tindex":"4a76926d-c824-11e4-b86c-49b0fb63a34f","variableMapping":{"org.eclipse.jgit.lib.Constants.OBJ_TAG":"org.eclipse.jgit.revwalk.RevWalk.APP_FLAGS","type":"freeFlags"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2088","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.lib.Constants.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:413","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevWalk.finishDelayedFreeFlags();\n    org.eclipse.jgit.revwalk.RevWalk.reset(((~(int)) & (org.eclipse.jgit.revwalk.RevWalk.int)));\n    org.eclipse.jgit.revwalk.filter.RevFilter = org.eclipse.jgit.revwalk.filter.RevFilter.org.eclipse.jgit.revwalk.filter.RevFilter;\n    org.eclipse.jgit.treewalk.filter.TreeFilter = org.eclipse.jgit.treewalk.filter.TreeFilter.org.eclipse.jgit.treewalk.filter.TreeFilter;\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit;\n    while ((org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next()) != null)\n        if (org.eclipse.jgit.revwalk.RevCommit == org.eclipse.jgit.revwalk.RevCommit)\n            return true;\n        \n    return false;\n} finally {\n    org.eclipse.jgit.revwalk.filter.RevFilter = org.eclipse.jgit.revwalk.filter.RevFilter;\n    org.eclipse.jgit.treewalk.filter.TreeFilter = org.eclipse.jgit.treewalk.filter.TreeFilter;\n}"},"status":-2},{"failures":[],"tindex":"4a76b97e-c824-11e4-b86c-9f175a5dc7c7","variableMapping":{"sz":"oLine","ptr":"oLine"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:363","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:211","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.diff.Edit == null) {\n    org.eclipse.jgit.diff.Edit = new org.eclipse.jgit.diff.Edit((int - 1) , (int - 1));\n    org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit);\n} "},"status":-2},{"failures":[1,2,3,0,6,7,4,5],"tindex":"4a76b97f-c824-11e4-b86c-bf8cce713856","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CheckoutCommand:280","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-1},{"failures":[1,2,3,0,4,5],"tindex":"4a772eb0-c824-11e4-b86c-1b4d94e8ccd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:317","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, null, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.CoreConfig.SymLinks.name().toLowerCase())"},"status":-1},{"failures":[],"tindex":"4a772eb1-c824-11e4-b86c-4786c898c16e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackExt:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"maximum number of pack extensions exceeded\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:512","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(java.lang.String.java.lang.String.format(\"invalid name \\'%s\\' contains ignorable Unicode characters\", org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, int)))"},"status":-2},{"failures":[1,2,3,0,4,5],"tindex":"4a790372-c824-11e4-b86c-539696cf0348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1163","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectReader.release()"},"status":-1},{"failures":[],"tindex":"4a790373-c824-11e4-b86c-f1f3e04196c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:840","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.lib.AnyObjectId.toObjectId() , org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[1,2,3,0,4,5],"tindex":"4a790374-c824-11e4-b86c-7968873fc777","variableMapping":{"count":"insertPosition","pattern":"section"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException((\"Pattern must have at least two segments: \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:930","type":"CtWhileImpl","sourcecode":"while (int < (java.util.List<java.lang.String>.size())) {\n    final org.eclipse.jgit.lib.ConfigLine org.eclipse.jgit.lib.ConfigLine = new org.eclipse.jgit.lib.ConfigLine();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.util.List<java.lang.String>.get(int++);\n    java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(int++, org.eclipse.jgit.lib.ConfigLine);\n}"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
