[{"failures":[],"tindex":"3fe24df0-c872-11e4-a902-95b6829f01fc","variableMapping":{"lastModified":"y"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:145","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.MyersDiff:366","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"3fe27501-c872-11e4-a902-1126b968379a","variableMapping":{"delayFreeFlags":"type","carryFlags":"type","freeFlags":"type"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1190","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    int |= int;\n    int &= ~(int);\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:251","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.beginObject(int, long)"},"status":-1},{"failures":[5,0,2,3,4,1],"tindex":"3fe27502-c872-11e4-a902-478a88d7fe60","variableMapping":{"offset":"next","offset2":"next"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GitDateFormatter:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = -int;\nelse\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PackParser:1137","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.io.EOFException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[0,2,3,4,6,7,8,9,10,11,12,13,14,5,1],"tindex":"3fe27503-c872-11e4-a902-5331fe6e3d47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:299","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[2,3,4,1,5,0,15],"tindex":"3fe27504-c872-11e4-a902-9b888956a6c9","variableMapping":{"baseState":"cur","cfg":"upd"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:260","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigSnapshot = org.eclipse.jgit.lib.ConfigSnapshot.org.eclipse.jgit.lib.ConfigSnapshot"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:656","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigSnapshot = new org.eclipse.jgit.lib.ConfigSnapshot(org.eclipse.jgit.lib.ConfigSnapshot.java.util.List<org.eclipse.jgit.lib.ConfigLine> , org.eclipse.jgit.lib.ConfigSnapshot)"},"status":-1},{"failures":[],"tindex":"3fe27505-c872-11e4-a902-7fa7619724e5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteParser:156","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.LeadingAsteriskMatcher:69","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[2,3,4,5,0,16,1],"tindex":"3fe27506-c872-11e4-a902-db14ff1dc97f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:446","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(\"Could not resolve uniquely the abbreviated object ID\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:203","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.WrongRepositoryStateException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-1},{"failures":[2,3,4,1,5,0],"tindex":"3fe27507-c872-11e4-a902-f73fefd4e46d","variableMapping":{"version":"username"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:213","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"unknown\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:221","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.CredentialItem.Username.getValue()"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,2,3,4,0,52,53,5,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,1,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"3fe27508-c872-11e4-a902-cd2db0df6ff5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:325","type":"CtSwitchImpl","sourcecode":"switch (int >>> (org.eclipse.jgit.revwalk.ObjectWalk.int)) {\n    case org.eclipse.jgit.revwalk.ObjectWalk.int :\n    case org.eclipse.jgit.revwalk.ObjectWalk.int :\n        if (org.eclipse.jgit.revwalk.RevObject == null) {\n            org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevBlob(org.eclipse.jgit.lib.MutableObjectId);\n            org.eclipse.jgit.revwalk.RevObject.int = org.eclipse.jgit.revwalk.RevWalk.int;\n            org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevObject);\n            return org.eclipse.jgit.revwalk.RevObject;\n        } \n        if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n            throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.int);\n        \n        org.eclipse.jgit.revwalk.RevObject.int = int = (org.eclipse.jgit.revwalk.RevObject.int) | (org.eclipse.jgit.revwalk.RevWalk.int);\n        if ((int & (org.eclipse.jgit.revwalk.RevWalk.int)) == 0)\n            return org.eclipse.jgit.revwalk.RevObject;\n        \n        if (boolean)\n            return org.eclipse.jgit.revwalk.RevObject;\n        \n        continue;\n    case org.eclipse.jgit.revwalk.ObjectWalk.int :\n        if (org.eclipse.jgit.revwalk.RevObject == null) {\n            org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevTree(org.eclipse.jgit.lib.MutableObjectId);\n            org.eclipse.jgit.revwalk.RevObject.int = org.eclipse.jgit.revwalk.RevWalk.int;\n            org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevObject);\n            return org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject);\n        } \n        if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevTree))\n            throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.int);\n        \n        org.eclipse.jgit.revwalk.RevObject.int = int = (org.eclipse.jgit.revwalk.RevObject.int) | (org.eclipse.jgit.revwalk.RevWalk.int);\n        if ((int & (org.eclipse.jgit.revwalk.RevWalk.int)) == 0)\n            return org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject);\n        \n        if (boolean)\n            return org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject);\n        \n        continue;\n    case org.eclipse.jgit.revwalk.ObjectWalk.int :\n        continue;\n    default :\n        throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String.java.lang.String.format(\"%o\", java.lang.Integer.java.lang.Integer.valueOf(int)), org.eclipse.jgit.lib.MutableObjectId.name(), org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.int, org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.int), org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit.org.eclipse.jgit.revwalk.RevObject));\n}"},"status":-1},{"failures":[],"tindex":"3fe27509-c872-11e4-a902-892850fb364a","variableMapping":{"l":"mask"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:489","type":"CtIfImpl","sourcecode":"if (int < 1)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1220","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.reset(org.eclipse.jgit.revwalk.RevFlagSet.int)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":57,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":54,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":72,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":106,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":18,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":80,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":88,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":115,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":78,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":52,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":64,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":45,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":76,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":62,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF":11,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":12,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":77,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":109,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":114,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":82,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":37,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":20,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":104,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":117,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":105,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":98,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":103,"org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail":16,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":102,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":49,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":47,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":97,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":43,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":95,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":112,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":75,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":119,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":65,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":9,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":56,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":29,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":19,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":22,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":83,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":89,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":85,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":66,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":23,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2":6,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":28,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":25,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":90,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":96,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":46,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":13,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":111,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":118,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":60,"org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":61,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":81,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":86,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":27,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1":7,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":35,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2":8,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":39,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":84,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":101,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":108,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":30,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":100,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":99,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":73,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":107,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":70,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":94,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":71,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":113,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":55,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":91,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":74,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":67,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":69,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":92,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":31}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
