[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"5d9483b8-c83a-11e4-813b-038887a6e8c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:269","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.dfs.DfsPackFile == null) {\n    if (org.eclipse.jgit.internal.storage.dfs.DfsPackKey == null)\n        org.eclipse.jgit.internal.storage.dfs.DfsPackKey = new org.eclipse.jgit.internal.storage.dfs.DfsPackKey();\n    \n    org.eclipse.jgit.internal.storage.dfs.DfsPackFile = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile(this , org.eclipse.jgit.internal.storage.dfs.DfsPackDescription , org.eclipse.jgit.internal.storage.dfs.DfsPackKey);\n    java.util.Map<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.dfs.DfsPackFile>.put(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.dfs.DfsPackFile);\n} "},"status":-1},{"failures":[],"tindex":"5d9483b9-c83a-11e4-813b-a1dc53e306e5","variableMapping":{"receivedReady":"refLogIncludeResult","noDone":"refLogIncludeResult"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:616","type":"CtIfImpl","sourcecode":"if ((boolean) & boolean)\n    break SEND_HAVES;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:374","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled())\n    org.eclipse.jgit.lib.RefUpdate.disableRefLog();\nelse {\n    org.eclipse.jgit.lib.RefUpdate.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent);\n    org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(java.lang.String, boolean);\n}"},"status":-2},{"failures":[0,1,2,3,5,4],"tindex":"5d9483ba-c83a-11e4-813b-07a2ec7a4b3c","variableMapping":{"batch":"batch"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1362","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.setRefLogMessage(\"push\", true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1360","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BatchRefUpdate.setAllowNonFastForwards(org.eclipse.jgit.transport.BaseReceivePack.isAllowNonFastForwards())"},"status":-1},{"failures":[],"tindex":"5d94aacb-c83a-11e4-813b-1db3b407ba47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:263","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    while ((0 < int) && ((org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(int[], org.eclipse.jgit.internal.storage.file.PackIndexV2.org.eclipse.jgit.internal.storage.file.PackIndexV2.idOffset((int - 1)))) == 0))\n        int--;\n    for ( ; (int < int) && ((org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(int[], org.eclipse.jgit.internal.storage.file.PackIndexV2.org.eclipse.jgit.internal.storage.file.PackIndexV2.idOffset(int))) == 0) ; int++) {\n        java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId.fromRaw(int[], org.eclipse.jgit.internal.storage.file.PackIndexV2.org.eclipse.jgit.internal.storage.file.PackIndexV2.idOffset(int)));\n        if ((java.util.Set<org.eclipse.jgit.lib.ObjectId>.size()) > int)\n            break;\n        \n    }\n    return ;\n} else\n    int = int + 1;\n"},"status":-2},{"failures":[],"tindex":"5d94aacc-c83a-11e4-813b-f36ee921fd4b","variableMapping":{"infoAttributeNode":"r"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:679","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.attributes.AttributesNode) instanceof org.eclipse.jgit.treewalk.WorkingTreeIterator.InfoAttributesNode)\n    org.eclipse.jgit.attributes.AttributesNode = ((org.eclipse.jgit.treewalk.WorkingTreeIterator.InfoAttributesNode)(org.eclipse.jgit.attributes.AttributesNode)).load();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:1367","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator.loadRulesFromFile(org.eclipse.jgit.attributes.AttributesNode, java.io.File)"},"status":-2},{"failures":[5,0,4,14,15,1,2,3],"tindex":"5d94aacd-c83a-11e4-813b-83d3514f53e2","variableMapping":{"org.eclipse.jgit.transport.AmazonS3.SIGNED_HEADERS":"filtered"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:126","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.AmazonS3.java.util.Set<java.lang.String>.add(\"date\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:151","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.remove(java.lang.String)"},"status":-1},{"failures":[],"tindex":"5d94aace-c83a-11e4-813b-95caeeb2c94a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:227","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,0,27,28,29,30,5,31,32,33,34,35,36,1,37,2,3,38,39,4,40,41,42,43,44,45],"tindex":"5d94aacf-c83a-11e4-813b-23f52e001bf4","variableMapping":{"cmp":"modeO"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:335","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return false;\nelse if (int == 0)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:458","type":"CtIfImpl","sourcecode":"if (((int == 0) && (int == 0)) && (int == 0))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"5d94aad0-c83a-11e4-813b-7989acfcc831","variableMapping":{"editList":"editList"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:951","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.EditList = new org.eclipse.jgit.diff.EditList()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffFormatter:975","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.EditList = org.eclipse.jgit.diff.DiffFormatter.diff(org.eclipse.jgit.diff.DiffFormatter.FormatResult.org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.DiffFormatter.FormatResult.org.eclipse.jgit.diff.RawText)"},"status":-2},{"failures":[5,11,13,0,46,47,48,49,50,51,52,53,54,55,56,57,4,1,2,3],"tindex":"5d94aad1-c83a-11e4-813b-edec05f7c8b1","variableMapping":{"pckOut":"pckOut"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:910","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.writeString(\"NAK\\n\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceivePack:180","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PacketLineOut.flush()"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":57,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":28,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1,"org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory":12,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":40,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":30,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":44,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":0,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":53,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":6,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":42,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":56,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":17,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":43,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":49,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":9,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":52,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":41,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory":13,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":29,"org.eclipse.jgit.api.CleanCommandTest.testClean":14,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":45,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":55,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":7,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":23,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":46,"org.eclipse.jgit.api.PushCommandTest.testPush":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":21,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":51,"org.eclipse.jgit.transport.TestProtocolTest.testPush":11,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":15,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":37,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":39,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":35,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":27,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":50,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":24,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":38,"org.eclipse.jgit.transport.TestProtocolTest.testFetch":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":31}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
