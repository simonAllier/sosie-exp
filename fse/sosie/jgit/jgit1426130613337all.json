[{"failures":[0,1,2,3,4,5,6],"tindex":"2b1991b4-c867-11e4-bdc8-c5d29f119287","variableMapping":{"pos":"ptr","raw":"buf"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:1085","type":"CtWhileImpl","sourcecode":"while ((int >= 0) && ((byte[][int]) == ' '))\n    int--;"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:286","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case ' ' :\n    case '-' :\n    case '+' :\n        break;\n    default :\n        break SCAN;\n}"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,2,3,4,22,23,24,25,26,27,28,29,30,1,5,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,6],"tindex":"2b1bb495-c867-11e4-bdc8-7f2220062a24","variableMapping":{"position":"ptr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:486","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    return int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:429","type":"CtIfImpl","sourcecode":"if ((byte[][++int]) == 0)\n    return ++int;\n"},"status":-1},{"failures":[],"tindex":"2b1c29c6-c867-11e4-bdc8-cd979d541664","variableMapping":{"c":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.BLKSZ"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:157","type":"CtIfImpl","sourcecode":"if (int == '\\n')\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1223","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    try {\n        if (!(org.eclipse.jgit.lib.AsyncObjectSizeQueue<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.next()))\n            break;\n        \n    } catch (org.eclipse.jgit.errors.MissingObjectException org.eclipse.jgit.errors.MissingObjectException) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        if (boolean) {\n            org.eclipse.jgit.internal.storage.pack.ObjectToPack org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.lib.AsyncObjectSizeQueue<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.getCurrent();\n            if ((org.eclipse.jgit.internal.storage.pack.ObjectToPack != null) && (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge())) {\n                org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta();\n                continue;\n            } \n            org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.get(org.eclipse.jgit.errors.MissingObjectException.getObjectId());\n            if ((org.eclipse.jgit.internal.storage.pack.ObjectToPack != null) && (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge())) {\n                org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta();\n                continue;\n            } \n        } \n        throw org.eclipse.jgit.errors.MissingObjectException;\n    }\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.lib.AsyncObjectSizeQueue<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.getCurrent();\n    if (org.eclipse.jgit.internal.storage.pack.ObjectToPack == null)\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.get(org.eclipse.jgit.lib.AsyncObjectSizeQueue<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.getObjectId());\n    \n    long long = org.eclipse.jgit.lib.AsyncObjectSizeQueue<org.eclipse.jgit.internal.storage.pack.ObjectToPack>.getSize();\n    if (((org.eclipse.jgit.internal.storage.pack.DeltaIndex.int) < long) && (long < long))\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.setWeight(((int)(long)));\n    else\n        org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta();\n    \n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n}"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"2b1c29c7-c867-11e4-bdc8-c32d9118444d","variableMapping":{"baseCommit":"objectId","baseCommitId":"objectId"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ThreeWayMerger:139","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevCommit.toObjectId()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:776","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, byte[])"},"status":-1},{"failures":[2,3,4,1,29,30,5,6],"tindex":"2b1c50d8-c867-11e4-bdc8-bf1167058a8d","variableMapping":{"low":"outPtr","mid":"n"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:180","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:478","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[2,3,4,53,5,1,54,6],"tindex":"2b1c50d9-c867-11e4-bdc8-8baf5f052190","variableMapping":{"sb":"sb"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:246","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:812","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.revwalk.RevCommit.getFullMessage().replaceAll(\"([\\n\\r])\", \"$1# \"))"},"status":-1},{"failures":[],"tindex":"2b1c50da-c867-11e4-bdc8-71a4378a35b7","variableMapping":{"ldr":"ldr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.CachedObjectDirectory:218","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectLoader"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:391","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectLoader != null)\n    return org.eclipse.jgit.lib.ObjectLoader;\n"},"status":-2},{"failures":[],"tindex":"2b1c50db-c867-11e4-bdc8-0dc5bf3193b1","variableMapping":{"peerHas":"notAdvertisedWants"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:1037","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.ObjectId>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.UploadPack:1043","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.Set<org.eclipse.jgit.lib.ObjectId>) {\n    if (!(java.util.Set<org.eclipse.jgit.lib.ObjectId>.contains(org.eclipse.jgit.lib.ObjectId))) {\n        if (java.util.List<org.eclipse.jgit.lib.ObjectId> == null)\n            java.util.List<org.eclipse.jgit.lib.ObjectId> = new java.util.ArrayList<org.eclipse.jgit.lib.ObjectId>();\n        \n        java.util.List<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n    } \n}"},"status":-2},{"failures":[],"tindex":"2b1c50dc-c867-11e4-bdc8-b168d765f196","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:677","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Checking out ours/theirs is only possible when checking out index, \" + \"not when switching branches.\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:476","type":"CtThrowImpl","sourcecode":"throw java.io.IOException"},"status":-2},{"failures":[],"tindex":"2b1c50dd-c867-11e4-bdc8-23c72ff42abb","variableMapping":{"tw":"treeWalk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:148","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.NameConflictTreeWalk.enterSubtree()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:950","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.TreeFilter.org.eclipse.jgit.treewalk.filter.TreeFilter)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":10,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":35,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":32,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":45,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":25,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":30,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":13,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":11,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":53,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":34,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":42,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":46,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":28,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":0,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":37,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":26,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":39,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":51,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":29,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":41,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":12,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":33,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":52,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":18,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":38}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
