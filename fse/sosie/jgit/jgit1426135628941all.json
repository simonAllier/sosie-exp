[{"failures":[],"tindex":"d72ee88b-c872-11e4-9e04-1d4f9bea2fda","variableMapping":{"org.eclipse.jgit.lib.Constants.R_HEADS":"org.eclipse.jgit.transport.BasePackFetchConnection.OPTION_SIDE_BAND","fullBranch":"org.eclipse.jgit.transport.BasePackFetchConnection.OPTION_SIDE_BAND"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.PullCommand:193","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))) {\n    throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:509","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.BasePackConnection.wantCapability(java.lang.StringBuilder, org.eclipse.jgit.transport.BasePackFetchConnection.java.lang.String))\n    boolean = true;\nelse if (org.eclipse.jgit.transport.BasePackConnection.wantCapability(java.lang.StringBuilder, org.eclipse.jgit.transport.BasePackFetchConnection.java.lang.String))\n    boolean = true;\n"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d72ee88c-c872-11e4-9e04-73f014168074","variableMapping":{"this":"this","walk":"walk"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevBlob:85","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevBlob.parseHeaders(org.eclipse.jgit.revwalk.RevWalk)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevBlob:84","type":"CtIfImpl","sourcecode":"if (((int) & (org.eclipse.jgit.revwalk.RevObject.int)) == 0)\n    org.eclipse.jgit.revwalk.RevBlob.parseHeaders(org.eclipse.jgit.revwalk.RevWalk);\n"},"status":-1},{"failures":[6,7,8,9,1,0,10,3,4,5,2],"tindex":"d72ee88d-c872-11e4-9e04-533885e2cd41","variableMapping":{"revWalk":"rw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:382","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.revwalk.RevWalk.getObjectReader())"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:688","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = org.eclipse.jgit.treewalk.TreeWalk.org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), new java.lang.String(char[] , (int + 1) , (((char[].int) - int) - 1)), org.eclipse.jgit.revwalk.RevTree)"},"status":-1},{"failures":[],"tindex":"d72ee88e-c872-11e4-9e04-9feab393a9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:292","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[1,2,0,3,4,5],"tindex":"d72ee88f-c872-11e4-9e04-45259763f98a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:206","type":"CtIfImpl","sourcecode":"if (java.io.File.renameTo(java.io.File))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"d72ee890-c872-11e4-9e04-634e3668470f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:197","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:288","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec(this)"},"status":-2},{"failures":[0,1,3,4,5,2],"tindex":"d72ee891-c872-11e4-9e04-51f2a1a1385a","variableMapping":{"gitDir":"onDiskFile"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:179","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:484","type":"CtAssignmentImpl","sourcecode":"java.io.File = null"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,3,4,5,2,29,30,31,32,33,1,0],"tindex":"d72ee892-c872-11e4-9e04-11dda78c2594","variableMapping":{"offset2":"i"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GitDateFormatter:175","type":"CtLocalVariableImpl","sourcecode":"int int = int / 60"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.QuotedString:264","type":"CtLocalVariableImpl","sourcecode":"final int int = (byte[][int]) & 255"},"status":-1},{"failures":[],"tindex":"d72ee893-c872-11e4-9e04-c9db1b6843cc","variableMapping":{"havesSent":"commitCnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:550","type":"CtIfImpl","sourcecode":"if ((31 & int) != 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1789","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.util.BlockList<org.eclipse.jgit.revwalk.RevCommit>) {\n    if (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) {\n        org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n        org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevCommit, 0);\n        int++;\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.revwalk.RevCommit.getParentCount()) ; int++) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(int);\n        if (((!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) && (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag.org.eclipse.jgit.revwalk.RevFlag)))) && (!org.eclipse.jgit.internal.storage.pack.PackWriter.(exclude(org.eclipse.jgit.revwalk.RevCommit)))) {\n            org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n            org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevCommit, 0);\n            int++;\n        } \n    }\n    if ((!boolean) && (4096 < int)) {\n        for (org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId : java.util.Set<org.eclipse.jgit.lib.ObjectId>) {\n            org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.lookupOrNull(org.eclipse.jgit.lib.ObjectId);\n            if ((((org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) && (org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag))) && (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag.org.eclipse.jgit.revwalk.RevFlag)))) && (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag)))) {\n                org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlag);\n                org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject, 0);\n            } \n        }\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,2,1,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,0,97,3,4,5],"tindex":"d72ee894-c872-11e4-9e04-a3850aa73f99","variableMapping":{"prefix":"name"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:336","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) > 0) && (!(java.lang.String.endsWith(\"/\"))))\n    java.lang.String += \"/\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:278","type":"CtIfImpl","sourcecode":"if (0 < (java.lang.String.length()))\n    java.lang.String = (java.lang.String) + java.lang.String;\n"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix":54,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":5,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":70,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":31,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":48,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":42,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":80,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":10,"org.eclipse.jgit.util.RefMapTest.testMerge_HeadMaster":53,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":14,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_BareA":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":60,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":9,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":44,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":67,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":66,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":65,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":64,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":43,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":45,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":1,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":46,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":22,"org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose":51,"org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved":55,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":15,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":75,"org.eclipse.jgit.util.RefMapTest.testRemove":58,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_NamedEscapes":27,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":33,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":23,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":39,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":21,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":13,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":61,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":18,"org.eclipse.jgit.util.RefMapTest.testEntryTypeSet":57,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":81,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":4,"org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix":56,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":83,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":74,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":8,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":34,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":7,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":93,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":40,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":85,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":2,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":68,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":69,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":16,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":35,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":32,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":79,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":91,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":72,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":90,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":76,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":89,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":88,"org.eclipse.jgit.util.RefMapTest.testClear":52,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":62,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":36,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":82,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":0,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":77,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":30,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":38,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":59,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":78,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":63,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":12,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":11,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange":20,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":95,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_OctalAll":25,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":87,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuoteAtAndNumber":28,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":92,"org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix":50,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":49,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":71,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":47,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":6,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":86,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine":19,"org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_Ang":24}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
