[{"failures":[],"tindex":"9d357950-c825-11e4-abdc-7376c16e19e0","variableMapping":{"levelTwo":"position"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:218","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    return -1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:136","type":"CtReturnImpl","sourcecode":"return 1L << int"},"status":-2},{"failures":[],"tindex":"9d35a061-c825-11e4-abdc-b7b3d270dbea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revplot.PlotWalk:193","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:566","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"9d35a062-c825-11e4-abdc-850d9daf3906","variableMapping":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"head","name":"currentCommits","sourceName":"head","org.eclipse.jgit.lib.Constants.R_TAGS":"head","type":"head"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:670","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\n\"))\n    org.eclipse.jgit.api.RebaseCommand.RebaseState.org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(org.eclipse.jgit.api.RebaseCommand.RebaseState.getRewrittenDir(), java.lang.String, java.lang.String);"},"status":-1},{"failures":[1,0,5,8,9,10],"tindex":"9d35a063-c825-11e4-abdc-79e6bb4d6645","variableMapping":{"derefTags":"hasDead"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RefAdvertiser:190","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:483","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.WindowCache.Entry org.eclipse.jgit.internal.storage.file.WindowCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCache.Entry ; org.eclipse.jgit.internal.storage.file.WindowCache.Entry != null ; org.eclipse.jgit.internal.storage.file.WindowCache.Entry = org.eclipse.jgit.internal.storage.file.WindowCache.Entry.org.eclipse.jgit.internal.storage.file.WindowCache.Entry) {\n    if ((org.eclipse.jgit.internal.storage.file.WindowCache.Entry.org.eclipse.jgit.internal.storage.file.WindowCache.Ref.org.eclipse.jgit.internal.storage.file.PackFile) == org.eclipse.jgit.internal.storage.file.PackFile) {\n        org.eclipse.jgit.internal.storage.file.WindowCache.Entry.kill();\n        boolean = true;\n    } else if (org.eclipse.jgit.internal.storage.file.WindowCache.Entry.boolean)\n        boolean = true;\n    \n}"},"status":-1},{"failures":[],"tindex":"9d35a064-c825-11e4-abdc-bddc69bffc13","variableMapping":{"org.eclipse.jgit.hooks.PreCommitHook.NAME":"largeObjectExceedsLimit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.hooks.PreCommitHook:81","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.hooks.PreCommitHook.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.LargeObjectException:159","type":"CtReturnImpl","sourcecode":"return java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.errors.LargeObjectException.getObjectName(), java.lang.Long.java.lang.Long.valueOf(long), java.lang.Long.java.lang.Long.valueOf(long))"},"status":-2},{"failures":[1,8,9,10,0,5],"tindex":"9d35a065-c825-11e4-abdc-7d561103150c","variableMapping":{"index":"headerCnt"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.BlockList:333","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    throw new java.lang.IllegalStateException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:396","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.update(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"9d35a066-c825-11e4-abdc-f30ddb2bf2e3","variableMapping":{"packOut":"w"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:221","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.close();\n} catch (java.io.IOException java.io.IOException) {\n} finally {\n    org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream = null;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:352","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write((int >>> 8))"},"status":-2},{"failures":[],"tindex":"9d35a067-c825-11e4-abdc-b9105fb5d976","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CommitCommand:249","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"9d35a068-c825-11e4-abdc-0b435e2373f9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:278","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"no tag header\")"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GSSManagerFactory:149","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error(java.lang.InstantiationException)"},"status":-2},{"failures":[],"tindex":"9d35a069-c825-11e4-abdc-5771ea92129c","variableMapping":{"path":"abspn"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:311","type":"CtReturnImpl","sourcecode":"return java.io.File.getAbsoluteFile()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS:328","type":"CtReturnImpl","sourcecode":"return java.io.File"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":2,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":7,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":6}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
