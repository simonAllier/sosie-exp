[{"failures":[0,1,2,3,4,5,6,7],"tindex":"8aca9bf4-c88f-11e4-b300-bf6d3f3446ce","variableMapping":{"msk":"ai","i":"ai"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:165","type":"CtAssignmentImpl","sourcecode":"int = (int + 1) & int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawTextComparator:141","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"8aca9bf5-c88f-11e4-b300-b7e26f8d42a2","variableMapping":{"name":"objectAtHasBadZlibStream"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:423","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.TransportException((\"Empty ref: \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:656","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.long), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackName()))"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"8aca9bf6-c88f-11e4-b300-d1d507a3e9db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:510","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"8aca9bf7-c88f-11e4-b300-670f30edecd0","variableMapping":{"pathLen":"org.eclipse.jgit.lib.IndexDiff.WORKDIR","pathOffset":"org.eclipse.jgit.lib.IndexDiff.WORKDIR"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:770","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:432","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n        if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n            int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage();\n            if (int > 0) {\n                java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n                org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n                continue;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator != null) {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!(org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()) != (org.eclipse.jgit.dircache.DirCacheIterator.getEntryRawMode()))) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator)))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        } else {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        }\n    } else {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            } \n        }\n    }\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, org.eclipse.jgit.treewalk.TreeWalk.getObjectReader())) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.WorkingTreeIterator)))) || (((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        }\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()) ; int++) {\n        java.util.Set<java.lang.String> java.util.Set<java.lang.String> = java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.get(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int));\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        if (java.lang.String != null) {\n            if (java.util.Set<java.lang.String> == null)\n                java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n            \n            java.util.Set<java.lang.String>.add(java.lang.String);\n            java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.put(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int), java.util.Set<java.lang.String>);\n        } \n    }\n}"},"status":-2},{"failures":[3,0,1,2,6,7],"tindex":"8aca9bf8-c88f-11e4-b300-976a197e6aa4","variableMapping":{"n":"org.eclipse.jgit.revwalk.Generator.NEEDS_REWRITE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectLoader:255","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:156","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.Generator.outputType()) & (org.eclipse.jgit.revwalk.Generator.int)) != 0) {\n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.FIFORevQueue(org.eclipse.jgit.revwalk.Generator);\n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.RewriteGenerator(org.eclipse.jgit.revwalk.Generator);\n} "},"status":-1},{"failures":[],"tindex":"8aca9bf9-c88f-11e4-b300-11fb371fd582","variableMapping":{"this":"dst"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:139","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.AutoCRLFOutputStream.decideMode()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.StreamCopyThread:116","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,7,0,1,2,28,29,30,31,32,3,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,6,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"8aca9bfa-c88f-11e4-b300-9703faeca9bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:405","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    org.eclipse.jgit.internal.storage.pack.DeltaWindow.checkLoadable(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry, org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.size());\n    byte[] = org.eclipse.jgit.internal.storage.pack.PackWriter.org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(org.eclipse.jgit.storage.pack.PackConfig, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n    if ((long) != 0)\n        long += byte[].int;\n    \n    org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.byte[] = byte[];\n} "},"status":-1},{"failures":[8,11,13,14,15,16],"tindex":"8aca9bfb-c88f-11e4-b300-7f63daf9a1d4","variableMapping":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"start","nextPtr":"ptr","ptr":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:366","type":"CtAssignmentImpl","sourcecode":"int = int + (org.eclipse.jgit.lib.Constants.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:459","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[7,0,1,2,3,6,74],"tindex":"8aca9bfc-c88f-11e4-b300-5b673a89f54e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:198","type":"CtReturnImpl","sourcecode":"return 21"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:183","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[],"tindex":"8aca9bfd-c88f-11e4-b300-d729a6484548","variableMapping":{"length":"length","footerFirstLine":"length","i":"length","lines":"newValues"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:279","type":"CtIfImpl","sourcecode":"if ((int != (java.lang.String[].int)) && ((java.lang.String[][int].length()) == 0))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:170","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], java.lang.String[].int, java.lang.String[].int)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":51,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":35,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":33,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":69,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized":19,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":59,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0,"org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithoutWhitespace":4,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":61,"org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget":10,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":32,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":6,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":70,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":57,"org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget":12,"org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":44,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":65,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":52,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":71,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":25,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink":14,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":67,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":3,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":27,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized":18,"org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified":17,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":72,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":74,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":29,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":56,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":42,"org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithWhitespace":5,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":23,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":21,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":62,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":46,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink":11,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":60,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":58,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":43,"org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":36}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
