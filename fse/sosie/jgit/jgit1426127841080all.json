[{"failures":[],"tindex":"b61089ad-c860-11e4-a079-8beba77f01f6","variableMapping":{"pm":"monitor"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1424","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:151","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n    if ((org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath()) == null)\n        continue;\n    \n    java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl();\n    if (java.lang.String == null)\n        continue;\n    \n    org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n    if (org.eclipse.jgit.lib.Repository == null) {\n        org.eclipse.jgit.api.CloneCommand org.eclipse.jgit.api.CloneCommand = org.eclipse.jgit.api.Git.org.eclipse.jgit.api.Git.cloneRepository();\n        org.eclipse.jgit.api.TransportCommand<org.eclipse.jgit.api.SubmoduleUpdateCommand, java.util.Collection<java.lang.String>>.configure(org.eclipse.jgit.api.CloneCommand);\n        org.eclipse.jgit.api.CloneCommand.setURI(java.lang.String);\n        org.eclipse.jgit.api.CloneCommand.setDirectory(org.eclipse.jgit.submodule.SubmoduleWalk.getDirectory());\n        org.eclipse.jgit.api.CloneCommand.setGitDir(new java.io.File(new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.submodule.SubmoduleWalk.getPath()));\n        if ((org.eclipse.jgit.lib.ProgressMonitor) != null)\n            org.eclipse.jgit.api.CloneCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor);\n        \n        org.eclipse.jgit.lib.Repository = org.eclipse.jgit.api.CloneCommand.call().getRepository();\n    } \n    try {\n        org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository);\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId());\n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUpdate();\n        if (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) {\n            org.eclipse.jgit.api.MergeCommand org.eclipse.jgit.api.MergeCommand = new org.eclipse.jgit.api.MergeCommand(org.eclipse.jgit.lib.Repository);\n            org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.api.MergeCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n            org.eclipse.jgit.api.MergeCommand.call();\n        } else if (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) {\n            org.eclipse.jgit.api.RebaseCommand org.eclipse.jgit.api.RebaseCommand = new org.eclipse.jgit.api.RebaseCommand(org.eclipse.jgit.lib.Repository);\n            org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.api.RebaseCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n            org.eclipse.jgit.api.RebaseCommand.call();\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.revwalk.RevCommit.getTree());\n            org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n            org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n            org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String, true);\n            org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.lib.RefUpdate.forceUpdate();\n        }\n    } finally {\n        org.eclipse.jgit.lib.Repository.close();\n    }\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"b61089ae-c860-11e4-a079-972710885747","variableMapping":{"fileMode":"inFooter","off":"inFooter","on":"inFooter"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:300","type":"CtAssignmentImpl","sourcecode":"boolean = boolean && (!boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:239","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"b61089af-c860-11e4-a079-89e642c2392c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:258","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter:86","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b61089b0-c860-11e4-a079-7fdaf6eee7e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:254","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WriteConfig org.eclipse.jgit.internal.storage.file.WriteConfig = org.eclipse.jgit.internal.storage.file.ReflogWriter.getRepository().getConfig().get(org.eclipse.jgit.internal.storage.file.WriteConfig.org.eclipse.jgit.lib.Config.SectionParser<org.eclipse.jgit.internal.storage.file.WriteConfig>)"},"status":-2},{"failures":[],"tindex":"b61089b1-c860-11e4-a079-1d1685584c28","variableMapping":{"org.eclipse.jgit.internal.storage.pack.BaseSearch.M_BLOB":"cPos","org.eclipse.jgit.lib.Constants.OBJ_BLOB":"cPos","org.eclipse.jgit.internal.storage.pack.BaseSearch.M_TREE":"cPos","org.eclipse.jgit.lib.Constants.OBJ_TREE":"cPos","typeCode":"cPos"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:160","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.internal.storage.pack.BaseSearch.int;\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.internal.storage.pack.BaseSearch.int;\n    default :\n        return 0;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:718","type":"CtReturnImpl","sourcecode":"return ((byte[][int]) & 255) - org.eclipse.jgit.treewalk.WorkingTreeIterator.(org.eclipse.jgit.treewalk.WorkingTreeIterator.lastPathChar(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry))"},"status":-2},{"failures":[],"tindex":"b61089b2-c860-11e4-a079-a3acf8aa2e5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:513","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.internal.storage.file.WindowCache.slot(org.eclipse.jgit.internal.storage.file.WindowCache.Ref.org.eclipse.jgit.internal.storage.file.PackFile, org.eclipse.jgit.internal.storage.file.WindowCache.Ref.long)"},"status":-2},{"failures":[],"tindex":"b610afc3-c860-11e4-a079-a5c902892e06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.DiffAlgorithm:129","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.EditList.get(((org.eclipse.jgit.diff.EditList.size()) - 1))"},"status":-2},{"failures":[1,2,3,4,6,5],"tindex":"b6120f54-c860-11e4-a079-519fc10ed596","variableMapping":{"in":"in"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:126","type":"CtIfImpl","sourcecode":"if (!(java.io.InputStream.markSupported()))\n    throw new java.io.IOException(\"Mark not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:609","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IO.org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, byte[].int)"},"status":-1},{"failures":[1,2,3,6,5,4],"tindex":"b6120f55-c860-11e4-a079-c9368000a28e","variableMapping":{"dst":"resultRef","old":"resultRef"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:498","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.SymbolicRef(org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:188","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref"},"status":-1},{"failures":[1,2,3,6,5,4],"tindex":"b6120f56-c860-11e4-a079-61ffd01f61df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:616","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.transport.AmazonS3.org.eclipse.jgit.transport.AmazonS3.remove(java.util.SortedMap<java.lang.String, java.lang.String>, \"date\"))"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":5,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":3,"org.eclipse.jgit.util.ChangeIdUtilTest.testIndexOfChangeId":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":2,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":1}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
