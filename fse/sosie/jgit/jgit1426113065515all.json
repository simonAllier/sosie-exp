[{"failures":[],"tindex":"4e55ca47-c83e-11e4-8ba1-d38ab75e2313","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:469","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String)"},"status":-2},{"failures":[],"tindex":"4e55ca48-c83e-11e4-8ba1-1dbcf9f3d269","variableMapping":{"name":"org.eclipse.jgit.transport.TransportBundle.V2_BUNDLE_SIGNATURE"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:208","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".pack\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:198","type":"CtTryImpl","sourcecode":"try {\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.values());\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>)\n        java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.revwalk.RevCommit.getId());\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) > 0));\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(false);\n    if ((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) == 0)\n        org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    \n    org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>);\n    final java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(java.io.OutputStream , org.eclipse.jgit.lib.Constants.java.nio.charset.Charset);\n    java.io.Writer.write(org.eclipse.jgit.transport.TransportBundle.java.lang.String);\n    java.io.Writer.write('\\n');\n    final char[] char[] = new char[org.eclipse.jgit.lib.Constants.int];\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>) {\n        java.io.Writer.write('-');\n        org.eclipse.jgit.revwalk.RevCommit.copyTo(char[], java.io.Writer);\n        if ((org.eclipse.jgit.revwalk.RevCommit.getRawBuffer()) != null) {\n            java.io.Writer.write(' ');\n            java.io.Writer.write(org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n        } \n        java.io.Writer.write('\\n');\n    }\n    for (final java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> : java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.entrySet()) {\n        java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getValue().copyTo(char[], java.io.Writer);\n        java.io.Writer.write(' ');\n        java.io.Writer.write(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getKey());\n        java.io.Writer.write('\\n');\n    }\n    java.io.Writer.write('\\n');\n    java.io.Writer.flush();\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-2},{"failures":[],"tindex":"4e55ca49-c83e-11e4-8ba1-ff54b646e7ae","variableMapping":{"readBlock":"readBlock","v":"readBlock"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:310","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlock = org.eclipse.jgit.internal.storage.dfs.DfsBlock"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:169","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlock = null"},"status":-2},{"failures":[],"tindex":"4e55ca4a-c83e-11e4-8ba1-75a2cda8083e","variableMapping":{"low":"ptr","cmp":"ptr","mid":"ptr"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:298","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} else\n    int = int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:426","type":"CtReturnImpl","sourcecode":"return ++int"},"status":-2},{"failures":[],"tindex":"4e55ca4b-c83e-11e4-8ba1-bf56852da44a","variableMapping":{"bs":"org.eclipse.jgit.dircache.DirCacheEntry.STAGE_0","as":"modeO","be":"org.eclipse.jgit.dircache.DirCacheEntry.STAGE_3","ae":"org.eclipse.jgit.dircache.DirCacheEntry.STAGE_2"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:67","type":"CtIfImpl","sourcecode":"if ((int - int) != (int - int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:493","type":"CtIfImpl","sourcecode":"if (int != (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.getBits())) {\n    if (int == int)\n        org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    else {\n        if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n            return false;\n        \n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n    return true;\n} else {\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), new org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>(java.util.Collections.java.util.Collections.<org.eclipse.jgit.diff.RawText>emptyList()));\n}"},"status":-2},{"failures":[],"tindex":"4e55ca4c-c83e-11e4-8ba1-6336c65fb1a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:598","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<java.lang.String>> java.util.Map<java.lang.String, java.util.List<java.lang.String>> = java.net.HttpURLConnection.getRequestProperties()"},"status":-2},{"failures":[],"tindex":"4e55ca4d-c83e-11e4-8ba1-7fd74888f10f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS_Win32:100","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"4e55ca4e-c83e-11e4-8ba1-d3fc13a66da8","variableMapping":{"org.eclipse.jgit.diff.HistogramDiffIndex.MAX_CNT":"n","newCnt":"n"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:200","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.HistogramDiffIndex.int) < int)\n    int = org.eclipse.jgit.diff.HistogramDiffIndex.int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:189","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"4e55ca4f-c83e-11e4-8ba1-451118854113","variableMapping":{"n":"cr"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:167","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.io.EOFException();\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:196","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse\n    break;\n"},"status":-2},{"failures":[],"tindex":"4e55ca50-c83e-11e4-8ba1-dba3768d8987","variableMapping":{"offset":"startPtr","intbuf":"buf"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.NB:151","type":"CtLocalVariableImpl","sourcecode":"int int = ((byte[][(int + 1)]) & 255) << 8"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:434","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][int]) - '0'"},"status":-2},{"failureDictionary":{}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
