[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"0d17d5c5-c867-11e4-a1b2-cbcb92553cd5","variableMapping":{"subpath":"pattern"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:230","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"/\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:112","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.fnmatch.FileNameMatcher = new org.eclipse.jgit.fnmatch.FileNameMatcher(java.lang.String , java.lang.Character.java.lang.Character.valueOf('/'));\n} catch (org.eclipse.jgit.errors.InvalidPatternException org.eclipse.jgit.errors.InvalidPatternException) {\n}"},"status":-1},{"failures":[10,5,6,7,4,8,9],"tindex":"0d17fcd6-c867-11e4-a1b2-d5a89b5cc380","variableMapping":{"high":"cmp","low":"cmp","cmp":"cmp","mid":"cmp"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Tree:158","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int + 1;\nelse if (int == 0)\n    return int;\nelse\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:181","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-1},{"failures":[9,4,5,6,7,8,11],"tindex":"0d17fcd7-c867-11e4-a1b2-a3a2b28f2699","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode((int + (org.eclipse.jgit.patch.CombinedFileHeader.byte[].int)), int)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,8,21,22,4,5,6,7,23,24,25,26,9,27,28],"tindex":"0d17fcd8-c867-11e4-a1b2-5f25cb0b63b8","variableMapping":{"writer":"pw"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:298","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:724","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)"},"status":-1},{"failures":[5,6,7,9,8,4],"tindex":"0d17fcd9-c867-11e4-a1b2-b945d869e465","variableMapping":{"cs":"enc","org.eclipse.jgit.lib.Constants.CHARSET":"enc"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:228","type":"CtAssignmentImpl","sourcecode":"java.nio.charset.Charset = org.eclipse.jgit.lib.Constants.java.nio.charset.Charset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:245","type":"CtAssignmentImpl","sourcecode":"java.nio.charset.Charset = java.nio.charset.Charset"},"status":-1},{"failures":[],"tindex":"0d17fcda-c867-11e4-a1b2-b7345606b4d3","variableMapping":{"s":"suffix"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:672","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1032","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ((-1) == int) {\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n            java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n        \n        break;\n    } \n    final char char = ((char)(int));\n    if ('\\n' == char) {\n        java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n            org.eclipse.jgit.lib.ConfigLine = org.eclipse.jgit.lib.ConfigLine;\n        \n        org.eclipse.jgit.lib.ConfigLine = new org.eclipse.jgit.lib.ConfigLine();\n    } else if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n    } else if ((';' == char) || ('#' == char)) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.java.lang.String.valueOf(char);\n    } else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && java.lang.Character.(java.lang.Character.isWhitespace(char))) {\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n        \n        org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n    } else if ('[' == char) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n        if ('\\\"' == int) {\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n            int = org.eclipse.jgit.lib.Config.StringReader.read();\n        } \n        if (']' != int)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    } else if (org.eclipse.jgit.lib.ConfigLine != null) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n        if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n        } else\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n        \n    } else\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n}"},"status":-2},{"failures":[8,9,5,6,7,4],"tindex":"0d17fcdb-c867-11e4-a1b2-258e4282f96a","variableMapping":{"dStr":"prefix"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.InitCommand:97","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = \".\";\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.AmazonS3:336","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) > 0) && (!(java.lang.String.endsWith(\"/\"))))\n    java.lang.String += \"/\";\n"},"status":-1},{"failures":[5,6,7,8,9,4],"tindex":"0d17fcdc-c867-11e4-a1b2-3df61d776ec0","variableMapping":{"endB":"last","endA":"last","k":"last"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:227","type":"CtAssignmentImpl","sourcecode":"int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:170","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-1},{"failures":[],"tindex":"0d17fcdd-c867-11e4-a1b2-f7843ce437ee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:278","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindow org.eclipse.jgit.internal.storage.pack.DeltaWindow"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:329","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindow org.eclipse.jgit.internal.storage.pack.DeltaWindow = org.eclipse.jgit.internal.storage.pack.DeltaWindow"},"status":-2},{"failures":[9,5,6,7,4,8],"tindex":"0d17fcde-c867-11e4-a1b2-d5b3e61294ca","variableMapping":{"suffix":"why"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:446","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportGitSsh:206","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(java.lang.StringBuilder.length())"},"status":-1},{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":7,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":13,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":15,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":22,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":5,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":11,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":9,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":20,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":27,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":1,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":25,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":17,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":2,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":16,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":6,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":18,"org.eclipse.jgit.api.GitConstructionTest.testClose":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":19,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":0,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":24,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":28,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":12,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":3,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":10}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
