[{"failures":[],"tindex":"7d103610-c82f-11e4-90f4-7b0f8c829e04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:426","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf('*')"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"7d103611-c82f-11e4-90f4-61f04c2caf42","variableMapping":{"subfilters":"subfilters","c":"c","walker":"walker"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.OrRevFilter:172","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.filter.RevFilter org.eclipse.jgit.revwalk.filter.RevFilter : org.eclipse.jgit.revwalk.filter.RevFilter[]) {\n    if (org.eclipse.jgit.revwalk.filter.RevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit))\n        return true;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.AndRevFilter:174","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.filter.RevFilter org.eclipse.jgit.revwalk.filter.RevFilter : org.eclipse.jgit.revwalk.filter.RevFilter[]) {\n    if (!(org.eclipse.jgit.revwalk.filter.RevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)))\n        return false;\n    \n}"},"status":-1},{"failures":[],"tindex":"7d103612-c82f-11e4-90f4-e35cd28dfc08","variableMapping":{"db":"db"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:225","type":"CtReturnImpl","sourcecode":"return new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"git-daemon-export-ok\").exists()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:222","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.resolver.FileResolver<C>.isExportAll())\n    return true;\nelse if ((org.eclipse.jgit.lib.Repository.getDirectory()) != null)\n    return new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"git-daemon-export-ok\").exists();\nelse\n    return false;\n"},"status":-2},{"failures":[],"tindex":"7d103613-c82f-11e4-90f4-f36a71b496da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:465","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[3,4,0,1,2,6,5],"tindex":"7d103614-c82f-11e4-90f4-eb147fe9ec0b","variableMapping":{"match":"match","matches":"running"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:195","type":"CtForEachImpl","sourcecode":"for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n    if ((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) > (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()))\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:189","type":"CtIfImpl","sourcecode":"if (java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.isEmpty()) {\n    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = new java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>();\n    java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n} else {\n    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.get(0);\n    for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n        if ((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) > (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()))\n            java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n        \n    }\n}"},"status":-1},{"failures":[],"tindex":"7d103615-c82f-11e4-90f4-7f5bc1a55697","variableMapping":{"this":"rw"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:414","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.finishDelayedFreeFlags()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:330","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.release()"},"status":-2},{"failures":[5,4,3,0,1,2],"tindex":"7d103616-c82f-11e4-90f4-69a6ef8f1571","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:945","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.blame.BlameGenerator.close()"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:636","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate)"},"status":-1},{"failures":[],"tindex":"7d103617-c82f-11e4-90f4-133e8bf53b6d","variableMapping":{"deltaPtr":"mode","delta":"name","cmd":"mode","copyOffset":"mode"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:177","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    int = (byte[][int++]) & 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:562","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))\n    org.eclipse.jgit.lib.TreeEntry = new org.eclipse.jgit.lib.GitlinkTreeEntry(this , org.eclipse.jgit.lib.ObjectId , byte[]);\nelse\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.TreeEntry.getId() , java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.java.lang.Integer.toOctalString(int)));\n"},"status":-2},{"failures":[],"tindex":"7d103618-c82f-11e4-90f4-73a5c33b49c2","variableMapping":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"name","name":"archiveFormatAlreadyAbsent","sourceName":"archiveFormatAlreadyAbsent","type":"archiveFormatAlreadyAbsent"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:294","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>.get(java.lang.String);\n    if (org.eclipse.jgit.api.ArchiveCommand.FormatEntry == null)\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    if ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) == 1) {\n        org.eclipse.jgit.api.ArchiveCommand.FormatEntry = null;\n        continue;\n    } \n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = new org.eclipse.jgit.api.ArchiveCommand.FormatEntry(org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?> , ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) - 1));\n} while (!org.eclipse.jgit.api.ArchiveCommand.(org.eclipse.jgit.api.ArchiveCommand.replace(org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>, java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry, org.eclipse.jgit.api.ArchiveCommand.FormatEntry)) )"},"status":-2},{"failures":[],"tindex":"7d103619-c82f-11e4-90f4-c3a49f49e54d","variableMapping":{"c":"notesCommit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.ReverseWalk:66","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.getParentCount()) ; int++)\n    ((org.eclipse.jgit.blame.ReverseWalk.ReverseCommit)(org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.getParent(int))).addChild(org.eclipse.jgit.blame.ReverseWalk.ReverseCommit);"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddNoteCommand:145","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setParentIds(org.eclipse.jgit.revwalk.RevCommit)"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":3,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":1,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":0}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
