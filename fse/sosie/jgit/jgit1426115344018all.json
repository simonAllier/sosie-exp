[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"9cb6d7b8-c843-11e4-af42-ab1cea505515","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:164","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) != 0) {\n    if (org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(org.eclipse.jgit.revwalk.MergeBaseGenerator.int))\n        return null;\n    \n    continue;\n} "},"status":-1},{"failures":[],"tindex":"9cb6d7b9-c843-11e4-af42-b394de991905","variableMapping":{"c":"hc","n":"hc"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.Patch:200","type":"CtIfImpl","sourcecode":"if ((int - int) < 6) {\n    int = int;\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:562","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.URIish.(getPass()) != null)\n    int = (int * 31) + (org.eclipse.jgit.transport.URIish.getPass().hashCode());\n"},"status":-2},{"failures":[4,5,6,12,10,11],"tindex":"9cb6d7ba-c843-11e4-af42-d1da9e037927","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.LogCommand:159","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.revwalk.RevCommit>>.setCallable(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PushCommand:122","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.transport.PushResult>>.checkCallable()"},"status":-1},{"failures":[],"tindex":"9cb6d7bb-c843-11e4-af42-6d3c201ab6e3","variableMapping":{"c":"startOffset"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:370","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1049","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.PackFile.getReverseIdx().findNextOffset(long, long)"},"status":-2},{"failures":[],"tindex":"9cb6d7bc-c843-11e4-af42-4d77b74e488c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RebaseCommand:899","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"))"},"status":-2},{"failures":[],"tindex":"9cb6d7bd-c843-11e4-af42-cdd769ef558e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1075","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"jgit receive-pack\""},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:284","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.Ref.getName()"},"status":-2},{"failures":[],"tindex":"9cb6d7be-c843-11e4-af42-59a33979e7ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:256","type":"CtLocalVariableImpl","sourcecode":"long long = 12"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:379","type":"CtLocalVariableImpl","sourcecode":"long long = (long) + int"},"status":-2},{"failures":[4,5,6,11,12,10],"tindex":"9cb6fecf-c843-11e4-af42-2565ad7d22ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:265","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.(org.eclipse.jgit.transport.RefSpec.isWildcard(org.eclipse.jgit.transport.RefSpec.java.lang.String)) && ((org.eclipse.jgit.transport.RefSpec.java.lang.String) == null))\n    throw new java.lang.IllegalStateException(org.eclipse.jgit.internal.JGitText.org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"9cb6fed0-c843-11e4-af42-e14bf04cb5a4","variableMapping":{"res":"buf","resPtr":"length","src":"buf","srcPtr":"length","limit":"length"},"series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:415","type":"CtDoImpl","sourcecode":"do {\n    if ((byte[][int]) != (byte[][int]))\n        break;\n    \n    int--;\n    int--;\n} while ((0 <= int) && (0 < (--int)) )"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:646","type":"CtWhileImpl","sourcecode":"while (long > 0) {\n    final int int = java.lang.Math.((int)(java.lang.Math.min(long, byte[].int)));\n    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully(long, byte[], 0, int, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n    if (boolean)\n        java.util.zip.CRC32.update(byte[], 0, int);\n    \n    org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte[], 0, int);\n    long += int;\n    long -= int;\n}"},"status":-2},{"failures":[],"tindex":"9cb6fed1-c843-11e4-af42-89c3865450d4","variableMapping":{"branchName":"baseCommit"},"series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.DeleteBranchCommand:114","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CreateBranchCommand:150","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) != null)\n    java.lang.String = org.eclipse.jgit.revwalk.RevCommit.getShortMessage();\nelse {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.api.CreateBranchCommand.getStartPointOrHead()));\n    java.lang.String = org.eclipse.jgit.revwalk.RevCommit.getShortMessage();\n}"},"status":-2},{"failureDictionary":{"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":3,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":6,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":0,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":5,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":4,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":17,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":7,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":2,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":11,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":14,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":19,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":10,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":13}},{"os.arch":"amd64","os.name":"Linux","os.version":"3.2.0-4-amd64"}]
