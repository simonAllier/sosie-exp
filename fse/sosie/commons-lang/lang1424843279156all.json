[{"failures":[],"tindex":"dab1dc88-bcb1-11e4-ab0b-e3e86ae1c8b4","variableMapping":{"startIndex":"index","endIndex":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2788","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.validateIndex(int)"},"status":0},{"failures":[],"tindex":"dab1dc89-bcb1-11e4-ab0b-0f1ad0105c07","variableMapping":{"str":"str","org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"pads","start":"pads","end":"pads","open":"str"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:2487","type":"CtIfImpl","sourcecode":"if (int != (org.apache.commons.lang3.StringUtils.int)) {\n    return java.lang.String.substring((int + (java.lang.String.length())), int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5378","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"dab1dc8a-bcb1-11e4-ab0b-93a733774451","variableMapping":{"milliseconds":"t","seconds":"v"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:393","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1000 * int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:620","type":"CtAssignmentImpl","sourcecode":"int = (int - int) / 2"},"status":-2},{"failures":[],"tindex":"dab1dc8b-bcb1-11e4-ab0b-bfb0613f858c","variableMapping":{"str":"pattern","parsePattern":"pattern","str2":"pattern"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)"},"status":-2},{"failures":[],"tindex":"dab1dc8c-bcb1-11e4-ab0b-173a558fd46f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1881","type":"CtLocalVariableImpl","sourcecode":"final int int = int - 1"},"status":-2},{"failures":[],"tindex":"dab1dc8d-bcb1-11e4-ab0b-6f078b5390ed","variableMapping":{"ch":"end","range":"range"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.CharSet:225","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.CharRange.contains(char)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:190","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char))"},"status":-1},{"failures":[],"tindex":"dab1dc8e-bcb1-11e4-ab0b-5595a6c1b070","variableMapping":{"srcPos":"tokenPos","shift":"tokenPos","i":"tokenPos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:1333","type":"CtAssignmentImpl","sourcecode":"int = (int * 8) + int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:459","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"dab1dc8f-bcb1-11e4-ab0b-077c4cc51a0b","variableMapping":{"index":"startPos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringEscapeUtils:395","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:795","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"dab1dc90-bcb1-11e4-ab0b-fff86ab4f37f","variableMapping":{"pos":"i"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2868","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt((int)++)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2235","type":"CtIfImpl","sourcecode":"if (short == (short[][int])) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"dab1dc91-bcb1-11e4-ab0b-f3349e8eea79","variableMapping":{"nBytes":"k","srcPos":"u"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1294","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:596","type":"CtWhileImpl","sourcecode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}"},"status":-1},{"failureDictionary":{}},{"memory":32197,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
