[{"failures":[],"tindex":"a8888f2f-bc98-11e4-9b44-79037503aca2","variableMapping":{"this":"style","buffer":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:398","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(java.lang.StringBuffer)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:743","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))"},"status":0},{"failures":[],"tindex":"a888b640-bc98-11e4-9b44-35b2a4eee8d4","variableMapping":{"str":"cs","this":"cs"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2264","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.(indexOf(java.lang.String, 0)) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1635","type":"CtIfImpl","sourcecode":"if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"a888b641-bc98-11e4-9b44-1b1960d4c8eb","variableMapping":{"nBools":"result","dstPos":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:1083","type":"CtIfImpl","sourcecode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:167","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> : java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.values()) {\n    int += org.apache.commons.lang3.concurrent.BackgroundInitializer<?>.getTaskCount();\n}"},"status":0},{"failures":[],"tindex":"a888b642-bc98-11e4-9b44-215058cfeba0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:119","type":"CtReturnImpl","sourcecode":"return 14"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:262","type":"CtReturnImpl","sourcecode":"return (long) < long ? -1 : (long) == long ? 0 : 1"},"status":-2},{"failures":[],"tindex":"a888b643-bc98-11e4-9b44-e5b7714c7d42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:6598","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"status":-2},{"failures":[],"tindex":"a888b644-bc98-11e4-9b44-178224fd01d6","variableMapping":{"strLen":"java.util.Calendar.DST_OFFSET","size":"java.util.Calendar.ZONE_OFFSET"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2352","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) - int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1195","type":"CtLocalVariableImpl","sourcecode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int))"},"status":-2},{"failures":[],"tindex":"a888b645-bc98-11e4-9b44-59b67c2ef279","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:494","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1474","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\")"},"status":-2},{"failures":[],"tindex":"a888b646-bc98-11e4-9b44-41a9057cca82","variableMapping":{"str":"seq","sub":"seq","this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:5812","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1760","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"status":0},{"failures":[],"tindex":"a888b647-bc98-11e4-9b44-a1eb17f96a7b","variableMapping":{"trace":"causeFrames","frames":"wrapperFrames"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:535","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:551","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"a888b648-bc98-11e4-9b44-23def2a7484a","variableMapping":{"bufferEnd":"csLast","len":"i","pos":"i"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:368","type":"CtIfImpl","sourcecode":"if ((int + int) > int) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1548","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n        return int;\n    } \n} else {\n    return int;\n}"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392}],"os.version":"3.2.0-4-amd64"}]
