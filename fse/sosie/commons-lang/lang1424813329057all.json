[{"failures":[],"tindex":"1f45b808-bc6c-11e4-ba3c-e10d5fa95d5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4178","type":"CtIfImpl","sourcecode":"if (!java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n    char[][int++] = java.lang.String.charAt(int);\n} "},"status":-1},{"failures":[],"tindex":"1f45df19-bc6c-11e4-ba3c-3160a14f0019","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:305","type":"CtAssignmentImpl","sourcecode":"boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()))"},"status":-2},{"failures":[],"tindex":"1f45df1a-bc6c-11e4-ba3c-0d6e160ed424","variableMapping":{"offset":"srcPos","spaceToWrapAt":"i"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:197","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1300","type":"CtAssignmentImpl","sourcecode":"int = (int * 8) + int"},"status":-2},{"failures":[],"tindex":"1f45df1b-bc6c-11e4-ba3c-f1e911b7eb77","variableMapping":{"exceptionContext":"exceptionContext","label":"value","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ContextedException:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ContextedException:191","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.exception.ExceptionContext.setContextValue(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"1f45df1c-bc6c-11e4-ba3c-f1e0f6a161e9","variableMapping":{"startIndex":"bits"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2301","type":"CtAssignmentImpl","sourcecode":"int = int < 0 ? 0 : int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:847","type":"CtAssignmentImpl","sourcecode":"int = (int & (~int)) | int"},"status":-2},{"failures":[],"tindex":"1f45df1d-bc6c-11e4-ba3c-2bc29ae12ef8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>))"},"status":-1},{"failures":[],"tindex":"1f45df1e-bc6c-11e4-ba3c-8f000437b76c","variableMapping":{"sb":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ClassPathUtils:85","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\".\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:502","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-1},{"failures":[],"tindex":"1f45df1f-bc6c-11e4-ba3c-cf38f1a0fdc9","variableMapping":{"this":"style"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.setDefaultFullDetail(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:876","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object[], null)"},"status":0},{"failures":[],"tindex":"1f45df20-bc6c-11e4-ba3c-018d03eeeec5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3190","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Short[].int) ; int++) {\n    final java.lang.Short java.lang.Short = java.lang.Short[][int];\n    short[][int] = java.lang.Short == null ? short : java.lang.Short.shortValue();\n}"},"status":-1},{"failures":[],"tindex":"1f45df21-bc6c-11e4-ba3c-ff30afb1db17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1440","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    java.lang.String.getChars(0, int, char[], int);\n} else {\n    final int int = int - int;\n    java.lang.String.getChars(0, int, char[], int);\n    for (int int = 0 ; int < int ; int++) {\n        char[][(((int) + int) + int)] = char;\n    }\n}"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2389},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2389}],"os.version":"3.2.0-4-amd64"}]
