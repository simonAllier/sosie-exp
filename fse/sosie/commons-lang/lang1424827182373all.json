[{"failures":[],"tindex":"604c3e3d-bc8c-11e4-a420-f3123c05d79e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:533","type":"CtLocalVariableImpl","sourcecode":"final java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> = org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.getCache(int)"},"status":-2},{"failures":[],"tindex":"604c654e-bc8c-11e4-a420-11a74c12c5a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:758","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.append(char[], int, int)"},"status":-1},{"failures":[],"tindex":"604c654f-bc8c-11e4-a420-97851a11bac1","variableMapping":{"srcPos":"months","shift":"months","i":"months"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:1198","type":"CtAssignmentImpl","sourcecode":"int = (int * 32) + int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl","sourcecode":"int += 12"},"status":-1},{"failures":[],"tindex":"604c6550-bc8c-11e4-a420-73b239c4d180","variableMapping":{"hours":"fmtCount","days":"fmtCount"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:310","type":"CtWhileImpl","sourcecode":"while (int < 0) {\n    int += 24;\n    int -= 1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:157","type":"CtWhileImpl","sourcecode":"while ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) {\n    switch (char[][java.text.ParsePosition.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int++;\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            final int int = java.text.ParsePosition.getIndex();\n            final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n            java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(int);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            java.text.Format java.text.Format = null;\n            java.lang.String java.lang.String = null;\n            if ((char[][java.text.ParsePosition.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                java.lang.String = org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n                java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String);\n                if (java.text.Format == null) {\n                    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n                } \n            } \n            java.util.ArrayList<java.text.Format>.add(java.text.Format);\n            java.util.ArrayList<java.lang.String>.add((java.text.Format == null ? null : java.lang.String));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.lang.String>.size()) == int));\n            if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n            } \n        default :\n            java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n    }\n}"},"status":0},{"failureDictionary":{}},{"memory":16024,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2388},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2388}],"os.version":"3.2.0-4-amd64"}]
