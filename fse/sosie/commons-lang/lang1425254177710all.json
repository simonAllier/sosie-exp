[{"failures":[],"tindex":"8d6688f8-c06e-11e4-bbca-73c68562b7fd","variableMapping":{"org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.INSTANCE":"rule","rule":"rule"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:201","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int)"},"status":-2},{"failures":[],"tindex":"8d6688f9-c06e-11e4-bbca-afe4bd651cdb","variableMapping":{"str":"str","len":"lastIdx"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.LocaleUtils:106","type":"CtIfImpl","sourcecode":"if (int < 3) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5013","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt((int - 1))) == (org.apache.commons.lang3.CharUtils.char)) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"8d6688fa-c06e-11e4-bbca-2de92fa78978","variableMapping":{"x":"shift","y":"shift"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:676","type":"CtLocalVariableImpl","sourcecode":"final long long = ((long)(int)) + ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1056","type":"CtLocalVariableImpl","sourcecode":"final long long = 1L << int"},"status":-1},{"failures":[],"tindex":"8d6688fb-c06e-11e4-bbca-4d161ea4eab3","variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"startIndex","startPos":"startIndex"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2429","type":"CtForImpl","sourcecode":"for (int int = int ; int >= 0 ; int--) {\n    if ((char[][int]) == char) {\n        return int;\n    } \n}"},"status":0},{"failures":[],"tindex":"8d67c17c-c06e-11e4-bbca-6bcb00ffdd08","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:575","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8d67c17d-c06e-11e4-bbca-b3980c514114","variableMapping":{"srcPos":"trimStart","nHexs":"trimStart"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1433","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))"},"status":-1},{"failures":[],"tindex":"8d67e88e-c06e-11e4-bbca-376ed660457d","variableMapping":{"array":"dst"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1370","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[],"tindex":"8d67e88f-c06e-11e4-bbca-8fb6a659cb77","variableMapping":{"str":"str","remove":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5427","type":"CtIfImpl","sourcecode":"if (int == int) {\n    return java.lang.String.concat(java.lang.String);\n} else if (int < int) {\n    return java.lang.String.substring(0, int).concat(java.lang.String);\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return new java.lang.String(char[]).concat(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"8d67e890-c06e-11e4-bbca-efe3448a8f0a","variableMapping":{"str":"str","remove":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:4287","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(java.lang.String)) {\n    return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"8d67e891-c06e-11e4-bbca-b34c063034ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n    if (boolean) {\n        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n    } \n    int += int;\n    final int int = int;\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String java.lang.String = null;\n    if (org.apache.commons.lang3.text.StrMatcher != null) {\n        final char[] char[] = java.lang.String.toCharArray();\n        int int = 0;\n        for (int int = 0 ; int < (char[].int) ; int++) {\n            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                break;\n            } \n            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n                java.lang.String = java.lang.String.substring((int + int));\n                break;\n            } \n        }\n    } \n    if (java.util.List<java.lang.String> == null) {\n        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n    } \n    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n    java.util.List<java.lang.String>.add(java.lang.String);\n    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n    if (java.lang.String == null) {\n        java.lang.String = java.lang.String;\n    } \n    if (java.lang.String != null) {\n        final int int = java.lang.String.length();\n        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n        boolean = true;\n        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n        int = (int + int) - (int - int);\n        int += int;\n        int += int;\n        int += int;\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    } \n    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n    break;\n} else {\n    int--;\n    int += int;\n}"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394}],"os.version":"3.2.0-4-amd64"}]
