[{"failures":[],"tindex":"717bad8a-bc9f-11e4-918b-9d24bd7590c5","variableMapping":{"buf":"buf","c":"c"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1692","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>.getEnclosingClass()) == null) {\n    java.lang.StringBuilder.insert(0, java.lang.Class<?>.getName());\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1691","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((java.lang.Class<?>.getEnclosingClass()) == null) {\n        java.lang.StringBuilder.insert(0, java.lang.Class<?>.getName());\n        break;\n    } \n    java.lang.StringBuilder.insert(0, java.lang.Class<?>.getSimpleName()).insert(0, '.');\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":-2},{"failures":[],"tindex":"717bad8b-bc9f-11e4-918b-27650d111825","variableMapping":{"ex":"cause"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:144","type":"CtIfImpl","sourcecode":"if (((java.lang.Throwable != null) && (!(java.lang.Throwable instanceof java.lang.RuntimeException))) && (!(java.lang.Throwable instanceof java.lang.Error))) {\n    return java.lang.Throwable;\n} else {\n    throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + java.lang.Throwable));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:153","type":"CtIfImpl","sourcecode":"if (java.lang.Throwable != null) {\n    return java.lang.Throwable;\n} "},"status":-1},{"failures":[],"tindex":"717bad8c-bc9f-11e4-918b-41d160736d49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1535","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.TypeVariable<?>), \"missing argument mapping for %s\", org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.TypeVariable<?>))"},"status":0},{"failures":[],"tindex":"717bad8d-bc9f-11e4-918b-efd282292a66","variableMapping":{"comparison":"comparison"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:585","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    return this;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:694","type":"CtIfImpl","sourcecode":"if (long[] == null) {\n    int = -1;\n    return this;\n} "},"status":0},{"failures":[],"tindex":"717bad8e-bc9f-11e4-918b-ebb483d07733","variableMapping":{"shift":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:846","type":"CtLocalVariableImpl","sourcecode":"final int int = 255 << int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:338","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int))"},"status":-1},{"failures":[],"tindex":"717bd49f-bc9f-11e4-918b-ff182b2bd688","variableMapping":{"startIndex":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2426","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return -1;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2078","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.int"},"status":-2},{"failures":[],"tindex":"717bd4a0-bc9f-11e4-918b-9db2f31ea8ac","variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:754","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Character[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3011","type":"CtReturnImpl","sourcecode":"return java.lang.Character[]"},"status":-2},{"failures":[],"tindex":"717bd4a1-bc9f-11e4-918b-bfe7509887fa","variableMapping":{"i":"mSize"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:295","type":"CtIfImpl","sourcecode":"if (int == 25) {\n    throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:851","type":"CtIfImpl","sourcecode":"if (int < 100) {\n    for (int int = int ; (--int) >= 2 ; ) {\n        java.lang.StringBuffer.append('0');\n    }\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    int int;\n    if (int < 1000) {\n        int = 3;\n    } else {\n        org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int);\n        int = java.lang.Integer.java.lang.Integer.toString(int).length();\n    }\n    for (int int = int ; (--int) >= int ; ) {\n        java.lang.StringBuffer.append('0');\n    }\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}"},"status":0},{"failures":[],"tindex":"717bd4a2-bc9f-11e4-918b-f9978cb39c7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:669","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-2},{"failures":[],"tindex":"717bd4a3-bc9f-11e4-918b-f36a8f4ba1f5","variableMapping":{"append":"end"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1524","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:675","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
