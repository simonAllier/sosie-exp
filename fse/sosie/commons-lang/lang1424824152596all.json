[{"failures":[],"tindex":"526c0378-bc85-11e4-ae18-d7839a829151","variableMapping":{"str":"str","beg":"i","end":"i","substrings":"list"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:2839","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2975","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String.substring(int, int))"},"status":-1},{"failures":[],"tindex":"526c2a89-bc85-11e4-ae18-ab51ae3dfdbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:210","type":"CtOperatorAssignmentImpl","sourcecode":"int |= java.lang.Class<?>.hashCode()"},"status":0},{"failures":[],"tindex":"526c2a8a-bc85-11e4-ae18-ad76b2c06088","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2833","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:122","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.toHexString(int).toUpperCase(java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"526c2a8b-bc85-11e4-ae18-0388e073f5cc","variableMapping":{"value":"tmp"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:97","type":"CtAssignmentImpl","sourcecode":"this.byte = byte"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1616","type":"CtAssignmentImpl","sourcecode":"byte = byte[][int]"},"status":-2},{"failures":[],"tindex":"526c2a8c-bc85-11e4-ae18-a1e908a07b65","variableMapping":{"objectToTest":"value","lhs":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.DiffBuilder:809","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:191","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry().put(java.lang.Object, null)"},"status":-2},{"failures":[],"tindex":"526c2a8d-bc85-11e4-ae18-afb2fce30d05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1892","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"526c2a8e-bc85-11e4-ae18-391889067f97","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String, int, null, false)"},"status":-1},{"failures":[],"tindex":"526c2a8f-bc85-11e4-ae18-47df0eca3bdb","variableMapping":{"str":"searchString","org.apache.commons.lang3.StringUtils.EMPTY":"replacement"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl","sourcecode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4418","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String, 1)"},"status":-1},{"failures":[],"tindex":"526c2a90-bc85-11e4-ae18-19a5fde0c720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:762","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"526c2a91-bc85-11e4-ae18-e56de32e2b16","variableMapping":{"ignoredLen":"startMatchLen","pos":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:794","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int += int;\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl","sourcecode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392}],"os.version":"3.2.0-4-amd64"}]
