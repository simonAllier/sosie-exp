[{"failures":[],"tindex":"b590b705-c089-11e4-82f4-c500fec71e90","variableMapping":{"str":"separator"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1155","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<?> != null) {\n    @java.lang.SuppressWarnings(value = \"deprecation\")\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.toString(java.lang.String);\n    final java.util.Iterator<?> java.util.Iterator<?> = java.lang.Iterable<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n        if (java.util.Iterator<?>.hasNext()) {\n            org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"b590de16-c089-11e4-82f4-f3a20a47675f","variableMapping":{"bit_pattern":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BitField:45","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:210","type":"CtOperatorAssignmentImpl","sourcecode":"int |= java.lang.Class<?>.hashCode()"},"status":0},{"failures":[],"tindex":"b590de17-c089-11e4-82f4-bbe82d25a8b5","variableMapping":{"value":"match"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:3099","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"b590de18-c089-11e4-82f4-a37726d5b46f","variableMapping":{"n":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2898","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return long;\n} "},"status":0},{"failures":[],"tindex":"b590de19-c089-11e4-82f4-7b8401636f49","variableMapping":{"dstPos":"offset","nInts":"bufEnd"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:690","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"b590de1a-c089-11e4-82f4-1dba9f4ef629","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl","sourcecode":"int int = 71 << 4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:544","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()"},"status":-2},{"failures":[],"tindex":"b590de1b-c089-11e4-82f4-67e3d3f7727c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:519","type":"CtLocalVariableImpl","sourcecode":"final boolean[] boolean[] = new boolean[4]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1209","type":"CtLocalVariableImpl","sourcecode":"final boolean[] boolean[] = new boolean[int]"},"status":-2},{"failures":[],"tindex":"b590de1c-c089-11e4-82f4-df7993e401a5","variableMapping":{"formatter":"formatter","dateStyle":"dateStyle","this":"this","locale":"locale"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FormatCache:201","type":"CtAssignmentImpl","sourcecode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:204","type":"CtAssignmentImpl","sourcecode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale)"},"status":-1},{"failures":[],"tindex":"b591052d-c089-11e4-82f4-057c8cd9369f","variableMapping":{"array":"array2"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:342","type":"CtReturnImpl","sourcecode":"return long[].clone()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3910","type":"CtIfImpl","sourcecode":"if (long[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(long[]);\n} "},"status":-2},{"failures":[],"tindex":"b591052e-c089-11e4-82f4-b591f881a46b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1889","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394}],"os.version":"3.2.0-4-amd64"}]
