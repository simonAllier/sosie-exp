[{"failures":[],"tindex":"65cb5e34-c02f-11e4-97a3-f7baf803ff56","variableMapping":{"buffer":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1359","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(java.lang.String)"},"status":-2},{"failures":[],"tindex":"65cb8545-c02f-11e4-97a3-85b111926102","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:241","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:802","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 64\")"},"status":0},{"failures":[],"tindex":"65cb8546-c02f-11e4-97a3-d987b1bb4d79","variableMapping":{"startInclusive":"a","endInclusive":"a"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.RandomUtils:168","type":"CtIfImpl","sourcecode":"if (float == float) {\n    return float;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:259","type":"CtReturnImpl","sourcecode":"return float"},"status":-2},{"failures":[],"tindex":"65cb8547-c02f-11e4-97a3-67960d09cf5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1076","type":"CtIfImpl","sourcecode":"if ((T[] != null) && ((T[].int) > 0)) {\n    for (final java.lang.Object java.lang.Object : T[]) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object);\n    }\n} "},"status":-1},{"failures":[],"tindex":"65cb8548-c02f-11e4-97a3-e359505654ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:519","type":"CtLocalVariableImpl","sourcecode":"final boolean[] boolean[] = new boolean[4]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1016","type":"CtLocalVariableImpl","sourcecode":"final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])"},"status":-2},{"failures":[],"tindex":"65cb8549-c02f-11e4-97a3-bdd4ea4b0ce7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2833","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, false)"},"status":-2},{"failures":[],"tindex":"65cb854a-c02f-11e4-97a3-1b7f7616e6be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5717","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Long java.lang.Long = java.lang.Long.java.lang.Long.valueOf(long)"},"status":-2},{"failures":[],"tindex":"65cb854b-c02f-11e4-97a3-533c8ade14d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:219","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"65cb854c-c02f-11e4-97a3-e1d7522186ef","variableMapping":{"toBound":"type","this":"this","type":"type","typeVarAssigns":"typeVarAssigns"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:657","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:608","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType);\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType);\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    return true;\n} "},"status":0},{"failures":[],"tindex":"65cb854d-c02f-11e4-97a3-b90b5310a98f","variableMapping":{"srcPos":"srcPos","src":"src"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:454","type":"CtIfImpl","sourcecode":"if (boolean[][int]) {\n    return 'a';\n} else {\n    return '2';\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:532","type":"CtIfImpl","sourcecode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'd';\n} else {\n    return 'c';\n}"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394}],"os.version":"3.2.0-4-amd64"}]
