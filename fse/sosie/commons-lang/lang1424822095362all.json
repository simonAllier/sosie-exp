[{"failures":[],"tindex":"8836dc5e-bc80-11e4-a515-ef6131cb4ceb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl","sourcecode":"int int = 71 << 4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:7318","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.CharSequence.length()) - (java.lang.CharSequence.length())"},"status":-2},{"failures":[],"tindex":"8837036f-bc80-11e4-a515-85b3bb886bdc","variableMapping":{"milliseconds":"pos","seconds":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:393","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1000 * int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:759","type":"CtOperatorAssignmentImpl","sourcecode":"int += int * 2"},"status":-1},{"failures":[],"tindex":"88370370-bc80-11e4-a515-fb4a74336ea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:112","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":"88370371-bc80-11e4-a515-f557aeff03a3","variableMapping":{"milliseconds":"length","seconds":"length"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:393","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1000 * int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:983","type":"CtAssignmentImpl","sourcecode":"int = (boolean[].int) < (boolean[].int) ? -1 : +1"},"status":-2},{"failures":[],"tindex":"88370372-bc80-11e4-a515-e5d2b2f6aced","variableMapping":{"str":"str","parsePatterns":"parsePatterns","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:311","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDateStrictly(java.lang.String, null, java.lang.String[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:268","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, null, java.lang.String[])"},"status":-1},{"failures":[],"tindex":"88370373-bc80-11e4-a515-9b43b234d944","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:526","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String))"},"status":-2},{"failures":[],"tindex":"88370374-bc80-11e4-a515-f1ec9f5218c0","variableMapping":{"csLength":"endIndexExclusive"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1624","type":"CtLocalVariableImpl","sourcecode":"final int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1084","type":"CtLocalVariableImpl","sourcecode":"final int int = int - int"},"status":-1},{"failures":[],"tindex":"88370375-bc80-11e4-a515-791aff1ed0d2","variableMapping":{"prior":"pattern","value":"pattern"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:195","type":"CtTryImpl","sourcecode":"try {\n    java.text.DateFormat java.text.DateFormat;\n    if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n    }\n    java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String = java.lang.String;\n    } \n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n}"},"status":0},{"failures":[],"tindex":"88370376-bc80-11e4-a515-651211533923","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:577","type":"CtReturnImpl","sourcecode":"return '1'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:633","type":"CtReturnImpl","sourcecode":"return '0'"},"status":-1},{"failures":[],"tindex":"88370377-bc80-11e4-a515-03f88c73cbb6","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1443","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:609","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type))"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
