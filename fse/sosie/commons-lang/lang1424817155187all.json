[{"failures":[],"tindex":"0796b4bf-bc75-11e4-a00e-171989f58a36","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:543","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"HashCodeBuilder requires an odd multiplier\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:574","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is unsupported\")"},"status":-2},{"failures":[],"tindex":"0796b4c0-bc75-11e4-a00e-cd0127c6e94d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:6935","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= int ; int++) {\n    final char char = java.lang.CharSequence.charAt((int - 1));\n    int[][0] = int;\n    final int int = java.lang.Math.java.lang.Math.max(1, (int - int));\n    final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int));\n    if (int > int) {\n        return -1;\n    } \n    if (int > 1) {\n        int[][(int - 1)] = java.lang.Integer.int;\n    } \n    for (int int = int ; int <= int ; int++) {\n        if ((java.lang.CharSequence.charAt((int - 1))) == char) {\n            int[][int] = int[][(int - 1)];\n        } else {\n            int[][int] = 1 + java.lang.Math.(java.lang.Math.min(java.lang.Math.java.lang.Math.min(int[][(int - 1)], int[][int]), int[][(int - 1)]));\n        }\n    }\n    int[] = int[];\n    int[] = int[];\n    int[] = int[];\n}"},"status":-1},{"failures":[],"tindex":"0796b4c1-bc75-11e4-a00e-bbf1a1afbff2","variableMapping":{"bool":"java.lang.Boolean.FALSE"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:328","type":"CtIfImpl","sourcecode":"if (int == int) {\n    return java.lang.Boolean.java.lang.Boolean;\n} "},"status":-2},{"failures":[],"tindex":"0796b4c2-bc75-11e4-a00e-a73c0433c0c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1093","type":"CtAssignmentImpl","sourcecode":"int = (int & (~int)) | int"},"status":-1},{"failures":[],"tindex":"0796b4c3-bc75-11e4-a00e-9718609690e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:524","type":"CtWhileImpl","sourcecode":"hierarchyTraversal : while (java.util.Iterator<java.lang.Class<?>>.hasNext()) {\n    final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next();\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.Class<?>[]);\n    if (java.lang.reflect.Method == null) {\n        continue;\n    } \n    if (java.util.Arrays.java.util.Arrays.equals(java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) {\n        java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n        continue;\n    } \n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass());\n    for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n            continue hierarchyTraversal;\n        } \n    }\n    java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}"},"status":-1},{"failures":[],"tindex":"0796b4c4-bc75-11e4-a00e-4d1e52752d7d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1649","type":"CtLocalVariableImpl","sourcecode":"char char"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:467","type":"CtLocalVariableImpl","sourcecode":"char char = 0"},"status":-2},{"failures":[],"tindex":"0796b4c5-bc75-11e4-a00e-6956f8847bdb","variableMapping":{"offset":"java.util.Calendar.MINUTE"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1204","type":"CtLocalVariableImpl","sourcecode":"final int int = int / ((60 * 60) * 1000)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:291","type":"CtLocalVariableImpl","sourcecode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))"},"status":-2},{"failures":[],"tindex":"0796b4c6-bc75-11e4-a00e-d1b5c3cf380f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:6408","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"...\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:521","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.reflect.Field.getName()"},"status":-2},{"failures":[],"tindex":"0796b4c7-bc75-11e4-a00e-898ef24ea14a","variableMapping":{"this":"object","type":"object"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1672","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:301","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(java.lang.Object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>))"},"status":-2},{"failures":[],"tindex":"0796b4c8-bc75-11e4-a00e-5d57b9658cfa","variableMapping":{"value":"a"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:97","type":"CtAssignmentImpl","sourcecode":"this.byte = byte"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1154","type":"CtAssignmentImpl","sourcecode":"byte = byte"},"status":-1},{"failureDictionary":{}},{"memory":32197,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
