[{"failures":[],"tindex":"e953ed76-bca3-11e4-b964-914b8832a73d","variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","endLimit":"startIndex","startPos":"length"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl","sourcecode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2171","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (int[].int)) {\n    int = (int[].int) - 1;\n} "},"status":-2},{"failures":[],"tindex":"e9541487-bca3-11e4-b964-5bbfb67ad5a1","variableMapping":{"str":"ret","len":"lastIdx","pos":"lastIdx","org.apache.commons.lang3.StringUtils.EMPTY":"ret"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:2248","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.lang.String.length()))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5091","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, (int - 1))"},"status":-1},{"failures":[],"tindex":"e9541488-bca3-11e4-b964-0deba7c4f3d6","variableMapping":{"chars":"source"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1060","type":"CtIfImpl","sourcecode":"if ((char[]) == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:434","type":"CtIfImpl","sourcecode":"if (char[] == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"e9541489-bca3-11e4-b964-17533a8b897d","variableMapping":{"array":"dst","i":"shift","j":"i"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1582","type":"CtAssignmentImpl","sourcecode":"boolean[][int] = boolean[][int]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1562","type":"CtAssignmentImpl","sourcecode":"boolean[][(int + int)] = (1 & (long >> int)) != 0"},"status":-1},{"failures":[],"tindex":"e954148a-bca3-11e4-b964-894687b65e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:115","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"e954148b-bca3-11e4-b964-db98e63b194c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:202","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Method != null) && (java.lang.Throwable.java.lang.Throwable.isAssignableFrom(java.lang.reflect.Method.getReturnType()))) {\n    try {\n        return ((java.lang.Throwable)(java.lang.reflect.Method.invoke(java.lang.Throwable)));\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"e9543b9c-bca3-11e4-b964-bd8c395688d8","variableMapping":{"srcPos":"found","shift":"found","i":"found"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:1663","type":"CtAssignmentImpl","sourcecode":"int = (int * 1) + int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5282","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(T[], T, int)"},"status":-1},{"failures":[],"tindex":"e9543b9d-bca3-11e4-b964-297c235aa9af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:634","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>.isPrimitive()) && (!(java.lang.Class<?>.isPrimitive()))) {\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>);\n    if (java.lang.Class<?> == null) {\n        return false;\n    } \n} "},"status":-1},{"failures":[],"tindex":"e9543b9e-bca3-11e4-b964-078bbaf7f580","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n    if (boolean) {\n        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n    } \n    int += int;\n    final int int = int;\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String java.lang.String = null;\n    if (org.apache.commons.lang3.text.StrMatcher != null) {\n        final char[] char[] = java.lang.String.toCharArray();\n        int int = 0;\n        for (int int = 0 ; int < (char[].int) ; int++) {\n            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                break;\n            } \n            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n                java.lang.String = java.lang.String.substring((int + int));\n                break;\n            } \n        }\n    } \n    if (java.util.List<java.lang.String> == null) {\n        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n    } \n    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n    java.util.List<java.lang.String>.add(java.lang.String);\n    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n    if (java.lang.String == null) {\n        java.lang.String = java.lang.String;\n    } \n    if (java.lang.String != null) {\n        final int int = java.lang.String.length();\n        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n        boolean = true;\n        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n        int = (int + int) - (int - int);\n        int += int;\n        int += int;\n        int += int;\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    } \n    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n    break;\n} else {\n    int--;\n    int += int;\n}"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
