[{"failures":[],"tindex":"4b344a65-bc93-11e4-8105-09842f53014f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.SerializationUtils:238","type":"CtLocalVariableImpl","sourcecode":"final java.io.IOException java.io.IOException"},"status":0},{"failures":[],"tindex":"4b347176-bc93-11e4-8105-998bcf27b16b","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.ConcurrentMap<K, V> == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:280","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>.get())"},"status":-1},{"failures":[],"tindex":"4b347177-bc93-11e4-8105-a9eaf1590b96","variableMapping":{"index":"transpositions"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:7114","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        int++;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4b347178-bc93-11e4-8105-597456a6513d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:543","type":"CtReturnImpl","sourcecode":"return 'a'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:198","type":"CtReturnImpl","sourcecode":"return java.lang.String.charAt(0)"},"status":-1},{"failures":[],"tindex":"4b347179-bc93-11e4-8105-4917d1cae418","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:699","type":"CtLocalVariableImpl","sourcecode":"java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException"},"status":0},{"failures":[],"tindex":"4b34717a-bc93-11e4-8105-431349191902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:408","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"4b34717b-bc93-11e4-8105-ed0bc1a24530","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:486","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.SerializationUtils:321","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName()"},"status":-2},{"failures":[],"tindex":"4b34717c-bc93-11e4-8105-a77edf2b8769","variableMapping":{"this":"this","numeric":"exp"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:527","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}"},"status":-2},{"failures":[],"tindex":"4b34717d-bc93-11e4-8105-a188629c3b71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:556","type":"CtIfImpl","sourcecode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '7';\n} else {\n    return '6';\n}"},"status":-2},{"failures":[],"tindex":"4b34717e-bc93-11e4-8105-c3e4759aa9b6","variableMapping":{"toWildcardType":"type"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:596","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.WildcardType == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:608","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType);\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType);\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    return true;\n} "},"status":-1},{"failureDictionary":{}},{"memory":32199,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
