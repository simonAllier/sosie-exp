[{"failures":[],"tindex":"34a9dcd8-c088-11e4-964d-11e28b5ffcbe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:528","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"34aa03e9-c088-11e4-964d-ef6f8980f240","variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl","sourcecode":"return short[].clone()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3187","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.short[]"},"status":-2},{"failures":[],"tindex":"34aa03ea-c088-11e4-964d-49d602b60135","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.CharUtils:264","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The character must not be null\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Stopwatch already started. \")"},"status":-1},{"failures":[],"tindex":"34aa03eb-c088-11e4-964d-0969aed5303a","variableMapping":{"java.lang.Integer.MIN_VALUE":"field","denominator":"java.util.Calendar.MINUTE","numerator":"java.util.Calendar.MINUTE"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl","sourcecode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:990","type":"CtIfImpl","sourcecode":"if (int == (java.util.Calendar.int)) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"34aa03ec-c088-11e4-964d-a960cc278b53","variableMapping":{"startIndex":"value","endIndex":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:377","type":"CtLocalVariableImpl","sourcecode":"final int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:261","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.lang3.mutable.MutableInt.int"},"status":-1},{"failures":[],"tindex":"34aa03ed-c088-11e4-964d-3d29e49ddb56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1649","type":"CtLocalVariableImpl","sourcecode":"char char"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:110","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(2)"},"status":-2},{"failures":[],"tindex":"34aa03ee-c088-11e4-964d-d745b7bce52d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:154","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} "},"status":-1},{"failures":[],"tindex":"34aa03ef-c088-11e4-964d-a5002f541ed4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtIfImpl","sourcecode":"if (java.lang.String == \"true\") {\n    return java.lang.Boolean.java.lang.Boolean;\n} "},"status":0},{"failures":[],"tindex":"34aa03f0-c088-11e4-964d-a98e7fbe3a3a","variableMapping":{"newSize":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1085","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtIfImpl","sourcecode":"if (java.lang.Byte[] == null) {\n    return null;\n} else if ((java.lang.Byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} "},"status":-2},{"failures":[],"tindex":"34aa03f1-c088-11e4-964d-f19242549f04","variableMapping":{"currentType":"pos","type":"lengthChange"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:3234","type":"CtIfImpl","sourcecode":"if (int == int) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl","sourcecode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}"},"status":0},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394}],"os.version":"3.2.0-4-amd64"}]
