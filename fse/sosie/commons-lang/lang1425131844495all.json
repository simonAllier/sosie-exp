[{"failures":[],"tindex":"b9122e69-bf51-11e4-abcc-e92b803c3271","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"valueIfNull","separator":"valueIfNull"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:2335","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:160","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"b912557a-bf51-11e4-abcc-c121d61659b1","variableMapping":{"arrayEnd":"fieldName"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:697","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))"},"status":-2},{"failures":[],"tindex":"b912557b-bf51-11e4-abcc-13840a8796ad","variableMapping":{"value":"result","operand":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:138","type":"CtOperatorAssignmentImpl","sourcecode":"this.long += long"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1699","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)"},"status":-1},{"failures":[],"tindex":"b912557c-bf51-11e4-abcc-3955a35e3847","variableMapping":{"tempIndex":"out","i":"out","textIndex":"shift","replaceIndex":"srcPos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:4733","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || (int < int)) {\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:770","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    final int int = (65535 & (short[][(int + int)])) << int;\n    final int int = 65535 << int;\n    int = (int & (~int)) | int;\n}"},"status":-2},{"failures":[],"tindex":"b912557d-bf51-11e4-abcc-ab6b0591b0cc","variableMapping":{"java.lang.Boolean.FALSE":"java.lang.Boolean.TRUE","primitive":"primitive","this":"this","java.lang.Boolean.TRUE":"java.lang.Boolean.TRUE"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1017","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1082","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean"},"status":-2},{"failures":[],"tindex":"b912557e-bf51-11e4-abcc-575a82675b92","variableMapping":{"length":"length","index":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtIfImpl","sourcecode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?> java.lang.Class<?>;\n    java.lang.Class<?> java.lang.Class<?>;\n    java.lang.Class<?> = java.lang.Class<?>[][int];\n    java.lang.Class<?> = java.lang.Class<?>[][int];\n    float += org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class<?>, java.lang.Class<?>);\n}"},"status":-2},{"failures":[],"tindex":"b912557f-bf51-11e4-abcc-5b318f62de41","variableMapping":{"shift":"srcPos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:810","type":"CtLocalVariableImpl","sourcecode":"final long long = 255L << int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:735","type":"CtLocalVariableImpl","sourcecode":"final long long = (65535L & (short[][(int + int)])) << int"},"status":-1},{"failures":[],"tindex":"b9125580-bf51-11e4-abcc-3571602c2213","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:127","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b9125581-bf51-11e4-abcc-af768a2fbf59","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:897","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[],"tindex":"b9127c92-bf51-11e4-abcc-ed57a4fb10fc","variableMapping":{"k":"size"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl","sourcecode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:203","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    int = int;\n} else if (int > (int)) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n    final int int = int;\n    final int int = int;\n    int = int;\n    for (int int = int ; int < int ; int++) {\n        char[][int] = '\u0000';\n    }\n} "},"status":0},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2390},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2390}],"os.version":"3.2.0-4-amd64"}]
