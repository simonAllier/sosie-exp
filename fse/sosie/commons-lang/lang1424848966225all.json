[{"failures":[],"tindex":"187abde6-bcbf-11e4-b35a-2384dca8fd3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:701","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    return -1;\n} "},"status":-1},{"failures":[],"tindex":"187abde7-bcbf-11e4-b35a-1bbdb20747e0","variableMapping":{"u":"tokenLen","java.lang.Integer.MIN_VALUE":"tokenLen","v":"tokenLen"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:579","type":"CtIfImpl","sourcecode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:188","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"187abde8-bcbf-11e4-b35a-53cc17038fad","variableMapping":{"buffer":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1301","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(java.lang.String)"},"status":-2},{"failures":[],"tindex":"187ae4f9-bcbf-11e4-b35a-19ee14e1d679","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1672","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:261","type":"CtLocalVariableImpl","sourcecode":"final long long = org.apache.commons.lang3.mutable.MutableLong.long"},"status":-2},{"failures":[],"tindex":"187ae4fa-bcbf-11e4-b35a-65092dbcb7c1","variableMapping":{"fieldName":"array","array":"array","fullDetail":"array","this":"array","buffer":"array"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1034","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[]);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1083","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} "},"status":-2},{"failures":[],"tindex":"187ae4fb-bcbf-11e4-b35a-09f463705d7a","variableMapping":{"bound":"type","this":"this","toGenericArrayType":"type"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:548","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:608","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType);\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType);\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"187ae4fc-bcbf-11e4-b35a-03db5ff04513","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ObjectUtils:610","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4564","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, 1)"},"status":-2},{"failures":[],"tindex":"187ae4fd-bcbf-11e4-b35a-752d95aa16dd","variableMapping":{"s":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:217","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:623","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\");\n    java.lang.Object = java.lang.reflect.Method.invoke(T);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.lang3.exception.CloneFailedException((\"Cannot clone Cloneable type \" + (T.getClass().getName())) , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause());\n}"},"status":-2},{"failures":[],"tindex":"187ae4fe-bcbf-11e4-b35a-c50b3fdfa0bf","variableMapping":{"annotationType":"reflectUpToClass"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:83","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder((java.lang.Class<? extends java.lang.annotation.Annotation> == null ? \"\" : java.lang.Class<? extends java.lang.annotation.Annotation>.getName())).insert(0, '@').toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, java.lang.Class<? super T>)"},"status":-1},{"failures":[],"tindex":"187ae4ff-bcbf-11e4-b35a-cdd7f820a556","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2833","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4109","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
