[{"failures":[],"tindex":"b71b4b6f-bf47-11e4-9bb2-77991d54703c","variableMapping":{"value":"radix","operand":"radix"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:138","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:740","type":"CtAssignmentImpl","sourcecode":"int = 16"},"status":-1},{"failures":[],"tindex":"b71b7280-bf47-11e4-9bb2-4fdabf641052","variableMapping":{"buf":"rhs","first":"rhs"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:4050","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.lang.StringBuilder.append(java.lang.Object);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:347","type":"CtIfImpl","sourcecode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    java.lang.Class<?> = java.lang.Class<?>;\n} "},"status":-2},{"failures":[],"tindex":"b71b7281-bf47-11e4-9bb2-fd5cedba1115","variableMapping":{"valueMap":"valueMap"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:181","type":"CtNewClassImpl","sourcecode":"new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V>)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:279","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.mapLookup(java.util.Map<java.lang.String, V>), java.lang.String, java.lang.String, char)"},"status":-2},{"failures":[],"tindex":"b71b7282-bf47-11e4-9bb2-4df10f19919d","variableMapping":{"a":"a","b":"b","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtIfImpl","sourcecode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtIfImpl","sourcecode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}"},"status":-1},{"failures":[],"tindex":"b71b7283-bf47-11e4-9bb2-ebb7e34ab463","variableMapping":{"p":"type","other":"type","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.ParameterizedType.getRawType())) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getOwnerType(), java.lang.reflect.ParameterizedType.getOwnerType()))) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getActualTypeArguments(), java.lang.reflect.ParameterizedType.getActualTypeArguments());\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:608","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType);\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType);\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b71b7284-bf47-11e4-9bb2-9d7c5fbdb218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2809","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(float[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} "},"status":-1},{"failures":[],"tindex":"b71b7285-bf47-11e4-9bb2-4b6341e851b9","variableMapping":{"array":"array"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:342","type":"CtReturnImpl","sourcecode":"return long[].clone()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5681","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(long[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))"},"status":-1},{"failures":[],"tindex":"b71b7286-bf47-11e4-9bb2-3d00cf345954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1518","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b71b7287-bf47-11e4-9bb2-5f7bbd6bd24e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:38","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.lang3.text.translate.CodePointTranslator.translate(int, java.io.Writer)"},"status":-2},{"failures":[],"tindex":"b71b7288-bf47-11e4-9bb2-61614d88aa8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5811","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.mutable.MutableInt.increment()"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2391},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2391}],"os.version":"3.2.0-4-amd64"}]
