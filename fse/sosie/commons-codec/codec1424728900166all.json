[{"failures":[],"tindex":"03e0167e-bba6-11e4-b7a3-8defee69eccd","variableMapping":{"b":"c"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])))"},"status":-1},{"failures":[],"tindex":"03e03d8f-bba6-11e4-b7a3-4b1631fe3aab","variableMapping":{"index":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:270","type":"CtReturnImpl","sourcecode":"return (char[].int) - (int)"},"status":-1},{"failures":[],"tindex":"03e03d90-bba6-11e4-b7a3-edc8f56daf83","variableMapping":{"sumLength":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"b","minRating":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"b"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:359","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    try {\n        if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n            continue;\n        } \n        final int int = org.apache.commons.codec.net.Utils.org.apache.commons.codec.net.Utils.digit16(byte[][int]);\n        final int int = org.apache.commons.codec.net.Utils.org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException java.lang.ArrayIndexOutOfBoundsException) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException);\n    }\n} else if ((int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    java.io.ByteArrayOutputStream.write(int);\n} "},"status":-1},{"failures":[],"tindex":"03e064a1-bba6-11e4-b7a3-2db638b5d5e6","variableMapping":{"a":"savedPos","t":"pos","n":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"status":-2},{"failures":[],"tindex":"03e064a2-bba6-11e4-b7a3-891657a714b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:455","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.iterator().next()"},"status":0},{"failures":[],"tindex":"f717bab3-bba6-11e4-b7a3-b779c66af223","variableMapping":{"hasUnderscores":"found"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":-1},{"failures":[],"tindex":"f717bab4-bba6-11e4-b7a3-e747a7bbaf78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:57","type":"CtLocalVariableImpl","sourcecode":"int int = (((byte << 16) & 16777215) | ((byte << 8) & 65535)) | (byte & 255)"},"status":-2},{"failures":[],"tindex":"f717bab5-bba6-11e4-b7a3-e1f152103419","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T')"},"status":-1},{"failures":[],"tindex":"f717bab6-bba6-11e4-b7a3-c309ae23fa67","variableMapping":{"wdsz":"n","this":"this","n":"wdsz"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:152","type":"CtIfImpl","sourcecode":"if ((char != 'C') && org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, char))) {\n    int++;\n} else {\n    switch (char) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n            if (int == 0) {\n                java.lang.StringBuilder.append(char);\n            } \n            break;\n        case 'B' :\n            if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n                break;\n            } \n            java.lang.StringBuilder.append(char);\n            break;\n        case 'C' :\n            if ((org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && (!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int)))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"CIA\")) {\n                java.lang.StringBuilder.append('X');\n                break;\n            } \n            if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n                java.lang.StringBuilder.append('S');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n                java.lang.StringBuilder.append('K');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n                if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n                    java.lang.StringBuilder.append('K');\n                } else {\n                    java.lang.StringBuilder.append('X');\n                }\n            } else {\n                java.lang.StringBuilder.append('K');\n            }\n            break;\n        case 'D' :\n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'G'))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 2)))) >= 0)) {\n                java.lang.StringBuilder.append('J');\n                int += 2;\n            } else {\n                java.lang.StringBuilder.append('T');\n            }\n            break;\n        case 'G' :\n            if (org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n                break;\n            } \n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) && (!org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 2))))) {\n                break;\n            } \n            if ((int > 0) && (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GN\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GNED\")))) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder, int, 'G')) {\n                boolean = true;\n            } else {\n                boolean = false;\n            }\n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) && (!boolean)) {\n                java.lang.StringBuilder.append('J');\n            } else {\n                java.lang.StringBuilder.append('K');\n            }\n            break;\n        case 'H' :\n            if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n                break;\n            } \n            if ((int > 0) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int - 1)))) >= 0)) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder, (int + 1))) {\n                java.lang.StringBuilder.append('H');\n            } \n            break;\n        case 'F' :\n        case 'J' :\n        case 'L' :\n        case 'M' :\n        case 'N' :\n        case 'R' :\n            java.lang.StringBuilder.append(char);\n            break;\n        case 'K' :\n            if (int > 0) {\n                if (!org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'C'))) {\n                    java.lang.StringBuilder.append(char);\n                } \n            } else {\n                java.lang.StringBuilder.append(char);\n            }\n            break;\n        case 'P' :\n            if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n                java.lang.StringBuilder.append('F');\n            } else {\n                java.lang.StringBuilder.append(char);\n            }\n            break;\n        case 'Q' :\n            java.lang.StringBuilder.append('K');\n            break;\n        case 'S' :\n            if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n                java.lang.StringBuilder.append('X');\n            } else {\n                java.lang.StringBuilder.append('S');\n            }\n            break;\n        case 'T' :\n            if (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIA\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIO\"))) {\n                java.lang.StringBuilder.append('X');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TCH\")) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TH\")) {\n                java.lang.StringBuilder.append('0');\n            } else {\n                java.lang.StringBuilder.append('T');\n            }\n            break;\n        case 'V' :\n            java.lang.StringBuilder.append('F');\n            break;\n        case 'W' :\n        case 'Y' :\n            if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 1)))) {\n                java.lang.StringBuilder.append(char);\n            } \n            break;\n        case 'X' :\n            java.lang.StringBuilder.append('K');\n            java.lang.StringBuilder.append('S');\n            break;\n        case 'Z' :\n            java.lang.StringBuilder.append('S');\n            break;\n        default :\n            break;\n    }\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"f717bab7-bba6-11e4-b7a3-0160c67d4048","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"i","len":"org.apache.commons.codec.net.URLCodec.RADIX"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:44","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.int)) + \"): \") + byte));\n} "},"status":-2},{"failures":[],"tindex":"f717bab8-bba6-11e4-b7a3-bd697404e313","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + java.lang.String) + \"]\"))"},"status":-2},{"failures":[],"tindex":"f717e1c9-bba6-11e4-b7a3-43d77f786377","variableMapping":{"key":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"status":-1},{"failures":[],"tindex":"f717e1ca-bba6-11e4-b7a3-a54e90556d48","variableMapping":{"b":"n"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:303","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TH\")) {\n    java.lang.StringBuilder.append('0');\n} else {\n    java.lang.StringBuilder.append('T');\n}"},"status":-1},{"failures":[],"tindex":"f717e1cb-bba6-11e4-b7a3-77c9a18e3477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:476","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[],"tindex":"f717e1cc-bba6-11e4-b7a3-b72c6bd1ceb1","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"status":-1},{"failures":[],"tindex":"f717e1cd-bba6-11e4-b7a3-03f5d376aa84","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'A')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:415","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"EY\"))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) != 'Y')) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\");\n}"},"status":-1},{"failures":[],"tindex":"f717e1ce-bba6-11e4-b7a3-594f9312ca30","variableMapping":{"w":"c"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 6"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"status":-1},{"failures":[],"tindex":"f717e1cf-bba6-11e4-b7a3-a14360d0f158","variableMapping":{"w":"minRating"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 6"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"f717e1d0-bba6-11e4-b7a3-8da49be74daf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[]))"},"status":-1},{"failures":[],"tindex":"f717e1d1-bba6-11e4-b7a3-097df12a5bcf","variableMapping":{"b":"ibitWorkArea"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"int = '+'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:476","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = (org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2"},"status":-2},{"failures":[],"tindex":"f71808e2-bba6-11e4-b7a3-192043541415","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:295","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException)"},"status":-2},{"failures":[],"tindex":"f71808e3-bba6-11e4-b7a3-7f616a67bb05","variableMapping":{"b":"index","t":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:707","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"f71808e4-bba6-11e4-b7a3-11608058e79e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[],"tindex":"f71808e5-bba6-11e4-b7a3-6f477de276ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:400","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"f71808e6-bba6-11e4-b7a3-75c16b18bc2c","variableMapping":{"maxCodeLen":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], 0, byte[].int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"f71808e7-bba6-11e4-b7a3-255848a9cdfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f71808e8-bba6-11e4-b7a3-c9bdd33a37e8","variableMapping":{"len":"len"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((java.math.BigInteger.bitLength()) % 8) == 0) {\n    int = 1;\n    int--;\n} "},"status":-2},{"failures":[],"tindex":"f71808e9-bba6-11e4-b7a3-17afb803e812","variableMapping":{"txt":"input"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l3\", \"L3\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"status":0},{"failures":[],"tindex":"8303477a-bba7-11e4-b7a3-1dc78ed31ada","variableMapping":{"key":"local"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:150","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.StringBuilder.charAt(int)"},"status":-1},{"failures":[],"tindex":"8303477b-bba7-11e4-b7a3-5dcda9be6914","variableMapping":{"c":"readPos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null) {\n    final int int = java.lang.Math.java.lang.Math.min(org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context), int);\n    java.lang.System.java.lang.System.arraycopy(org.apache.commons.codec.binary.BaseNCodec.Context.byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[], int, int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null;\n    } \n    return int;\n} "},"status":-2},{"failures":[],"tindex":"8303477c-bba7-11e4-b7a3-e5fee076bdd2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:481","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)))"},"status":-2},{"failures":[],"tindex":"8303477d-bba7-11e4-b7a3-87fdcde1d046","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"8303477e-bba7-11e4-b7a3-cf9e56fc46a5","variableMapping":{"lastCode":"hex1"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (char == '/') {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:186","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(char)"},"status":-2},{"failures":[],"tindex":"8303477f-bba7-11e4-b7a3-33db5fe1829d","variableMapping":{"cs1":"chars","cs2":"chars"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return java.lang.CharSequence.equals(java.lang.CharSequence);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) == char) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"83034780-bba7-11e4-b7a3-b74fb8e27a18","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"ER\", \"EN\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\");\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n        }\n    } else {\n        if (((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 3))))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 3)) != 'W')) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:516","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"JOSE\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"SAN \"))) {\n    if ((((int == 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 4))) == ' ')) || ((java.lang.String.length()) == 4)) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"SAN \"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n    }\n    int++;\n} else {\n    if ((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"JOSE\")))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'A');\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))) && (!boolean)) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'A') || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'O'))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n    } else if (int == ((java.lang.String.length()) - 1)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ');\n    } else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } \n    if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'J') {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"83034781-bba7-11e4-b7a3-4dc2c5353021","variableMapping":{"index":"minRating"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"83036d92-bba7-11e4-b7a3-4d1e800642e0","variableMapping":{"u":"u"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"status":-1},{"failures":[],"tindex":"83036d93-bba7-11e4-b7a3-d504e953cf6b","variableMapping":{"key":"sBuf"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String.charAt(0))"},"status":-1},{"failures":[],"tindex":"83036d94-bba7-11e4-b7a3-fbcfaf59cf0f","variableMapping":{"this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:844","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'M') {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"CHIA\")) {\n    return true;\n} else if (int <= 1) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 2)))) {\n    return false;\n} else if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":-2},{"failures":[],"tindex":"83036d95-bba7-11e4-b7a3-47c29d7ecbc0","variableMapping":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"name","txt":"name"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:162","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    final java.lang.String java.lang.String = java.lang.String.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.int);\n    final java.lang.String java.lang.String = java.lang.String.substring((int - (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), int);\n    return java.lang.String + java.lang.String;\n} else {\n    return java.lang.String;\n}"},"status":-2},{"failures":[],"tindex":"83036d96-bba7-11e4-b7a3-11046e80303b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"83036d97-bba7-11e4-b7a3-75e593ed08b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"83036d98-bba7-11e4-b7a3-f7f885770aac","variableMapping":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[],"tindex":"83036d99-bba7-11e4-b7a3-b1f63fbb2031","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.int[][][0][(int & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((int >>> 6) & 3) | ((int >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((int >>> 13) & 15) | ((int >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((int >>> 20) & 1) | ((int >>> 21) & 6)) | ((int >>> 22) & 56))])"},"status":-2},{"failures":[],"tindex":"83036d9a-bba7-11e4-b7a3-d19a338d2154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[],"tindex":"83036d9b-bba7-11e4-b7a3-311f08c1bc15","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J')"},"status":-1},{"failures":[],"tindex":"83036d9c-bba7-11e4-b7a3-dffa81733d15","variableMapping":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"g\", \"k\")"},"status":0},{"failures":[],"tindex":"8b754b1d-bba7-11e4-b7a3-3109ebe3dff1","variableMapping":{"c":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:452","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":0},{"failureDictionary":{}},{"memory":32205,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001}],"os.version":"3.2.0-4-amd64"}]
