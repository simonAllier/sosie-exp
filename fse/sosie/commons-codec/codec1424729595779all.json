[{"failures":[],"tindex":"d688cf05-bba7-11e4-acf4-97c7c6e82be5","variableMapping":{"length":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:457","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d688f616-bba7-11e4-acf4-11505c01cbcd","variableMapping":{"salt":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:190","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt((int - 2))"},"status":-1},{"failures":[],"tindex":"d688f617-bba7-11e4-acf4-d72cd64bc2b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:131","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"d688f618-bba7-11e4-acf4-e5013a6bd95e","variableMapping":{"b":"buffer","offset":"pos","iValue":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"d688f619-bba7-11e4-acf4-bbc389284b3a","variableMapping":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"obj","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"obj","text":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(java.lang.String.endsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:211","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"d6891d2a-bba7-11e4-acf4-d58d65946419","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = byte[].int"},"status":-2},{"failures":[],"tindex":"d6891d2b-bba7-11e4-acf4-bd6fed8f4829","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:678","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"status":-1},{"failures":[],"tindex":"d6891d2c-bba7-11e4-acf4-a5dd27d06756","variableMapping":{"key":"altResult"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][6], byte[][27], byte[][48], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"d6891d2d-bba7-11e4-acf4-45c062649c54","variableMapping":{"terminator":"len","to":"len"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"d6891d2e-bba7-11e4-acf4-dd96563c0598","variableMapping":{"binaryData":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return byte[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"541835ff-bba8-11e4-acf4-8dee78ce5e84","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:361","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"54183600-bba8-11e4-acf4-47ce645ddd1a","variableMapping":{"b":"b"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:139","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-1},{"failures":[],"tindex":"54183601-bba8-11e4-acf4-9159e4ee229d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:242","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(int, byte[], false)"},"status":-2},{"failures":[],"tindex":"54183602-bba8-11e4-acf4-3d197d631c11","variableMapping":{"len":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:108","type":"CtSwitchImpl","sourcecode":"switch (char[][0]) {\n    case 'K' :\n    case 'G' :\n    case 'P' :\n        if ((char[][1]) == 'N') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'A' :\n        if ((char[][1]) == 'E') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'W' :\n        if ((char[][1]) == 'R') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n            break;\n        } \n        if ((char[][1]) == 'H') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n            java.lang.StringBuilder.setCharAt(0, 'W');\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'X' :\n        char[][0] = 'S';\n        java.lang.StringBuilder.append(char[]);\n        break;\n    default :\n        java.lang.StringBuilder.append(char[]);\n}"},"status":-2},{"failures":[],"tindex":"54183603-bba8-11e4-acf4-cf06f48d3244","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[], 4)"},"status":-2},{"failures":[],"tindex":"54183604-bba8-11e4-acf4-bf311bca199c","variableMapping":{"length":"org.apache.commons.codec.binary.BaseNCodec.EOF","key":"b"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:200","type":"CtWhileImpl","sourcecode":"while (long > 0) {\n    int int = java.lang.Math.((int)(java.lang.Math.min(byte[].int, long)));\n    int = org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[], 0, int);\n    if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n        break;\n    } \n    long -= int;\n}"},"status":-2},{"failures":[],"tindex":"54183605-bba8-11e4-acf4-afc77e4dd594","variableMapping":{"str":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tio\", \"sio\")"},"status":-1},{"failures":[],"tindex":"54183606-bba8-11e4-acf4-e1d7c14b897b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"54183607-bba8-11e4-acf4-931605176e8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"WR\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R');\n    int += 2;\n} else {\n    if ((int == 0) && (org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1)))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"WH\")))) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1)))) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A', 'F');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A');\n        }\n        int++;\n    } else if ((((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1))))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F');\n        int++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"WICZ\", \"WITZ\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TS\", \"FX\");\n        int += 4;\n    } else {\n        int++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"54183608-bba8-11e4-acf4-27dc460fec98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:528","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((char == 'm') && (char == 'n')) || ((char == 'n') && (char == 'm'))"},"status":-2},{"failures":[],"tindex":"54185d19-bba8-11e4-acf4-e5bd24292b20","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt((int - 1))"},"status":-2},{"failures":[],"tindex":"54185d1a-bba8-11e4-acf4-73b7c05bf0b5","variableMapping":{"ii":"pos","keyLen":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:453","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"2a1b59db-bba9-11e4-acf4-af85cb45c2a3","variableMapping":{"txt":"name","org.apache.commons.codec.language.Caverphone1.SIX_1":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"2a1b59dc-bba9-11e4-acf4-df52052bf186","variableMapping":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 12) & (org.apache.commons.codec.binary.Base64.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:451","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 3))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"2a1b59dd-bba9-11e4-acf4-35645466c2f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-2},{"failures":[],"tindex":"2a1b59de-bba9-11e4-acf4-ad257b57e916","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:267","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    boolean = true;\n} else {\n    final int int = java.lang.String.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String);\n    if (int >= 0) {\n        java.lang.String = java.lang.String.substring(0, int);\n    } \n    java.lang.String = java.lang.String.trim();\n    if ((java.lang.String.length()) == 0) {\n        continue;\n    } \n    if (java.lang.String.contains(\"=\")) {\n        final java.lang.String[] java.lang.String[] = java.lang.String.split(\"=\");\n        if ((java.lang.String[].int) != 2) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (java.lang.String[].int)) + \" parts: \") + java.lang.String) + \" in \") + java.lang.String));\n        } else {\n            final java.lang.String java.lang.String = java.lang.String[][0];\n            final java.lang.String java.lang.String = java.lang.String[][1];\n            if (((java.lang.String.length()) != 1) || ((java.lang.String.length()) != 1)) {\n                throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + java.lang.String) + \" in \") + java.lang.String));\n            } \n            java.util.Map<java.lang.Character, java.lang.Character>.put(java.lang.String.charAt(0), java.lang.String.charAt(0));\n        }\n    } else {\n        final java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\\\s+\");\n        if ((java.lang.String[].int) != 4) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (java.lang.String[].int)) + \" parts: \") + java.lang.String) + \" in \") + java.lang.String));\n        } else {\n            try {\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][0]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][1]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][2]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][3]);\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(java.lang.String , java.lang.String , java.lang.String , java.lang.String);\n                final char char = org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.java.lang.String.charAt(0);\n                java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.get(char);\n                if (java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> == null) {\n                    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                    java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.put(char, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>);\n                } \n                java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>.add(org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule);\n            } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n                throw new java.lang.IllegalStateException((((\"Problem parsing line \\'\" + int) + \"\\' in \") + java.lang.String) , java.lang.IllegalArgumentException);\n            }\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"2a1b59df-bba9-11e4-acf4-ad3cb44d1e44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:303","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"2a1b59e0-bba9-11e4-acf4-51104b547e65","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:136","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (((java.lang.String) == null) || (!(java.lang.String.endsWith(java.lang.String)))) || boolean"},"status":-2},{"failures":[],"tindex":"2a1b59e1-bba9-11e4-acf4-6bc23a375281","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"cp","len":"cp"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"2a1b59e2-bba9-11e4-acf4-97443dfe216a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:146","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2a1b59e3-bba9-11e4-acf4-fff332f9182a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:486","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 2))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"2a1b59e4-bba9-11e4-acf4-df48c708558f","variableMapping":{"buffer":"key","charOne":"lastChar"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(1, char)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (char == 'A') {\n    java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"2a1b59e5-bba9-11e4-acf4-23384a9bbe6b","variableMapping":{"ph":"text"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a \\'[\\' but does not end in \\']\\'\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.bm.Lang.LangRule.matches(java.lang.String)) {\n    if (org.apache.commons.codec.language.bm.Lang.LangRule.boolean) {\n        java.util.Set<java.lang.String>.retainAll(org.apache.commons.codec.language.bm.Lang.LangRule.java.util.Set<java.lang.String>);\n    } else {\n        java.util.Set<java.lang.String>.removeAll(org.apache.commons.codec.language.bm.Lang.LangRule.java.util.Set<java.lang.String>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"2a1b59e6-bba9-11e4-acf4-3350b47180da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:787","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"2a1b59e7-bba9-11e4-acf4-a1e52ac7a6aa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:504","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"2a1b59e8-bba9-11e4-acf4-25b2c372bbf9","variableMapping":{"u":"index","y":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:552","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('L');\n}"},"status":-1},{"failures":[],"tindex":"2a1b59e9-bba9-11e4-acf4-af862cc8cdd4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.BaseNCodec.encode(byte[]))"},"status":-2},{"failures":[],"tindex":"2a1b59ea-bba9-11e4-acf4-25eade10a2e1","variableMapping":{"code":"code","this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen())"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > org.apache.commons.codec.language.Metaphone.(getMaxCodeLen())) {\n    java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen());\n} "},"status":-1},{"failures":[],"tindex":"2a1b59eb-bba9-11e4-acf4-039e478c6aec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"2a1b59ec-bba9-11e4-acf4-8777a118849b","variableMapping":{"messageDigest":"altCtx","valueToDigest":"keyBytes"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= int ; int++) {\n    java.security.MessageDigest.update(byte[]);\n}"},"status":-1},{"failures":[],"tindex":"2a1b59ed-bba9-11e4-acf4-6de7dc315a67","variableMapping":{"b":"buffer","context":"context","buffer":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = byte[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:297","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null"},"status":-2},{"failures":[],"tindex":"2a1b59ee-bba9-11e4-acf4-957bbc9fb001","variableMapping":{"obj":"obj","this":"obj"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.binary.BaseNCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BaseNCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"2a1b80ff-bba9-11e4-acf4-f30cf678715e","variableMapping":{"startSrc":"c"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"status":-1},{"failures":[],"tindex":"2a1b8100-bba9-11e4-acf4-47b4dc9cfe9b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"status":-2},{"failures":[],"tindex":"2a1b8101-bba9-11e4-acf4-9f3c577eab5a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"status":-2},{"failures":[],"tindex":"2a1b8102-bba9-11e4-acf4-4d9516609bd8","variableMapping":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","context":"context","modulus":"modulus"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:446","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[],"tindex":"2a1b8103-bba9-11e4-acf4-11e061d5c77d","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE":"b"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failureDictionary":{}},{"memory":32197,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
