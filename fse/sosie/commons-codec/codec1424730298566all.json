[{"failures":[],"tindex":"cd02e26b-bbaa-11e4-ae37-d10a71f31e5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:523","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = boolean ? org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.createBranch() : org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch;\n    final boolean boolean = ((char == 'm') && (char == 'n')) || ((char == 'n') && (char == 'm'));\n    org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.processNextReplacement(java.lang.String, boolean);\n    if (boolean) {\n        java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.add(org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch);\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"cd02e26c-bbaa-11e4-ae37-bbc2db5f319d","variableMapping":{"offset":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:246","type":"CtAssignmentImpl","sourcecode":"int = byte[].int"},"status":-2},{"failures":[],"tindex":"cd02e26d-bbaa-11e4-ae37-838b165f3662","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"cd02e26e-bbaa-11e4-ae37-87505d7b48a0","variableMapping":{"algorithm":"name"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"status":-2},{"failures":[],"tindex":"cd02e26f-bbaa-11e4-ae37-9fd16f164d64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:338","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext();\n    if ((int = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.length()) > 0) {\n        char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar();\n    } else {\n        char = '-';\n    }\n    if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '0';\n    } else if (((char == 'H') || (char < 'A')) || (char > 'Z')) {\n        if (char == '/') {\n            continue;\n        } \n        char = '-';\n    } else if ((char == 'B') || ((char == 'P') && (char != 'H'))) {\n        char = '1';\n    } else if (((char == 'D') || (char == 'T')) && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n        char = '2';\n    } else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '3';\n    } else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '4';\n    } else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n        char = '4';\n        org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n        int++;\n    } else if ((char == 'S') || (char == 'Z')) {\n        char = '8';\n    } else if (char == 'C') {\n        if (char == '/') {\n            if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n                char = '4';\n            } else {\n                char = '8';\n            }\n        } else {\n            if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n                char = '8';\n            } else {\n                char = '4';\n            }\n        }\n    } else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '8';\n    } else if (char == 'R') {\n        char = '7';\n    } else if (char == 'L') {\n        char = '5';\n    } else if ((char == 'M') || (char == 'N')) {\n        char = '6';\n    } else {\n        char = char;\n    }\n    if ((char != '-') && ((((char != char) && ((char != '0') || (char == '/'))) || (char < '0')) || (char > '8'))) {\n        org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char);\n    } \n    char = char;\n    char = char;\n}"},"status":-1},{"failures":[],"tindex":"cd02e270-bbaa-11e4-ae37-57b45d436eb6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"status":-2},{"failures":[],"tindex":"cd02e271-bbaa-11e4-ae37-4f6936f95b8b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:190","type":"CtReturnImpl","sourcecode":"return boolean ? org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getAlternate() : org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.getPrimary()"},"status":-1},{"failures":[],"tindex":"cd02e272-bbaa-11e4-ae37-01b92447684e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"g\", \"k\")"},"status":-1},{"failures":[],"tindex":"cd02e273-bbaa-11e4-ae37-6db858e4618f","variableMapping":{"r":"bAvail","singleByte":"b"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final byte byte = byte[][0];\n    return byte < 0 ? 256 + byte : byte;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null) {\n    final int int = java.lang.Math.java.lang.Math.min(org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context), int);\n    java.lang.System.java.lang.System.arraycopy(org.apache.commons.codec.binary.BaseNCodec.Context.byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[], int, int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null;\n    } \n    return int;\n} "},"status":-2},{"failures":[],"tindex":"cd02e274-bbaa-11e4-ae37-1fc6e7691527","variableMapping":{"b":"cp"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (int < (int - int)) {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"cd02e275-bbaa-11e4-ae37-6bf196318a29","variableMapping":{"algorithm":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"cd02e276-bbaa-11e4-ae37-03b750a4da8c","variableMapping":{"input":"phonemeText","maxPhonemes":"maxPhonemes","rules":"finalRules","phonemeBuilder":"subBuilder"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:469","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> , java.lang.String , org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder , int , int).invoke();\n    int = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI();\n    org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonemeBuilder();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:345","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> , java.lang.String , org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder , int , int).invoke();\n    final boolean boolean = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound();\n    org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonemeBuilder();\n    if (!boolean) {\n        org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.append(java.lang.String.subSequence(int, (int + 1)));\n    } \n    int = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI();\n}"},"status":-1},{"failures":[],"tindex":"cd02e277-bbaa-11e4-ae37-9d3c60be936c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"status":-2},{"failures":[],"tindex":"cd02e278-bbaa-11e4-ae37-ad9f5e148a77","variableMapping":{"b":"buffer","offset":"pos","iValue":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 24) & 255))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:466","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"cd02e279-bbaa-11e4-ae37-2104624af3e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-1},{"failureDictionary":{}},{"memory":32199,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
