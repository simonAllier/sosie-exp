[{"failures":[],"tindex":"ee48efae-bba6-11e4-86e7-c9dc233540ca","variableMapping":{"txt":"text"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y\", \"A\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:324","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)"},"status":0},{"failures":[],"tindex":"69ea694f-bba7-11e4-86e7-175e76b64cf5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"status":-1},{"failures":[],"tindex":"69ea6950-bba7-11e4-86e7-0193d3d0eb75","variableMapping":{"str":"org.apache.commons.codec.digest.B64.B64T","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.digest.B64.B64T"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:60","type":"CtWhileImpl","sourcecode":"while ((int--) > 0) {\n    java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt((int & 63)));\n    int >>= 6;\n}"},"status":-2},{"failures":[],"tindex":"69ea9061-bba7-11e4-86e7-cb9b8e760b2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:131","type":"CtLocalVariableImpl","sourcecode":"int int = byte"},"status":-2},{"failures":[],"tindex":"69ea9062-bba7-11e4-86e7-458cec169b0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"69ea9063-bba7-11e4-86e7-a7c99b243c62","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"69ea9064-bba7-11e4-86e7-cf970d961e8a","variableMapping":{"obj":"obj","this":"obj"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.soundex(((java.lang.String)(java.lang.Object)))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"69eab775-bba7-11e4-86e7-dd1d3e4fd351","variableMapping":{"newPhoneme":"newPhoneme","oldPhoneme":"newPhoneme"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:365","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = org.apache.commons.codec.language.bm.Rule.Phoneme.mergeWithLanguage(org.apache.commons.codec.language.bm.Rule.Phoneme.getLanguages())"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:364","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.Rule.Phoneme org.apache.commons.codec.language.bm.Rule.Phoneme = java.util.Map<org.apache.commons.codec.language.bm.Rule.Phoneme, org.apache.commons.codec.language.bm.Rule.Phoneme>.remove(org.apache.commons.codec.language.bm.Rule.Phoneme)"},"status":-2},{"failures":[],"tindex":"69eab776-bba7-11e4-86e7-614a31786b10","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:173","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:348","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound()"},"status":-2},{"failures":[],"tindex":"69eab777-bba7-11e4-86e7-55792ef9da39","variableMapping":{"finalRules":"ruleMap"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:302","type":"CtForEachImpl","sourcecode":"for (final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> : java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.values()) {\n    java.util.List<org.apache.commons.codec.language.bm.Rule>.addAll(java.util.List<org.apache.commons.codec.language.bm.Rule>);\n}"},"status":0},{"failures":[],"tindex":"68f369b8-bba8-11e4-86e7-4bb3a641d542","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"status":-2},{"failures":[],"tindex":"68f390c9-bba8-11e4-86e7-fbbe40fd288b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:241","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.charAt(int)) == char) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"68f390ca-bba8-11e4-86e7-85fc7be3dcb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"68f390cb-bba8-11e4-86e7-05d897d8e92b","variableMapping":{"obj":"value","this":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(((java.lang.String)(java.lang.Object)))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"68f390cc-bba8-11e4-86e7-e5470907762b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:102","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"68f390cd-bba8-11e4-86e7-b50d3f6a7d06","variableMapping":{"result":"found","target":"input","element":"input"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    boolean = true;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:210","type":"CtIfImpl","sourcecode":"if (java.util.List<org.apache.commons.codec.language.bm.Rule> != null) {\n    for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : java.util.List<org.apache.commons.codec.language.bm.Rule>) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.getPattern();\n        int = java.lang.String.length();\n        if (org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(this.java.lang.CharSequence, this.int)) {\n            this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule.getPhoneme(), int);\n            this.boolean = true;\n            break;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"68f390ce-bba8-11e4-86e7-7d7eb123eb19","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:138","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"68f3b7df-bba8-11e4-86e7-af1b929408f0","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J')"},"status":-1},{"failures":[],"tindex":"68f3b7e0-bba8-11e4-86e7-5f162265d4a7","variableMapping":{"ctx1":"ctx1","keyBytes":"saltBytes","finalb":"keyBytes","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","i":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[]);\n} else {\n    java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:256","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.digest.Md5Crypt.int) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest();\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"status":-2},{"failures":[],"tindex":"68f3b7e1-bba8-11e4-86e7-8b185723d6ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"status":-1},{"failures":[],"tindex":"68f3b7e2-bba8-11e4-86e7-81750a62c1b0","variableMapping":{"rules":"rules"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:475","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.bm.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:476","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.put(java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>)"},"status":-1},{"failures":[],"tindex":"68f3b7e3-bba8-11e4-86e7-89775ca55389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:263","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.String>.hasNext()) {\n    java.lang.StringBuilder.append(java.lang.String).append(java.util.Iterator<java.lang.String>.next());\n}"},"status":-1},{"failures":[],"tindex":"68f3b7e4-bba8-11e4-86e7-5145530b10c1","variableMapping":{"key":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"$\")"},"status":-1},{"failures":[],"tindex":"68f3def5-bba8-11e4-86e7-f96a200ef9a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:989","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) <= int) {\n    this.java.lang.StringBuilder.append(java.lang.String);\n} else {\n    this.java.lang.StringBuilder.append(java.lang.String.substring(0, int));\n}"},"status":-1},{"failures":[],"tindex":"68f3def6-bba8-11e4-86e7-8794337cf8ed","variableMapping":{"ii":"maxCodeLen","keyLen":"maxCodeLen"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"68f3def7-bba8-11e4-86e7-d9fbdf7a665e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (int / 8) - int"},"status":-2},{"failures":[],"tindex":"68f3def8-bba8-11e4-86e7-496e5be11ff7","variableMapping":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos","context":"context","modulus":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:457","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"dd7353a9-bba8-11e4-86e7-877de262cee0","variableMapping":{"str":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:183","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        boolean = false;\n    } \n} else {\n    if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        boolean = true;\n    } else if ((java.lang.String.length()) > 0) {\n        java.util.Set<java.lang.String>.add(java.lang.String);\n    } \n}"},"status":-2},{"failures":[],"tindex":"dd7353aa-bba8-11e4-86e7-67bb07b8bcc5","variableMapping":{"code":"nextChar"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"char = '0'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:342","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar()"},"status":-1},{"failures":[],"tindex":"dd7353ab-bba8-11e4-86e7-5387a2682ecc","variableMapping":{"input":"valueToDigest"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(java.lang.String, java.lang.String))"},"status":-2},{"failures":[],"tindex":"dd737abc-bba8-11e4-86e7-9d7d8a26f8d6","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:477","type":"CtIfImpl","sourcecode":"if ((((int > 1) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 1, \"B\", \"H\", \"D\"))) || ((int > 2) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"B\", \"H\", \"D\")))) || ((int > 3) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 1, \"B\", \"H\")))) {\n    int += 2;\n} else {\n    if (((int > 2) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'U')) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n    } else if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } \n    int += 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:614","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"SIO\", \"SIA\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"SIAN\"))) {\n    if (boolean) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    }\n    int += 3;\n} else if (((int == 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"Z\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"Z\") ? int + 2 : int + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"SC\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else {\n    if ((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AI\", \"OI\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"S\", \"Z\") ? int + 2 : int + 1;\n}"},"status":-1},{"failures":[],"tindex":"dd737abd-bba8-11e4-86e7-85a9169aba9a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:245","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"dd737abe-bba8-11e4-86e7-373608672f9a","variableMapping":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"salt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String)"},"status":-2},{"failures":[],"tindex":"dd737abf-bba8-11e4-86e7-d3b8eda8485d","variableMapping":{"wdsz":"n","this":"this","n":"n"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:179","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"CIA\")) {\n    java.lang.StringBuilder.append('X');\n    break;\n} "},"status":-1},{"failures":[],"tindex":"dd737ac0-bba8-11e4-86e7-f94aec8ea995","variableMapping":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"4578f731-bba9-11e4-86e7-d57dc79e560d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n}"},"status":-1},{"failures":[],"tindex":"4578f732-bba9-11e4-86e7-37e5f37ff3c4","variableMapping":{"name1Size":"cmtI","i":"cmtI","name1LtREnd":"line","name1":"line"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int - int), ((int - int) + 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:155","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"4578f733-bba9-11e4-86e7-ef75a4b7a7dc","variableMapping":{"cp":"blocksize"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"4578f734-bba9-11e4-86e7-71173954d928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"status":-1},{"failures":[],"tindex":"4578f735-bba9-11e4-86e7-110d66c1700a","variableMapping":{"terminator":"y","to":"i"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:234","type":"CtForImpl","sourcecode":"for ( ; int < 13 ; int++) {\n    int int = 0;\n    int int = 0;\n    for ( ; int < 6 ; int++) {\n        int <<= 1;\n        if (((byte[][int]) & int) != 0) {\n            int |= 1;\n        } \n        int >>>= 1;\n        if (int == 0) {\n            int++;\n            int = 128;\n        } \n        java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"4578f736-bba9-11e4-86e7-533bf6aeeb75","variableMapping":{"encodeTable":"altResult","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"altResult"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:405","type":"CtAssignmentImpl","sourcecode":"byte[] = java.security.MessageDigest.digest()"},"status":0},{"failures":[],"tindex":"944d5317-bba9-11e4-86e7-732c751d96ae","variableMapping":{"sumLength":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:430","type":"CtSwitchImpl","sourcecode":"switch (this.org.apache.commons.codec.language.bm.NameType) {\n    case SEPHARDIC :\n        for (final java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n            final java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\'\");\n            final java.lang.String java.lang.String = java.lang.String[][((java.lang.String[].int) - 1)];\n            java.util.List<java.lang.String>.add(java.lang.String);\n        }\n        java.util.List<java.lang.String>.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case ASHKENAZI :\n        java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(this.org.apache.commons.codec.language.bm.NameType));\n        break;\n    case GENERIC :\n        java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>);\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Unreachable case: \" + (this.org.apache.commons.codec.language.bm.NameType)));\n}"},"status":-2},{"failures":[],"tindex":"944d5318-bba9-11e4-86e7-9717e73b1142","variableMapping":{"len":"len","i":"len","org.apache.commons.codec.language.Nysiis.SPACE":"org.apache.commons.codec.language.Nysiis.SPACE","chars":"chars"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:282","type":"CtLocalVariableImpl","sourcecode":"final char char = int < (int - 2) ? char[][(int + 2)] : org.apache.commons.codec.language.Nysiis.char"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:281","type":"CtLocalVariableImpl","sourcecode":"final char char = int < (int - 1) ? char[][(int + 1)] : org.apache.commons.codec.language.Nysiis.char"},"status":-1},{"failures":[],"tindex":"944d5319-bba9-11e4-86e7-8321dda5a29a","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\")"},"status":-1},{"failures":[],"tindex":"944d531a-bba9-11e4-86e7-7f8241021be5","variableMapping":{"urlsafe":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"status":-2},{"failures":[],"tindex":"944d531b-bba9-11e4-86e7-27b66016cd0b","variableMapping":{"encodeTable":"buffer","pos":"pos","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:463","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:361","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"944d7a2c-bba9-11e4-86e7-d70b2e992de3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:386","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(char)"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
