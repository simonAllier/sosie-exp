[{"failures":[],"tindex":"32c43088-bbaa-11e4-afdf-e172314ed4b2","variableMapping":{"name":"input","java.util.Locale.ENGLISH":"java.util.Locale.ENGLISH"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:84","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:215","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.toLowerCase(java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"32c45799-bbaa-11e4-afdf-f71599569eb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:183","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException)"},"status":-2},{"failures":[],"tindex":"32c4579a-bbaa-11e4-afdf-a975fcae8ce5","variableMapping":{"inwd":"chars"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:138","type":"CtAssignmentImpl","sourcecode":"char[][0] = 'S'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"char[][int++] = java.lang.String.charAt(int)"},"status":-1},{"failures":[],"tindex":"32c4579b-bbaa-11e4-afdf-ed775697ec61","variableMapping":{"ph":"ph","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:398","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:382","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"(\")) {\n    if (!(java.lang.String.endsWith(\")\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme starts with \\'(\\' so must end with \\')\\'\");\n    } \n    final java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme> java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme> = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule.Phoneme>();\n    final java.lang.String java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n    for (final java.lang.String java.lang.String : java.lang.String.split(\"[|]\")) {\n        java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String));\n    }\n    if ((java.lang.String.startsWith(\"|\")) || (java.lang.String.endsWith(\"|\"))) {\n        java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n    } \n    return new org.apache.commons.codec.language.bm.Rule.PhonemeList(java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme>);\n} else {\n    return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"32c47eac-bbaa-11e4-afdf-1549585e15c1","variableMapping":{"salt":"replacedName","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"replacedName"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (java.lang.String.contains(java.lang.String)) {\n        final java.lang.String java.lang.String = java.lang.String.substring(0, 1);\n        java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String);\n    } \n}"},"status":0},{"failures":[],"tindex":"3a8d990d-bbaa-11e4-afdf-99195e908dbd","variableMapping":{"salt":"text"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:218","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Lang.LangRule org.apache.commons.codec.language.bm.Lang.LangRule : this.java.util.List<org.apache.commons.codec.language.bm.Lang.LangRule>) {\n    if (org.apache.commons.codec.language.bm.Lang.LangRule.matches(java.lang.String)) {\n        if (org.apache.commons.codec.language.bm.Lang.LangRule.boolean) {\n            java.util.Set<java.lang.String>.retainAll(org.apache.commons.codec.language.bm.Lang.LangRule.java.util.Set<java.lang.String>);\n        } else {\n            java.util.Set<java.lang.String>.removeAll(org.apache.commons.codec.language.bm.Lang.LangRule.java.util.Set<java.lang.String>);\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"4e33cf6e-bbaa-11e4-afdf-1567f13405b7","variableMapping":{"b":"d"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"4e33cf6f-bbaa-11e4-afdf-7fa3af909b8a","variableMapping":{"b2":"c","b0":"c","b1":"c"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:57","type":"CtLocalVariableImpl","sourcecode":"int int = (((byte << 16) & 16777215) | ((byte << 8) & 65535)) | (byte & 255)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = byte"},"status":-2},{"failures":[],"tindex":"4e33f680-bbaa-11e4-afdf-8f5d128db74d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:463","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"{line=\")"},"status":0},{"failures":[],"tindex":"6cbff091-bbaa-11e4-afdf-8bbdf650ec61","variableMapping":{"dc":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, 1)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:333","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(char[]).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"6cbff092-bbaa-11e4-afdf-412fc05a5ce5","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"status":-1},{"failures":[],"tindex":"6cbff093-bbaa-11e4-afdf-4b74a5fef997","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 16, 65535, int[])"},"status":-1},{"failures":[],"tindex":"6cbff094-bbaa-11e4-afdf-7bb6f0077316","variableMapping":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:273","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.URLCodec.decode(org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.lang.String)"},"status":-2},{"failures":[],"tindex":"6cbff095-bbaa-11e4-afdf-25b0787ada7f","variableMapping":{"languagesResourceName":"l"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:175","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Problem processing \" + org.apache.commons.codec.language.bm.Rule.(org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String))) , java.lang.IllegalStateException)"},"status":0},{"failures":[],"tindex":"886e1f16-bbaa-11e4-afdf-a9350917ea31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:744","type":"CtIfImpl","sourcecode":"if (!((int == ((java.lang.String.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 3, \"IAU\", \"EAU\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AU\", \"OU\"))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\");\n} "},"status":-1},{"failures":[],"tindex":"886e1f17-bbaa-11e4-afdf-2593640d9592","variableMapping":{"code":"code","chr":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:384","type":"CtIfImpl","sourcecode":"if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:395","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char)"},"status":-1},{"failures":[],"tindex":"886e1f18-bbaa-11e4-afdf-1d1ac5f5b099","variableMapping":{"f":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","i":"pos","out":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int & 255))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"886e1f19-bbaa-11e4-afdf-0da47e060dcd","variableMapping":{"i":"keyLen"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:387","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"b32e7cea-bbaa-11e4-afdf-3702e833d797","variableMapping":{"iChar":"pos","i":"pos","key":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int << 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:477","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"b32e7ceb-bbaa-11e4-afdf-47e497ebc96b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[]))"},"status":-2},{"failures":[],"tindex":"b32e7cec-bbaa-11e4-afdf-57dc0041d460","variableMapping":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:97","type":"CtForImpl","sourcecode":"for (int int = 'a' ; int <= 'z' ; int++) {\n    org.apache.commons.codec.net.QCodec.java.util.BitSet.set(int);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; int <= '9' ; int++) {\n    org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(int);\n}"},"status":-2},{"failures":[],"tindex":"b32e7ced-bbaa-11e4-afdf-079c9ecd2c65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"b32e7cee-bbaa-11e4-afdf-15d4df30db52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:238","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('J')"},"status":-1},{"failures":[],"tindex":"b32e7cef-bbaa-11e4-afdf-c5bf943bb7e8","variableMapping":{"b":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH","org.apache.commons.codec.net.QuotedPrintableCodec.LF":"org.apache.commons.codec.net.QuotedPrintableCodec.CR","pos":"pos","org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.CR","this":"this","buffer":"buffer","org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH","printable":"printable","org.apache.commons.codec.net.QuotedPrintableCodec.CR":"org.apache.commons.codec.net.QuotedPrintableCodec.CR"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:288","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n    int += org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, !(java.util.BitSet.get(int)), java.io.ByteArrayOutputStream);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, ((!(java.util.BitSet.get(int))) || org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int))), java.io.ByteArrayOutputStream);\n    java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    int = 1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((byte[].int) - 3) ; int++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int, byte[]);\n    if (int < (org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        int += org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, !(java.util.BitSet.get(int)), java.io.ByteArrayOutputStream);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, ((!(java.util.BitSet.get(int))) || org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int))), java.io.ByteArrayOutputStream);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        int = 1;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b32e7cf0-bbaa-11e4-afdf-e71789178c3c","variableMapping":{"index":"currentLinePos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"status":-2},{"failureDictionary":{}},{"memory":32199,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
