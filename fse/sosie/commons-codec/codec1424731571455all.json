[{"failures":[],"tindex":"96aaeb1a-bbac-11e4-9a22-d980c95e7309","variableMapping":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"value","name2":"value","name1":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:788","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":-2},{"failures":[],"tindex":"96ab122b-bbac-11e4-9a22-b16cbca4f20e","variableMapping":{"c1":"lastCode","c2":"lastCode"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (char == char) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:366","type":"CtIfImpl","sourcecode":"if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"96ab122c-bbac-11e4-9a22-5dcd0955d70a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":-1},{"failures":[],"tindex":"96ab122d-bbac-11e4-9a22-b126b3456fca","variableMapping":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[aeiou]\", \"3\")"},"status":0},{"failures":[],"tindex":"a615257e-bbac-11e4-9a22-1d5c019c995b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:358","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"No rules found for %s, %s, %s.\", org.apache.commons.codec.language.bm.NameType.getName(), org.apache.commons.codec.language.bm.RuleType.getName(), java.lang.String))"},"status":-2},{"failures":[],"tindex":"a615257f-bbac-11e4-9a22-999f101e0e84","variableMapping":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"a6152580-bbac-11e4-9a22-3f32457d366c","variableMapping":{"finalRules":"ruleMap"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:331","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> == null) {\n    throw new java.lang.NullPointerException(\"finalRules can not be null\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:302","type":"CtForEachImpl","sourcecode":"for (final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> : java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.values()) {\n    java.util.List<org.apache.commons.codec.language.bm.Rule>.addAll(java.util.List<org.apache.commons.codec.language.bm.Rule>);\n}"},"status":0},{"failures":[],"tindex":"b8a92891-bbac-11e4-9a22-71738c0e5cd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"b8a92892-bbac-11e4-9a22-75d6112a25dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:296","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (int / 8) - int"},"status":-2},{"failures":[],"tindex":"b8a92893-bbac-11e4-9a22-a546503a8802","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha384Digest()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"status":0},{"failures":[],"tindex":"ea191a74-bbac-11e4-9a22-ab74ee5c240b","variableMapping":{"this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:788","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:784","type":"CtIfImpl","sourcecode":"if (int <= 1) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 2)))) {\n    return false;\n} else if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":-2},{"failures":[],"tindex":"ea191a75-bbac-11e4-9a22-25b3a53a38ba","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:725","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"WICZ\", \"WITZ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TS\", \"FX\");\n    int += 4;\n} else {\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"ea191a76-bbac-11e4-9a22-c796b1e20c00","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:280","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])"},"status":-2},{"failures":[],"tindex":"ea191a77-bbac-11e4-9a22-a7080bc6a7f0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:552","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.size()]"},"status":-2},{"failures":[],"tindex":"ea191a78-bbac-11e4-9a22-3d4e32e25333","variableMapping":{"found":"matches"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"boolean = java.lang.String.equals(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ea191a79-bbac-11e4-9a22-4d1dca6c1be5","variableMapping":{"key":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[],"tindex":"ea191a7a-bbac-11e4-9a22-8121bc564b98","variableMapping":{"obj":"obj","this":"obj"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:502","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:313","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"ea191a7b-bbac-11e4-9a22-2dce771f4330","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:249","type":"CtReturnImpl","sourcecode":"return this.java.nio.charset.Charset.name()"},"status":0},{"failures":[],"tindex":"f5ece7ac-bbac-11e4-9a22-156a2d69a180","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:176","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException)"},"status":-2},{"failures":[],"tindex":"f5ece7ad-bbac-11e4-9a22-69b3788912e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:258","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to load resource: \" + java.lang.String))"},"status":0},{"failures":[],"tindex":"24f130be-bbad-11e4-9a22-d18c664f79c2","variableMapping":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[],"tindex":"24f130bf-bbad-11e4-9a22-63534120d2e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:306","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (!(java.util.BitSet.get(int))) || (org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)) && (int > ((org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)))"},"status":-2},{"failures":[],"tindex":"24f130c0-bbad-11e4-9a22-8db44e5969d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.isVowel(char)) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[],"tindex":"24f130c1-bbad-11e4-9a22-515b6add85d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"ER\", \"EN\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\");\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n    }\n} else {\n    if (((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 3))))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 3)) != 'W')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n}"},"status":-1},{"failures":[],"tindex":"24f130c2-bbad-11e4-9a22-e7db0f135bec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"status":-1},{"failures":[],"tindex":"24f156d3-bbad-11e4-9a22-b796364f43dc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:225","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Problem processing \" + org.apache.commons.codec.language.bm.Rule.(org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String))) , java.lang.IllegalStateException)"},"status":0},{"failures":[],"tindex":"3530e294-bbad-11e4-9a22-3b7f9c73c6f4","variableMapping":{"code":"mapped"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"char = '6'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:276","type":"CtAssignmentImpl","sourcecode":"char[][int++] = char"},"status":-1},{"failures":[],"tindex":"3530e295-bbad-11e4-9a22-b3809c7bb1d0","variableMapping":{"this":"this","key":"key"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:231","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[]), java.io.InputStream)"},"status":0},{"failures":[],"tindex":"3dd282a6-bbad-11e4-9a22-5be7c78b7ad5","variableMapping":{"maxCodeLen":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:397","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":0},{"failures":[],"tindex":"464e7247-bbad-11e4-9a22-156dbb4bbe10","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:307","type":"CtAssignmentImpl","sourcecode":"java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String)"},"status":0},{"failures":[],"tindex":"65899818-bbad-11e4-9a22-07e462760feb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt((int & 63)))"},"status":-1},{"failures":[],"tindex":"6589bf29-bbad-11e4-9a22-57e3a00b9041","variableMapping":{"b":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:344","type":"CtIfImpl","sourcecode":"if ((int > 0) && (int < (java.lang.StringBuilder.length()))) {\n    boolean = (java.lang.StringBuilder.charAt((int - 1))) == char;\n} "},"status":-2},{"failures":[],"tindex":"6589bf2a-bbad-11e4-9a22-91b2614b4f74","variableMapping":{"key":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:296","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n    org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null;\n} "},"status":-2},{"failures":[],"tindex":"6589bf2b-bbad-11e4-9a22-0d8156eb3623","variableMapping":{"rules":"rules"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:318","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.put(char, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>)"},"status":-1},{"failures":[],"tindex":"6589bf2c-bbad-11e4-9a22-43473a4c8c96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:466","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", lcon=\\'\").append(java.lang.String).append('\\'')"},"status":0},{"failures":[],"tindex":"709d499d-bbad-11e4-9a22-9d7cb1233a24","variableMapping":{"salt":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","org.apache.commons.codec.digest.B64.B64T":"line"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:204","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"709d499e-bbad-11e4-9a22-21a418a47b8e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:481","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)))"},"status":0},{"failures":[],"tindex":"780de3bf-bbad-11e4-9a22-c3e80c900989","variableMapping":{"ibitWorkArea":"pos","context":"context"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:476","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = (org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:361","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"b03754c0-bbad-11e4-9a22-a137acc70466","variableMapping":{"code":"ch","chr":"lastChar"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:522","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>) {\n    for (final java.lang.String java.lang.String : java.lang.String[]) {\n        final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = boolean ? org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.createBranch() : org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch;\n        final boolean boolean = ((char == 'm') && (char == 'n')) || ((char == 'n') && (char == 'm'));\n        org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.processNextReplacement(java.lang.String, boolean);\n        if (boolean) {\n            java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.add(org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch);\n        } else {\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"b03754c1-bbad-11e4-9a22-8170b4634f2e","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('L')"},"status":-1},{"failures":[],"tindex":"b03754c2-bbad-11e4-9a22-65132508e051","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:470","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> , java.lang.String , org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder , int , int).invoke()"},"status":-2},{"failures":[],"tindex":"b03754c3-bbad-11e4-9a22-dbbd128cf4e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":"b03754c4-bbad-11e4-9a22-ff62da1e95ce","variableMapping":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"urlsafe"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"b03754c5-bbad-11e4-9a22-732be9a3925f","variableMapping":{"b":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:538","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'J') {\n    int += 2;\n} else {\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"b03754c6-bbad-11e4-9a22-5386661853da","variableMapping":{"found":"eof"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:433","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[],"tindex":"b03754c7-bbad-11e4-9a22-37f5d4bb80af","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"S\", \"TS\")"},"status":-1},{"failures":[],"tindex":"b0377bd8-bbad-11e4-9a22-93e589a4e10d","variableMapping":{"raw":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:98","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":0},{"failures":[],"tindex":"c3b36de9-bbad-11e4-9a22-13150f2b293b","variableMapping":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"urlsafe"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:130","type":"CtForEachImpl","sourcecode":"for (final byte byte : byte[]) {\n    int int = byte;\n    if (int < 0) {\n        int = 256 + int;\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == ' ') {\n            int = '+';\n        } \n        java.io.ByteArrayOutputStream.write(int);\n    } else {\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.URLCodec.byte);\n        final char char = java.lang.Character.java.lang.Character.toUpperCase(java.lang.Character.java.lang.Character.forDigit(((int >> 4) & 15), org.apache.commons.codec.net.URLCodec.int));\n        final char char = java.lang.Character.java.lang.Character.toUpperCase(java.lang.Character.java.lang.Character.forDigit((int & 15), org.apache.commons.codec.net.URLCodec.int));\n        java.io.ByteArrayOutputStream.write(char);\n        java.io.ByteArrayOutputStream.write(char);\n    }\n}"},"status":-1},{"failures":[],"tindex":"c3b36dea-bbad-11e4-9a22-818e1c05d7db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:458","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[],"tindex":"c3b36deb-bbad-11e4-9a22-d330fdf808e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can\\'t fetch any language from the empty language set.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"status":-2},{"failureDictionary":{}},{"memory":32197,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
