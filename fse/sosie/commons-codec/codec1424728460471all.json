[{"failures":[],"tindex":"ee5bed5b-bba4-11e4-9b37-53238b9b7d96","variableMapping":{"currentLinePos":"pos","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"pos","context":"context"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += org.apache.commons.codec.binary.Base64.int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"ee5c146c-bba4-11e4-9b37-fbb9b5de5304","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"ee5c146d-bba4-11e4-9b37-a9f9f03ff89d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[],"tindex":"ee5c3b7e-bba4-11e4-9b37-cf80acb49ebf","variableMapping":{"b":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"69edfdaf-bba5-11e4-9b37-f3ecf4ee326a","variableMapping":{"altResult":"obj","this":"obj","buffer":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][22], byte[][43], byte[][1], 4, java.lang.StringBuilder)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:74","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"69edfdb0-bba5-11e4-9b37-e3222f215b5a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = byte"},"status":-2},{"failures":[],"tindex":"69ee24c1-bba5-11e4-9b37-1558abb1c473","variableMapping":{"salt":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","org.apache.commons.codec.digest.B64.B64T":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:204","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Lang:140","type":"CtWhileImpl","sourcecode":"while (java.util.Scanner.hasNextLine()) {\n    final java.lang.String java.lang.String = java.util.Scanner.nextLine();\n    java.lang.String java.lang.String = java.lang.String;\n    if (boolean) {\n        if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            boolean = false;\n        } \n    } else {\n        if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            boolean = true;\n        } else {\n            final int int = java.lang.String.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n            if (int >= 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n            } \n            java.lang.String = java.lang.String.trim();\n            if ((java.lang.String.length()) == 0) {\n                continue;\n            } \n            final java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\\\s+\");\n            if ((java.lang.String[].int) != 3) {\n                throw new java.lang.IllegalArgumentException(((((\"Malformed line \\'\" + java.lang.String) + \"\\' in language resource \\'\") + java.lang.String) + \"\\'\"));\n            } \n            final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String[][0]);\n            final java.lang.String[] java.lang.String[] = java.lang.String[][1].split(\"\\\\+\");\n            final boolean boolean = java.lang.String[][2].equals(\"true\");\n            java.util.List<org.apache.commons.codec.language.bm.Lang.LangRule>.add(new org.apache.commons.codec.language.bm.Lang.LangRule(java.util.regex.Pattern , new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[])) , boolean));\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"69ee24c2-bba5-11e4-9b37-71b8ad9eb35a","variableMapping":{"c":"d"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:344","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"69ee4bd3-bba5-11e4-9b37-0f3758e61881","variableMapping":{"base64Data":"key"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[]), java.io.InputStream).doFinal()"},"status":-1},{"failures":[],"tindex":"69ee4bd4-bba5-11e4-9b37-a5e099bc501f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32OutputStream:52","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32OutputStream.this(java.io.OutputStream, true)"},"status":-2},{"failures":[],"tindex":"69ee4bd5-bba5-11e4-9b37-759f85ec4608","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:56","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[] , 0 , int).toUpperCase(java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"69ee4bd6-bba5-11e4-9b37-9fd345561602","variableMapping":{"key":"local"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[],"tindex":"69ee72e7-bba5-11e4-9b37-81d5969e59e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tio\", \"sio\")"},"status":0},{"failures":[],"tindex":"ba605228-bba5-11e4-9b37-191b339eb0dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ba605229-bba5-11e4-9b37-491338b4f298","variableMapping":{"other":"languages"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.LanguageSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"status":-2},{"failures":[],"tindex":"ba60522a-bba5-11e4-9b37-e924f1ad8dd2","variableMapping":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos","context":"context","modulus":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"ba60522b-bba5-11e4-9b37-fde4f5e6d63b","variableMapping":{"charset":"input"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:496","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    final char char = java.lang.String.charAt(int);\n    if (java.lang.Character.java.lang.Character.isWhitespace(char)) {\n        continue;\n    } \n    final java.lang.String java.lang.String = java.lang.String.substring(int);\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.get(char);\n    if (java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> == null) {\n        continue;\n    } \n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch> = boolean ? new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>() : java.util.Collections.java.util.List;\n    for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>) {\n        if (org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.matches(java.lang.String)) {\n            if (boolean) {\n                java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear();\n            } \n            final java.lang.String[] java.lang.String[] = org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getReplacements(java.lang.String, (char == '\u0000'));\n            final boolean boolean = ((java.lang.String[].int) > 1) && boolean;\n            for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>) {\n                for (final java.lang.String java.lang.String : java.lang.String[]) {\n                    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = boolean ? org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.createBranch() : org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch;\n                    final boolean boolean = ((char == 'm') && (char == 'n')) || ((char == 'n') && (char == 'm'));\n                    org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.processNextReplacement(java.lang.String, boolean);\n                    if (boolean) {\n                        java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.add(org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch);\n                    } else {\n                        break;\n                    }\n                }\n            }\n            if (boolean) {\n                java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear();\n                java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.addAll(java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>);\n            } \n            int += (org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getPatternLength()) - 1;\n            break;\n        } \n    }\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"ba60793c-bba5-11e4-9b37-4faca3599630","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"f8b8b58d-bba5-11e4-9b37-a7ec1d6e6940","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:351","type":"CtReturnImpl","sourcecode":"return new java.lang.String(byte[] , org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"f8b8b58e-bba5-11e4-9b37-279aeac6751e","variableMapping":{"code":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:383","type":"CtAssignmentImpl","sourcecode":"char = '8'"},"status":-1},{"failures":[],"tindex":"f8b8b58f-bba5-11e4-9b37-71e905a707bf","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"pos","len":"currentLinePos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:392","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (org.apache.commons.codec.binary.BaseNCodec.Context.int))) {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int;\n    org.apache.commons.codec.binary.BaseNCodec.Context.int = 0;\n} "},"status":-2},{"failures":[],"tindex":"f8b8dca0-bba5-11e4-9b37-0382c89aaa46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:120","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"34a06711-bba6-11e4-9b37-112643f1123f","variableMapping":{"name2":"cs2","name1":"cs1"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:218","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"34a06712-bba6-11e4-9b37-29c09b09bd64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:391","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-2},{"failures":[],"tindex":"34a06713-bba6-11e4-9b37-f54956c5d5ef","variableMapping":{"key":"local"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[],"tindex":"34a06714-bba6-11e4-9b37-ab157def5501","variableMapping":{"this":"object","ascii":"object"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(java.lang.Object)).toCharArray());\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).getBytes(org.apache.commons.codec.binary.Hex.getCharset()) : ((byte[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[]);\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new org.apache.commons.codec.EncoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"status":-2},{"failures":[],"tindex":"34a08e25-bba6-11e4-9b37-5d4754e03e96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"857bdd96-bba6-11e4-9b37-bd054b2e3ab5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:284","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"857bdd97-bba6-11e4-9b37-9558deffdefc","variableMapping":{"wdsz":"n","this":"this","n":"wdsz","local":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:215","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:194","type":"CtIfImpl","sourcecode":"if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n    java.lang.StringBuilder.append('K');\n} else {\n    java.lang.StringBuilder.append('X');\n}"},"status":-1},{"failures":[],"tindex":"857bdd98-bba6-11e4-9b37-41c398005c12","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:236","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"857c04a9-bba6-11e4-9b37-896e3f13d118","variableMapping":{"base64Data":"binaryData"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[],"tindex":"857c04aa-bba6-11e4-9b37-9d4fcc1ae135","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:105","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392}],"os.version":"3.2.0-4-amd64"}]
