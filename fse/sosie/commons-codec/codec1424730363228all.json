[{"failures":[],"tindex":"903c5e22-bba9-11e4-b9ac-5129b432e563","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:744","type":"CtIfImpl","sourcecode":"if (!((int == ((java.lang.String.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 3, \"IAU\", \"EAU\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AU\", \"OU\"))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-1},{"failures":[],"tindex":"903c8533-bba9-11e4-b9ac-35d96c3b2ba2","variableMapping":{"last":"code","mapped":"lastCode","count":"rightLength","out":"org.apache.commons.codec.language.ColognePhonetic.SZ"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    if ((char != '0') && (char != char)) {\n        char[][int++] = char;\n    } \n    char = char;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:347","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '0';\n} else if (((char == 'H') || (char < 'A')) || (char > 'Z')) {\n    if (char == '/') {\n        continue;\n    } \n    char = '-';\n} else if ((char == 'B') || ((char == 'P') && (char != 'H'))) {\n    char = '1';\n} else if (((char == 'D') || (char == 'T')) && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '4';\n} else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '4';\n    org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n    int++;\n} else if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-1},{"failures":[],"tindex":"903c8534-bba9-11e4-b9ac-93790028f2d8","variableMapping":{"dc":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, 1)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:301","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[],"tindex":"903cac45-bba9-11e4-b9ac-2350cee94f94","variableMapping":{"i":"b"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:179","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-1},{"failures":[],"tindex":"903cac46-bba9-11e4-b9ac-650932a13e7e","variableMapping":{"binaryData":"key"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return byte[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:659","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]), java.io.InputStream).doFinal()"},"status":-2},{"failures":[],"tindex":"903cac47-bba9-11e4-b9ac-c9748968bb11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:182","type":"CtReturnImpl","sourcecode":"return java.io.ByteArrayOutputStream.toByteArray()"},"status":-1},{"failures":[],"tindex":"903cac48-bba9-11e4-b9ac-036c40dd9e0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:249","type":"CtReturnImpl","sourcecode":"return this.java.nio.charset.Charset.name()"},"status":-2},{"failures":[],"tindex":"903cac49-bba9-11e4-b9ac-4937fc1d3f4c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:367","type":"CtReturnImpl","sourcecode":"return new java.lang.String(byte[] , org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"903cac4a-bba9-11e4-b9ac-a39514ff841f","variableMapping":{"wdsz":"i","n":"j"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"903cac4b-bba9-11e4-b9ac-f398b4456307","variableMapping":{"index":"index","java.lang.Character.MIN_VALUE":"mappedChar","value":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= (java.lang.String.length()))) {\n    return java.lang.Character.char;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:187","type":"CtIfImpl","sourcecode":"if ((int > 1) && (char != '0')) {\n    final char char = java.lang.String.charAt((int - 1));\n    if (('H' == char) || ('W' == char)) {\n        final char char = java.lang.String.charAt((int - 2));\n        final char char = org.apache.commons.codec.language.Soundex.map(char);\n        if (((char == char) || ('H' == char)) || ('W' == char)) {\n            return 0;\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"903cd35c-bba9-11e4-b9ac-63e90939dae7","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:359","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else {\n    if (int > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n        }\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n    return int + 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:283","type":"CtIfImpl","sourcecode":"if ((int == 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 6, \"CAESAR\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CH\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CZ\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 4, \"WICZ\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"903cd35d-bba9-11e4-b9ac-0918d47b3e6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha384Digest()"},"status":0},{"failures":[],"tindex":"98cb127e-bba9-11e4-b9ac-996506165201","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:175","type":"CtLocalVariableImpl","sourcecode":"final java.lang.ArrayIndexOutOfBoundsException java.lang.ArrayIndexOutOfBoundsException"},"status":0},{"failures":[],"tindex":"a1457b7f-bba9-11e4-b9ac-7fe9ce0b3048","variableMapping":{"b":"altResult","c":"cnt","u":"blocksize","y":"cnt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & int) != 0) {\n    int |= 1;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    int >>= 1;\n}"},"status":0},{"failures":[],"tindex":"bf194920-bba9-11e4-b9ac-9b3031e86192","variableMapping":{"txt":"source","org.apache.commons.codec.language.Caverphone1.SIX_1":"source"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:96","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String)"},"status":-2},{"failures":[],"tindex":"bf194921-bba9-11e4-b9ac-438ecfe66489","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"bf194922-bba9-11e4-b9ac-93dbbef30cf1","variableMapping":{"a":"index","t":"index","n":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:343","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"status":-1},{"failures":[],"tindex":"bf194923-bba9-11e4-b9ac-f1f9323e0d9b","variableMapping":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"16dd8c24-bbaa-11e4-b9ac-ff9947d29121","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:184","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"16dd8c25-bbaa-11e4-b9ac-7fbf6306416d","variableMapping":{"rules":"rules"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:318","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.put(char, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>)"},"status":-1},{"failures":[],"tindex":"16dd8c26-bbaa-11e4-b9ac-e36c5ee709b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"16dd8c27-bbaa-11e4-b9ac-efab2e9d6ee4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:343","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemeText().toString()"},"status":-2},{"failures":[],"tindex":"16dd8c28-bbaa-11e4-b9ac-d1ab286cb7cc","variableMapping":{"soundexMapping":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-2},{"failures":[],"tindex":"16dd8c29-bbaa-11e4-b9ac-3b35be5675df","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"ER\", \"EN\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:395","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"DT\", \"DD\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"16dd8c2a-bbaa-11e4-b9ac-fd70a53db160","variableMapping":{"key":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"$\")"},"status":-1},{"failures":[],"tindex":"16dd8c2b-bbaa-11e4-b9ac-cba47550b662","variableMapping":{"str":"txt"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"status":-1},{"failures":[],"tindex":"16dd8c2c-bbaa-11e4-b9ac-c7f748c6d60a","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:356","type":"CtIfImpl","sourcecode":"if ((int > 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"CHAE\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'X');\n    return int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else {\n    if (int > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n        }\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n    return int + 2;\n}"},"status":-2},{"failures":[],"tindex":"16dd8c2d-bbaa-11e4-b9ac-79084089941b","variableMapping":{"terminator":"i","to":"c"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.boolean[][int]) {\n    int = (int >>> 2) | (int << 26);\n    int = (int >>> 2) | (int << 26);\n} else {\n    int = (int >>> 1) | (int << 27);\n    int = (int >>> 1) | (int << 27);\n}"},"status":-2},{"failures":[],"tindex":"16ddb33e-bbaa-11e4-b9ac-03a2ce52640c","variableMapping":{"this":"this","local":"local","n":"n"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TCH\")) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n    java.lang.StringBuilder.append('X');\n} else {\n    java.lang.StringBuilder.append('S');\n}"},"status":0},{"failures":[],"tindex":"3a62428f-bbaa-11e4-b9ac-51e75f6ad067","variableMapping":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"value","name2":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value","name1":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:806","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"status":-2},{"failures":[],"tindex":"3a624290-bbaa-11e4-b9ac-316106c4c652","variableMapping":{"txt":"cachedString"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"c\", \"k\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:144","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-1},{"failures":[],"tindex":"3a624291-bbaa-11e4-b9ac-334ec77d490c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(((java.lang.String.length()) + 1))"},"status":-2},{"failures":[],"tindex":"3a624292-bbaa-11e4-b9ac-bd069c03a9f7","variableMapping":{"mappedChar":"c","preHWChar":"c","firstCode":"c"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((char == char) || ('H' == char)) || ('W' == char)) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:165","type":"CtReturnImpl","sourcecode":"return this.char[][(java.lang.Character.(java.lang.Character.toUpperCase(char)) - 'A')]"},"status":-2},{"failures":[],"tindex":"3a624293-bbaa-11e4-b9ac-5f1761ce0463","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:121","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"3a624294-bbaa-11e4-b9ac-2779eb732f94","variableMapping":{"key":"sb"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:264","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":0},{"failures":[],"tindex":"f38b6215-bbaa-11e4-b9ac-13d9810a19d5","variableMapping":{"byteToCheck":"octet"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byte) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:537","type":"CtReturnImpl","sourcecode":"return ((byte >= 0) && (byte < (byte[].int))) && ((byte[][byte]) != (-1))"},"status":-2},{"failures":[],"tindex":"f38b6216-bbaa-11e4-b9ac-8b0ec02246f7","variableMapping":{"terminator":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","to":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[],"tindex":"f38b6217-bbaa-11e4-b9ac-a5d56372b61c","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:487","type":"CtIfImpl","sourcecode":"if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:412","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'N') {\n    if (((int == 1) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 0)))) && (!boolean)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\", \"N\");\n    } else if (((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"EY\"))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) != 'Y')) && (!boolean)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\");\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\");\n    }\n    int = int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"LI\")) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KL\", \"L\");\n    int += 2;\n} else if ((int == 0) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y') || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if ((((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ER\")) || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y')) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"E\", \"I\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"RGY\", \"OGY\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"E\", \"I\", \"Y\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n    }\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-2},{"failures":[],"tindex":"f38b6218-bbaa-11e4-b9ac-5f853e03b33e","variableMapping":{"this":"obj","object":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).getBytes(org.apache.commons.codec.binary.Hex.getCharset()) : ((byte[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[]);\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new org.apache.commons.codec.EncoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:314","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"status":-2},{"failures":[],"tindex":"f38b6219-bbaa-11e4-b9ac-77643cb8515a","variableMapping":{"length":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH","key":"bytes"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((byte[].int) - 3) ; int++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int, byte[]);\n    if (int < (org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        int += org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, !(java.util.BitSet.get(int)), java.io.ByteArrayOutputStream);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, ((!(java.util.BitSet.get(int))) || org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int))), java.io.ByteArrayOutputStream);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        int = 1;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f38b621a-bbaa-11e4-b9ac-395c989dddfd","variableMapping":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"charset"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:600","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String.getBytes(java.lang.String)))"},"status":-1},{"failures":[],"tindex":"f38b621b-bbaa-11e4-b9ac-83d1d707e790","variableMapping":{"sumLength":"l","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"l","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"u","minRating":"u","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"l"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:174","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)))"},"status":-2},{"failures":[],"tindex":"f38b621c-bbaa-11e4-b9ac-1d463f343c92","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[],"tindex":"f38b621d-bbaa-11e4-b9ac-fb09f9c2ccb3","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F')"},"status":-1},{"failures":[],"tindex":"f38b621e-bbaa-11e4-b9ac-4b07adecd359","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":"f38b621f-bbaa-11e4-b9ac-97cb2f0f2f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:151","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.language.bm.Rule.Phoneme.getPhonemeText())"},"status":-1},{"failures":[],"tindex":"f38b6220-bbaa-11e4-b9ac-8546cd00edf7","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:97","type":"CtWhileImpl","sourcecode":"while ((!(org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.isComplete())) && (int <= ((java.lang.String.length()) - 1))) {\n    switch (java.lang.String.charAt(int)) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n        case 'Y' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'B' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('P');\n            int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'B' ? int + 2 : int + 1;\n            break;\n        case 'Ç' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n            int++;\n            break;\n        case 'C' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'D' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'F' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n            int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'F' ? int + 2 : int + 1;\n            break;\n        case 'G' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean);\n            break;\n        case 'H' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'J' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean);\n            break;\n        case 'K' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n            int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'K' ? int + 2 : int + 1;\n            break;\n        case 'L' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'M' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('M');\n            int = org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String, int) ? int + 2 : int + 1;\n            break;\n        case 'N' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('N');\n            int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'N' ? int + 2 : int + 1;\n            break;\n        case 'Ñ' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('N');\n            int++;\n            break;\n        case 'P' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'Q' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n            int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Q' ? int + 2 : int + 1;\n            break;\n        case 'R' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean);\n            break;\n        case 'S' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean);\n            break;\n        case 'T' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'V' :\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n            int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'V' ? int + 2 : int + 1;\n            break;\n        case 'W' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'X' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n            break;\n        case 'Z' :\n            int = org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean);\n            break;\n        default :\n            int++;\n            break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f38b6221-bbaa-11e4-b9ac-f9455d488bed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:173","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:306","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (!(java.util.BitSet.get(int))) || (org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)) && (int > ((org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)))"},"status":-2},{"failures":[],"tindex":"f38b6222-bbaa-11e4-b9ac-3599d201de11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"f38b6223-bbaa-11e4-b9ac-2bf2bad967bc","variableMapping":{"encodeTable":"buffer","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"b"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = byte[]"},"status":-2},{"failureDictionary":{}},{"memory":32205,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2001}],"os.version":"3.2.0-4-amd64"}]
