[{"failures":[],"tindex":"dd28932d-bbeb-11e4-b1d7-b141eee34205","variableMapping":{"u":"a"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"status":-1},{"failures":[],"tindex":"dd28ba3e-bbeb-11e4-b1d7-bb150918265e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:152","type":"CtIfImpl","sourcecode":"if ((char != 'C') && org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, char))) {\n    int++;\n} else {\n    switch (char) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n            if (int == 0) {\n                java.lang.StringBuilder.append(char);\n            } \n            break;\n        case 'B' :\n            if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n                break;\n            } \n            java.lang.StringBuilder.append(char);\n            break;\n        case 'C' :\n            if ((org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && (!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int)))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"CIA\")) {\n                java.lang.StringBuilder.append('X');\n                break;\n            } \n            if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n                java.lang.StringBuilder.append('S');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n                java.lang.StringBuilder.append('K');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n                if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n                    java.lang.StringBuilder.append('K');\n                } else {\n                    java.lang.StringBuilder.append('X');\n                }\n            } else {\n                java.lang.StringBuilder.append('K');\n            }\n            break;\n        case 'D' :\n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'G'))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 2)))) >= 0)) {\n                java.lang.StringBuilder.append('J');\n                int += 2;\n            } else {\n                java.lang.StringBuilder.append('T');\n            }\n            break;\n        case 'G' :\n            if (org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n                break;\n            } \n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) && (!org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 2))))) {\n                break;\n            } \n            if ((int > 0) && (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GN\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GNED\")))) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder, int, 'G')) {\n                boolean = true;\n            } else {\n                boolean = false;\n            }\n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) && (!boolean)) {\n                java.lang.StringBuilder.append('J');\n            } else {\n                java.lang.StringBuilder.append('K');\n            }\n            break;\n        case 'H' :\n            if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n                break;\n            } \n            if ((int > 0) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int - 1)))) >= 0)) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder, (int + 1))) {\n                java.lang.StringBuilder.append('H');\n            } \n            break;\n        case 'F' :\n        case 'J' :\n        case 'L' :\n        case 'M' :\n        case 'N' :\n        case 'R' :\n            java.lang.StringBuilder.append(char);\n            break;\n        case 'K' :\n            if (int > 0) {\n                if (!org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'C'))) {\n                    java.lang.StringBuilder.append(char);\n                } \n            } else {\n                java.lang.StringBuilder.append(char);\n            }\n            break;\n        case 'P' :\n            if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n                java.lang.StringBuilder.append('F');\n            } else {\n                java.lang.StringBuilder.append(char);\n            }\n            break;\n        case 'Q' :\n            java.lang.StringBuilder.append('K');\n            break;\n        case 'S' :\n            if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n                java.lang.StringBuilder.append('X');\n            } else {\n                java.lang.StringBuilder.append('S');\n            }\n            break;\n        case 'T' :\n            if (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIA\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIO\"))) {\n                java.lang.StringBuilder.append('X');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TCH\")) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TH\")) {\n                java.lang.StringBuilder.append('0');\n            } else {\n                java.lang.StringBuilder.append('T');\n            }\n            break;\n        case 'V' :\n            java.lang.StringBuilder.append('F');\n            break;\n        case 'W' :\n        case 'Y' :\n            if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 1)))) {\n                java.lang.StringBuilder.append(char);\n            } \n            break;\n        case 'X' :\n            java.lang.StringBuilder.append('K');\n            java.lang.StringBuilder.append('S');\n            break;\n        case 'Z' :\n            java.lang.StringBuilder.append('S');\n            break;\n        default :\n            break;\n    }\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"dd29085f-bbeb-11e4-b1d7-e7e42cb007bc","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:123","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F')"},"status":-1},{"failures":[],"tindex":"dd290860-bbeb-11e4-b1d7-4b05b593c760","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:249","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"439a9e61-bbec-11e4-b1d7-a97961d2ec28","variableMapping":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_G"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"439a9e62-bbec-11e4-b1d7-0f6dbad851e0","variableMapping":{"nextBranches":"nextBranches"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:540","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear();\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.addAll(java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>);\n} "},"status":-1},{"failures":[],"tindex":"439a9e63-bbec-11e4-b1d7-1968ec452ef4","variableMapping":{"bytes":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.Context.byte[]"},"status":-2},{"failures":[],"tindex":"439ac574-bbec-11e4-b1d7-43359b5eeb28","variableMapping":{"this":"this","combined":"l","remainder":"input"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:413","type":"CtReturnImpl","sourcecode":"return (((\"(\" + org.apache.commons.codec.language.bm.PhoneticEngine.(encode(java.lang.String))) + \")-(\") + org.apache.commons.codec.language.bm.PhoneticEngine.(encode(java.lang.String))) + \")\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith((java.lang.String + \" \"))) {\n    final java.lang.String java.lang.String = java.lang.String.substring(((java.lang.String.length()) + 1));\n    final java.lang.String java.lang.String = java.lang.String + java.lang.String;\n    return (((\"(\" + org.apache.commons.codec.language.bm.PhoneticEngine.(encode(java.lang.String))) + \")-(\") + org.apache.commons.codec.language.bm.PhoneticEngine.(encode(java.lang.String))) + \")\";\n} "},"status":-1},{"failures":[],"tindex":"439ac575-bbec-11e4-b1d7-1f7d01a38b51","variableMapping":{"b":"keyBytes","c":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS","u":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","y":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & int) != 0) {\n    int |= 1;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:256","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.digest.Md5Crypt.int) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest();\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"status":-2},{"failures":[],"tindex":"439ac576-bbec-11e4-b1d7-d15f1cf6bc80","variableMapping":{"result":"strict"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":0},{"failures":[],"tindex":"455a16c7-bbee-11e4-b1d7-654261635e92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:437","type":"CtLocalVariableImpl","sourcecode":"final byte byte = byte[][int++]"},"status":-2},{"failures":[],"tindex":"455a16c8-bbee-11e4-b1d7-1757c910ba50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String[][1]"},"status":-2},{"failures":[],"tindex":"455a16c9-bbee-11e4-b1d7-77eed21c821a","variableMapping":{"sumLength":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"ii","minRating":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"jj"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n    if ((char[][(int - int)]) == '1') {\n        byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int];\n    } \n}"},"status":-2},{"failures":[],"tindex":"455a16ca-bbee-11e4-b1d7-f1ef2192b14f","variableMapping":{"c":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:730","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"455a3ddb-bbee-11e4-b1d7-777467018576","variableMapping":{"ctx":"ctx1"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"455a3ddc-bbee-11e4-b1d7-b7430b809696","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).getBytes(org.apache.commons.codec.binary.Hex.getCharset()) : ((byte[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[]);\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new org.apache.commons.codec.EncoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"status":-2},{"failures":[],"tindex":"455b4f4d-bbee-11e4-b1d7-6b2e9c995837","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-2},{"failures":[],"tindex":"455c87ce-bbee-11e4-b1d7-49f6fdb88816","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:102","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:133","type":"CtIfImpl","sourcecode":"if ((int > (byte[].int)) || ((int + int) > (byte[].int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (int == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (int == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(byte[]);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return int;\n}"},"status":-2},{"failures":[],"tindex":"455cd5ef-bbee-11e4-b1d7-114e624550dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[int]"},"status":-2},{"failures":[],"tindex":"455cd5f0-bbee-11e4-b1d7-5b1d63779a66","variableMapping":{"value":"value2"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((java.lang.String.indexOf('W')) > (-1)) || ((java.lang.String.indexOf('K')) > (-1))) || ((java.lang.String.indexOf(\"CZ\")) > (-1))) || ((java.lang.String.indexOf(\"WITZ\")) > (-1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(java.lang.String, java.lang.String, false)"},"status":-2},{"failures":[],"tindex":"455cd5f1-bbee-11e4-b1d7-1d920cac94fd","variableMapping":{"length":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:287","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-2},{"failures":[],"tindex":"455cd5f2-bbee-11e4-b1d7-8d86ab04f1cf","variableMapping":{"pos":"y"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"455cd5f3-bbee-11e4-b1d7-b79c90aa65d8","variableMapping":{"t":"c"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
