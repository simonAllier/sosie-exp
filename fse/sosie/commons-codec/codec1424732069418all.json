[{"failures":[],"tindex":"920e3096-bbac-11e4-a35c-5f51de1d97e9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:462","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"920e57a7-bbac-11e4-a35c-bf8f385d9210","variableMapping":{"inExtendedComment":"matches"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:146","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"boolean = java.lang.String.equals(java.lang.String)"},"status":-1},{"failures":[],"tindex":"920e7eb8-bbac-11e4-a35c-fd32fd797ec5","variableMapping":{"i":"ii","key":"l_raw"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"byte[][int] = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int]"},"status":-1},{"failures":[],"tindex":"920e7eb9-bbac-11e4-a35c-3d55db323d38","variableMapping":{"cs1":"suffix","cs2":"suffix"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (java.lang.CharSequence.length()) - 1, int int = (java.lang.CharSequence.length()) - 1 ; int >= 0 ; int-- , int--) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"defba40a-bbac-11e4-a35c-b342f27f5aea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), java.io.InputStream)"},"status":-2},{"failures":[],"tindex":"defba40b-bbac-11e4-a35c-3720ab0f19f5","variableMapping":{"nextChar":"current"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"char = '-'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:192","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.RefinedSoundex.getMappingCode(java.lang.String.charAt(int))"},"status":-1},{"failures":[],"tindex":"defba40c-bbac-11e4-a35c-4d2f8471b724","variableMapping":{"mappedChar":"java.lang.Character.MIN_VALUE","preHWChar":"java.lang.Character.MIN_VALUE","firstCode":"java.lang.Character.MIN_VALUE"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((char == char) || ('H' == char)) || ('W' == char)) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= (java.lang.String.length()))) {\n    return java.lang.Character.char;\n} "},"status":-2},{"failures":[],"tindex":"defbcb1d-bbac-11e4-a35c-1b3eabb30ef9","variableMapping":{"charset":"data"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md2(java.lang.String))"},"status":-1},{"failures":[],"tindex":"defbcb1e-bbac-11e4-a35c-df9db95e3653","variableMapping":{"languagesResourceName":"charsetName"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:175","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:286","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String, java.io.UnsupportedEncodingException)"},"status":-2},{"failures":[],"tindex":"defbcb1f-bbac-11e4-a35c-69abfb479a63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:361","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"2571d180-bbad-11e4-a35c-c39afff970ca","variableMapping":{"u":"length","y":"length"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:231","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= (org.apache.commons.codec.language.Soundex.getSoundexMapping().int))) {\n    throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + char));\n} "},"status":-2},{"failures":[],"tindex":"2571d181-bbad-11e4-a35c-17ebbe5d54d1","variableMapping":{"words":"words2","words2":"words2"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:440","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:435","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2571d182-bbad-11e4-a35c-5badb7b3aa29","variableMapping":{"b":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:432","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    final java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\'\");\n    final java.lang.String java.lang.String = java.lang.String[][((java.lang.String[].int) - 1)];\n    java.util.List<java.lang.String>.add(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"2571f893-bbad-11e4-a35c-e1577c430cb2","variableMapping":{"current":"symb","sBuf":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:195","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    java.lang.StringBuilder.append(char);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:152","type":"CtIfImpl","sourcecode":"if ((char != 'C') && org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, char))) {\n    int++;\n} else {\n    switch (char) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n            if (int == 0) {\n                java.lang.StringBuilder.append(char);\n            } \n            break;\n        case 'B' :\n            if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n                break;\n            } \n            java.lang.StringBuilder.append(char);\n            break;\n        case 'C' :\n            if ((org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && (!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int)))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"CIA\")) {\n                java.lang.StringBuilder.append('X');\n                break;\n            } \n            if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n                java.lang.StringBuilder.append('S');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n                java.lang.StringBuilder.append('K');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n                if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n                    java.lang.StringBuilder.append('K');\n                } else {\n                    java.lang.StringBuilder.append('X');\n                }\n            } else {\n                java.lang.StringBuilder.append('K');\n            }\n            break;\n        case 'D' :\n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'G'))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 2)))) >= 0)) {\n                java.lang.StringBuilder.append('J');\n                int += 2;\n            } else {\n                java.lang.StringBuilder.append('T');\n            }\n            break;\n        case 'G' :\n            if (org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) {\n                break;\n            } \n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) && (!org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 2))))) {\n                break;\n            } \n            if ((int > 0) && (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GN\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GNED\")))) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder, int, 'G')) {\n                boolean = true;\n            } else {\n                boolean = false;\n            }\n            if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) && (!boolean)) {\n                java.lang.StringBuilder.append('J');\n            } else {\n                java.lang.StringBuilder.append('K');\n            }\n            break;\n        case 'H' :\n            if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n                break;\n            } \n            if ((int > 0) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int - 1)))) >= 0)) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder, (int + 1))) {\n                java.lang.StringBuilder.append('H');\n            } \n            break;\n        case 'F' :\n        case 'J' :\n        case 'L' :\n        case 'M' :\n        case 'N' :\n        case 'R' :\n            java.lang.StringBuilder.append(char);\n            break;\n        case 'K' :\n            if (int > 0) {\n                if (!org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'C'))) {\n                    java.lang.StringBuilder.append(char);\n                } \n            } else {\n                java.lang.StringBuilder.append(char);\n            }\n            break;\n        case 'P' :\n            if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n                java.lang.StringBuilder.append('F');\n            } else {\n                java.lang.StringBuilder.append(char);\n            }\n            break;\n        case 'Q' :\n            java.lang.StringBuilder.append('K');\n            break;\n        case 'S' :\n            if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n                java.lang.StringBuilder.append('X');\n            } else {\n                java.lang.StringBuilder.append('S');\n            }\n            break;\n        case 'T' :\n            if (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIA\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIO\"))) {\n                java.lang.StringBuilder.append('X');\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TCH\")) {\n                break;\n            } \n            if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TH\")) {\n                java.lang.StringBuilder.append('0');\n            } else {\n                java.lang.StringBuilder.append('T');\n            }\n            break;\n        case 'V' :\n            java.lang.StringBuilder.append('F');\n            break;\n        case 'W' :\n        case 'Y' :\n            if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 1)))) {\n                java.lang.StringBuilder.append(char);\n            } \n            break;\n        case 'X' :\n            java.lang.StringBuilder.append('K');\n            java.lang.StringBuilder.append('S');\n            break;\n        case 'Z' :\n            java.lang.StringBuilder.append('S');\n            break;\n        default :\n            break;\n    }\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"2571f894-bbad-11e4-a35c-199f55b91e51","variableMapping":{"c":"pos","d":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:360","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"cefed135-bbad-11e4-a35c-4bfcba5740f7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"cefef846-bbad-11e4-a35c-af9a5e1f7d81","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:348","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.isFound()"},"status":-2},{"failures":[],"tindex":"cefef847-bbad-11e4-a35c-1dd5f6d29e7b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:144","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException)"},"status":-2},{"failures":[],"tindex":"cefef848-bbad-11e4-a35c-9d113f0de8c4","variableMapping":{"bitlen":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"int = ((int + 7) >> 3) << 3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:462","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"cefef849-bbad-11e4-a35c-a98591d2d007","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:487","type":"CtIfImpl","sourcecode":"if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} "},"status":-1},{"failures":[],"tindex":"cefef84a-bbad-11e4-a35c-0b34e3509704","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE","len":"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"status":-2},{"failures":[],"tindex":"cefef84b-bbad-11e4-a35c-4969e6b952de","variableMapping":{"salt":"target","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"target"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.String)) {\n        boolean = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ceff1f5c-bbad-11e4-a35c-4930aeca720e","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KL\", \"L\")"},"status":-1},{"failures":[],"tindex":"ceff1f5d-bbad-11e4-a35c-bdf64b7fd82f","variableMapping":{"words":"words2","words2":"words2"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:440","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:437","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.removeAll(org.apache.commons.codec.language.bm.PhoneticEngine.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Set<java.lang.String>>.get(this.org.apache.commons.codec.language.bm.NameType))"},"status":-1},{"failures":[],"tindex":"ceff1f5e-bbad-11e4-a35c-5bd0c1d3a926","variableMapping":{"urlsafe":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":-2},{"failures":[],"tindex":"ceff1f5f-bbad-11e4-a35c-a3582cb39eb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"status":-1},{"failures":[],"tindex":"ceff1f60-bbad-11e4-a35c-4d7ef7acddfe","variableMapping":{"encodeTable":"encodeTable","ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"encodeTable"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 2) & (org.apache.commons.codec.binary.Base64.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:452","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 2))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"ceff4671-bbad-11e4-a35c-5b4f89b3e983","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"ceff4672-bbad-11e4-a35c-cba8d00b5b9d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:1005","type":"CtReturnImpl","sourcecode":"return ((this.java.lang.StringBuilder.length()) >= (this.int)) && ((this.java.lang.StringBuilder.length()) >= (this.int))"},"status":0},{"failures":[],"tindex":"0eb8c073-bbae-11e4-a35c-111af9e419fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:697","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"0eb8e784-bbae-11e4-a35c-0bd323d54318","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[],"tindex":"0eb8e785-bbae-11e4-a35c-e95a63f32e59","variableMapping":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"input"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:453","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.lang.String>.size()) == 1) {\n    java.lang.String = java.util.List<java.lang.String>.iterator().next();\n} else {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    for (final java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        java.lang.StringBuilder.append(\"-\").append(org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String));\n    }\n    return java.lang.StringBuilder.substring(1);\n}"},"status":-1},{"failures":[],"tindex":"0eb8e786-bbae-11e4-a35c-ef96003df35e","variableMapping":{"txt":"name"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3$\", \"A\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)"},"status":0},{"failures":[],"tindex":"20aefce7-bbae-11e4-a35c-d570e0607c3a","variableMapping":{"wdsz":"length","n":"thisStart"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:52","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.CharSequence)).regionMatches(boolean, int, ((java.lang.String)(java.lang.CharSequence)), int, int)"},"status":0},{"failures":[],"tindex":"af5cdde8-bbae-11e4-a35c-03cb58439c4d","variableMapping":{"lineSeparator":"singleByte","lineLength":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + int) + \" > 0, but lineSeparator is null\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"af5d04f9-bbae-11e4-a35c-0378e58b95f7","variableMapping":{"other":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","languages":"langs","this":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:136","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.bm.Languages.LanguageSet == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(org.apache.commons.codec.language.bm.Languages.LanguageSet));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : org.apache.commons.codec.language.bm.Languages.SomeLanguages.java.util.Set<java.lang.String>) {\n        java.util.Set<java.lang.String>.add(java.lang.String);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.org.apache.commons.codec.language.bm.Languages.LanguageSet.from(java.util.Set<java.lang.String>);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.isEmpty() ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : new org.apache.commons.codec.language.bm.Languages.SomeLanguages(java.util.Set<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"af5d04fa-bbae-11e4-a35c-e1880034115a","variableMapping":{"ii":"pos","keyLen":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"af5d04fb-bbae-11e4-a35c-35ac689f6dfe","variableMapping":{"bytes":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:103","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.format((\"%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, \" + \"modulus=%s, pos=%s, readPos=%s]\"), java.lang.Object.getClass().getSimpleName(), java.util.Arrays.java.util.Arrays.toString(byte[]), int, boolean, int, long, int, int, int)"},"status":-2},{"failures":[],"tindex":"af5d04fc-bbae-11e4-a35c-b7c80ec5dd32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte[][int++])"},"status":-2},{"failures":[],"tindex":"af5d04fd-bbae-11e4-a35c-1f4425f4cbfd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:528","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((char == 'm') && (char == 'n')) || ((char == 'n') && (char == 'm'))"},"status":-2},{"failures":[],"tindex":"af5d04fe-bbae-11e4-a35c-d1937ef72def","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:377","type":"CtReturnImpl","sourcecode":"return int + 2"},"status":-1},{"failures":[],"tindex":"af5d04ff-bbae-11e4-a35c-1187eef807c9","variableMapping":{"key":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"status":-1},{"failures":[],"tindex":"af5d0500-bbae-11e4-a35c-3553f9ace933","variableMapping":{"key":"key"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:302","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-2},{"failures":[],"tindex":"af5d2c11-bbae-11e4-a35c-3ddf402d36d9","variableMapping":{"string":"ascii"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:153","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":0},{"failures":[],"tindex":"d2f913f2-bbae-11e4-a35c-bd8a7f08b34d","variableMapping":{"wdsz":"minRating","n":"count"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:260","type":"CtReturnImpl","sourcecode":"return int >= int"},"status":-1},{"failures":[],"tindex":"d2f913f3-bbae-11e4-a35c-5924a9a95a06","variableMapping":{"u":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:465","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"ec8acb14-bbae-11e4-a35c-f16cd57b86ec","variableMapping":{"txt":"object","java.util.Locale.ENGLISH":"object"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale).toCharArray()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:251","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).toCharArray() : ((char[])(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"ec8acb15-bbae-11e4-a35c-579acb49ca42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
