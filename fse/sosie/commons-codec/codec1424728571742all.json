[{"failures":[],"tindex":"87b54805-bba5-11e4-93d0-1147625a2bff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:177","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"87b56f16-bba5-11e4-93d0-731503eafa9f","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:306","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:533","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-1},{"failures":[],"tindex":"87b56f17-bba5-11e4-93d0-d5301469a39a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:173","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:186","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = int < (java.lang.String.length()) ? org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.isVowel(java.lang.String.charAt(int)) : false"},"status":-2},{"failures":[],"tindex":"87b56f18-bba5-11e4-93d0-8df7abebd1aa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"87b56f19-bba5-11e4-93d0-2d80212a5804","variableMapping":{"jj":"pos","l_ascii":"buffer","bits":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '0'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:456","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"87b5962a-bba5-11e4-93d0-f9fb03a83177","variableMapping":{"sumLength":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"b","minRating":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"b"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:225","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-2},{"failures":[],"tindex":"87b5962b-bba5-11e4-93d0-411ed955a783","variableMapping":{"b":"rightLength"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:338","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext();\n    if ((int = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.length()) > 0) {\n        char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.getNextChar();\n    } else {\n        char = '-';\n    }\n    if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '0';\n    } else if (((char == 'H') || (char < 'A')) || (char > 'Z')) {\n        if (char == '/') {\n            continue;\n        } \n        char = '-';\n    } else if ((char == 'B') || ((char == 'P') && (char != 'H'))) {\n        char = '1';\n    } else if (((char == 'D') || (char == 'T')) && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n        char = '2';\n    } else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '3';\n    } else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '4';\n    } else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n        char = '4';\n        org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n        int++;\n    } else if ((char == 'S') || (char == 'Z')) {\n        char = '8';\n    } else if (char == 'C') {\n        if (char == '/') {\n            if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n                char = '4';\n            } else {\n                char = '8';\n            }\n        } else {\n            if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n                char = '8';\n            } else {\n                char = '4';\n            }\n        }\n    } else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n        char = '8';\n    } else if (char == 'R') {\n        char = '7';\n    } else if (char == 'L') {\n        char = '5';\n    } else if ((char == 'M') || (char == 'N')) {\n        char = '6';\n    } else {\n        char = char;\n    }\n    if ((char != '-') && ((((char != char) && ((char != '0') || (char == '/'))) || (char < '0')) || (char > '8'))) {\n        org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char);\n    } \n    char = char;\n    char = char;\n}"},"status":0},{"failures":[],"tindex":"a7d883ec-bba5-11e4-93d0-4f9ed9045142","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:77","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a7d8aafd-bba5-11e4-93d0-6f9fad69348a","variableMapping":{"data":"data","this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(byte[]))"},"status":-2},{"failures":[],"tindex":"a7d8aafe-bba5-11e4-93d0-677af255a69c","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:719","type":"CtIfImpl","sourcecode":"if ((((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1))))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F');\n    int++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"WICZ\", \"WITZ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TS\", \"FX\");\n    int += 4;\n} else {\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n}"},"status":-1},{"failures":[],"tindex":"a7d8aaff-bba5-11e4-93d0-a7b2c02fc83a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1},{"failures":[],"tindex":"a7d8ab00-bba5-11e4-93d0-a1fcea7db629","variableMapping":{"org.apache.commons.codec.language.bm.RuleType.RULES":"rt","rs":"rs","rt":"rt","s":"s","this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:228","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.RuleType.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n    java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(\"common\", org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, \"common\"), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, \"common\")));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:221","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.bm.Languages.getLanguages()) {\n    try {\n        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(java.lang.String, org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String)));\n    } catch (final java.lang.IllegalStateException java.lang.IllegalStateException) {\n        throw new java.lang.IllegalStateException((\"Problem processing \" + org.apache.commons.codec.language.bm.Rule.(org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String))) , java.lang.IllegalStateException);\n    }\n}"},"status":0},{"failures":[],"tindex":"eb554781-bba5-11e4-93d0-09efa1fcec06","variableMapping":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:86","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ph\", \"fh\")"},"status":-1},{"failures":[],"tindex":"eb554782-bba5-11e4-93d0-636f7beb0371","variableMapping":{"index":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:463","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"eb554783-bba5-11e4-93d0-d7fded652fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"int[][0] = int"},"status":-1},{"failures":[],"tindex":"eb554784-bba5-11e4-93d0-c3facf8cdc97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:183","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n    java.lang.StringBuilder.append('S');\n    break;\n} "},"status":-1},{"failures":[],"tindex":"eb554785-bba5-11e4-93d0-11d82d4e2b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:200","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"eb554786-bba5-11e4-93d0-296924ea5959","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:145","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:297","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + java.lang.String) + \"]\"))"},"status":-2},{"failures":[],"tindex":"eb554787-bba5-11e4-93d0-29dffcddc806","variableMapping":{"len":"bitlen"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int >> 1]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int / 8]"},"status":-1},{"failures":[],"tindex":"eb554788-bba5-11e4-93d0-23b269519a08","variableMapping":{"key":"saltBytes"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"eb554789-bba5-11e4-93d0-6b226dacd0b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"0e11cbea-bba6-11e4-93d0-8f0c571abdb5","variableMapping":{"last":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"char = '*'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"char = '2'"},"status":-1},{"failures":[],"tindex":"0e11cbeb-bba6-11e4-93d0-ffb80beb8e59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:54","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"0e11cbec-bba6-11e4-93d0-07b82ceb7382","variableMapping":{"ph":"name1LtREnd"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with \\'(\\' so must end with \\')\\'\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:307","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > int) {\n        break;\n    } \n    java.lang.String = java.lang.String.substring(int, (int + 1));\n    java.lang.String = java.lang.String.substring((int - int), ((int - int) + 1));\n    java.lang.String = java.lang.String.substring(int, (int + 1));\n    java.lang.String = java.lang.String.substring((int - int), ((int - int) + 1));\n    if (java.lang.String.equals(java.lang.String)) {\n        char[][int] = ' ';\n        char[][int] = ' ';\n    } \n    if (java.lang.String.equals(java.lang.String)) {\n        char[][(int - int)] = ' ';\n        char[][(int - int)] = ' ';\n    } \n}"},"status":-1},{"failures":[],"tindex":"0e11cbed-bba6-11e4-93d0-5dcbc5544142","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:211","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[],"tindex":"169a8cce-bba6-11e4-93d0-cdef64169ecd","variableMapping":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_S"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return char[]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"3e517b2f-bba6-11e4-93d0-791f4440311c","variableMapping":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)"},"status":-1},{"failures":[],"tindex":"3e517b30-bba6-11e4-93d0-6d1a5f946e1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R')"},"status":-1},{"failures":[],"tindex":"3e517b31-bba6-11e4-93d0-4d2faa721a87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]).doFinal(byte[]);\n} catch (final java.lang.IllegalStateException java.lang.IllegalStateException) {\n    throw new java.lang.IllegalArgumentException(java.lang.IllegalStateException);\n}"},"status":-2},{"failures":[],"tindex":"3e517b32-bba6-11e4-93d0-850c5a119daa","variableMapping":{"iChar":"org.apache.commons.codec.binary.Base32.MASK_5BITS","i":"org.apache.commons.codec.binary.Base32.MASK_5BITS","key":"encodeTable"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int << 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:451","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 3))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"3e517b33-bba6-11e4-93d0-2f4a4403710b","variableMapping":{"l_ascii":"ascii","length":"jj","raw":"ascii","org.apache.commons.codec.binary.BinaryCodec.BITS":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:248","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (byte[].int) - 1 ; int < (byte[].int) ; int++ , int -= 8) {\n    for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n        if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n            byte[][(int - int)] = '0';\n        } else {\n            byte[][(int - int)] = '1';\n        }\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:209","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n    if ((byte[][(int - int)]) == '1') {\n        byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int];\n    } \n}"},"status":-2},{"failures":[],"tindex":"3e517b34-bba6-11e4-93d0-6749d5068274","variableMapping":{"c":"b"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:383","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"status":0},{"failures":[],"tindex":"52f04265-bba6-11e4-93d0-1794cf8cf45f","variableMapping":{"str":"source"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String, false)[0]"},"status":-2},{"failures":[],"tindex":"52f04266-bba6-11e4-93d0-ff5d740580c4","variableMapping":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 12) & (org.apache.commons.codec.binary.Base64.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:474","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 4))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"52f04267-bba6-11e4-93d0-3f828ddaa72f","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"86e49538-bba6-11e4-93d0-55e13a281ad6","variableMapping":{"key":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:323","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"status":-1},{"failures":[],"tindex":"86e49539-bba6-11e4-93d0-1d5c7ec8fc50","variableMapping":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL","printable":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"status":-2},{"failures":[],"tindex":"86e4953a-bba6-11e4-93d0-3b9c05378147","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"length","len":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"status":-2},{"failures":[],"tindex":"86e4953b-bba6-11e4-93d0-43370ea76ba2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('0', 'T')"},"status":-1},{"failures":[],"tindex":"86e4953c-bba6-11e4-93d0-d394fb883c1a","variableMapping":{"code":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"char = '6'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:363","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"status":-1},{"failures":[],"tindex":"86e4953d-bba6-11e4-93d0-f7d0468ac67b","variableMapping":{"cachedString":"txt"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[],"tindex":"86e4953e-bba6-11e4-93d0-fb0930fdf202","variableMapping":{"a":"pos","t":"pos","n":"pos"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"9c64bbbf-bba6-11e4-93d0-214874aec962","variableMapping":{"key":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"status":-1},{"failures":[],"tindex":"9c64bbc0-bba6-11e4-93d0-b1fb8a8aa197","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim()"},"status":-2},{"failures":[],"tindex":"9c64bbc1-bba6-11e4-93d0-899dcb6b27aa","variableMapping":{"charset":"charset"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:141","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String, java.lang.String);\n} catch (final java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException) {\n    throw new org.apache.commons.codec.EncoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":0},{"failures":[],"tindex":"c7bbdb52-bba6-11e4-93d0-316a4dd504b3","variableMapping":{"inExtendedComment":"matches"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:146","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:355","type":"CtAssignmentImpl","sourcecode":"boolean = (java.lang.StringBuilder.charAt((int + 1))) == char"},"status":-1},{"failures":[],"tindex":"c7bbdb53-bba6-11e4-93d0-d925b98ea28d","variableMapping":{"ctx":"ctx1"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"c7bbdb54-bba6-11e4-93d0-2d2dfeae3a59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(1)"},"status":-2},{"failures":[],"tindex":"c7bbdb55-bba6-11e4-93d0-b70274e674cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:108","type":"CtSwitchImpl","sourcecode":"switch (char[][0]) {\n    case 'K' :\n    case 'G' :\n    case 'P' :\n        if ((char[][1]) == 'N') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'A' :\n        if ((char[][1]) == 'E') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'W' :\n        if ((char[][1]) == 'R') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n            break;\n        } \n        if ((char[][1]) == 'H') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n            java.lang.StringBuilder.setCharAt(0, 'W');\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'X' :\n        char[][0] = 'S';\n        java.lang.StringBuilder.append(char[]);\n        break;\n    default :\n        java.lang.StringBuilder.append(char[]);\n}"},"status":-1},{"failureDictionary":{}},{"memory":32197,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301},{"core":12,"vendor":"Intel","model":"Xeon","mhz":2301}],"os.version":"3.2.0-4-amd64"}]
