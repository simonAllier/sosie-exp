[{"failures":[],"tindex":"00e32e62-bbc4-11e4-8cc5-39108b664467","variableMapping":{"encodeSize":"w","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"w"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 6"},"status":-1},{"failures":[],"tindex":"00e37c83-bbc4-11e4-8cc5-63a2c587f887","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:476","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"5a9d4df4-bbc4-11e4-8cc5-c7a982bfd764","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:422","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"LI\")) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KL\", \"L\");\n    int += 2;\n} else if ((int == 0) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y') || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if ((((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ER\")) || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y')) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"E\", \"I\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"RGY\", \"OGY\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"E\", \"I\", \"Y\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n    }\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-1},{"failures":[],"tindex":"5a9e1145-bbc4-11e4-8cc5-1b1da0b25499","variableMapping":{"b":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:278","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (char[].int) - 1 ; int < (byte[].int) ; int++ , int -= 8) {\n    for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n        if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n            char[][(int - int)] = '0';\n        } else {\n            char[][(int - int)] = '1';\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"5a9e1146-bbc4-11e4-8cc5-d98af1e1fcd3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[], byte[]))"},"status":-1},{"failures":[],"tindex":"5a9e3857-bbc4-11e4-8cc5-172f09ad237e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byte) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"status":-2},{"failures":[],"tindex":"5a9e3858-bbc4-11e4-8cc5-73dfa0e37a2e","variableMapping":{"phonemes":"newPhonemes"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:124","type":"CtInvocationImpl","sourcecode":"this.java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:114","type":"CtIfImpl","sourcecode":"if ((java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.size()) < int) {\n    java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(org.apache.commons.codec.language.bm.Rule.Phoneme);\n    if ((java.util.Set<org.apache.commons.codec.language.bm.Rule.Phoneme>.size()) >= int) {\n        break EXPR;\n    } \n} "},"status":-1},{"failures":[],"tindex":"5a9e8679-bbc4-11e4-8cc5-ffc98edd0757","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"9809f1ca-bbc4-11e4-8cc5-29199fbda3e5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:504","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"9809f1cb-bbc4-11e4-8cc5-5175c1f6959b","variableMapping":{"code":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"char = '0'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"status":-1},{"failures":[],"tindex":"9809f1cc-bbc4-11e4-8cc5-7dfb61e3efd0","variableMapping":{"e":"object"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:254","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:407","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((((\"This method\\'s parameter was expected to be of the type \" + (java.lang.String.java.lang.String.getName())) + \". But actually it was of the type \") + (java.lang.Object.getClass().getName())) + \".\"))"},"status":-2},{"failures":[],"tindex":"9809f1cd-bbc4-11e4-8cc5-13934d66e752","variableMapping":{"key":"saltBytes"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":0},{"failures":[],"tindex":"200f91be-bbc5-11e4-8cc5-2351ad1ac502","variableMapping":{"c":"left"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"status":-1},{"failures":[],"tindex":"200f91bf-bbc5-11e4-8cc5-23b4a4ced37f","variableMapping":{"ctx":"ctx1"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"200f91c0-bbc5-11e4-8cc5-a749be52c4c0","variableMapping":{"index":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"int = int + 2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:468","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"200f91c1-bbc5-11e4-8cc5-cf71922b858a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:374","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.boolean) && ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= 2)) {\n    final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    switch (org.apache.commons.codec.binary.BaseNCodec.Context.int) {\n        case 2 :\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 3 :\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 4 :\n            org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 4;\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 5 :\n            org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 1;\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 6 :\n            org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 6;\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        case 7 :\n            org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 3;\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            break;\n        default :\n            throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)));\n    }\n} "},"status":-1},{"failures":[],"tindex":"200fb8d2-bbc5-11e4-8cc5-e76bb9dfa516","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"200fb8d3-bbc5-11e4-8cc5-bb3b883ac459","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:195","type":"CtReturnImpl","sourcecode":"return ((((char == 'a') || (char == 'e')) || (char == 'i')) || (char == 'o')) || (char == 'u')"},"status":-1},{"failures":[],"tindex":"200fb8d4-bbc5-11e4-8cc5-3f150fa43507","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtNewClassImpl","sourcecode":"new org.apache.commons.codec.binary.Base64()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:173","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(0)"},"status":-2},{"failures":[],"tindex":"200fb8d5-bbc5-11e4-8cc5-6b3582f6be4e","variableMapping":{"str":"string"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:316","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.isStrict() ? java.lang.String.substring(0, java.lang.Math.java.lang.Math.min(org.apache.commons.codec.language.Nysiis.int, java.lang.String.length())) : java.lang.String"},"status":-2},{"failures":[],"tindex":"200fb8d6-bbc5-11e4-8cc5-a3fc0280ea94","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:302","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\\\s+\")"},"status":-2},{"failures":[],"tindex":"200fdfe7-bbc5-11e4-8cc5-21a75d135320","variableMapping":{"lastReplacement":"str","replacement":"str"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"NN\")"},"status":0},{"failures":[],"tindex":"5311e378-bbc5-11e4-8cc5-dfd31513cdd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:362","type":"CtIfImpl","sourcecode":"if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '4';\n    org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n    int++;\n} else if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"53120a89-bbc5-11e4-8cc5-35f24f778693","variableMapping":{"key":"code"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('F')"},"status":-1},{"failures":[],"tindex":"53120a8a-bbc5-11e4-8cc5-81fcb5cbf2e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"status":-2},{"failures":[],"tindex":"53120a8b-bbc5-11e4-8cc5-9510e90c14ee","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:89","type":"CtIfImpl","sourcecode":"if ((int > (byte[].int)) || ((int + int) > (byte[].int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (int > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false);\n} "},"status":0},{"failures":[],"tindex":"9e8cb41c-bbc5-11e4-8cc5-cfc3ce74821a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String, java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"9e8cb41d-bbc5-11e4-8cc5-0b40b909be58","variableMapping":{"b":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"byte[][8] = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:477","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[],"tindex":"9e8cb41e-bbc5-11e4-8cc5-574eb9ba4c18","variableMapping":{"key":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9e8cb41f-bbc5-11e4-8cc5-5b9e30f931c2","variableMapping":{"b":"read"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"javax.crypto.Mac.update(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"efc6c560-bbc5-11e4-8cc5-8bf06628b7fb","variableMapping":{"key":"alternate"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"this.java.lang.StringBuilder.append(java.lang.String.substring(0, int))"},"status":-1},{"failures":[],"tindex":"efc6c561-bbc5-11e4-8cc5-a1875a18da84","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can\\'t fetch any language from the empty language set.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + char))"},"status":-1},{"failures":[],"tindex":"efc6c562-bbc5-11e4-8cc5-519813125723","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:187","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"efc6ec73-bbc5-11e4-8cc5-8d0d27b61c99","variableMapping":{"bitlen":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"int = ((int + 7) >> 3) << 3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:397","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"efc6ec74-bbc5-11e4-8cc5-35ad92338960","variableMapping":{"this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:803","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 5, \"HARAC\", \"HARIS\"))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:784","type":"CtIfImpl","sourcecode":"if (int <= 1) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 2)))) {\n    return false;\n} else if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":0},{"failures":[],"tindex":"267185a5-bbc6-11e4-8cc5-8f23f6c4bb65","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:535","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[],"tindex":"267185a6-bbc6-11e4-8cc5-dd1ab7381a16","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:500","type":"CtIfImpl","sourcecode":"if (((int == 0) || org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1))))) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H');\n    int += 2;\n} else {\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:711","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1)))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A', 'F');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A');\n}"},"status":-1},{"failures":[],"tindex":"267185a7-bbc6-11e4-8cc5-c90f1b8dda0a","variableMapping":{"sumLength":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"b","minRating":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"b"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    java.io.ByteArrayOutputStream.write(int);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int, java.io.ByteArrayOutputStream);\n}"},"status":0},{"failures":[],"tindex":"791e60c8-bbc6-11e4-8cc5-5149a8e1a9b7","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:301","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"791e60c9-bbc6-11e4-8cc5-6374e50d65d8","variableMapping":{"terminator":"index","to":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:719","type":"CtIfImpl","sourcecode":"if ((((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1))))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F');\n    int++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"WICZ\", \"WITZ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TS\", \"FX\");\n    int += 4;\n} else {\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"791e60ca-bbc6-11e4-8cc5-cb9b9f8b877e","variableMapping":{"key":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('H')"},"status":-1},{"failures":[],"tindex":"791e60cb-bbc6-11e4-8cc5-fd5b64a8eb94","variableMapping":{"local":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:488","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][40], byte[][61], byte[][19], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"791e87dc-bbc6-11e4-8cc5-430f3d7c7b67","variableMapping":{"lineSeparator":"altResult","lineLength":"blocksize"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + int) + \" > 0, but lineSeparator is null\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:456","type":"CtIfImpl","sourcecode":"if (int == 32) {\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][0], byte[][10], byte[][20], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][21], byte[][1], byte[][11], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][12], byte[][22], byte[][2], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][13], byte[][23], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][24], byte[][4], byte[][14], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][15], byte[][25], byte[][5], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][6], byte[][16], byte[][26], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][27], byte[][7], byte[][17], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][18], byte[][28], byte[][8], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][9], byte[][19], byte[][29], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), byte[][31], byte[][30], 3, java.lang.StringBuilder);\n} else {\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][0], byte[][21], byte[][42], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][22], byte[][43], byte[][1], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][44], byte[][2], byte[][23], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][24], byte[][45], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][25], byte[][46], byte[][4], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][47], byte[][5], byte[][26], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][6], byte[][27], byte[][48], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][28], byte[][49], byte[][7], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][50], byte[][8], byte[][29], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][9], byte[][30], byte[][51], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][31], byte[][52], byte[][10], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][53], byte[][11], byte[][32], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][12], byte[][33], byte[][54], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][34], byte[][55], byte[][13], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][56], byte[][14], byte[][35], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][15], byte[][36], byte[][57], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][37], byte[][58], byte[][16], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][59], byte[][17], byte[][38], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][18], byte[][39], byte[][60], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][40], byte[][61], byte[][19], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][62], byte[][20], byte[][41], 4, java.lang.StringBuilder);\n    org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), byte[][63], 2, java.lang.StringBuilder);\n}"},"status":0},{"failures":[],"tindex":"cc650aed-bbc6-11e4-8cc5-694bc168863c","variableMapping":{"name2":"name1","name1":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:218","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"cc650aee-bbc6-11e4-8cc5-91cda0db15ef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:139","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:136","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (((java.lang.String) == null) || (!(java.lang.String.endsWith(java.lang.String)))) || boolean"},"status":-2},{"failures":[],"tindex":"cc650aef-bbc6-11e4-8cc5-d7432869eb0e","variableMapping":{"result":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[],"tindex":"cc650af0-bbc6-11e4-8cc5-6baeb4b2c591","variableMapping":{"context":"context","lbitWorkArea":"lbitWorkArea"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:397","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 6"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 3"},"status":-2},{"failures":[],"tindex":"cc650af1-bbc6-11e4-8cc5-03933aab1fcd","variableMapping":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:388","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"cc650af2-bbc6-11e4-8cc5-93f20cdf1ccf","variableMapping":{"base64Data":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[],"tindex":"cc650af3-bbc6-11e4-8cc5-e39bb006808b","variableMapping":{"a":"f","t":"j","n":"j"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:91","type":"CtAssignmentImpl","sourcecode":"int = int | org.apache.commons.codec.binary.Hex.(org.apache.commons.codec.binary.Hex.toDigit(char[][int], int))"},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2393}],"os.version":"3.2.0-4-amd64"}]
