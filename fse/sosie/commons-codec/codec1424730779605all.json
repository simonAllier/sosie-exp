[{"failures":[],"tindex":"9db3708f-bba8-11e4-92dd-255165d14591","variableMapping":{"name1Char":"chars","name1Size":"count","name2RtLEnd":"str","name2Char":"chars","i":"count","name1LtREnd":"str","name2Size":"count"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    char[][(int - int)] = ' ';\n    char[][(int - int)] = ' ';\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.java.lang.Character.isLetter(java.lang.String.charAt(int))) {\n    char[][int++] = java.lang.String.charAt(int);\n} "},"status":-1},{"failures":[],"tindex":"9db3beb0-bba8-11e4-92dd-c52c97aa7e90","variableMapping":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"n","len":"n"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n    java.lang.StringBuilder.append('X');\n} else {\n    java.lang.StringBuilder.append('S');\n}"},"status":-1},{"failures":[],"tindex":"9db3beb1-bba8-11e4-92dd-0f24c3f7ca23","variableMapping":{"this":"obj","ascii":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(java.lang.Object)).toCharArray());\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"9db3beb2-bba8-11e4-92dd-091ca0060a39","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9db3e5c3-bba8-11e4-92dd-a93da6a8540b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ci\", \"si\")"},"status":0},{"failures":[],"tindex":"c2a23e44-bba8-11e4-92dd-0d59b2915191","variableMapping":{"input":"input"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith((java.lang.String + \" \"))) {\n    final java.lang.String java.lang.String = java.lang.String.substring(((java.lang.String.length()) + 1));\n    final java.lang.String java.lang.String = java.lang.String + java.lang.String;\n    return (((\"(\" + org.apache.commons.codec.language.bm.PhoneticEngine.(encode(java.lang.String))) + \")-(\") + org.apache.commons.codec.language.bm.PhoneticEngine.(encode(java.lang.String))) + \")\";\n} "},"status":-1},{"failures":[],"tindex":"c2a23e45-bba8-11e4-92dd-ed96b9d27692","variableMapping":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ly\", \"Ly\")"},"status":0},{"failures":[],"tindex":"d4429286-bba8-11e4-92dd-e9ead6cddd3e","variableMapping":{"txt":"name2"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"k+\", \"K\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:236","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(java.lang.String)"},"status":0},{"failures":[],"tindex":"017db457-bba9-11e4-92dd-5dd4e40d34b1","variableMapping":{"length":"length"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], 0, byte[].int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"017ddb68-bba9-11e4-92dd-3d92741ddfce","variableMapping":{"u":"index","y":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((char[][int]) == (char[][0])) {\n    char[][int] = char[][1];\n    break;\n} "},"status":-1},{"failures":[],"tindex":"017ddb69-bba9-11e4-92dd-cfecbdebd5a1","variableMapping":{"result":"phonemeText"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:168","type":"CtReturnImpl","sourcecode":"return (((java.lang.StringBuilder.toString()) + \"[\") + (org.apache.commons.codec.language.bm.Languages.LanguageSet)) + \"]\""},"status":0},{"failures":[],"tindex":"371b234a-bba9-11e4-92dd-1934c1ad50a7","variableMapping":{"cachedString":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"gh\", \"22\")"},"status":-1},{"failures":[],"tindex":"371b234b-bba9-11e4-92dd-b9ce66f947c9","variableMapping":{"ctx":"ctx1"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"371b234c-bba9-11e4-92dd-33aabf8eb9bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"5c2ede1d-bba9-11e4-92dd-1d2d4968ee6f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:242","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"5c2ede1e-bba9-11e4-92dd-67e6b6b45933","variableMapping":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":0},{"failures":[],"tindex":"3aaa962f-bbaa-11e4-92dd-8bfd1051c0fc","variableMapping":{"u":"blocksize","y":"blocksize"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"3aaa9630-bbaa-11e4-92dd-cb844fcf073b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"status":-2},{"failures":[],"tindex":"3aaa9631-bbaa-11e4-92dd-0fe61eafcd9e","variableMapping":{"inExtendedComment":"matches"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:146","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:355","type":"CtAssignmentImpl","sourcecode":"boolean = (java.lang.StringBuilder.charAt((int + 1))) == char"},"status":-1},{"failures":[],"tindex":"3aaa9632-bbaa-11e4-92dd-9994e0f81be2","variableMapping":{"i":"ibitWorkArea","name2Size":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (int > int) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:443","type":"CtIfImpl","sourcecode":"if ((byte >= 0) && (byte < (org.apache.commons.codec.binary.Base64.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base64.byte[][byte];\n    if (int >= 0) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int);\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int;\n        if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"3aaabd43-bbaa-11e4-92dd-4f4e8497ff7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    int >>= 1;\n}"},"status":-1},{"failures":[],"tindex":"3aaabd44-bbaa-11e4-92dd-8f83924b8a26","variableMapping":{"maxCodeLen":"i"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:472","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI()"},"status":0},{"failures":[],"tindex":"a7f456e5-bbaa-11e4-92dd-c1de33a13fb4","variableMapping":{"key":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a7f456e6-bbaa-11e4-92dd-1910a79323f4","variableMapping":{"index":"index"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return int + 2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:286","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CH\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CZ\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 4, \"WICZ\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"a7f456e7-bbaa-11e4-92dd-8d57d6236e3a","variableMapping":{"this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:148","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'N' ? int + 2 : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:182","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean)"},"status":-1},{"failures":[],"tindex":"a7f47df8-bbaa-11e4-92dd-291786652a4e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:187","type":"CtLocalVariableImpl","sourcecode":"char char"},"status":-2},{"failures":[],"tindex":"a7f47df9-bbaa-11e4-92dd-9dc236135666","variableMapping":{"sumLength":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"count","minRating":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"count"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((char != '0') && (char != char)) {\n    char[][int++] = char;\n} "},"status":0},{"failures":[],"tindex":"ebc8baea-bbab-11e4-92dd-6b69b15f04a6","variableMapping":{"salt":"salt"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(1)"},"status":-1},{"failures":[],"tindex":"ebc8baeb-bbab-11e4-92dd-19411c4517e7","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:160","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ebc8baec-bbab-11e4-92dd-f9ba088da244","variableMapping":{"obj":"obj","this":"obj"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:532","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:378","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.decode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"ebc8e1fd-bbab-11e4-92dd-61bd198a8a35","variableMapping":{"thisStart":"length"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:54","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = byte[].int"},"status":-2},{"failures":[],"tindex":"ebc8e1fe-bbab-11e4-92dd-c574d8bab6eb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:411","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)))"},"status":-2},{"failures":[],"tindex":"ebc8e1ff-bbab-11e4-92dd-bd7e637b6f1b","variableMapping":{"builder":"source","cachedString":"source"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:152","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null) {\n    java.lang.String = java.lang.StringBuilder.toString();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:85","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\");\n} "},"status":-2},{"failures":[],"tindex":"ebc8e200-bbab-11e4-92dd-15f984af1eba","variableMapping":{"value":"upperName"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:177","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"ebc8e201-bbab-11e4-92dd-ad63d8ab53fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"status":-2},{"failures":[],"tindex":"ebc8e202-bbab-11e4-92dd-4177529bee50","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:359","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else {\n    if (int > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n        }\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n    return int + 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:283","type":"CtIfImpl","sourcecode":"if ((int == 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 6, \"CAESAR\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CH\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CZ\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 4, \"WICZ\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"ebc8e203-bbab-11e4-92dd-6bd4ec111995","variableMapping":{"iChar":"pos","i":"pos","key":"buffer"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int << 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:468","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"ebc8e204-bbab-11e4-92dd-e70c86996872","variableMapping":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"obj"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:211","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"ebc8e205-bbab-11e4-92dd-9de05a34cfeb","variableMapping":{"o1":"o2","o2":"o1","phonemeText":"phonemeText"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:98","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.bm.Rule.Phoneme.java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.bm.Rule.Phoneme.java.lang.StringBuilder.length())) {\n    return -1;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:88","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.language.bm.Rule.Phoneme.java.lang.StringBuilder.length()) ; int++) {\n    if (int >= (org.apache.commons.codec.language.bm.Rule.Phoneme.java.lang.StringBuilder.length())) {\n        return +1;\n    } \n    final int int = (org.apache.commons.codec.language.bm.Rule.Phoneme.java.lang.StringBuilder.charAt(int)) - (org.apache.commons.codec.language.bm.Rule.Phoneme.java.lang.StringBuilder.charAt(int));\n    if (int != 0) {\n        return int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ebc8e206-bbab-11e4-92dd-4557b8ed78b6","variableMapping":{"sumLength":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"c","minRating":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"c"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:116","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"ebc8e207-bbab-11e4-92dd-03c305d00cd4","variableMapping":{"org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER":"lContext"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:526","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.RPattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:657","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.codec.language.bm.Rule.RPattern"},"status":-2},{"failures":[],"tindex":"ebc8e208-bbab-11e4-92dd-39c889ff3c52","variableMapping":{"left":"c","right":"c"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:350","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"status":-1},{"failures":[],"tindex":"ebc8e209-bbab-11e4-92dd-f7d1d3e6a2dc","variableMapping":{"obj":"obj","this":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encode(((java.lang.String)(java.lang.Object)))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"ebc8e20a-bbab-11e4-92dd-ad66eda61bc7","variableMapping":{"java.lang.String.class":"obj","object":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:407","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((((\"This method\\'s parameter was expected to be of the type \" + (java.lang.String.java.lang.String.getName())) + \". But actually it was of the type \") + (java.lang.Object.getClass().getName())) + \".\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"))"},"status":-2},{"failures":[],"tindex":"ebc8e20b-bbab-11e4-92dd-3117da2838b6","variableMapping":{"name2":"name1","name1":"name2"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:220","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if (java.lang.Math.(java.lang.Math.abs(((java.lang.String.length()) - (java.lang.String.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ebc8e20c-bbab-11e4-92dd-a375a1193b2b","variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"ebc9091d-bbab-11e4-92dd-93dc3a8ae9f0","variableMapping":{"length":"c","key":"buf"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:115","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.io.OutputStream.write(byte[], 0, int);\n} "},"status":-1},{"failures":[],"tindex":"ebc9091e-bbab-11e4-92dd-cf613ce9990a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:199","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ebc9091f-bbab-11e4-92dd-9baeb65f49ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == byte) || org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte))) {\n    return true;\n} "},"status":-1},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2394}],"os.version":"3.2.0-4-amd64"}]
