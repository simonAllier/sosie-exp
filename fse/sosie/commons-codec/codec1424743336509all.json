[{"failures":[],"tindex":"c14439f3-bbc6-11e4-b648-2d1d0905447e","variableMapping":{"cachedString":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"Y\")"},"status":-1},{"failures":[],"tindex":"c1448814-bbc6-11e4-b648-c387521b586a","variableMapping":{"currentLinePos":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","context":"context"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:517","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"c1448815-bbc6-11e4-b648-d74eab09b12c","variableMapping":{"code":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"char = '0'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"char = '6'"},"status":-1},{"failures":[],"tindex":"c1448816-bbc6-11e4-b648-552c2eb58cdf","variableMapping":{"wdsz":"index","n":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((int == ((java.lang.String.length()) - 3)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, ((java.lang.String.length()) - 2), 2, \"AS\", \"OS\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, ((java.lang.String.length()) - 1), 1, \"A\", \"O\"))) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"status":-2},{"failures":[],"tindex":"c1459987-bbc6-11e4-b648-29ebc3a4e3ce","variableMapping":{"blocksize":"count","cnt":"count"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"e4e83828-bbc6-11e4-b648-0fe440728cb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.security.MessageDigest.update(byte[], 0, int);\n    int -= int;\n}"},"status":-1},{"failures":[],"tindex":"e4e83829-bbc6-11e4-b648-733cf53ca2fa","variableMapping":{"code":"code"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"char = '3'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:373","type":"CtAssignmentImpl","sourcecode":"char = '8'"},"status":0},{"failures":[],"tindex":"6651cc0a-bbc7-11e4-b648-03645f0cc331","variableMapping":{"length":"minRating"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)"},"status":-1},{"failures":[],"tindex":"6651f31b-bbc7-11e4-b648-9d3261898493","variableMapping":{"sb":"builder"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"status":-1},{"failures":[],"tindex":"6651f31c-bbc7-11e4-b648-b949a3176869","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"6651f31d-bbc7-11e4-b648-45b8fb438a26","variableMapping":{"name1Char":"org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS","name2RtLStart":"salt","name1Size":"length","name2RtLEnd":"salt","name2Char":"org.apache.commons.codec.digest.UnixCrypt.SALT_CHARS","length":"length","name2Size":"length","name1LtREnd":"salt","name2":"salt","name1":"salt","name1LtRStart":"org.apache.commons.codec.digest.B64.B64T"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:307","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > int) {\n        break;\n    } \n    java.lang.String = java.lang.String.substring(int, (int + 1));\n    java.lang.String = java.lang.String.substring((int - int), ((int - int) + 1));\n    java.lang.String = java.lang.String.substring(int, (int + 1));\n    java.lang.String = java.lang.String.substring((int - int), ((int - int) + 1));\n    if (java.lang.String.equals(java.lang.String)) {\n        char[][int] = ' ';\n        char[][int] = ' ';\n    } \n    if (java.lang.String.equals(java.lang.String)) {\n        char[][(int - int)] = ' ';\n        char[][(int - int)] = ' ';\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    java.lang.String = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)])) + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)]);\n} else if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"6651f31e-bbc7-11e4-b648-7b00720afff9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:469","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; ) {\n    final org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication = new org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication(java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> , java.lang.String , org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder , int , int).invoke();\n    int = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getI();\n    org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.getPhonemeBuilder();\n}"},"status":-1},{"failures":[],"tindex":"6651f31f-bbc7-11e4-b648-1d52ee0b1753","variableMapping":{"found":"eof"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:349","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[],"tindex":"66521a30-bbc7-11e4-b648-f3d7a55164a9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:304","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (java.lang.String[].int)) + \" parts: \") + java.lang.String) + \" in \") + java.lang.String))"},"status":-2},{"failures":[],"tindex":"66521a31-bbc7-11e4-b648-7b8a3cf1fc01","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:155","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"66521a32-bbc7-11e4-b648-2198d12aab89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:477","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[],"tindex":"66521a33-bbc7-11e4-b648-09350cdf1550","variableMapping":{"txt":"input"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:455","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.iterator().next()"},"status":0},{"failures":[],"tindex":"e05266f4-bbc7-11e4-b648-c3c46a9d1d50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(org.apache.commons.codec.binary.BaseNCodec.Context.byte[], 0, byte[], 0, org.apache.commons.codec.binary.BaseNCodec.Context.byte[].int)"},"status":-1},{"failures":[],"tindex":"e0528e05-bbc7-11e4-b648-f38b17b90230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][24], byte[][45], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"e0528e06-bbc7-11e4-b648-6990fc3674f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:218","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>()"},"status":-2},{"failures":[],"tindex":"e0528e07-bbc7-11e4-b648-0f9f4b7c20a9","variableMapping":{"cp":"index"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:185","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"e0528e08-bbc7-11e4-b648-f1b3445fb529","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"e0528e09-bbc7-11e4-b648-a544b8c45a54","variableMapping":{"b":"buffer","offset":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","iValue":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 8) & 255))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:383","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"e0528e0a-bbc7-11e4-b648-db999f60e3e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:279","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"e0528e0b-bbc7-11e4-b648-875cf6da5c0e","variableMapping":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"2480a03c-bbc8-11e4-b648-571fb419e314","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-2},{"failures":[],"tindex":"2480a03d-bbc8-11e4-b648-99f7dc5b8b15","variableMapping":{"rules":"rules"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:317","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>()"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:318","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.put(char, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>)"},"status":-1},{"failures":[],"tindex":"2480a03e-bbc8-11e4-b648-416cdc437919","variableMapping":{"pattern":"str"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:292","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.URLCodec.decode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException java.io.UnsupportedEncodingException) {\n    throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":-2},{"failures":[],"tindex":"2480a03f-bbc8-11e4-b648-ddbd22ade6c9","variableMapping":{"index":"pos"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:232","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null ? (org.apache.commons.codec.binary.BaseNCodec.Context.int) - (org.apache.commons.codec.binary.BaseNCodec.Context.int) : 0"},"status":-2},{"failures":[],"tindex":"2480a040-bbc8-11e4-b648-fb5b8f516977","variableMapping":{"array":"org.apache.commons.codec.binary.Base64.DECODE_TABLE","length":"length"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (byte[] == null) || ((byte[].int) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:510","type":"CtReturnImpl","sourcecode":"return (byte == (org.apache.commons.codec.binary.BaseNCodec.byte)) || (((byte >= 0) && (byte < (org.apache.commons.codec.binary.Base64.byte[].int))) && ((org.apache.commons.codec.binary.Base64.byte[][byte]) != (-1)))"},"status":-2},{"failures":[],"tindex":"2480a041-bbc8-11e4-b648-cb2531ecdb14","variableMapping":{"key":"saltBytes"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"7d957f22-bbc8-11e4-b648-17c7a715510f","variableMapping":{"jj":"offset","l_ascii":"b","bits":"iValue"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '1'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 8) & 255))"},"status":-1},{"failures":[],"tindex":"7d957f23-bbc8-11e4-b648-25966214ac3b","variableMapping":{"ph":"saltString"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a \\'[\\' but does not end in \\']\\'\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.java.util.regex.Pattern.compile(((\"^\" + (java.lang.String.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(java.lang.String);\n    if ((java.util.regex.Matcher == null) || (!(java.util.regex.Matcher.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n    } \n    java.lang.String = java.util.regex.Matcher.group(1);\n}"},"status":-1},{"failures":[],"tindex":"7d957f24-bbc8-11e4-b648-c7a4b17f506f","variableMapping":{"result":"result","this":"this","index":"index","value":"value"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((int > 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (int == 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    }\n    int += 2;\n} else if ((((int > 1) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 1, \"B\", \"H\", \"D\"))) || ((int > 2) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"B\", \"H\", \"D\")))) || ((int > 3) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 1, \"B\", \"H\")))) {\n    int += 2;\n} else {\n    if (((int > 2) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'U')) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n    } else if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } \n    int += 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:533","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-1},{"failures":[],"tindex":"7d957f25-bbc8-11e4-b648-cd65287108cd","variableMapping":{"i":"patternLength"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:211","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : java.util.List<org.apache.commons.codec.language.bm.Rule>) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.getPattern();\n    int = java.lang.String.length();\n    if (org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(this.java.lang.CharSequence, this.int)) {\n        this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule.getPhoneme(), int);\n        this.boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"7d95a636-bbc8-11e4-b648-1bbd0ab88a7d","variableMapping":{"upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^enough\", \"enou2f\")"},"status":0},{"failures":[],"tindex":"cbbe58c7-bbc8-11e4-b648-814b75c79b33","variableMapping":{"data":"data","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[],"tindex":"cbbe58c8-bbc8-11e4-b648-394fa486e6d7","variableMapping":{"str":"str","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"status":-2},{"failures":[],"tindex":"cbbe58c9-bbc8-11e4-b648-07f3e8007265","variableMapping":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"encodeTable"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:351","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 4) & (org.apache.commons.codec.binary.Base64.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:474","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 4))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"cbbe58ca-bbc8-11e4-b648-35c483dbba84","variableMapping":{"key":"buffer"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[],"tindex":"cbbe58cb-bbc8-11e4-b648-ed15c87e76ee","variableMapping":{"encodeTable":"buffer","pos":"pos","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"encodeTable"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.int))]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:461","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 11))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"cbbe7fdc-bbc8-11e4-b648-636df85a6f15","variableMapping":{"arrayOctet":"arrayOctet"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:465","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte[][int]))) && ((!boolean) || (((byte[][int]) != (byte)) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"20ac4a4d-bbc9-11e4-b648-11a5e07ad7a2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.binary.BaseNCodec.Context.int]"},"status":-2},{"failures":[],"tindex":"20ac715e-bbc9-11e4-b648-6946a3e0f362","variableMapping":{"obj":"obj","this":"obj"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:532","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"20ac715f-bbc9-11e4-b648-2d06028a4213","variableMapping":{"key":"local"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1))"},"status":-1},{"failures":[],"tindex":"20ac7160-bbc9-11e4-b648-cd34baaa2da1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"20ac7161-bbc9-11e4-b648-d9484e91b66a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[],"tindex":"20ac7162-bbc9-11e4-b648-df7bcbf4ee3d","variableMapping":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:578","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String.getBytes(java.nio.charset.Charset)))"},"status":-2},{"failures":[],"tindex":"20ac7163-bbc9-11e4-b648-c59110efe762","variableMapping":{"key":"result"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"-\").append(org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String))"},"status":0},{"failures":[],"tindex":"283f6094-bbc9-11e4-b648-317307eb483f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392}],"os.version":"3.2.0-4-amd64"}]
