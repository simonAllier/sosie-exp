{"testDiff":[{"test":"org.apache.commons.collections4.map.Flat3MapTest$TestFlatMapIterator.testFullMapIterator","logDiff":[{"assertDiff":[{"sosieClassName":"java.lang.String","assertId":2641,"className":"NullClass"},{"sosieClassName":"java.lang.String","assertId":2642,"className":"NullClass"},{"sosieClassName":"NullClass","assertId":2648,"className":"java.lang.String"},{"sosieClassName":"NullClass","assertId":2650,"className":"java.lang.String"},{"sosieClassName":"java.lang.String","assertId":2648,"className":"NullClass"},{"sosieClassName":"java.lang.String","assertId":2650,"className":"NullClass"},{"sosieClassName":"NullClass","assertId":2641,"className":"java.lang.String"},{"sosieClassName":"NullClass","assertId":2642,"className":"java.lang.String"}]}]},{"test":"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll_add132","logDiff":[{"assertDiff":[{"assertId":273,"methodDiffs":[{"original":"entrySet should be same size as HashMap'sTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[3, 7, 6]=3F, MultiKey[1, 1, 2]=3D, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[1, 1, 2, 3]=4G, MultiKey[2, 3]=2B, MultiKey[3, 6, 7, 8]=4I, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 4, 5, 6]=4H, MultiKey[2, 3, 4]=3E]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]","method":"toString","sosie":"entrySet should be same size as HashMap'sTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[3, 6, 7, 8]=4I, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]"}],"className":"java.lang.String"},{"assertId":277,"methodDiffs":[{"original":"entrySet should be empty if HashMap isTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[3, 7, 6]=3F, MultiKey[1, 1, 2]=3D, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[1, 1, 2, 3]=4G, MultiKey[2, 3]=2B, MultiKey[3, 6, 7, 8]=4I, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 4, 5, 6]=4H, MultiKey[2, 3, 4]=3E]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]","method":"toString","sosie":"entrySet should be empty if HashMap isTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[3, 6, 7, 8]=4I, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]"}],"className":"java.lang.String"},{"assertId":281,"methodDiffs":[{"original":"entrySet should contain all HashMap's elementsTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[3, 7, 6]=3F, MultiKey[1, 1, 2]=3D, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[1, 1, 2, 3]=4G, MultiKey[2, 3]=2B, MultiKey[3, 6, 7, 8]=4I, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 4, 5, 6]=4H, MultiKey[2, 3, 4]=3E]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]","method":"toString","sosie":"entrySet should contain all HashMap's elementsTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[3, 6, 7, 8]=4I, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]"}],"className":"java.lang.String"},{"assertId":284,"methodDiffs":[{"original":"entrySet hashCodes should be the sameTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[3, 7, 6]=3F, MultiKey[1, 1, 2]=3D, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[1, 1, 2, 3]=4G, MultiKey[2, 3]=2B, MultiKey[3, 6, 7, 8]=4I, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 4, 5, 6]=4H, MultiKey[2, 3, 4]=3E]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]","method":"toString","sosie":"entrySet hashCodes should be the sameTest: [MultiKey[3, 5, 6, 7, 8]=5L, MultiKey[1, 2]=2A, MultiKey[3, 4]=2C, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[3, 6, 7, 8]=4I, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J]Real: [MultiKey[2, 3]=2B, MultiKey[1, 1, 2, 3]=4G, MultiKey[1, 1, 2]=3D, MultiKey[3, 7, 6]=3F, MultiKey[1, 2]=2A, MultiKey[2, 3, 4]=3E, MultiKey[2, 4, 5, 6]=4H, MultiKey[1, 1, 2, 3, 4]=5J, MultiKey[2, 3, 4, 5, 6]=5K, MultiKey[3, 4]=2C, MultiKey[3, 6, 7, 8]=4I, MultiKey[3, 5, 6, 7, 8]=5L]"}],"className":"java.lang.String"},{"assertId":292,"methodDiffs":[{"original":"keySet should be same size as HashMap'sTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[3, 7, 6], MultiKey[1, 1, 2], MultiKey[2, 3, 4, 5, 6], MultiKey[1, 1, 2, 3], MultiKey[2, 3], MultiKey[3, 6, 7, 8], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]","method":"toString","sosie":"keySet should be same size as HashMap'sTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[2, 3, 4, 5, 6], MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[3, 6, 7, 8], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]"}],"className":"java.lang.String"},{"assertId":296,"methodDiffs":[{"original":"keySet should be empty if HashMap isTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[3, 7, 6], MultiKey[1, 1, 2], MultiKey[2, 3, 4, 5, 6], MultiKey[1, 1, 2, 3], MultiKey[2, 3], MultiKey[3, 6, 7, 8], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]","method":"toString","sosie":"keySet should be empty if HashMap isTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[2, 3, 4, 5, 6], MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[3, 6, 7, 8], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]"}],"className":"java.lang.String"},{"assertId":300,"methodDiffs":[{"original":"keySet should contain all HashMap's elementsTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[3, 7, 6], MultiKey[1, 1, 2], MultiKey[2, 3, 4, 5, 6], MultiKey[1, 1, 2, 3], MultiKey[2, 3], MultiKey[3, 6, 7, 8], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]","method":"toString","sosie":"keySet should contain all HashMap's elementsTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[2, 3, 4, 5, 6], MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[3, 6, 7, 8], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]"}],"className":"java.lang.String"},{"assertId":303,"methodDiffs":[{"original":"keySet hashCodes should be the sameTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[3, 7, 6], MultiKey[1, 1, 2], MultiKey[2, 3, 4, 5, 6], MultiKey[1, 1, 2, 3], MultiKey[2, 3], MultiKey[3, 6, 7, 8], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]","method":"toString","sosie":"keySet hashCodes should be the sameTest: [MultiKey[3, 5, 6, 7, 8], MultiKey[1, 2], MultiKey[3, 4], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[2, 3, 4, 5, 6], MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[3, 6, 7, 8], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4]]Real: [MultiKey[2, 3], MultiKey[1, 1, 2, 3], MultiKey[1, 1, 2], MultiKey[3, 7, 6], MultiKey[1, 2], MultiKey[2, 3, 4], MultiKey[2, 4, 5, 6], MultiKey[1, 1, 2, 3, 4], MultiKey[2, 3, 4, 5, 6], MultiKey[3, 4], MultiKey[3, 6, 7, 8], MultiKey[3, 5, 6, 7, 8]]"}],"className":"java.lang.String"},{"assertId":323,"methodDiffs":[{"original":"values should be same size as HashMap'sTest: [5L, 2A, 2C, 3F, 3D, 5K, 4G, 2B, 4I, 5J, 4H, 3E]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]","method":"toString","sosie":"values should be same size as HashMap'sTest: [5L, 2A, 2C, 3D, 3F, 5K, 2B, 4G, 4I, 3E, 4H, 5J]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]"}],"className":"java.lang.String"},{"assertId":327,"methodDiffs":[{"original":"values should be empty if HashMap isTest: [5L, 2A, 2C, 3F, 3D, 5K, 4G, 2B, 4I, 5J, 4H, 3E]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]","method":"toString","sosie":"values should be empty if HashMap isTest: [5L, 2A, 2C, 3D, 3F, 5K, 2B, 4G, 4I, 3E, 4H, 5J]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]"}],"className":"java.lang.String"},{"assertId":331,"methodDiffs":[{"original":"values should contain all HashMap's elementsTest: [5L, 2A, 2C, 3F, 3D, 5K, 4G, 2B, 4I, 5J, 4H, 3E]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]","method":"toString","sosie":"values should contain all HashMap's elementsTest: [5L, 2A, 2C, 3D, 3F, 5K, 2B, 4G, 4I, 3E, 4H, 5J]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]"}],"className":"java.lang.String"},{"assertId":334,"methodDiffs":[{"original":"values should contain all HashMap's elementsTest: [5L, 2A, 2C, 3F, 3D, 5K, 4G, 2B, 4I, 5J, 4H, 3E]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]","method":"toString","sosie":"values should contain all HashMap's elementsTest: [5L, 2A, 2C, 3D, 3F, 5K, 2B, 4G, 4I, 3E, 4H, 5J]Real: [2B, 4G, 3D, 3F, 2A, 3E, 4H, 5J, 5K, 2C, 4I, 5L]"}],"className":"java.lang.String"}]}]}],"transformation":{"failures":[],"tindex":18,"variableMapping":{"mapSize":"oldCapacity"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0}}