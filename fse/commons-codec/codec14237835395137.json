{"testDiff":[],"transformation":{"failures":[],"tindex":47,"variableMapping":{"sumLength":"offset","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"offset","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"readLen","minRating":"readLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"readLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"readLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"readLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"offset","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"len"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (int == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(byte[]);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":0}}