{"testDiff":[],"transformation":{"failures":[],"tindex":25,"variableMapping":{"sumLength":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"count","minRating":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"count","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"count"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    if ((char != '0') && (char != char)) {\n        char[][int++] = char;\n    } \n    char = char;\n} "},"status":0}}