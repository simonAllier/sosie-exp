{"testDiff":[],"transformation":{"failures":[],"tindex":29,"variableMapping":{"sumLength":"r","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"r","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"r","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"r","minRating":"r","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"r","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"r","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"r"},"series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:98","type":"CtWhileImpl","sourcecode":"while (int == 0) {\n    int = org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[], 0, 1);\n}"},"status":0}}