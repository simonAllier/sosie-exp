{"testDiff":[],"transformation":{"failures":[],"tindex":17,"variableMapping":{"sumLength":"jj","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"jj","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"bits","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"ii","minRating":"bits","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"jj","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"bits","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"bits"},"series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:250","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n    byte[][(int - int)] = '0';\n} else {\n    byte[][(int - int)] = '1';\n}"},"status":0}}