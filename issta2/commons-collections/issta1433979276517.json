{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":147,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":12,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEmptyMapCompatibility":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":328,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":334,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":145,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":178,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":144,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":243,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":308,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":239,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":91,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":46,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":90,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":113,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":99,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":2,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":55,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":300,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":20,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":119,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":130,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":109,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":286,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":267,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":174,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":238,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":309,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":259,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":280,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":105,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":290,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":293,"org.apache.commons.collections4.CollectionUtilsTest.transform2":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":43,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":289,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":132,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":349,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.map.HashedMapTest.testClone":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":127,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":14,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":310,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":224,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":257,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":137,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":0,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":98,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":264,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":71,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":151,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":317,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":330,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":110,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSimpleSerialization":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":128,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":152,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":247,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":48,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":214,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testSerializeDeserializeThenCompare":222,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":272,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":302,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":261,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":263,"org.apache.commons.collections4.CollectionUtilsTest.isFull":274,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":213,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":229,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":193,"org.apache.commons.collections4.map.LinkedMapTest.testClone":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":31,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":316,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":143,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":78,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":326,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":38,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":27,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":324,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":180,"org.apache.commons.collections4.CollectionUtilsTest.reverse":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":183,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":307,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":85,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":297,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":166,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":322,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":136,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":142,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":160,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":295,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":64,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":95,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":217,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":282,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":354,"org.apache.commons.collections4.map.ListOrderedMapTest.testFullMapCompatibility":202,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":190,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":184,"org.apache.commons.collections4.map.LRUMapTest.testClone":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":356,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":277,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":59,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":273,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":103,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":129,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":108,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":335,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":318,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":236,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":26,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":97,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":226,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":56,"org.apache.commons.collections4.list.TreeListTest.testListEquals":292,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":225,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":333,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":179,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":94,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":176,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":115,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":235,"org.apache.commons.collections4.map.LRUMapTest.testLRU":233,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":74,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":149,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":210,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":40,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":47,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":266,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":141,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":337,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":83,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":281,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":28,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":107,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":111,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":249,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":275,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":304,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":126,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":254,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFullMapCompatibility":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":49,"org.apache.commons.collections4.map.ListOrderedMapTest.testEmptyMapCompatibility":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":76,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":227,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":220,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":258,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":260},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"450d97c4-0fc9-11e5-941e-3df201133f1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"451252b5-0fc9-11e5-941e-8d6bd8961599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:134","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>"},"status":-2},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"451279c6-0fc9-11e5-941e-b7f5907b2be8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:612","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"status":-1},{"failures":[],"tindex":"451279c7-0fc9-11e5-941e-0fbdf49bfd22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"firstCachedNode":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:304","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[130,131,132,133,134,135,136,137,138,139],"tindex":"4512a0d8-0fc9-11e5-941e-937977290de0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[140,141,142,143,144,145],"tindex":"4512a0d9-0fc9-11e5-941e-07804fc7b5f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"offset","vDown":"vUp","delta":"offset","end2":"d","this":"this","i":"d","end1":"d","k":"offset","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[146,147,148,149],"tindex":"4512c7ea-0fc9-11e5-941e-2d8a87e77f37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1354","type":"CtAssignmentImpl","sourcecode":"int = java.lang.reflect.Array.getLength(java.lang.Object)"},"variableMap":{"total":"h","object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:360","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"4512c7eb-0fc9-11e5-941e-538c32a3e2f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"4512c7ec-0fc9-11e5-941e-f1e7142969df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())"},"status":-2},{"failures":[150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"4512c7ed-0fc9-11e5-941e-f56764234543","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[196,197,198,199,200,201,202,203,204,205,206],"tindex":"4512eefe-0fc9-11e5-941e-af8db54dcd78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:150","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219],"tindex":"4513160f-0fc9-11e5-941e-71f3aaccb180","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:303","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>._putAll(java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[220,221,222,223],"tindex":"45131610-0fc9-11e5-941e-0fed36ed235d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:84","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated())"},"status":-1},{"failures":[224,225,226,227],"tindex":"45131611-0fc9-11e5-941e-8714054e5127","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[228],"tindex":"45133d22-0fc9-11e5-941e-ebbd82204d7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:76","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) || (org.apache.commons.collections4.Predicate<? super T>.evaluate(T))"},"status":-1},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"45133d23-0fc9-11e5-941e-a5a3d5047b47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V)"},"status":-1},{"failures":[],"tindex":"45142784-0fc9-11e5-941e-e1ee2cd5e90f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)"},"status":-2},{"failures":[],"tindex":"45144e95-0fc9-11e5-941e-3db758ae4072","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSet:86","type":"CtReturnImpl","sourcecode":"return ((java.util.Set<E>)(super.decorated()))"},"status":-2},{"failures":[229,230,231,232,233,234,235,236,237,239,240,241,242,243],"tindex":"45144e96-0fc9-11e5-941e-31ed371c0ec5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V)"},"status":-1},{"failures":[],"tindex":"45144e97-0fc9-11e5-941e-3545e7743201","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[273],"tindex":"451475a8-0fc9-11e5-941e-05045c68977c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:752","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<T>.remove()"},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-1},{"failures":[],"tindex":"451475a9-0fc9-11e5-941e-1b2d0a9ffe2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>) != null"},"variableMap":{"nextPermutation":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2},{"failures":[],"tindex":"451475aa-0fc9-11e5-941e-c34ad1b51140","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[],"tindex":"451475ab-0fc9-11e5-941e-17ab3636f882","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"45149cbc-0fc9-11e5-941e-37d0b23dbea0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key2","i":"hashCode","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"4514c3cd-0fc9-11e5-941e-834efa3573a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:202","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"4514c3ce-0fc9-11e5-941e-598046a5a4b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1223","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(128)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:579","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"4514c3cf-0fc9-11e5-941e-0137fd558093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:179","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.equals(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"4514c3d0-0fc9-11e5-941e-e9e0bb1b30d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":0},{"failures":[],"tindex":"4514eae1-0fc9-11e5-941e-595a296de509","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:228","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[274],"tindex":"451511f2-0fc9-11e5-941e-a724f88cc0da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1478","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"451511f3-0fc9-11e5-941e-6ffc94edd5c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()"},"status":-2},{"failures":[],"tindex":"4516e6b4-0fc9-11e5-941e-0ba3af1bb1aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"parent","root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:561","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[275],"tindex":"45170dc5-0fc9-11e5-941e-8f639706957b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:161","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int)"},"status":-1},{"failures":[],"tindex":"45170dc6-0fc9-11e5-941e-034840cffabc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"bitIndex","lastItemIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:88","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int = -1"},"status":-2},{"failures":[276],"tindex":"45170dc7-0fc9-11e5-941e-6b7b069973de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:452","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"size":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1446","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"45170dc8-0fc9-11e5-941e-61d23a9ab905","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"status":-2},{"failures":[],"tindex":"451734d9-0fc9-11e5-941e-f5ac02e40cd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(java.util.Collection<?>))"},"status":-2},{"failures":[277],"tindex":"451734da-0fc9-11e5-941e-5f3e461d9b1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"retval":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"status":-1},{"failures":[130,131,132,133,134,135,278,279,136,137,138,139],"tindex":"451734db-0fc9-11e5-941e-a5bc8edc408b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"45197ecc-0fc9-11e5-941e-d96f860df9de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:62","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"45197ecd-0fc9-11e5-941e-d18eb5c3fec1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"changed","currentIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"45197ece-0fc9-11e5-941e-2b050b662f58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"45197ecf-0fc9-11e5-941e-375d59a25b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:878","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:228","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Collection<? extends E>)"},"status":-2},{"failures":[280],"tindex":"4519a5e0-0fc9-11e5-941e-bb976ad47bd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:159","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"4519a5e1-0fc9-11e5-941e-7bf750883c24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:581","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()"},"status":0},{"failures":[],"tindex":"4519a5e2-0fc9-11e5-941e-d9ac9fbba736","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:97","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.size()"},"status":-2},{"failures":[],"tindex":"4519a5e3-0fc9-11e5-941e-2dbfd2d5e0d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:525","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":-2},{"failures":[281],"tindex":"4519a5e4-0fc9-11e5-941e-e3995f34c51c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[],"tindex":"4519a5e5-0fc9-11e5-941e-05a35ed6f4f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:129","type":"CtReturnImpl","sourcecode":"return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])))"},"variableMap":{"iArgs":"input","input":"input","method":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:126","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])));\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' does not exist\"));\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\"));\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' threw an exception\") , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[],"tindex":"4519ccf6-0fc9-11e5-941e-3fecacce92d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1023","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"found":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"451c6507-0fc9-11e5-941e-57ea0f1a2e6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:281","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(org.apache.commons.collections4.Predicate<? super E>[], org.apache.commons.collections4.Closure<? super E>[], null)"},"status":-2},{"failures":[],"tindex":"451c6508-0fc9-11e5-941e-b1f63d06908b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)"},"status":-2},{"failures":[],"tindex":"451c6509-0fc9-11e5-941e-49b8b06899c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:881","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[282,283,284,285,286,287,288],"tindex":"451c8c1a-0fc9-11e5-941e-a915467b5ee5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:652","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{"data":"data","newEntries":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":-1},{"failures":[],"tindex":"451c8c1b-0fc9-11e5-941e-67d874f99bf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"k","proposedCapacity":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[],"tindex":"451c8c1c-0fc9-11e5-941e-d1cfd511026c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:159","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"451c8c1d-0fc9-11e5-941e-5570d8157dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:504","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"451c8c1e-0fc9-11e5-941e-d9259626745e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:182","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"451c8c1f-0fc9-11e5-941e-11529c578333","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:117","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , org.apache.commons.collections4.Predicate<? super I>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"451c8c20-0fc9-11e5-941e-f57158e33a1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"object","i":"count","value":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:95","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().remove(java.lang.Object, int)"},"status":-2},{"failures":[],"tindex":"451cb331-0fc9-11e5-941e-9b37d7de2062","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"451cb332-0fc9-11e5-941e-dff03cb293c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"451cb333-0fc9-11e5-941e-bb66c1560d53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:119","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-2},{"failures":[],"tindex":"451cb334-0fc9-11e5-941e-2f2880219e9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"elements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1701","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.lang.Iterable<? extends E>.iterator()"},"status":-2},{"failures":[],"tindex":"451cb335-0fc9-11e5-941e-5b6efa900e9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"451cb336-0fc9-11e5-941e-d9d6e221b74f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1059","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.next()"},"variableMap":{"next":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? org.apache.commons.collections4.list.TreeList.AVLNode<E> : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E>, int)"},"status":-1},{"failures":[],"tindex":"451cda47-0fc9-11e5-941e-2f4a13b404df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:140","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:137","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.util.Collection<? extends E>.size())"},"status":-2},{"failures":[327,328,1,14,329,31,33,34,36,39,42,59,330,78,80,81,83,86,89],"tindex":"451cda48-0fc9-11e5-941e-6f0764c0c2aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"value","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[331],"tindex":"451cda49-0fc9-11e5-941e-a7fa13eb40d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-1},{"failures":[332],"tindex":"451cda4a-0fc9-11e5-941e-63f15f8a7afd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:807","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.addAll(java.util.Collection<C>)"},"status":-1},{"failures":[153,154,155,156,157,159,175,176,177,178,179,181,182,183,184],"tindex":"451cda4b-0fc9-11e5-941e-058590a6af89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[333,334,335,336,337,338],"tindex":"451cda4c-0fc9-11e5-941e-bd6c3c3af7a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:96","type":"CtReturnImpl","sourcecode":"return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"retval","x":"comparatorIndex","i":"comparatorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[],"tindex":"451d015d-0fc9-11e5-941e-a9c540def6aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"451d015e-0fc9-11e5-941e-517ef5a2b48d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.list()"},"status":-2},{"failures":[],"tindex":"451d015f-0fc9-11e5-941e-dbc0ea7596ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:379","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()"},"status":-2},{"failures":[],"tindex":"451d0160-0fc9-11e5-941e-a9a893562a28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:517","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int)"},"status":-2},{"failures":[339],"tindex":"451d0161-0fc9-11e5-941e-85242366daec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:342","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:182","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"451d0162-0fc9-11e5-941e-ade926cdb67c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<I>.remove()"},"status":-2},{"failures":[],"tindex":"451d0163-0fc9-11e5-941e-e1f2902a3b0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"451d2874-0fc9-11e5-941e-3b1179e3e814","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":-2},{"failures":[340],"tindex":"451d2875-0fc9-11e5-941e-2da465aa33b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"451d2876-0fc9-11e5-941e-99772ac4d208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"status":-1},{"failures":[],"tindex":"451d2877-0fc9-11e5-941e-276ebf0aee62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:632","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()"},"status":0},{"failures":[],"tindex":"451d2878-0fc9-11e5-941e-d91afbf6f9ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-2},{"failures":[],"tindex":"451d2879-0fc9-11e5-941e-873e0f22a845","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"451d287a-0fc9-11e5-941e-bd250fddbc12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyMapIterator:46","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.MapIterator))"},"status":-2},{"failures":[],"tindex":"451d287b-0fc9-11e5-941e-0787b1c5e50d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"451d4f8c-0fc9-11e5-941e-8ff2f82723a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:435","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:290","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.ValuesIterator<V>(java.util.Iterator<V> , this)"},"status":-2},{"failures":[],"tindex":"451d4f8d-0fc9-11e5-941e-ad6a7fc467b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-2},{"failures":[354,355],"tindex":"451d4f8e-0fc9-11e5-941e-4532a4b8db7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:327","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"451d4f8f-0fc9-11e5-941e-4f4daab8ad95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:167","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.set(Object) is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Trie must not be null\")"},"status":-2},{"failures":[],"tindex":"451e39f0-0fc9-11e5-941e-ab24355b7f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:637","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object)"},"variableMap":{"k":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:269","type":"CtAssignmentImpl","sourcecode":"V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[146,147,148,149],"tindex":"451e39f1-0fc9-11e5-941e-3f5accb5bdd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"h","hash2":"h","hash1":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:516","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1},{"failures":[356,182,184,188,189,191,193,194],"tindex":"451e39f2-0fc9-11e5-941e-c1cbbb906680","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"status":-1},{"failures":[],"tindex":"451e6103-0fc9-11e5-941e-85322c53e74b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":0},{"failures":[357],"tindex":"451e6104-0fc9-11e5-941e-e569c22d3882","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1276","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Enumeration<?>.nextElement();\n    } else {\n        java.util.Enumeration<?>.nextElement();\n    }\n}"},"status":-1},{"failures":[358],"tindex":"451e6105-0fc9-11e5-941e-f72d8a64affc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"451e6106-0fc9-11e5-941e-af3556c7f271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"currentNode","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:903","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[359],"tindex":"451e6107-0fc9-11e5-941e-37bf2cae859f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll1","coll1":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}