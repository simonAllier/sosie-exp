{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":198,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":158,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":147,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":26,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":132,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":220,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":245,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":204,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":22,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":190,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":341,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":201,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":119,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":118,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":301,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":308,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":239,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":329,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":56,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":68,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":131,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":169,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":271,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":116,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":343,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":209,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":296,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":261,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":259,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":355,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":94,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":199,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":253,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":36,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":244,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":339,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":294,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":53,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":112,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":342,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":176,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":321,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":236,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":332,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":298,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":323,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":64,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":281,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":99,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":20,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":66,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":297,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":177,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":206,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":179,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":90,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":227,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":266,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":164,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":107,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":313,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":283,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":97,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":304,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":324,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":96,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":173,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":252,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":267,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":255,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":40,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":153,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":91,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":246,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":187,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":320,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":242,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":174,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":279,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":57,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":353,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":191,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":144,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":222,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":354,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":166,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":221,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":212,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":0,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":284,"org.apache.commons.collections4.map.TransformedSortedMapTest.testLastKey":348,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":302,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":292,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":344,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":356,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":188,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":345,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":346,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":109,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":127,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":162,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":135},"transformations":[{"failures":[],"tindex":"dbb46ccb-0fe5-11e5-8b6c-757cf1608abe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[],"tindex":"dbb493dc-0fe5-11e5-8b6c-03e6b558a41f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[],"tindex":"dbb493dd-0fe5-11e5-8b6c-bb515b79a281","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"firstCachedNode":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:330","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"dbb4baee-0fe5-11e5-8b6c-b973042fbc85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:183","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.get((org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))"},"status":-2},{"failures":[],"tindex":"dbb4baef-0fe5-11e5-8b6c-f3de91270e65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"dbb4baf0-0fe5-11e5-8b6c-4703566f5d41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:156","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int)"},"variableMap":{"this":"setOrder","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:345","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.List<E>.remove(int)"},"status":-2},{"failures":[],"tindex":"dbb4baf1-0fe5-11e5-8b6c-87fd46d33d21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[],"tindex":"dbb4baf2-0fe5-11e5-8b6c-2b371460b6d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:311","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"dbb4e203-0fe5-11e5-8b6c-6772c32a7c07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"size","composite":"temp","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:162","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1))"},"status":-2},{"failures":[],"tindex":"dbb4e204-0fe5-11e5-8b6c-2d1721c64845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[0],"tindex":"dbb4e205-0fe5-11e5-8b6c-af37c567a109","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"dbb4e206-0fe5-11e5-8b6c-8fc6c5ccaa0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:84","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"dbb4e207-0fe5-11e5-8b6c-1b1498e4e599","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"previous","entry":"entry","key2":"key3","hashCode":"hashCode","key3":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[1],"tindex":"dbb50918-0fe5-11e5-8b6c-9d27a1232a19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"result","i":"offset","j":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-1},{"failures":[],"tindex":"dbb50919-0fe5-11e5-8b6c-37881a16404c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"status":-2},{"failures":[],"tindex":"dbb5091a-0fe5-11e5-8b6c-57d93e9df8d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"p","e":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"dbb6dddb-0fe5-11e5-8b6c-29e9aba3c623","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"dbb6dddc-0fe5-11e5-8b6c-59a2343b3366","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:157","type":"CtLocalVariableImpl","sourcecode":"final int int = this.java.util.Map<K, V>[].int"},"status":-2},{"failures":[2],"tindex":"dbb704ed-0fe5-11e5-8b6c-9338114fa9c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:311","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"dbb704ee-0fe5-11e5-8b6c-530618c26fea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"dbb704ef-0fe5-11e5-8b6c-7116f4aa3145","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1362","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,2,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"dbb704f0-0fe5-11e5-8b6c-35de5efb1ad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:221","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"dbb704f1-0fe5-11e5-8b6c-91d354b2cd71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:434","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"dbb704f2-0fe5-11e5-8b6c-89ca093942f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:131","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":0},{"failures":[38,39],"tindex":"dbb704f3-0fe5-11e5-8b6c-e1f6c4352ffa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[32,33,148,34,35,36,149,37,38,39,40,150],"tindex":"dbb704f4-0fe5-11e5-8b6c-9d463650c6f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1181","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"dbb72c05-0fe5-11e5-8b6c-cb7ea6725c50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:607","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[151,152,153,154,155,156,157],"tindex":"dbb72c06-0fe5-11e5-8b6c-f9e0fad8ba41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[158,159,160,40],"tindex":"dbb72c07-0fe5-11e5-8b6c-c59cc8afcddf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"dbb72c08-0fe5-11e5-8b6c-a752803a59b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getKey()"},"status":-2},{"failures":[],"tindex":"dbb72c09-0fe5-11e5-8b6c-d1c49ea392ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"i","start":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40],"tindex":"dbb72c0a-0fe5-11e5-8b6c-137aecaebd2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,151,178,179,180,181,182,183,184,185,186,187,188,189,152,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,156,205,206,207,208,209,210,211,212,213,214,215,216,217,157],"tindex":"dbb72c0b-0fe5-11e5-8b6c-0f18acb8124f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"dbb72c0c-0fe5-11e5-8b6c-a77b2639bca8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:605","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[],"tindex":"dbb7531d-0fe5-11e5-8b6c-215f16669cbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"variableMap":{"set":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"status":-2},{"failures":[],"tindex":"dbb7531e-0fe5-11e5-8b6c-4922267731bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"dbb7531f-0fe5-11e5-8b6c-a301d82d2ce8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported for an ObjectArrayIterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-2},{"failures":[218,219,220,221,222],"tindex":"dbb75320-0fe5-11e5-8b6c-5d12c7119404","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:130","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(0, java.util.List<T>.size(), 0, java.util.List<T>.size(), org.apache.commons.collections4.sequence.EditScript<T>)"},"status":-1},{"failures":[223],"tindex":"dbb75321-0fe5-11e5-8b6c-496314c7aa51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\")"},"status":-1},{"failures":[],"tindex":"dbb75322-0fe5-11e5-8b6c-fd64f5a4f2e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"tindex":"dbb75323-0fe5-11e5-8b6c-cf00d29f9fc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"dbb77934-0fe5-11e5-8b6c-717c95bbadaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:188","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.getValue().hashCode())"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:81","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.hashCode()"},"status":-2},{"failures":[],"tindex":"dbb77935-0fe5-11e5-8b6c-4117656f9516","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:142","type":"CtReturnImpl","sourcecode":"return this.java.util.Comparator<? super E>.compare(E, E)"},"status":-2},{"failures":[320],"tindex":"dbb77936-0fe5-11e5-8b6c-739c804f77e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-1},{"failures":[],"tindex":"dbb77937-0fe5-11e5-8b6c-b9e919bd28de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:886","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[321],"tindex":"dbb77938-0fe5-11e5-8b6c-131921461847","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[322,323,324,325,326,327],"tindex":"dbb77939-0fe5-11e5-8b6c-c5bf5061266c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.size())"},"status":-1},{"failures":[],"tindex":"dbb7793a-0fe5-11e5-8b6c-7de9a1650a39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"next","dataElement":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:233","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.Object>.add(java.lang.Object)"},"status":-2},{"failures":[328],"tindex":"dbb7a04b-0fe5-11e5-8b6c-8d031058d038","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-1},{"failures":[],"tindex":"dbb7a04c-0fe5-11e5-8b6c-47a1e19aea85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-2},{"failures":[],"tindex":"dbb7a04d-0fe5-11e5-8b6c-4ba108364876","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:473","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map.Entry<java.lang.Object, java.lang.Long> java.util.Map.Entry<java.lang.Object, java.lang.Long> = java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.next()"},"status":-2},{"failures":[],"tindex":"dbb7a04e-0fe5-11e5-8b6c-d7ff4c29616a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:687","type":"CtInvocationImpl","sourcecode":"C.execute(java.util.Iterator<T>.next())"},"status":-2},{"failures":[],"tindex":"dbb7a04f-0fe5-11e5-8b6c-f9baff795757","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:435","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"dbb7a050-0fe5-11e5-8b6c-ddda30392034","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"status":-2},{"failures":[],"tindex":"dbb7a051-0fe5-11e5-8b6c-9ba2321f3e96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:119","type":"CtLocalVariableImpl","sourcecode":"final int int = int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i","bitIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:222","type":"CtLocalVariableImpl","sourcecode":"int int = (int[][int]) - 1"},"status":-2},{"failures":[329],"tindex":"dbb7a052-0fe5-11e5-8b6c-b51ce946332e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:163","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[218,330,219,220,221,222],"tindex":"dbb7a053-0fe5-11e5-8b6c-093c9bece731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[331,332,333],"tindex":"dbb7a054-0fe5-11e5-8b6c-fda56b1edaf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:274","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"dbb7a055-0fe5-11e5-8b6c-51ef6cf0e5e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1324","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"dbb7a056-0fe5-11e5-8b6c-27c2ac3b925b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:140","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:144","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)"},"status":-2},{"failures":[],"tindex":"dbb7c767-0fe5-11e5-8b6c-f916208421d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"dbb7c768-0fe5-11e5-8b6c-65c85f422947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:769","type":"CtIfImpl","sourcecode":"if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[334,335],"tindex":"dbb7c769-0fe5-11e5-8b6c-3f99dbf1ca62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"dbb7c76a-0fe5-11e5-8b6c-b114e13adbe0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(org.apache.commons.collections4.Predicate<E>[], org.apache.commons.collections4.Closure<? super E>[], org.apache.commons.collections4.Closure<? super E>)"},"variableMap":{"trs":"closures","def":"defaultClosure","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:67","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchClosure<E>(org.apache.commons.collections4.Predicate<? super E>[] , org.apache.commons.collections4.Closure<? super E>[] , org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"dbb7c76b-0fe5-11e5-8b6c-87bad8639d14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"status":-2},{"failures":[336,337],"tindex":"dbb7c76c-0fe5-11e5-8b6c-b15db347b2dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}"},"status":-1},{"failures":[338,339],"tindex":"dbb7c76d-0fe5-11e5-8b6c-95a8089e4ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:325","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[162,340,191,341],"tindex":"dbb7c76e-0fe5-11e5-8b6c-a51531e67910","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:335","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[],"tindex":"dbb7c76f-0fe5-11e5-8b6c-5f7795551700","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"child","parent":"child","left":"child","h":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"dbb7c770-0fe5-11e5-8b6c-a5737ef488ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:395","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"dbb7ee81-0fe5-11e5-8b6c-9ba43d742859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:152","type":"CtIfImpl","sourcecode":"if (java.util.List<java.util.Collection<E>>.isEmpty()) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"dbb7ee82-0fe5-11e5-8b6c-23aef73a59cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"dbb7ee83-0fe5-11e5-8b6c-9becce390f95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1049","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":0},{"failures":[],"tindex":"dbb7ee84-0fe5-11e5-8b6c-0be1e2f8ecf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:98","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"dbb7ee85-0fe5-11e5-8b6c-fd3b8f6de2fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[],"tindex":"dbb7ee86-0fe5-11e5-8b6c-0f27042dc3c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"header","link":"header","header":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":0},{"failures":[342,343,344,345,346,347],"tindex":"dbb7ee87-0fe5-11e5-8b6c-6341227e9ee5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"status":-1},{"failures":[],"tindex":"dbb7ee88-0fe5-11e5-8b6c-15343705d5ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:207","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"dbb7ee89-0fe5-11e5-8b6c-878a0ee37bb7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)"},"status":-2},{"failures":[],"tindex":"dbb7ee8a-0fe5-11e5-8b6c-8b3436448ed4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"dbb7ee8b-0fe5-11e5-8b6c-23bb46f9b228","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:57","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(org.apache.commons.collections4.Trie<K, ? extends V>))"},"status":-2},{"failures":[],"tindex":"dbb7ee8c-0fe5-11e5-8b6c-6d71a9297160","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:430","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[348],"tindex":"dbb8159d-0fe5-11e5-8b6c-2d67e7cd7bd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()"},"status":-1},{"failures":[349,350,351],"tindex":"dbb8159e-0fe5-11e5-8b6c-497d736deba7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"dbb8159f-0fe5-11e5-8b6c-17067f82a1fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":-2},{"failures":[352,353,354,355,356,357],"tindex":"dbb815a0-0fe5-11e5-8b6c-8b725369170d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[],"tindex":"dbb815a1-0fe5-11e5-8b6c-bdcc1ed54dad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(\"ROOT\")"},"variableMap":{"buffer":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object))"},"status":-2},{"failures":[],"tindex":"dbb815a2-0fe5-11e5-8b6c-9dda2f5472cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"))"},"status":-2},{"failures":[],"tindex":"dbb815a3-0fe5-11e5-8b6c-83ed6bfb641a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"status":-2},{"failures":[],"tindex":"dbb815a4-0fe5-11e5-8b6c-57a8d37b0982","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:377","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"dbb815a5-0fe5-11e5-8b6c-6b121d9dd7f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:956","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"dbb815a6-0fe5-11e5-8b6c-c3ea074212ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"dbb815a7-0fe5-11e5-8b6c-81f73481a379","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"dbb83cb8-0fe5-11e5-8b6c-47732826a816","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"dbb83cb9-0fe5-11e5-8b6c-f990ac07450c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1921","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"dbb83cba-0fe5-11e5-8b6c-794053308fb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"firstCachedNode":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:312","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"dbb83cbb-0fe5-11e5-8b6c-97935da4d790","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"beforeFirst","changed":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:91","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[358,359],"tindex":"dbb83cbc-0fe5-11e5-8b6c-1de41bb84299","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:79","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The prototype must be cloneable via a public clone method\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:137","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"dbb83cbd-0fe5-11e5-8b6c-43f83b0728af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"dbb83cbe-0fe5-11e5-8b6c-831961d4de96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:830","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}