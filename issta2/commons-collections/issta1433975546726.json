{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":478,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":414,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":21,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":293,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":490,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":137,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":364,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":486,"org.apache.commons.collections4.CollectionUtilsTest.collect":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":498,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":378,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":439,"org.apache.commons.collections4.CollectionUtilsTest.get":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":493,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":449,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":275,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.ListUtilsTest.testLazyList":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":329,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":431,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":352,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":379,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":84,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":245,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":369,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":415,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":335,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":109,"org.apache.commons.collections4.CollectionUtilsTest.transform2":93,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":47,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":436,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":508,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":295,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":146,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":411,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":303,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":501,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":500,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":321,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":209,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":495,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":330,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":443,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":407,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":317,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":290,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":405,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":213,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":358,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":447,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":180,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":163,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":116,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":17,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":391,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":177,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":349,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":211,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":339,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":181,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":50,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":86,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":257,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":33,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":504,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":280,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":491,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":350,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":496,"org.apache.commons.collections4.list.TreeListTest.testRemove":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":506,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":483,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":254,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":370,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":252,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":158,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":172,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":15,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":282,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":311,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":373,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":404,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":302,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":236,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":164,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":362,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":328,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":176,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":243,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":360,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":102,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":442,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":489,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":99,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":58,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":371,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":167,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":357,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":233,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":459,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":289,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":320,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":509,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":365,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":477,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":41,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":409,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":507,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":410,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":287,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":40,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":77,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":472,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":284,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":175,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":344,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":332,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":267,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":488,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":319,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":333,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":264,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":327,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":159,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":471,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":42,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":389,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":26,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":218,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":299,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":298,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":122,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":294,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":450,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":261,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":210,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":381,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":322,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":136,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":36,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":316,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":396,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":445,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":89,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":263,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":306,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":153,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":235,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":346,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":196,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":338,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":426,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":53,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":310,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":28,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":297,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":296,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":269,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":481,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":98,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":237,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":49,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":438,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":428,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":198,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":68,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":192,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":171,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":191,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":380,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":188,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":416,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":190,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":189,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":384,"org.apache.commons.collections4.CollectionUtilsTest.isFull":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":212,"org.apache.commons.collections4.list.TreeListTest.testBug35258":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":46,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":270,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":388,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":88,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":234,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":247,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":460,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":412,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":452,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":119,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":464,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":91,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":106,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":432,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":453,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":413,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":66,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":143,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":511,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":23,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":185,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":273,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":272,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":187,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":121,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":383,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":206,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":13,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":375,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":497,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":400,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":421,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":197,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":285,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":18,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":485,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":305,"org.apache.commons.collections4.map.LRUMapTest.testLRU":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":430,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":304,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":323,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":155,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":512,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":154,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":173,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":216,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":226,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":444,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":470,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":361,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":451,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":441,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":65,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":182,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":222,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":81,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":368,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":385},"transformations":[{"failures":[0,1,2],"tindex":"92bc9cb9-0fc0-11e5-bb9a-85fc8c68446a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12],"tindex":"92be988a-0fc0-11e5-bb9a-a34a42c72514","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:838","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"variableMap":{"s":"root","left":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E)"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"92bebf9b-0fc0-11e5-bb9a-bdc12f7c15ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[61,62],"tindex":"92bfd10c-0fc0-11e5-bb9a-35d661a2422b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-1},{"failures":[],"tindex":"92bfd10d-0fc0-11e5-bb9a-b99674cb7e58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1176","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"entry","n":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:586","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"92c0bb6e-0fc0-11e5-bb9a-8b866e13625a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"delta","vDown":"vUp","delta":"offset","end2":"delta","this":"this","i":"offset","end1":"start1","k":"start2","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"92c2b73f-0fc0-11e5-bb9a-4b7ed0dd7194","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:882","type":"CtLocalVariableImpl","sourcecode":"final java.util.Enumeration<java.lang.String> java.util.Enumeration<java.lang.String> = java.util.ResourceBundle.getKeys()"},"status":-2},{"failures":[],"tindex":"92c2b740-0fc0-11e5-bb9a-8796889d6dd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"92c2b741-0fc0-11e5-bb9a-43c4d40e7cd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:322","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"92c2b742-0fc0-11e5-bb9a-0b2f34ba2dc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C)"},"status":0},{"failures":[],"tindex":"92c2de53-0fc0-11e5-bb9a-c5027d15dfab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:230","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[63,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,64,36,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,59],"tindex":"92c2de54-0fc0-11e5-bb9a-d7673f2ae319","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"92c2de55-0fc0-11e5-bb9a-ff899ba92227","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[66,67,68],"tindex":"92c2de56-0fc0-11e5-bb9a-f75e8c81a291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object)"},"status":-1},{"failures":[69],"tindex":"92c2de57-0fc0-11e5-bb9a-a370754b246a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:198","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"status":-1},{"failures":[],"tindex":"92c30568-0fc0-11e5-bb9a-47194a11143f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.getValue()"},"status":-2},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"92c30569-0fc0-11e5-bb9a-3bb44822aef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[84,85,86,87],"tindex":"92c3056a-0fc0-11e5-bb9a-ff777f2bbb30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"modified","removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:148","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[88,89,90,91],"tindex":"92c3056b-0fc0-11e5-bb9a-c589cab72ac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:112","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))"},"status":-1},{"failures":[92],"tindex":"92c3056c-0fc0-11e5-bb9a-db8fe5f5009d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"variableMap":{"sum":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:451","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-1},{"failures":[93,94,95],"tindex":"92c3056d-0fc0-11e5-bb9a-fd51d084cafa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"92c32c7e-0fc0-11e5-bb9a-1f28cb43ce6d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:970","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.bitIndex(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)"},"status":-2},{"failures":[],"tindex":"92c32c7f-0fc0-11e5-bb9a-09796d87d0fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"status":-2},{"failures":[],"tindex":"92c32c80-0fc0-11e5-bb9a-538a09eb6284","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:301","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[89],"tindex":"92c32c81-0fc0-11e5-bb9a-dfd9a367201c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:349","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[])"},"status":-1},{"failures":[],"tindex":"92c32c82-0fc0-11e5-bb9a-4512c6c15c07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:793","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"92c32c83-0fc0-11e5-bb9a-83508b60a097","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"92c35394-0fc0-11e5-bb9a-7f4087e4acff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:267","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"92c35395-0fc0-11e5-bb9a-9151c71fb2a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"92c35396-0fc0-11e5-bb9a-21fc471cdba3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1075","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.previous()"},"variableMap":{"next":"cTree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? org.apache.commons.collections4.list.TreeList.AVLNode<E> : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E>, int)"},"status":-2},{"failures":[],"tindex":"92c35397-0fc0-11e5-bb9a-99b44c4f190d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:584","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"92c37aa8-0fc0-11e5-bb9a-952becb46670","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:406","type":"CtReturnImpl","sourcecode":"return (long >= 0) && (long >= long)"},"status":-1},{"failures":[],"tindex":"92c37aa9-0fc0-11e5-bb9a-3961baef3a5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"92c37aaa-0fc0-11e5-bb9a-cb20b5d62273","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:669","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"92c37aab-0fc0-11e5-bb9a-fd963d69fde8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:588","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> , int)"},"status":-2},{"failures":[],"tindex":"92c37aac-0fc0-11e5-bb9a-dbff362988f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Bag<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>));\n    return org.apache.commons.collections4.Bag<E>;\n} "},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableBag<E>(org.apache.commons.collections4.Bag<? extends E>)"},"status":-2},{"failures":[],"tindex":"92c3a1bd-0fc0-11e5-bb9a-3b9dc6bfa020","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:102","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet(java.util.Set<E> , java.lang.Object)"},"status":-2},{"failures":[143,144],"tindex":"92c3a1be-0fc0-11e5-bb9a-4fb842c3a012","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:127","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":-1},{"failures":[],"tindex":"92c3a1bf-0fc0-11e5-bb9a-e944cb925da2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155],"tindex":"92c3a1c0-0fc0-11e5-bb9a-03e6f48e2305","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"92c3a1c1-0fc0-11e5-bb9a-89c9d2a6f29a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"92c3a1c2-0fc0-11e5-bb9a-631c89939fde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key5","next":"previous","entry":"previous","key2":"key2","hashCode":"index","key3":"key5","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"92c3c8d3-0fc0-11e5-bb9a-7bd1ef86ad59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"92c3c8d4-0fc0-11e5-bb9a-df93080ecd1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1359","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1230","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":0},{"failures":[],"tindex":"92c3efe5-0fc0-11e5-bb9a-3d292b4c2a0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"92c3efe6-0fc0-11e5-bb9a-79d48b1a3c51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:543","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[156],"tindex":"92c5c4a7-0fc0-11e5-bb9a-99b6f46ddeaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"92c5ebb8-0fc0-11e5-bb9a-830734e72945","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"92c5ebb9-0fc0-11e5-bb9a-9d550bc65953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-2},{"failures":[157],"tindex":"92c5ebba-0fc0-11e5-bb9a-a1b84d920d00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:62","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Bag<E>"},"variableMap":{"tmpBag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-1},{"failures":[],"tindex":"92c612cb-0fc0-11e5-bb9a-6de629c696cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"92c612cc-0fc0-11e5-bb9a-1383711159cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"path","parent":"path","predecessor":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"92c612cd-0fc0-11e5-bb9a-611f5574c7f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"variableMap":{"closure":"iClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super T>.execute(T)"},"status":0},{"failures":[158],"tindex":"92c660ee-0fc0-11e5-bb9a-2571425f5d94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:751","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"92c74b4f-0fc0-11e5-bb9a-7d4d71a2bed0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode()"},"status":-2},{"failures":[],"tindex":"92c74b50-0fc0-11e5-bb9a-894ae26894fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:176","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K)"},"status":-2},{"failures":[159,160,161,162,163,164,165,166,167,168],"tindex":"92c74b51-0fc0-11e5-bb9a-edba77531807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1410","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(((java.util.Map.Entry<?, ?>)(java.lang.Object)).getKey())"},"variableMap":{"this":"this","o":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:241","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"92c74b52-0fc0-11e5-bb9a-9b4f7fb79bbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[169],"tindex":"92c74b53-0fc0-11e5-bb9a-c766fb2c2049","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<?>.next();\n} "},"status":-1},{"failures":[],"tindex":"92c77264-0fc0-11e5-bb9a-95300af92346","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:722","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"92c77265-0fc0-11e5-bb9a-05294cb38b56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:130","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])))"},"variableMap":{"result":"array","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":"92c77266-0fc0-11e5-bb9a-132f7ab835f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-2},{"failures":[],"tindex":"92c77267-0fc0-11e5-bb9a-cf9f068c3a02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[170],"tindex":"92c77268-0fc0-11e5-bb9a-156af5162e3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")"},"status":-1},{"failures":[],"tindex":"92c79979-0fc0-11e5-bb9a-0fe8c4da9c71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"status":-2},{"failures":[],"tindex":"92c7997a-0fc0-11e5-bb9a-ff300606a362","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.TransformedCollection:94","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.TransformedCollection<E>"},"variableMap":{"decorated":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:63","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.collection.TransformedCollection<E>(java.util.Collection<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"92c7997b-0fc0-11e5-bb9a-0d38d4a9bc36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1261","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"variableMap":{"in":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:511","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"92c7997c-0fc0-11e5-bb9a-5ff02db9fb29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:903","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[171,172,173,174,175,176],"tindex":"92c7997d-0fc0-11e5-bb9a-e9828836d9e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:216","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"92c7997e-0fc0-11e5-bb9a-870b0278aae5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"variableMap":{"start":"length","maxElements":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:604","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[],"tindex":"92c7c08f-0fc0-11e5-bb9a-4b76f9cc8d21","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1509","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"92c7c090-0fc0-11e5-bb9a-5d45d801de66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:43","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Iterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[177],"tindex":"92c7c091-0fc0-11e5-bb9a-f9ac79a41893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:70","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.Predicate<? super T>.evaluate(T))"},"status":-1},{"failures":[],"tindex":"92c7c092-0fc0-11e5-bb9a-4103d8d19683","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.getKey()"},"status":0},{"failures":[],"tindex":"92c7c093-0fc0-11e5-bb9a-4f4c83613d96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:339","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"92c7c094-0fc0-11e5-bb9a-3d5323a44887","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtIfImpl","sourcecode":"if (java.lang.Short == null) {\n    java.lang.Short = java.lang.Short;\n} "},"variableMap":{"answer":"lock","defaultValue":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}"},"status":-2},{"failures":[178,179,180,181,182,183,184,185,186,87,187],"tindex":"92c7e7a5-0fc0-11e5-bb9a-fb049237b036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag().first()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag().last()"},"status":-1},{"failures":[188,189,190,191,192,193,194],"tindex":"92c7e7a6-0fc0-11e5-bb9a-b3b0faec7c90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,68,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"tindex":"92c7e7a7-0fc0-11e5-bb9a-c30cc80e93ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"92c85cd8-0fc0-11e5-bb9a-d99731b58714","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"obj":"key","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"key","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":-2},{"failures":[337,338],"tindex":"92c883e9-0fc0-11e5-bb9a-e1ff60d044a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"92c883ea-0fc0-11e5-bb9a-f1e16bd7f2aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:605","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[339,340],"tindex":"92c883eb-0fc0-11e5-bb9a-77d48978b02c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1},{"failures":[341],"tindex":"92c883ec-0fc0-11e5-bb9a-b7eaaee045ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:123","type":"CtReturnImpl","sourcecode":"return E"},"status":-1},{"failures":[],"tindex":"92c883ed-0fc0-11e5-bb9a-318884275cab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:268","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"data":"data","link":"next","hashIndex":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"92c8aafe-0fc0-11e5-bb9a-4b07a287c70f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"92c8aaff-0fc0-11e5-bb9a-eb901f7578ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:88","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.ArrayList<E>.size()"},"status":-2},{"failures":[],"tindex":"92c8ab00-0fc0-11e5-bb9a-3b65f7e8ed0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:122","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.CloneTransformer.<T>cloneTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"status":-2},{"failures":[],"tindex":"92c8ab01-0fc0-11e5-bb9a-03c26643c1e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:101","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"92c8ab02-0fc0-11e5-bb9a-c15eab20b668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:441","type":"CtOperatorAssignmentImpl","sourcecode":"int += E == null ? 0 : E.hashCode()"},"status":-1},{"failures":[],"tindex":"92c8d213-0fc0-11e5-bb9a-39978752069d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"variableMap":{"label":"childKey","out":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1002","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"92c8d214-0fc0-11e5-bb9a-3d64d21238f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:144","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator()"},"status":-2},{"failures":[364],"tindex":"92c8d215-0fc0-11e5-bb9a-37082ad91421","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"status":-1},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"tindex":"92c8d216-0fc0-11e5-bb9a-f9a1282b9bab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:263","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1)"},"status":-1},{"failures":[],"tindex":"92c8d217-0fc0-11e5-bb9a-010cbe8f39e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"92c8d218-0fc0-11e5-bb9a-3dbb304b4154","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:115","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,419,420,421,422,423,424,425],"tindex":"92caa6d9-0fc0-11e5-bb9a-07873b8cf603","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"status":-1},{"failures":[426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,71,457,458,459,72,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,0,494,495,496,1,497,498,499,500,501,502,419,420,503,2,504,505,421,506,507,508,422,509,423,424,425],"tindex":"92caf4fa-0fc0-11e5-bb9a-f362c6278a5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:814","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[510],"tindex":"92cb1c0b-0fc0-11e5-bb9a-8da49d135883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"status":-1},{"failures":[511,512],"tindex":"92cb1c0c-0fc0-11e5-bb9a-03de8b9db1b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}