{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":162,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":8,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":357,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":92,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":352,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":367,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":305,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":116,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":382,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":136,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":206,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":594,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":335,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":616,"org.apache.commons.collections4.CollectionUtilsTest.get":147,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":121,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":209,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":37,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":108,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":166,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":467,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":194,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":64,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":262,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":113,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":414,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":410,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":447,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":529,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":530,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":592,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":610,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":202,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":94,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":17,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":421,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":269,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":628,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":531,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":622,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":252,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":566,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":572,"org.apache.commons.collections4.CollectionUtilsTest.intersection":150,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":583,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":100,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":51,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":324,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":61,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":128,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":413,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":473,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":98,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":255,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":391,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":276,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":537,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":160,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":208,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":575,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":449,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":412,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":640,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":0,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":399,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":158,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":553,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":331,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":229,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":122,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":296,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":579,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":58,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":503,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":53,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":133,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":310,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":157,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":279,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":606,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":372,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":377,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":525,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":576,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":78,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":544,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":429,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.CollectionUtilsTest.union":149,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":438,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":608,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":260,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":650,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":60,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":521,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":328,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":185,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":375,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":379,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":627,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":439,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":401,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":85,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":233,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":466,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":491,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":617,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":32,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":373,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":222,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":386,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":455,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":295,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":527,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":75,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":361,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":599,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":637,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":332,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":107,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":347,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":290,"org.apache.commons.collections4.ListUtilsTest.testSubtract":652,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":389,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":538,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":493,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":416,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":385,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":598,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":207,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":510,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":313,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":44,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":294,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":541,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":479,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":477,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":423,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":159,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":504,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":325,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":218,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":291,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":25,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":649,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":419,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":266,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":533,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":309,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":237,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":532,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":199,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":186,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":444,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":267,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":306,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":298,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":156,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":292,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":110,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":418,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":456,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":111,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":400,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":83,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":384,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":570,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":434,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":106,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":555,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":303,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":542,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":363,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":603,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":638,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":14,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":234,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":626,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":442,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":636,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":631,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":52,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":360,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":468,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":620,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":101,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":139,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":499,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":648,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":506,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":13,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":134,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":141,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":581,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":97,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":501,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":47,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":297,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":441,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":299,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":624,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":460,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":556,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":259,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":448,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":539,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":505,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":562,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":286,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":265,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":193,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":72,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":502,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":605,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":596,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":16,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":571,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":302,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":508,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":137,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":545,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":165,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":634,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":621,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":472,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":632,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":350,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":564,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":507,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":314,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":344,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":343,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":369,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":340,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":339,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":402,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":342,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":443,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":341,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":383,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":351,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":338,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":278,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":485,"org.apache.commons.collections4.CollectionUtilsTest.isFull":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":639,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":547,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":24,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":358,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":554,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":625,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":580,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":437,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":66,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":96,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":250,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":348,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":582,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":154,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":268,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":496,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":221,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":408,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":362,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":397,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":225,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":475,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":198,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":464,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":247,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":388,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":457,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":327,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":261,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":312,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":346,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":644,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":124,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":535,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":565,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":584,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":307,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":597,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":323,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":520,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":148,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":320,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":498,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":228,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":618,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":557,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":326,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":200,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":3,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":465,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":578,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":404,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":486,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":69,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":102,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":289,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":231,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":392,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":453,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":590,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":619,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":48,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":495,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":516,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":104,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":129,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":417,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":19,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":426,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":462,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":152,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":353,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":595,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":144,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":211,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":63,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":569,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":642,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":240,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":585,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":550,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":304,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":359,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":515},"transformations":[{"failures":[0,1],"tindex":"fbd52092-13c2-11e5-a7a5-f34c68aa7cbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1},{"failures":[2,3],"tindex":"fbd547a3-13c2-11e5-a7a5-317c8e3fc573","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"fbd547a4-13c2-11e5-a7a5-e7428df6a670","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"variableMap":{"entry":"entry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"fbd547a5-13c2-11e5-a7a5-a160be621c50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:154","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":0},{"failures":[],"tindex":"fbd547a6-13c2-11e5-a7a5-27079030b78f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"fbd547a7-13c2-11e5-a7a5-97c410f03522","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"fbd56eb8-13c2-11e5-a7a5-41e6145e9919","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"fbd56eb9-13c2-11e5-a7a5-874567dee45c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"fbd56eba-13c2-11e5-a7a5-4d18ad32a41d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"fbd56ebb-13c2-11e5-a7a5-958756743b1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"fbd56ebc-13c2-11e5-a7a5-d1cad7499c34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"fbd595cd-13c2-11e5-a7a5-cb10fc51de6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":0},{"failures":[],"tindex":"fbd595ce-13c2-11e5-a7a5-a7c0f104bd70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"fbd595cf-13c2-11e5-a7a5-437ced56e659","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"fbd595d0-13c2-11e5-a7a5-9185a3fd97ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"fbd5bce1-13c2-11e5-a7a5-532f5fbb19d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"fbd5bce2-13c2-11e5-a7a5-1d6db7614984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"fbd5e3f3-13c2-11e5-a7a5-ed295751b7da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"fbd60b04-13c2-11e5-a7a5-cb72c504f1b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":0},{"failures":[],"tindex":"fbd60b05-13c2-11e5-a7a5-ff4b89bbc9ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"lengthInBits","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"fbd60b06-13c2-11e5-a7a5-7f2d45699a24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"fbd60b07-13c2-11e5-a7a5-0fad97e4f74e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"fbd60b08-13c2-11e5-a7a5-b1bf3a7f5607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":-1},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"fbd63219-13c2-11e5-a7a5-35bfa92b29f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[],"tindex":"fbd6321a-13c2-11e5-a7a5-09c5b4c9806c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"entry","predecessor":"right","bitIndex":"lengthInBits","child":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"fbd6321b-13c2-11e5-a7a5-f3475c44edc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","leftChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"fbd6321c-13c2-11e5-a7a5-f36e91805b3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":-2},{"failures":[2,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,114,115,116,117,118,119,120,169,121,170,122,171,172,123,124,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,3,195,196,197,198,199,200,201,202,203,204,205,206,126,127,207,128,129,130,131,208,132,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"fbd6321d-13c2-11e5-a7a5-23ee6998ec1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"fbd6321e-13c2-11e5-a7a5-19b3216f49d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"fbd6592f-13c2-11e5-a7a5-11fe59e18f6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[228,229,230,231],"tindex":"fbd65930-13c2-11e5-a7a5-c3fd5590462e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"comparatorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[232,233],"tindex":"fbd65931-13c2-11e5-a7a5-7f1e24b028fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-1},{"failures":[],"tindex":"fbd65932-13c2-11e5-a7a5-ebd240749c4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"currentNode","this":"this","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"fbd65933-13c2-11e5-a7a5-5ddb21a80bec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[234,235],"tindex":"fbd65934-13c2-11e5-a7a5-d5cc2d38fa04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"child","current":"node","tree":"child","right":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"fbd65935-13c2-11e5-a7a5-ddb19fe41acb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:152","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()"},"status":-2},{"failures":[236,237,238],"tindex":"fbd68046-13c2-11e5-a7a5-8b22b86b378c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"fbd68047-13c2-11e5-a7a5-c3ff84842a8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"fbd68048-13c2-11e5-a7a5-13ae58b9eca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,13,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,34],"tindex":"fbd806e9-13c2-11e5-a7a5-b1cfffe40f9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[239,240,241,242,243],"tindex":"fbd806ea-13c2-11e5-a7a5-e95c7fd3aad3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"fbd806eb-13c2-11e5-a7a5-e958f96f9842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"fbd806ec-13c2-11e5-a7a5-c5df38d9b64f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"fbd806ed-13c2-11e5-a7a5-73f1ad3e78bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[256,257,258,259,260,261,262,263,264],"tindex":"fbd82dfe-13c2-11e5-a7a5-7519ac66e8ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[234,235,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"tindex":"fbd82dff-13c2-11e5-a7a5-37897782a2a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"fbd82e00-13c2-11e5-a7a5-59df353c87e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"fbd82e01-13c2-11e5-a7a5-f5ef1bdc078f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-2},{"failures":[228,229,230],"tindex":"fbd82e02-13c2-11e5-a7a5-797a52e1cdaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"fbd82e03-13c2-11e5-a7a5-4d0a393313d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"fbd82e04-13c2-11e5-a7a5-d78786e50bce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"fbd82e05-13c2-11e5-a7a5-470db3a5f032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"hashCode","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"fbd82e06-13c2-11e5-a7a5-0d5015de1b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[280,281,282,283,284],"tindex":"fbd85517-13c2-11e5-a7a5-63e790a9348f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[285,286,287,288,289,290,291,292],"tindex":"fbd85518-13c2-11e5-a7a5-79e91b0f4eb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-1},{"failures":[293,294,295,4,5,6,7,8,9,10,11,12,296,297,14,15,16,17,18,19,20,21,22,23,13,24,25,26,27,28,29,30,31,32,33,298,299,35,36,37,38,39,40,41,42,43,44,34],"tindex":"fbd85519-13c2-11e5-a7a5-6d3613a3d47b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[300],"tindex":"fbd8551a-13c2-11e5-a7a5-d1f861667aeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:244","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[301],"tindex":"fbd8551b-13c2-11e5-a7a5-05da2338d908","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"fbd8551c-13c2-11e5-a7a5-33299239447a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[302,303,304],"tindex":"fbd8ca4d-13c2-11e5-a7a5-41c672f9d8d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[234,235,305,306,265,266,307,308,309,310,271,272,311,273,274,275,276,277,278,312,279,313,314,270,267,315,316,317,318,319,320,321,322,323,268,324,325,269,326,327,328,329,330,331,332,333],"tindex":"fbd8ca4e-13c2-11e5-a7a5-fd5941373a35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"endIndex2","listSize":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"fbd8ca4f-13c2-11e5-a7a5-a1896d28ada1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"status":0},{"failures":[334],"tindex":"fbd8ca50-13c2-11e5-a7a5-975a8cf6dd5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"fbd8f161-13c2-11e5-a7a5-01f259c410ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"fbd8f162-13c2-11e5-a7a5-fb22a1d8f42b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"fbd8f163-13c2-11e5-a7a5-5b50402e3e06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"fbd8f164-13c2-11e5-a7a5-ed14f6b01839","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[2,152,153,154,158,159,160,161,162,163,155,156,157,164,165,166,168,114,115,116,117,118,119,120,169,121,170,122,171,172,123,124,173,174,175,176,177,178,179,180,181,182,183,184,167,185,186,187,188,189,190,191,192,193,194,3,195,196,197,201,202,203,204,198,199,200,206,126,127,207,128,129,130,131,208,132,209,210,211,212,213,214,215,216,217,218,219,205,220,221,222,223,224,225,226,227],"tindex":"fbd8f165-13c2-11e5-a7a5-091ab8023bdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[335,336,337,338,339,340,341,342,343,344,345,239,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"fbd8f166-13c2-11e5-a7a5-f5a1ae199b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"fbd8f167-13c2-11e5-a7a5-1353a15beb78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":-2},{"failures":[],"tindex":"fbd8f168-13c2-11e5-a7a5-b37c4bf6b973","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[365,366,367],"tindex":"fbd91879-13c2-11e5-a7a5-4f058a713e98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"fbd9187a-13c2-11e5-a7a5-15b4791f9dc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"right","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[368,369,370,371,372,373,374],"tindex":"fbd9187b-13c2-11e5-a7a5-d35e3cde4a66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1},{"failures":[],"tindex":"fbd9187c-13c2-11e5-a7a5-9f13c2d49297","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":0},{"failures":[],"tindex":"fbd9187d-13c2-11e5-a7a5-9d1b3d9a904a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[375,376,377,378],"tindex":"fbd9187e-13c2-11e5-a7a5-ab584e6deb6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[379],"tindex":"fbd9187f-13c2-11e5-a7a5-35e0c5df58b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[],"tindex":"fbd91880-13c2-11e5-a7a5-6bf724d5e29e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[159,161,162,380,122,124,179,180,182,167,185,188,189,192],"tindex":"fbd91881-13c2-11e5-a7a5-99fc90a01d94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[122,124,185,189],"tindex":"fbd93f92-13c2-11e5-a7a5-4ff6af172de5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"x","to":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[381,382],"tindex":"fbd93f93-13c2-11e5-a7a5-c13c5f7648a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[234,235,305,265,266,307,308,309,271,272,273,274,275,276,277,278,279,270,267,318,319,321,322,323,269],"tindex":"fbd93f94-13c2-11e5-a7a5-cbdbc3a81694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:91","type":"CtAssignmentImpl","sourcecode":"char = java.lang.String.charAt(int)"},"status":-1},{"failures":[302,303,304],"tindex":"fbd93f95-13c2-11e5-a7a5-59d69115771e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[],"tindex":"fbd93f96-13c2-11e5-a7a5-0705a2c97389","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[122,124,167,188,190,191,192],"tindex":"fbd93f97-13c2-11e5-a7a5-a19f6f7c4000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"fbd93f98-13c2-11e5-a7a5-f136e8788f96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[],"tindex":"fbd966a9-13c2-11e5-a7a5-81cc78342fd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-2},{"failures":[383,337,338,339,340,232,233],"tindex":"fbd966aa-13c2-11e5-a7a5-0922160bb053","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"fbd966ab-13c2-11e5-a7a5-8132b05eb725","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[384,59,60,61,62,63,385,64,65,66,67,386,387,388,389],"tindex":"fbd966ac-13c2-11e5-a7a5-79fc6c25715c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[167,122,124,182,185,188,189,190,191,192],"tindex":"fbd966ad-13c2-11e5-a7a5-a7e784d3aa10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerRightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[390,391,392,94,393,394],"tindex":"fbd966ae-13c2-11e5-a7a5-1f429baa4b11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:301","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"fbd966af-13c2-11e5-a7a5-03297dbd6401","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[],"tindex":"fbd966b0-13c2-11e5-a7a5-7f72dc8afeb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,368,412,413,414,415,416,417,418,419,420,375,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,369,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,370,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,371,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,372,534,535,536,537,538,539,540,541,542,376,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,373,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,377,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,374,637,638,639,640,641,642,643,644,645,378,646,647,648,141,145,649,650,651,652,653],"tindex":"fbd966b1-13c2-11e5-a7a5-cfdb761a3abd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"fbd98dc2-13c2-11e5-a7a5-89e5bd31305f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"path","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"fbd98dc3-13c2-11e5-a7a5-15b43d164c54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[114,115,117,118,119,169,121,122,123,124,126,127,128,129,130,208,132],"tindex":"fbd98dc4-13c2-11e5-a7a5-6b08f9f9a761","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"total","listSize":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}