{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":466,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":177,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":191,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":284,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":93,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":611,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":724,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":253,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":515,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":511,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":272,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":76,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":510,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":53,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":89,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":35,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":443,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":416,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":573,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":119,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":465,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":256,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":185,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":726,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":503,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":281,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":276,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":269,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":690,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":371,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":677,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":529,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":414,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":548,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":363,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":716,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":313,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":698,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":496,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":618,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":258,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":565,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":661,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":259,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":580,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":123,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":586,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":193,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":250,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":378,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":424,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":627,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":156,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":359,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":600,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":687,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":629,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":430,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":24,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":310,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":382,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":102,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":653,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":21,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":91,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":140,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":589,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":440,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":293,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":649,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":619,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":50,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":662,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":395,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":224,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":693,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":69,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":175,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":641,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":235,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":421,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":593,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":215,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":625,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":356,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":390,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":632,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":280,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":553,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":380,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":576,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":664,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":633,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":474,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":502,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":147,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":543,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":479,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":702,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":546,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":570,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":282,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":155,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":299,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":659,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":275,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":404,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":118,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":564,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":449,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":660,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":264,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":283,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":425,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":719,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":616,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":614,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":557,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":630,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":668,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":544,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":497,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":598,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":533,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":623,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":219,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":537,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":337,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":168,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":428,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":169,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":354,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":494,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":106,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":694,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":358,"org.apache.commons.collections4.ListUtilsTest.testSubtract":577,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":48,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":285,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":684,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":631,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":663,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":261,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":536,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":626,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":555,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":442,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":492,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":640,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":549,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":199,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":462,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":403,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":599,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":604,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":429,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":243,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":688,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":588,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":607,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":393,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":714,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":605,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":320,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":481,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":173,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":279,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":410,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":554,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":490,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":723,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":658,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":514,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":710,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":59,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":678,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":713,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":184,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":171,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":405,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":476,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":297,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":646,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":94,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":307,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":209,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":361,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":397,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":559,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":201,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":266,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":572,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRetainAll":57,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":401,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":30,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":647,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":676,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":472,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":703,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":260,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":583,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":357,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":438,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":689,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":238,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":491,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":547,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":52,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":473,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":345,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":387,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":435,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":517,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":86,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":265,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":368,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":317,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":379,"org.apache.commons.collections4.ArrayStackTest.testNewStack":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":532,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":25,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":227,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":575,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":44,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":197,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":636,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":304,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":305,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":482,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":531,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":190,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":244,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":595,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.map.HashedMapTest.testClone":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":709,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":518,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":150,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":146,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":394,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":467,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":717,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":210,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":326,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":634,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":212,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":513,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":686,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":500,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":134,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":475,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":343,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":585,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":342,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":181,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":461,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":112,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":534,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":665,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":338,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":602,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":606,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":501,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":708,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":412,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":637,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":407,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":133,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":483,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":294,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":563,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":711,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":67,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":381,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":617,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":240,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":670,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":336,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":448,"org.apache.commons.collections4.map.LinkedMapTest.testClone":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":489,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":182,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":613,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":391,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":321,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":160,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":452,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":95,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":673,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":431,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":635,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":612,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":601,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":324,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":487,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":233,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":695,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":65,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":558,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":251,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":144,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":644,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":603,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":158,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":19,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":32,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":38,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":287,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":309,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":286,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":85,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":142,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":468,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":721,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":183,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":525,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":530,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":545,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":451,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":456,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":441,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":418,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":375,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":516,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":28,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":521,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":561,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":228,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":696,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":229,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":415,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":727,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":450,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":90,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":80,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":296,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":22,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":526,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":524,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":340,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":463,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":568,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":311,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":498,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":639,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":203,"org.apache.commons.collections4.map.LRUMapTest.testLRU":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":239,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":11,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":592,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":725,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":163,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":705,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":194,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":226,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":291,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":485,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":622,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":722,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":295,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":246,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveAll":56,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":399,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":225,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":247,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":372,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":538,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":508,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":353,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":138,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":234,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":477,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":111,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":560,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":488,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":325,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":105,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":249,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":691,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":136,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":157,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":369,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":621,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":257,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":682,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":413,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":541,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":699,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":84,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":645,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":569},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"f2632636-13c4-11e5-9481-7727458c0508","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[7,8],"tindex":"f2634d47-13c4-11e5-9481-5972a761d688","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:125","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.remove((int - 1))"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"status":-1},{"failures":[9,10],"tindex":"f2634d48-13c4-11e5-9481-477b0d05402a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:283","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f2634d49-13c4-11e5-9481-c91545e1f2b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"f263745a-13c4-11e5-9481-132d493b1985","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"f263745b-13c4-11e5-9481-2500e6aed01c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"f263745c-13c4-11e5-9481-4700c84f8feb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"f263745d-13c4-11e5-9481-0d92b32a86f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"f2639b6e-13c4-11e5-9481-6da92bba9b49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[],"tindex":"f2639b6f-13c4-11e5-9481-134b7d565a09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"f2639b70-13c4-11e5-9481-2feb30765423","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:380","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"f2639b71-13c4-11e5-9481-13dce942d252","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"to","leftChild":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"f2639b72-13c4-11e5-9481-c7168650144b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:648","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<V>)(java.lang.Object)).clear()"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"f263c283-13c4-11e5-9481-87a80005abc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[],"tindex":"f263c284-13c4-11e5-9481-094beaab3125","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f263e995-13c4-11e5-9481-fb033ec8538f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f263e996-13c4-11e5-9481-8dd73aa3b305","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"key3","defaultValue":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[76,77,78,79,80,81,82,83,84],"tindex":"f263e997-13c4-11e5-9481-85a35de08aad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"f263e998-13c4-11e5-9481-37a912576ff7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"f263e999-13c4-11e5-9481-39770317a662","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f26410aa-13c4-11e5-9481-592cedbb6e54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"f26410ab-13c4-11e5-9481-3b56982b3547","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:517","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[146,147,148,11,149,150,151,12,152,153,154,155,156,15,157,158,159,16,160,161,162,163,164,17,165,166,167,18,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,21,183,184,185,22,186,187,188,189,190,24,191,192,193,25,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"f26410ac-13c4-11e5-9481-e1b82c6b9f80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[117,139],"tindex":"f26410ad-13c4-11e5-9481-fbb38c3b134d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[206,207,99,100,101,102,103,104,105,106,107,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"f26410ae-13c4-11e5-9481-83c64d059c47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[206,207,99,100,101,102,103,104,105,106,107,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"f26437bf-13c4-11e5-9481-0d7f24eb92bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[222],"tindex":"f26437c0-13c4-11e5-9481-7dbce7053b49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[],"tindex":"f26437c1-13c4-11e5-9481-9b49af6b76b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[223,224,225,226],"tindex":"f26437c2-13c4-11e5-9481-755dc274e57a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"retval","index":"retval","beyond":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[],"tindex":"f26437c3-13c4-11e5-9481-7197fe18c638","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"f26437c4-13c4-11e5-9481-31396c50cd2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[227,228],"tindex":"f26437c5-13c4-11e5-9481-dfbc3c69e0ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:519","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"f26437c6-13c4-11e5-9481-cd9dceeb0556","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"f26437c7-13c4-11e5-9481-cd48b69d0952","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:89","type":"CtInvocationImpl","sourcecode":"java.util.Collection<E>.clear()"},"status":-2},{"failures":[],"tindex":"f2645ed8-13c4-11e5-9481-ebf26025fce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"f2645ed9-13c4-11e5-9481-5d06d9cf49a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[256,80],"tindex":"f2645eda-13c4-11e5-9481-916ba2b4e2cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[],"tindex":"f2645edb-13c4-11e5-9481-8dad6010183f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"helper":"helper","cardinalityA":"cardinalityB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"status":-2},{"failures":[257,258,259],"tindex":"f2645edc-13c4-11e5-9481-cd87883ad13d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f2645edd-13c4-11e5-9481-775da98f8bdf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f2645ede-13c4-11e5-9481-a5eb1b37bf7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return \"{}\";\n} "},"status":0},{"failures":[260,154,155,156,15,157,261,159,161,262,263],"tindex":"f2645edf-13c4-11e5-9481-6597b427b596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"f2645ee0-13c4-11e5-9481-01b00f1cfb64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"node","bitIndex":"bitIndex","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f2645ee1-13c4-11e5-9481-4f41cbcfb5cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"f26485f2-13c4-11e5-9481-2585be9e78d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"predecessor","parent":"predecessor","left":"predecessor","h":"p","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"f26485f3-13c4-11e5-9481-55b5f7817d32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f26485f4-13c4-11e5-9481-85a1f98fa4c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:145","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"f26485f5-13c4-11e5-9481-ddff045b3578","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"f26485f6-13c4-11e5-9481-51e01063db67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[111,112,276,120,122,125,126,277,128,278,129,279,130,131,132],"tindex":"f26485f7-13c4-11e5-9481-a5ee094dfe47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[280,281,282,283],"tindex":"f26485f8-13c4-11e5-9481-fbe6765d8a80","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f26485f9-13c4-11e5-9481-55b38da97a80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f264ad0a-13c4-11e5-9481-6953cd30a8a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()"},"variableMap":{"this":"intersects"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":-2},{"failures":[],"tindex":"f264ad0b-13c4-11e5-9481-ef9776294b05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[223,284,285,224,225,226],"tindex":"f264ad0c-13c4-11e5-9481-f780cf5d1f1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[],"tindex":"f264ad0d-13c4-11e5-9481-83ad5f0890b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[286,287,288,289,290,291,292,162,163,293,164,17,165,294,166,167,295,18,296,297,168,169,298,299,300,301,302,303,304,305,306,19,307,308,20,309,310,311,312,313,314,315,316],"tindex":"f264ad0e-13c4-11e5-9481-9d2f81b1c959","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"size","beyond":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"f264ad0f-13c4-11e5-9481-ed33a56afd35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[146,147,148,11,149,317,150,151,12,152,153,14,318,319,320,321,322,323,324,325,326,327,328,154,155,156,15,157,261,158,159,16,160,161,329,330,331,332,333,334,335,162,163,164,17,165,294,166,167,18,168,169,20,282,336,337,338,339,340,170,171,172,173,174,341,176,177,178,179,342,343,344,345,346,347,348,180,181,182,21,183,349,184,185,22,186,187,23,188,189,190,24,191,350,192,193,25,194,195,27,351,352,353,354,355,356,357,358,29,359,360,361,30,362,363,31,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390],"tindex":"f264ad10-13c4-11e5-9481-0f0c48182462","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"f264ad11-13c4-11e5-9481-ab26508260ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":0},{"failures":[391,392,53,55,58,393,394,70,72,75,395,396],"tindex":"f264d422-13c4-11e5-9481-2b02c0a0ae0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"variableMap":{"h":"p","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[397],"tindex":"f264d423-13c4-11e5-9481-29a7766468bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1},{"failures":[398,399,400,401],"tindex":"f264d424-13c4-11e5-9481-59e481d9ca22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"f264d425-13c4-11e5-9481-2569162929ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:412","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"f264d426-13c4-11e5-9481-8fb744935098","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"f264d427-13c4-11e5-9481-03b39ec2ff89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"variableMap":{"this":"item","index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:196","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[402,403],"tindex":"f264d428-13c4-11e5-9481-1ba8950b9387","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[0,1,2,3,404,405,4,406,5,6,407,408,409],"tindex":"f264d429-13c4-11e5-9481-0b6d03fe0931","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"f264d42a-13c4-11e5-9481-051c20a909d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[410,411,412,413,414,415,416,417,418,419,76,77,420,421,422,423,424,78,425,426,79,80,81,427,428,429,430,82,83,84],"tindex":"f264d42b-13c4-11e5-9481-4d2367736fee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f264d42c-13c4-11e5-9481-97b749cfc935","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"f264d42d-13c4-11e5-9481-bdfe880f2d67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f264fb3e-13c4-11e5-9481-990dbcbac165","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:707","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.forAllButLastDo(java.lang.Iterable<T>.iterator(), C)"},"status":0},{"failures":[],"tindex":"f264fb3f-13c4-11e5-9481-dff7dd374c12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[431,432],"tindex":"f264fb40-13c4-11e5-9481-1d4d84a30e84","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,258,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,259,504,505,506,507,508,509,510],"tindex":"f264fb41-13c4-11e5-9481-651c69101197","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"f264fb42-13c4-11e5-9481-135858b04500","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"variableMap":{"transformers":"transformers","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:62","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) != (org.apache.commons.collections4.Transformer<? super I, ? extends O>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n} "},"status":-2},{"failures":[],"tindex":"f264fb43-13c4-11e5-9481-dfce171690c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"f264fb44-13c4-11e5-9481-d33f65c897d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[511,512,513,514,515,516,517,59,60,61,63,64,65,66,518,67,68,69,70,519,520,521,522,523,75,524,525],"tindex":"f2652255-13c4-11e5-9481-3955f6cc78b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[452,229,230,231,463,464,465,466,467,468,469,470,234,235,236,473,474,526,475,258,476,477,478,479,480,481,482,527,489,490,491,492,493,494,495,496,497,500,240,241,242,501,502,528,503,259,504,505,506,507,508,509,510,529],"tindex":"f2652256-13c4-11e5-9481-8360ac55d91b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"f2652257-13c4-11e5-9481-33c654f80690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f2652258-13c4-11e5-9481-8d6da310716a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f2652259-13c4-11e5-9481-89de4a7ffc66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f265225a-13c4-11e5-9481-13245706793d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":0},{"failures":[],"tindex":"f265225b-13c4-11e5-9481-1f8c3c5f91e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"obj","k":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"f265225c-13c4-11e5-9481-df475f21faa0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-2},{"failures":[],"tindex":"f265225d-13c4-11e5-9481-95eb9baded96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:49","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<T, T>)(org.apache.commons.collections4.functors.CloneTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[210],"tindex":"f265225e-13c4-11e5-9481-9d11d8e12369","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"offset","proposedCapacity":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"f265225f-13c4-11e5-9481-a5f49c6c3350","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"node","to":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f2654970-13c4-11e5-9481-21dba2bb7a41","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof java.util.Set<?>) {\n    return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0;\n} "},"status":0},{"failures":[],"tindex":"f2654971-13c4-11e5-9481-2fdfca66ccd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[548],"tindex":"f2654972-13c4-11e5-9481-ef5eba923dea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:77","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : java.util.Collection<org.apache.commons.collections4.Closure<E>>) {\n    org.apache.commons.collections4.Closure<? super E>[][int++] = org.apache.commons.collections4.Closure<? super E>;\n}"},"status":-1},{"failures":[433,436,440,549,550,454,551,456,457,460,463,464,465,466,467,468,469,470,471,472,552,553,554,555,473,474,475,258,476,477,478,479,480,481,482,483,486,489,490,491,492,493,494,495,496,497,498,499,556,557,558,559,500,501,502,503,259,504,505,506,507,508,509,510],"tindex":"f2654973-13c4-11e5-9481-7f2b7e7a925b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[560,561,562,563,564,317,565,566,567,568,261,569,570,287,288,294,314,315,282,571,341,572,573,574,350,575,576,356,357,358,29,359,361,30,362,363],"tindex":"f2654974-13c4-11e5-9481-6b1da010ba02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:180","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,531,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,533,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,535,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,538,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,540,663,664,665,666,667,668,669,670,671,672,673,674,541,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,543,693,694,695,696,697,698,699,700,701,702,703,704,544,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,547,723],"tindex":"f2654975-13c4-11e5-9481-8ffcb7531c9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[99,100,724,101,102,103,104,725,105,106,107,726,727],"tindex":"f2654976-13c4-11e5-9481-8f6d186bdbf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"f2657087-13c4-11e5-9481-35cfd52295e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"methodName","defaultValue":"methodName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[120,122,128,278,129,279,130,131,132],"tindex":"f2657088-13c4-11e5-9481-6962f064b330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}