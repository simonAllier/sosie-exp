{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":672,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":517,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":198,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":31,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":183,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":577,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":691,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":692,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":740,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":557,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":585,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":300,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":746,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":250,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":627,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":88,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":273,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":420,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":345,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":563,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":560,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":561,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":219,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":647,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":185,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":441,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":129,"org.apache.commons.collections4.ListUtilsTest.testEquals":191,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":527,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":247,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":731,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":618,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":688,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":106,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":95,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":335,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":336,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":757,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":144,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":415,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":306,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":710,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":761,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":764,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":201,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":717,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":522,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":481,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":664,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":417,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":396,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":200,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":360,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":703,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":525,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":575,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":656,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":623,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":401,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":402,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":158,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":220,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":375,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":485,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":286,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":418,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":197,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":506,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":234,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":348,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":116,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":13,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":565,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":167,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":301,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":574,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":430,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":659,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":681,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":645,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":513,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":424,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":83,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":540,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":680,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":266,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":679,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":738,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":65,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":109,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":500,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":567,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":515,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":669,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":754,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":199,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":730,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":395,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":602,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":706,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":121,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":313,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":312,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":311,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":702,"org.apache.commons.collections4.map.LRUMapTest.testReset":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":562,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":370,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":765,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":718,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":697,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":206,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":426,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":232,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":295,"org.apache.commons.collections4.map.LinkedMapTest.testReset":416,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":649,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":302,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":445,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":393,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":365,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":91,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":581,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":752,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":604,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":456,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":701,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":188,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":163,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":236,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":148,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":665,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":520,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":245,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":711,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":762,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":546,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":352,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":168,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":518,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":79,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":637,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":638,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":698,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":543,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":82,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":640,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":435,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":434,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":436,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":324,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":405,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":488,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":102,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":341,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":547,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":609,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":443,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":442,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":173,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":760,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":24,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":261,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":510,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":617,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":263,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":728,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":329,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":296,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":284,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":695,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":704,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":268,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":733,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":429,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":374,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":660,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":85,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":483,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":708,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":297,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":507,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":682,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":476,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":650,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":726,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":511,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":235,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":389,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":337,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":466,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":586,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":78,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":615,"org.apache.commons.collections4.map.LRUMapTest.testLRU":120,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":651,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":768,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":63,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":149,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":412,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":459,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":611,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":658,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":457,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":529,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":142,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":25,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":134,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":378,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":756,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":657,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":357,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":559,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":619,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":448,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":450,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":392,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":259,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":136,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":187,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":501,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":696,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":408,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":683,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":115,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":516,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":177,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":181,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":387,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":549,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":553,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":94,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":458,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":644,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":15,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":92,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":632,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":240,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":598,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":550,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":569,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":7,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":390,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":316,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":478,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":317,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":729,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":749,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":745,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":662,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":68,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":404,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":372,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":10,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":216,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":180,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":455,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":579,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":655,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":639,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":428,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":362,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":463,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":269,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":451,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":72,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":298,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":432,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":721,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":714,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":494,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":21,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":419,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":104,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":734,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":221,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":479,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":590,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":622,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":398,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":397,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":566,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":278,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":277,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":496,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":349,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":422,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":194,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":319,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":326,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":84,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":433,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":653,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":280,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":480,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":568,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":584,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":440,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":538,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":350,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":34,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":260,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":676,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":743,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":533,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":693,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":111,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":552,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":536,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":699,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":739,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":545,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":189,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":39,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":97,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":126,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":576,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":98,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":16,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":229,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":630,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":453,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":322,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":521,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":439,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":186,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":438,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":461,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":741,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":231,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":407,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":171,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":593,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":498,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":248,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":124,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":193,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":212,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":213,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":214,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":162,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":534,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":493,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":523,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":99,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":411,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":304,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":320,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":265,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":629,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":151,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":315,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":621,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":51,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":526,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":747,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":380,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":605,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":570,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":666,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":271,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":753,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":588,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":202,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":631,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":712,"org.apache.commons.collections4.set.CompositeSetTest.testContains":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":454,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":132,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":654,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":423,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":541,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":648,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":535,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":580,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":159,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":9,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":141,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":613,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":44,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":482,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":755,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":709,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":689,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":690,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":673,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":409,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":196,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":215,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":195,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":391,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":487,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":519,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":12,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":385,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":384,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":736,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":282,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":305,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":578,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":750,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":700,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":211,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":225,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":723,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":591,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":532,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":732,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":331,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":514,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":668,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":595,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":161,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":77,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":75,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":204,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":684,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":573,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":685,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":473,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":555,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":289,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":758,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":635,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":572,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":614,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":308,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":309,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":686,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":628,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":64,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":687,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":626,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":333,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":470,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":475,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":497,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":751,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":130},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"72b19602-13b4-11e5-989b-9bcdbb16461d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"72b1bd13-13b4-11e5-989b-4315292df700","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[11,12,13,14],"tindex":"72b1bd14-13b4-11e5-989b-1b842d77e040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"y","to":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"72b1e425-13b4-11e5-989b-dd0dfed6d731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[15,16,17,18,19,20,21],"tindex":"72b1e426-13b4-11e5-989b-194182c95205","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"current","b":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"72b1e427-13b4-11e5-989b-cf97fd284ded","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"i","composite":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-2},{"failures":[22],"tindex":"72b23248-13b4-11e5-989b-b730529018cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"72b23249-13b4-11e5-989b-412e082ddb6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[23,24,25,26,27,28,29,30],"tindex":"72b2324a-13b4-11e5-989b-4b2d9a7cc7a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"72b2595b-13b4-11e5-989b-c163905cc97e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"set","existingSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"72b2595c-13b4-11e5-989b-2d918ad61279","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"72b2595d-13b4-11e5-989b-677cc4cb5a8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"72b2a77e-13b4-11e5-989b-1b93db4fbaef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"72b2a77f-13b4-11e5-989b-753ffa268344","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[191],"tindex":"72b2a780-13b4-11e5-989b-55ae50df357c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[192,193,194],"tindex":"72b2a781-13b4-11e5-989b-61ef56ed5cc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"72b2a782-13b4-11e5-989b-4f4ad5a49a08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"72b2a783-13b4-11e5-989b-6b1584a2662e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"72b2a784-13b4-11e5-989b-7b62d3449612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[195,196,197,198,199,75,89,200,76,77,201,78,79,80,202,203,81,204,82,205,206,83,84,85,207,208,209,210,211,212,213,214,86,87,88,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,90,91,92,93,94,95,96,234,97,235,98,236,237,99,100,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,101,265,266,102,118,267,103,104,105,106,107,108,109,268,110,269,111,270,271,112,113,114,272,273,274,275,276,277,278,279,115,116,117,280,281,282,283,284,285,286,287,288,120,119,289,290,291,292,293,294,295,296,297,298,299,300,122,138,301,123,124,125,126,127,128,129,302,130,303,131,304,305,132,133,134,306,307,308,309,310,311,312,313,135,136,137,314,315,316,317,318,319,320,321,322,323,139,155,324,140,141,142,143,144,145,146,325,147,326,148,327,328,149,150,151,329,330,331,332,333,334,335,336,152,153,154,337,338,339,340,341,342,343,344,345,346,347,348,349,350,156,172,351,157,158,159,160,161,162,163,352,164,353,165,354,355,166,167,168,356,357,358,359,360,361,362,363,169,170,171,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,173,421,422,423,424,425,426,174,190,427,175,176,177,178,179,180,181,428,182,429,183,430,431,184,185,186,432,433,434,435,436,437,438,439,187,188,189,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"tindex":"72b2ce95-13b4-11e5-989b-ed8da5f719a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[480,481],"tindex":"72b2ce96-13b4-11e5-989b-e36551903dd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"i","newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"72b2ce97-13b4-11e5-989b-414b456fe93e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"72b2ce98-13b4-11e5-989b-615cade136c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"72b2f5a9-13b4-11e5-989b-a7d2806672d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"72b2f5aa-13b4-11e5-989b-65874e6bb3af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"72b2f5ab-13b4-11e5-989b-776410def4da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"72b2f5ac-13b4-11e5-989b-b79d94885e9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:373","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n    continue;\n} "},"status":-2},{"failures":[482],"tindex":"72b2f5ad-13b4-11e5-989b-9d379cd90b25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"72b2f5ae-13b4-11e5-989b-b7874d37ec71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"72b2f5af-13b4-11e5-989b-57793cccf0f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-1},{"failures":[],"tindex":"72b2f5b0-13b4-11e5-989b-516948b3f6d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[86,89,225,94,247,232,101,107,115,118,144,152,155,345,161,169,172,383,403,377],"tindex":"72b2f5b1-13b4-11e5-989b-192716c467d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[501,502,503,504,505,506,507,508],"tindex":"72b31cc2-13b4-11e5-989b-13f1ce2cdb45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[509],"tindex":"72b31cc3-13b4-11e5-989b-255a62febb9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:73","type":"CtReturnImpl","sourcecode":"return T"},"status":-1},{"failures":[],"tindex":"72b31cc4-13b4-11e5-989b-5dd65ba0c713","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:202","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.AbstractMapBag<E>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"i","mods":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":0},{"failures":[],"tindex":"72b31cc5-13b4-11e5-989b-7f1630e24f5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:747","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"72b31cc6-13b4-11e5-989b-03d013308379","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[82],"tindex":"72b31cc7-13b4-11e5-989b-ffa222f6b41f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[33,37,45,51,53,56,57,59,61,64,65,66,68],"tindex":"72b40728-13b4-11e5-989b-17f790300345","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-1},{"failures":[],"tindex":"72b40729-13b4-11e5-989b-f7a6fd645d46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key2","key5":"key1","hashCode":"hashCode","key3":"key3","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557],"tindex":"72b4072a-13b4-11e5-989b-49e5ae4de562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[558,559,560,561],"tindex":"72b4072b-13b4-11e5-989b-69b2ff15f61a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:168","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[],"tindex":"72b4072c-13b4-11e5-989b-f7660e90d2ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"72b4072d-13b4-11e5-989b-7f47dc708186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[],"tindex":"72b42e3e-13b4-11e5-989b-a5d356bcd64b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":0},{"failures":[562,563,564,565,566,567,568,569,570,571],"tindex":"72b42e3f-13b4-11e5-989b-b7d289baafb3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[572,573,574,575,576,577],"tindex":"72b42e40-13b4-11e5-989b-39280cc04040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"start1","index":"end2","beyond":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,510,593,594,595,596,597,598,599,600,601,602,603,604,605,606,520,607,608,521,514,515,516,517,518,519,524,525,526,527,528,529,530,531,532,533,534,609,610,611,612,613,614,542,615,616,543,544,536,537,538,539,540,541,535,547,548,549,550,551,552,553,554,555,556,557],"tindex":"72b42e41-13b4-11e5-989b-db6554f8477e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[617,618,483,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633],"tindex":"72b45552-13b4-11e5-989b-6fdee9ca10bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"72b45553-13b4-11e5-989b-31e6d2acce4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[],"tindex":"72b45554-13b4-11e5-989b-69b98f94244a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:327","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\")"},"status":-2},{"failures":[],"tindex":"72b45555-13b4-11e5-989b-cfd2e90f60a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"72b45556-13b4-11e5-989b-2b228e5675b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"72b45557-13b4-11e5-989b-f19d496c87ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"right","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"72b45558-13b4-11e5-989b-5597fe44ec07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":-2},{"failures":[31,32,33,34,35,36,40,41,42,43,46,51,53,56,57,58,59,61,64,65,66,634,635,636,637,638,639,640,641,642,643,644,645,646,647],"tindex":"72b45559-13b4-11e5-989b-d16f09e36d82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-1},{"failures":[],"tindex":"72b4555a-13b4-11e5-989b-0726893309a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"72b4555b-13b4-11e5-989b-bfb7c4257e7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:710","type":"CtInvocationImpl","sourcecode":"java.lang.Runnable.run()"},"variableMap":{"r":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"72b47c6c-13b4-11e5-989b-d98b22ccd454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"72b47c6d-13b4-11e5-989b-4f8074d29432","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[],"tindex":"72b47c6e-13b4-11e5-989b-5dc5989f9cde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"72b47c6f-13b4-11e5-989b-3ffb83ec97de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[648],"tindex":"72b47c70-13b4-11e5-989b-3bdafce8a7e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:183","type":"CtAssignmentImpl","sourcecode":"boolean = int <= 0"},"variableMap":{"result":"result","comparison":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:171","type":"CtAssignmentImpl","sourcecode":"boolean = int == 0"},"status":-1},{"failures":[],"tindex":"72b47c71-13b4-11e5-989b-7f187e515d84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"node","previous":"node","left":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[76,77,78,79,80,203,81,82,83,84],"tindex":"72b47c72-13b4-11e5-989b-b5f3ec4db49d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[649],"tindex":"72b47c73-13b4-11e5-989b-b15943a70adc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"72b47c74-13b4-11e5-989b-4bbaa1fd02cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"72b47c75-13b4-11e5-989b-f52cf1ed4bf5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[650,651,652,653,654,655,656,657,658,659,660,661,567,662,663,489,664,629,665,666,667,668,669,670,671,672,673,674,491,675,676,677],"tindex":"72b4a386-13b4-11e5-989b-7584f2b2fb6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[509],"tindex":"72b4a387-13b4-11e5-989b-ad5adf94ed0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:73","type":"CtReturnImpl","sourcecode":"return T"},"status":-1},{"failures":[],"tindex":"72b4a388-13b4-11e5-989b-9bc693581d61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[678,679,680,681,682,683],"tindex":"72b4a389-13b4-11e5-989b-f7e62ee9fce1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"72b4a38a-13b4-11e5-989b-0529d0159b14","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"72b4a38b-13b4-11e5-989b-7f9b030a6e10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[684,685,686,687,688,689,690,691,692,693,694,695],"tindex":"72b4a38c-13b4-11e5-989b-ad3f2bf4cdef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741],"tindex":"72b4a38d-13b4-11e5-989b-278175c885f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"72b4a38e-13b4-11e5-989b-ff2f38728251","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"72b4a38f-13b4-11e5-989b-2be1323ca483","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[742,743],"tindex":"72b4caa0-13b4-11e5-989b-39270b3fa06f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-1},{"failures":[],"tindex":"72b4caa1-13b4-11e5-989b-e5a8f1e9df67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:170","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.toArray(new java.lang.Object[int])"},"status":-2},{"failures":[],"tindex":"72b4caa2-13b4-11e5-989b-31cb38b57799","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[744,745,746,747,748,749,750],"tindex":"72b4caa3-13b4-11e5-989b-0384bfc3c5bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"nextObjectSet","beforeFirst":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"72b4caa4-13b4-11e5-989b-fbc6de814b9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[751,752],"tindex":"72b4caa5-13b4-11e5-989b-9fb1b3135ed7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[228,373],"tindex":"72b4caa6-13b4-11e5-989b-f336955b6228","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1},{"failures":[753,754,755,756,757,758,759,760,761,762],"tindex":"72b4caa7-13b4-11e5-989b-bf3a18cf4a9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"72b4caa8-13b4-11e5-989b-b34cfae718a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[763,764,765],"tindex":"72b4caa9-13b4-11e5-989b-d1972ecee015","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":-1},{"failures":[],"tindex":"72b4f1ba-13b4-11e5-989b-d94911edaf3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[258,766],"tindex":"72b4f1bb-13b4-11e5-989b-5d74798b9b26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[228,373],"tindex":"72b4f1bc-13b4-11e5-989b-6983490eabbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"72b4f1bd-13b4-11e5-989b-b39f86b1a23b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"next","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"72b4f1be-13b4-11e5-989b-5b5f44fc4111","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:128","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null;\n} else if (K == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"72b4f1bf-13b4-11e5-989b-2de6d3828603","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"72b4f1c0-13b4-11e5-989b-3f4db8c1d87c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:71","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated())"},"variableMap":{"this":"set","out":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"72b4f1c1-13b4-11e5-989b-995bb2e7ba5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-2},{"failures":[],"tindex":"72b4f1c2-13b4-11e5-989b-c1b06a85f3ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"end","maxElements":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":0},{"failures":[767,768],"tindex":"72b4f1c3-13b4-11e5-989b-c34b039452ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[258,259,766,260],"tindex":"72b4f1c4-13b4-11e5-989b-b1f6d718107b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[195,196,197,198,199,75,200,76,77,201,78,79,80,202,203,81,204,82,205,206,83,84,85,207,208,209,210,211,212,213,214,86,87,88,89,215,216,217,218,219,220,221,222],"tindex":"72b518d5-13b4-11e5-989b-b5b8f0fc3000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}