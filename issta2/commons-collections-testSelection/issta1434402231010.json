{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":543,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":290,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":633,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":581,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":694,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":251,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":117,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":546,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":696,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":807,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":756,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":740,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":698,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":802,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":306,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":512,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":674,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":45,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":786,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":504,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":149,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":498,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":496,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":140,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":422,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":664,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":182,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":562,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":752,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":400,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":622,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":757,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":689,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":212,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":741,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":479,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":774,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":436,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":242,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":599,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":606,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":544,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":253,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":511,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":639,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":296,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":680,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":288,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":798,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":278,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":493,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":636,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":426,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":418,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":726,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":428,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":725,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":72,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":352,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":665,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":722,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":530,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":559,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":185,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":632,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":376,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":761,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":627,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":154,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":391,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":733,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":199,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":266,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":526,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":550,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":801,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":62,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":359,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":9,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":692,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":433,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":729,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":239,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":95,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":380,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":246,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":18,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":121,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":500,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":487,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":483,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":132,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":82,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":634,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":714,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":583,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":743,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":540,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":318,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":523,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":716,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":542,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":805,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":749,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":408,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":368,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":727,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":671,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":417,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":206,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":398,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":79,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":457,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":181,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":537,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":647,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":112,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":12,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":658,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":367,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":4,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":724,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":461,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":715,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":780,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":207,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":336,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":800,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":386,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":265,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":50,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":298,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":593,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":450,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":742,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":670,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":767,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":395,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":221,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":708,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":607,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":274,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":283,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":76,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":205,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":340,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":183,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":275,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":738,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":463,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":739,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":677,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":624,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":794,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":747,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":796,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":668,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":8,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":316,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":148,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":478,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":481,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":507,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":572,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":571,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":568,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":567,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":570,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":569,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":564,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":566,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":754,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":565,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":259,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":758,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":113,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":243,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":759,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":688,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":271,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":525,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":354,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":343,"org.apache.commons.collections4.SetUtilsTest.testEquals":187,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":482,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":516,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":690,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":804,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":190,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":721,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":810,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":518,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":517,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":237,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":406,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":649,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":61,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":22,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":675,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":446,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":144,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":770,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":687,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":686,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":685,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":192,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":108,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":141,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":611,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":640,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":662,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":412,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":323,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":470,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":785,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":350,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":338,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":188,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":731,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":699,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":765,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":808,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":235,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":407,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":799,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":208,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":419,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":365,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":744,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":213,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":533,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":165,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":582,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":748,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":28,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":234,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":750,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":803,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":245,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":146,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":588,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":762,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":52,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":717,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":547,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":617,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":103,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":609,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":111,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":608,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":782,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":787,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":106,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":553,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":629,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":337,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":549,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":701,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":620,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":472,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":179,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":415,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":488,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":737,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":719,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":401,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":423,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":254,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":331,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":505,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":231,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":371,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":563,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":556,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":555,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":308,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":456,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":700,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":643,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":416,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":812,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":240,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":168,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":127,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":99,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":360,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":133,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":661,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":776,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":764,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":610,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":541,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":109,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":403,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":358,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":783,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":232,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":345,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":372,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":539,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":691,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":334,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":797,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":531,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":120,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":238,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":732,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":115,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":196,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":264,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":679,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":644,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":48,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":321,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":453,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":118,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":381,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":335,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":464,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":554,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":6,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":548,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":78,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":178,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":40,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":711,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":249,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":390,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":347,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":219,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":673,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":471,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":596,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":66,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":720,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":294,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":310,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":23,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":420,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":590,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":131,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":445,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":648,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":227,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":814,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":53,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":328,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":576,"org.apache.commons.collections4.ListUtilsTest.testSubtract":193,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":268,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":373,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":364,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":10,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":753,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":769,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":775,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":333,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":375,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":172,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":437,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":399,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":484,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":374,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":474,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":451,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":280,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":628,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":771,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":597,"org.apache.commons.collections4.functors.NullPredicateTest.ensurePredicateCanBeTypedWithoutWarning":697,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":137,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":574,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":494,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":772,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":80,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":424,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":502,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":561,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":169,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":87,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":813,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":293,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":262,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":594,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":703,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":421,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":602,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":621,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":734,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":229,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":536,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":630,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":695,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":513,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":101,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":225,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":589,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":209,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":448,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":788,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":492,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":811,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":655,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":656,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":657,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":781,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":14,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":175,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":65,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":162,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":326,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":730,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":465,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":299,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":702,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":402,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":434,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":160,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":281,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":305,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":809,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":248,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":495,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":641,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":276,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":454,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":443,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":435,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":161,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":506,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":285,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":197,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":210,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":746,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":485,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":222,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":134,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":138,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":307,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":284,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":392,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":642,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":396,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":143,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":580,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":678,"org.apache.commons.collections4.set.CompositeSetTest.testContains":174,"org.apache.commons.collections4.CollectionUtilsTest.isFull":595,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":763,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":220,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":587,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":119,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":215,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":795,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":81,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":325,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":204,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":198,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":491,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":460,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":309,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":327,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":83,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":515,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":291,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":263,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":501,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":728,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":189,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":42,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":163,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":777,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":779,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":449,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":778,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":631,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":660,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":0,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":790,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":489,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":224,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":524,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":247,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":560,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":710,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":405,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":735,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":669,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":654,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":619,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":652,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":683,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":684,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":789,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":806,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":129,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":21,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":273,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":791,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":128,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":339,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":646,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":34,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":503,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":497,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":615,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":260,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":638,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":57,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":56,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":635,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":578,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":104,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":645,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":605,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":30,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":793,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":604,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":378,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":467,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":258,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":96,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":255,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":768,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":164,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":166,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":431,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":745,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":332,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":704},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"05f7221f-13a2-11e5-950e-d97c3c213eca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"05f72220-13a2-11e5-950e-a5d04a628373","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"05f72221-13a2-11e5-950e-a57092260590","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[42,43,44],"tindex":"05f74932-13a2-11e5-950e-070d828c73e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"05f74933-13a2-11e5-950e-c72c29d1380e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"05f74934-13a2-11e5-950e-e3d465b66b48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":0},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"05f77045-13a2-11e5-950e-6d0414e89138","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:222","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    return false;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"05f77046-13a2-11e5-950e-eff62df66cc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"total","expectedModCount":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":0},{"failures":[],"tindex":"05f77047-13a2-11e5-950e-5da99d992eed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"05f77048-13a2-11e5-950e-99512a300815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:126","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.hasPrevious()"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"05f77049-13a2-11e5-950e-a19f0f859fe7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"05f7704a-13a2-11e5-950e-b3ba26da2a92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:974","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"variableMap":{"label":"key2","out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"05f7975b-13a2-11e5-950e-15901252cfd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"05f7975c-13a2-11e5-950e-0f246c81dfdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"05f7e57d-13a2-11e5-950e-2566e61e6ef1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[76],"tindex":"05f7e57e-13a2-11e5-950e-f709b0cda1fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().lastIndexOf(java.lang.Object)"},"variableMap":{"this":"this","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().indexOf(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"05f7e57f-13a2-11e5-950e-0fc69b356003","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"05f7e580-13a2-11e5-950e-c1d2ae41ed8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"05f7e581-13a2-11e5-950e-b96114193660","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"node","to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"05f7e582-13a2-11e5-950e-0b71363547a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[77,78],"tindex":"05f7e583-13a2-11e5-950e-0df4f5aad21c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[79,80,81],"tindex":"05f80c94-13a2-11e5-950e-0b4510d30745","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"05f80c95-13a2-11e5-950e-958dcc4df911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[82],"tindex":"05f80c96-13a2-11e5-950e-c935ad5f0b1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"05f80c97-13a2-11e5-950e-4bca66737a38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"rval","to":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"05f80c98-13a2-11e5-950e-1d48e133bd71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"05f80c99-13a2-11e5-950e-1f9f00ad992e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[83,84],"tindex":"05f80c9a-13a2-11e5-950e-ffe71da69abd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"05f80c9b-13a2-11e5-950e-a1bc4e0338bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:344","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.addAll(java.util.List<E>)"},"variableMap":{"subSet":"compositeCollection","list":"compositeCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:350","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Collection<E>>.add(java.util.Collection<E>)"},"status":-1},{"failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"05f80c9c-13a2-11e5-950e-410230b6085b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"05f833ad-13a2-11e5-950e-0110fe6dc75d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"05f833ae-13a2-11e5-950e-fdcfcae96a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"status":-2},{"failures":[],"tindex":"05f833af-13a2-11e5-950e-61d004b055b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"05f833b0-13a2-11e5-950e-c13e8d2d81f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[147,148,149,39,41,150,151,152,153,154,155,156,157,158,159],"tindex":"05f833b1-13a2-11e5-950e-6333ce265faa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"05f833b2-13a2-11e5-950e-4367a65b0447","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-3},{"failures":[160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"05f833b3-13a2-11e5-950e-d902b0011343","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-1},{"failures":[],"tindex":"05f833b4-13a2-11e5-950e-ff6c0f3115c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[],"tindex":"05f833b5-13a2-11e5-950e-c7881f74bf9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[172,173,89,90,91,92,93,95,96,97,98,174,175,176,177,178,179,180,181,182],"tindex":"05f85ac6-13a2-11e5-950e-a5c0eab3f69e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"05f85ac7-13a2-11e5-950e-1dcc9fa561a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[],"tindex":"05f85ac8-13a2-11e5-950e-f5768444939f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"05f85ac9-13a2-11e5-950e-13ce2c6c9d3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"05f85aca-13a2-11e5-950e-bf023d2f7819","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"05f85acb-13a2-11e5-950e-91103e6d24d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"05f85acc-13a2-11e5-950e-9392658109a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"05f881dd-13a2-11e5-950e-e7dc21af47bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"05f881de-13a2-11e5-950e-f3684cb25147","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"05f881df-13a2-11e5-950e-9d1ff4dddffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[39,41,153,157,158],"tindex":"05f881e0-13a2-11e5-950e-578e7199fdc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"05f881e1-13a2-11e5-950e-294f8493bdc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"05f8a8f2-13a2-11e5-950e-e5aa84bce114","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"current","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"05f8a8f3-13a2-11e5-950e-5dcee78f7a84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[183,184,185,186],"tindex":"05f8a8f4-13a2-11e5-950e-f1b19c0f1e3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-1},{"failures":[187],"tindex":"05f8a8f5-13a2-11e5-950e-497ea58f6b80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"set1","coll1":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-1},{"failures":[188,189,190,191,192],"tindex":"05f8a8f6-13a2-11e5-950e-63e977d8cfbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"keyPredicate","predicate2":"keyPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-1},{"failures":[193,194,195,196,197,198,199,200,201,202,203,204,205,58,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,59,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,60,242,243,244,61,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,62,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,63,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,64,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,65,326,327,328,329,330,331,332,333,334,335,336,337,66,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,67,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,68,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,69,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,70,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,71,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,72,442,443,444,73,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,74,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,75,491,492,183,184,493,494,185,186],"tindex":"05f8a8f7-13a2-11e5-950e-93a056acb14d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[495,496,497,498,499,500,501,502,503,504,505,506,507,508,27,28,509,29,30,31,510,511,32,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,147,148,149,545,33,34,546,35,36,37,547,548,38,549,39,550,551,40,41,552,553,554,555,556,557,150,151,558,152,559,560,153,154,561,562,155,156,157,158,159],"tindex":"05f8d008-13a2-11e5-950e-cbcf102fdd18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"05f8d009-13a2-11e5-950e-85559ed80ecc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"nextElement","defaultValue":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596],"tindex":"05f8d00a-13a2-11e5-950e-65b79c4ec89e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"index","index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"05f8d00b-13a2-11e5-950e-95e3d7e26692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key1","previous":"entry","hashCode":"hashCode","key3":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"05f8d00c-13a2-11e5-950e-2dd4b7053b6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"05f8d00d-13a2-11e5-950e-618f90b86033","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"05f8d00e-13a2-11e5-950e-6dae0355b4ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-2},{"failures":[597,598,599],"tindex":"05f8d00f-13a2-11e5-950e-991b596aa2ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[600,601,602,603,604,605],"tindex":"05f8f720-13a2-11e5-950e-7d78c1233b95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,8,625,626,627,628,629,630],"tindex":"05f8f721-13a2-11e5-950e-1b46dd92494b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object)"},"variableMap":{"delegateMap":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"05f8f722-13a2-11e5-950e-95ac8affed36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":0},{"failures":[0,631,632,633,634,635,636,637,638,639,640,624,641,642,643,644,645,8,646,647,9,648,649,650,651,652,653,654,655,656,657,625,658,659,626,660,661,662,663,664,665,666,667],"tindex":"05f8f723-13a2-11e5-950e-1b007b9f6b61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[601,602,604,605],"tindex":"05f8f724-13a2-11e5-950e-0571a9d9b3d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"05f8f725-13a2-11e5-950e-19f4efe7a9af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"right","parent":"left","left":"root","h":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695],"tindex":"05f8f726-13a2-11e5-950e-0326c2e76c85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[499,500,501,502,503,27,28,29,30,31,510,511,32],"tindex":"05f8f727-13a2-11e5-950e-7904c8ee85b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[605],"tindex":"05f8f728-13a2-11e5-950e-2777c6e9108c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"05f91e39-13a2-11e5-950e-0d1226d332ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"05f91e3a-13a2-11e5-950e-8b5cd20f0d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"05f91e3b-13a2-11e5-950e-933ede1082de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"05faf2fc-13a2-11e5-950e-a95fafbfa515","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:625","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int += (int) + ((int) > 0 ? 0 : 1);\n} "},"variableMap":{"left":"root","relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-2},{"failures":[],"tindex":"05faf2fd-13a2-11e5-950e-c548ac1be1b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[696],"tindex":"05faf2fe-13a2-11e5-950e-5da611bc4626","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"05fb1a0f-13a2-11e5-950e-4bb08e0b3ac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[697],"tindex":"05fb1a10-13a2-11e5-950e-a5d591a88c25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullPredicate:64","type":"CtReturnImpl","sourcecode":"return T == null"},"status":-1},{"failures":[698,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,699,584,585,586,587,588,589,590,591,593,594],"tindex":"05fb1a11-13a2-11e5-950e-475b92af3991","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[700,701,702,703,644,704,705,706],"tindex":"05fb1a12-13a2-11e5-950e-dde0f4d04ee9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[],"tindex":"05fb1a13-13a2-11e5-950e-07d3b85fba62","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":0},{"failures":[707,708,709,710,711],"tindex":"05fb1a14-13a2-11e5-950e-5b78bba63294","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"05fb1a15-13a2-11e5-950e-3b643353159c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"key","k":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"05fb1a16-13a2-11e5-950e-7fef953dcc09","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":-2},{"failures":[],"tindex":"05fb1a17-13a2-11e5-950e-4de2e8a72d41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[712],"tindex":"05fb1a18-13a2-11e5-950e-7bdc00f23431","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    throw new java.lang.ClassCastException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" must be Comparable\"));\n} "},"variableMap":{"dataElement":"key1","o":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"05fb1a19-13a2-11e5-950e-e31df795e320","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":0},{"failures":[],"tindex":"05fb1a1a-13a2-11e5-950e-8fb190db0552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[713,714,715,716,717,718],"tindex":"05fb1a1b-13a2-11e5-950e-07631251faca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[606,607,608,609,615,616,617,618,624,8,625,626,719],"tindex":"05fb412c-13a2-11e5-950e-55f68b97667e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"05fb412d-13a2-11e5-950e-4b388fc44674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"replacement","currentNode":"replacement","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[720,608,609,721,722,723,724,725,726,612,613,727,728,729,730,731,732,733,617,618,734,735,736,737,738,739,622,623,740,741,742,743,744,745,648,625,626,746,747,748,749,750,751,752,717,718,753,754,755,756,757,719,758,712,759,760,761,762,763,764,765,766,767,768,769,770],"tindex":"05fb412e-13a2-11e5-950e-5da04121b16d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"index","this":"this","index":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[771,134,772,773,774,85,172,173,775,86,776,777,778,779,780,781,89,90,782,91,92,783,93,95,784,785,96,97,98,786,787,788,789,790,106,791,108,109,110,112,113,114,115,116,175,792,793,176,794,795,796,797,177,798,799,178,800,179,801,180,181,182,802,803,804,805,806,807,808,809,810,811,812],"tindex":"05fb412f-13a2-11e5-950e-f10fae9a2d48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[813,814],"tindex":"05fb4130-13a2-11e5-950e-8d2c817e2c51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}