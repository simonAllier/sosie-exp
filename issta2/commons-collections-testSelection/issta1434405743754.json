{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":161,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":99,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":64,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":353,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":430,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":503,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":58,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":518,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":516,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":650,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":391,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":222,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":390,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":619,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":625,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":184,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":429,"org.apache.commons.collections4.CollectionUtilsTest.collect":79,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":592,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":620,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":436,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":227,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":459,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":432,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":494,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":463,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":398,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":325,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":452,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":471,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":381,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":165,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":686,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":447,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":298,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":659,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":626,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":509,"org.apache.commons.collections4.CollectionUtilsTest.transform2":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":445,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":641,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":658,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":308,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":205,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":561,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":439,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":687,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":438,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":206,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":0,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":369,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":267,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":524,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":314,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":293,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":382,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":155,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":18,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":638,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":209,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":365,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":600,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":350,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":623,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":271,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":230,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":424,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":462,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":593,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":513,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":481,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":569,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":11,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":378,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":279,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":562,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":547,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":490,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":269,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":654,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":328,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":608,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":172,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":403,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":107,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":189,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":214,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testReset":675,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":132,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":480,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":653,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":442,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":551,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":556,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":187,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":557,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":294,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":679,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":528,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":588,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":169,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":681,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":176,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":10,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":428,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":555,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":688,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":614,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":630,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":657,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":586,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":397,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":76,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":338,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":304,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":371,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":85,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testReset":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":127,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":476,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":301,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":303,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":531,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":629,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":342,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":69,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":16,"org.apache.commons.collections4.map.LRUMapTest.testClone":90,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":361,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":672,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":627,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":316,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":124,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":415,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":380,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":236,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":549,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":535,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":460,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":568,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":526,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":6,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":148,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":17,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":141,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":94,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":66,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":512,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":299,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":349,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":171,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":548,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":137,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":394,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":489,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":635,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":685,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":444,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":405,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":324,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":347,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":130,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":426,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":664,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":344,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":538,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":667,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":384,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":501,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":553,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":616,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":622,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":178,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":327,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":190,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":488,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":417,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":598,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":246,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":221,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":522,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":72,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":265,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":570,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":543,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":106,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":276,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":597,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":393,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":673,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":257,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":334,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":268,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":631,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":510,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":370,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":499,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":564,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":540,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":123,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":117,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":364,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.map.HashedMapTest.testClone":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":173,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":245,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":242,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":100,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":235,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":288,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":563,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":621,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":558,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":610,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":446,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":485,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":534,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":666,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":109,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":356,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":355,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":319,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":164,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":290,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":131,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":478,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":24,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":495,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":455,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":275,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":450,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":46,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":523,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":602,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":313,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":41,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":680,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":83,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":39,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":402,"org.apache.commons.collections4.CollectionUtilsTest.isFull":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":270,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":125,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":461,"org.apache.commons.collections4.map.LinkedMapTest.testClone":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":223,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":590,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":4,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":219,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":492,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":92,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":363,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":52,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":612,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":475,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":213,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":232,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":525,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":479,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":572,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":456,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":201,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":297,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":647,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":467,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":498,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":628,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":81,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":550,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":677,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":248,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":468,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":474,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":634,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":101,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":152,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":323,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":162,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":530,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":203,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":537,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":196,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":392,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":411,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testIterator":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":409,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":406,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":407,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":408,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":529,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":13,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":252,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":108,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":198,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":199,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":345,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":200,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":536,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":310,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":611,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":228,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":642,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":567,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":506,"org.apache.commons.collections4.map.LRUMapTest.testLRU":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":458,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":644,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":133,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":617,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":332,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":218,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":309,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":89,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":274,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":53,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":580,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":604,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":633,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":193,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":261,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":574,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":374,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":640,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":104,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":163,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":496,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":419,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":154,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":348,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":295,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":579,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":54,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":375,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":507,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":25,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":212,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":591,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":277,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":67,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testIterator":671,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":573,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":505},"transformations":[{"failures":[],"tindex":"33b81c3b-13aa-11e5-8a12-d53de7ede28f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key2","length":"hashCode","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[0,1],"tindex":"33b81c3c-13aa-11e5-8a12-6b2a576bc46f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"33b8434d-13aa-11e5-8a12-45d4bfffd3fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":0},{"failures":[],"tindex":"33b8434e-13aa-11e5-8a12-ab5f1741e9f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[],"tindex":"33b8434f-13aa-11e5-8a12-2d8860ae0def","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"right","left":"right","root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"33b8df90-13aa-11e5-8a12-632b658ef384","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:149","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().tailSet(E)"},"status":-2},{"failures":[],"tindex":"33b8df91-13aa-11e5-8a12-6dcf7274a367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"other","k":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[],"tindex":"33b8df92-13aa-11e5-8a12-7d25fa26ac38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"33b906a3-13aa-11e5-8a12-f78a0b674b62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[32,33,34,35],"tindex":"33b92db4-13aa-11e5-8a12-ed8b76074a1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-1},{"failures":[],"tindex":"33b92db5-13aa-11e5-8a12-f966d489c993","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"33b92db6-13aa-11e5-8a12-7d787ee35622","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[77,78,79],"tindex":"33b92db7-13aa-11e5-8a12-e5e60b535a89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"33b9a2e8-13aa-11e5-8a12-83ac8d84f76c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"33b9a2e9-13aa-11e5-8a12-b92c2ecd207e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"33b9a2ea-13aa-11e5-8a12-fd45d8846b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:251","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K)"},"status":-2},{"failures":[],"tindex":"33b9a2eb-13aa-11e5-8a12-cfe3ed983144","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2172","type":"CtLocalVariableImpl","sourcecode":"java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:213","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.getEntry(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"33b9a2ec-13aa-11e5-8a12-9333698b24cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[],"tindex":"33b9c9fd-13aa-11e5-8a12-756e2aee66d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2090","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:544","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()"},"status":0},{"failures":[80,81,35,82,83,84,85,86,87,88,89,90,91],"tindex":"33b9c9fe-13aa-11e5-8a12-070f0fba014e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"33b9c9ff-13aa-11e5-8a12-37cca10e0744","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"y","this":"this","rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"33b9ca00-13aa-11e5-8a12-05bf55ea032e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"parent","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"33b9ca01-13aa-11e5-8a12-2da1a69ef42a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"33b9f112-13aa-11e5-8a12-3b13c30ba9b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"length","expectedModCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"33b9f113-13aa-11e5-8a12-e3e169e1890c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"33b9f114-13aa-11e5-8a12-b729b1a8d52c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[159,160,161,162,163,164,165,150,152,166,167,168,169,170,171,172,173,174,175],"tindex":"33b9f115-13aa-11e5-8a12-c9e14ee7e3fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"deletedNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[176,177,178,179,180,181,182,183,184,185,186,187],"tindex":"33ba1826-13aa-11e5-8a12-1514fcd943af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"variableMap":{"iterators":"iterators","valueSet":"valueSet","values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"33ba1827-13aa-11e5-8a12-714474eb1c43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[188,189,190,191,192,193],"tindex":"33ba3f38-13aa-11e5-8a12-35b02acee3a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"d","index":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[],"tindex":"33ba3f39-13aa-11e5-8a12-a726c1351476","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"33ba3f3a-13aa-11e5-8a12-29a14d3f78ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"33ba3f3b-13aa-11e5-8a12-ebe80c323e92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:369","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"status":-2},{"failures":[],"tindex":"33ba3f3c-13aa-11e5-8a12-bfb7ca35d5c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"deletedNode","this":"this","y":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"33ba3f3d-13aa-11e5-8a12-c53789fe51b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:198","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"33ba664e-13aa-11e5-8a12-bf85742840a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[194],"tindex":"33ba664f-13aa-11e5-8a12-a16edeb1586b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"33ba6650-13aa-11e5-8a12-8d23ddd2a364","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:664","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (C != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        C.execute(T);\n    }\n} "},"status":-2},{"failures":[195,196,197],"tindex":"33ba6651-13aa-11e5-8a12-779e01f6f734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:186","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<I,O>copy(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"iTransformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:172","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>[])(org.apache.commons.collections4.Transformer<? super I, ? extends O>[].clone()))"},"status":-1},{"failures":[],"tindex":"33ba6652-13aa-11e5-8a12-ff0aa51f6381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"p","right":"h","child":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"33ba6653-13aa-11e5-8a12-d78282bafe04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"33ba6654-13aa-11e5-8a12-79de870f9692","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,80,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,34,35,316,317,318,319,320,321,322,323,324,325,326,82,327,328,329,330,331,332,333,334,335,336,337,85,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,87,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,89,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"tindex":"33ba6655-13aa-11e5-8a12-117cfcd05728","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416],"tindex":"33ba8d66-13aa-11e5-8a12-6b9aad2cb3b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[417],"tindex":"33ba8d67-13aa-11e5-8a12-038d4e85cb69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 2"},"variableMap":{"modCount":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:201","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"33ba8d68-13aa-11e5-8a12-3dece1d3f036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"33ba8d69-13aa-11e5-8a12-c93f2c0c894e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"33ba8d6a-13aa-11e5-8a12-ef55bbf520a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"33ba8d6b-13aa-11e5-8a12-a3b75caaad1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[418,419,420,421,422,159,423,160,161,424,425,426,427,163,164,165,428,144,145,429,146,147,148,430,431,149,432,150,433,434,151,152,435,436,437,438,439,440,166,167,441,168,442,443,169,444,445,170,171,172,173,174,175,446,447,448,449,450,451,452,453,454,455,456,457,458,459,153,154,460,155,156,157,461,462,158,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"tindex":"33bab47c-13aa-11e5-8a12-9925ffcffcd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"leftChild","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"33bab47d-13aa-11e5-8a12-05daaa15fe0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[150,152,175,169,170,171,172,173,174],"tindex":"33bab47e-13aa-11e5-8a12-2d96c4129742","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"33bab47f-13aa-11e5-8a12-e3fd43ce4d85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key1","entryValue":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":0},{"failures":[8,13,14,21],"tindex":"33badb90-13aa-11e5-8a12-15bbc96557ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"33badb91-13aa-11e5-8a12-51b48e62775f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[483,484,485,486,487],"tindex":"33badb92-13aa-11e5-8a12-b3c4a47a4850","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"largestKey","modifications":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"33badb93-13aa-11e5-8a12-77aa9270247c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:358","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> = java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.remove(null)"},"status":-2},{"failures":[],"tindex":"33badb94-13aa-11e5-8a12-eb1da86d8ad9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[291,292,488,293,294,295,296,298,299,80,300,489,308,309,310,311,312,315,34,35,316,318,319,490,320,321,322,323,325,326,82,327,491,329,330,492,331,332,333,334,336,337,85,338,493,346,347,494,348,349,350,351,352,353,87,354,495,362,363,496,364,365,366,367,369,370,89,371,497,498,499,500,501,502,503,504,505,506,91,507,508,378,379,509,380,381,382,383,384,385,386,387,510],"tindex":"33badb95-13aa-11e5-8a12-cd7285023f43","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"33badb96-13aa-11e5-8a12-6951669d333a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"newCapacity","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"33badb97-13aa-11e5-8a12-49ed8bd3da89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"33bb02a8-13aa-11e5-8a12-3d73d8be2563","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[75],"tindex":"33bb02a9-13aa-11e5-8a12-ad6003731863","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1468","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":-1},{"failures":[511],"tindex":"33bb02aa-13aa-11e5-8a12-e359bf5c55d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()"},"status":-1},{"failures":[],"tindex":"33bb02ab-13aa-11e5-8a12-877016ff07cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[512,96,97,98,99,100,101,102,103,106,107,109,110,111,112,113,114,115,116,513,117,119,120,121,122,123,124,125,126,127,128,131,132,134,135,136,137,138,139,140,141,514,142],"tindex":"33bb02ac-13aa-11e5-8a12-2b31a8d80ae0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"33bb29bd-13aa-11e5-8a12-513390545b73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"33bb29be-13aa-11e5-8a12-cbbb9cea0fa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"right","parent":"left","left":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"33bb29bf-13aa-11e5-8a12-f7ddfd7a4bae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,103,546,547,548,549,108,113,114,115,116],"tindex":"33bb29c0-13aa-11e5-8a12-f39389a9cd45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"33bb50d1-13aa-11e5-8a12-754b26d978d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[550,551,552,553,554,555,556,557,34,35],"tindex":"33bb50d2-13aa-11e5-8a12-63d94c8000e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[421,175,170,172,173,174,451],"tindex":"33bb50d3-13aa-11e5-8a12-d7c4ab61e007","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"parent","replacement":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"33bb50d4-13aa-11e5-8a12-83b92d9f429d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-2},{"failures":[389,390,558,396,397,398,399,400,401,402,403,404,405,395,414,415],"tindex":"33bb50d5-13aa-11e5-8a12-95364f59824a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[144,145,146,147,148,431,149,150,151,152,153,154,155,156,157,462,158],"tindex":"33bb50d6-13aa-11e5-8a12-1f8e3d7ec89f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"33bb50d7-13aa-11e5-8a12-7152a4ff6fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"33bb77e8-13aa-11e5-8a12-5b7997842033","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-2},{"failures":[],"tindex":"33bb77e9-13aa-11e5-8a12-a58caefef4b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"key1","k":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590],"tindex":"33bb77ea-13aa-11e5-8a12-69270b9bbf1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"33bb77eb-13aa-11e5-8a12-5b1edb9a44d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[591],"tindex":"33bb77ec-13aa-11e5-8a12-e9cd1340193c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":-1},{"failures":[592,541,542,544,545,593,96,97,98,99,594,100,101,595,102,596,103,597,598,546,547,548,549,599,105,107,108,109,110,111,112,113,114,115,116,600,513,117,601,118,602,603,604,605,606,119,607,120,121,122,123,608,124,125,609,126,610,127,611,612,613,614,615,616,128,617,130,132,133,134,135,136,137,138,139,140,141,618,514,142,619,143],"tindex":"33bb77ed-13aa-11e5-8a12-9584b3ff5808","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"33bb77ee-13aa-11e5-8a12-33f1d4ca086d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","otherOffsetInBits":"size","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[620],"tindex":"33bb77ef-13aa-11e5-8a12-4955e3bcc16e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[602,603,604,621,605,606,119,607,120,121,122,123,608,124,125,609,126,610,127,611,612,613,614,615,616,128,617,130,131,132,133,134,135,136,137,138,139,140,141,618,514,142,619,143],"tindex":"33bb77f0-13aa-11e5-8a12-f1a92f7d0432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"33bb9f01-13aa-11e5-8a12-03e212b550f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-2},{"failures":[622],"tindex":"33bb9f02-13aa-11e5-8a12-27335d3d5d9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"defaultClosure":"closure","size":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[623,624,295,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,157,658,659,660],"tindex":"33bb9f03-13aa-11e5-8a12-75d6f630a075","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[152,168,169,171,150],"tindex":"33bb9f04-13aa-11e5-8a12-d940c497723f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"siblingNode","this":"this","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"33bb9f05-13aa-11e5-8a12-adba567fff5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"33bb9f06-13aa-11e5-8a12-b7faa66f91ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"33bbc617-13aa-11e5-8a12-5d891f27b85e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"status":-2},{"failures":[661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677],"tindex":"33bbc618-13aa-11e5-8a12-c1e0d916b578","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[678,679],"tindex":"33bbc619-13aa-11e5-8a12-6f7074fce95b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[680,681,682,683,684,685,686,687,688,584],"tindex":"33bbc61a-13aa-11e5-8a12-ef393cb56114","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"33bbc61b-13aa-11e5-8a12-1b9b1e11b878","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"33bbc61c-13aa-11e5-8a12-3ddafc312eb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"cmp","proposedCapacity":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"33bbc61d-13aa-11e5-8a12-2d1a2201b86b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}