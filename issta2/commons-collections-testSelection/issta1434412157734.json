{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":218,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":598,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":230,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":271,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":532,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":333,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":558,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":87,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":21,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":297,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":94,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":207,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":299,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":169,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":316,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":328,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":564,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":545,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":26,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":163,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":259,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":126,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":569,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":216,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":263,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":134,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":160,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":221,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":513,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":112,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":367,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":203,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":196,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":371,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":396,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":617,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":561,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":539,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":120,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":265,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":352,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":488,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":475,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":172,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":469,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":453,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":651,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":550,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":166,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":240,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":198,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":357,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":401,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":468,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":521,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":222,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":631,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":65,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":499,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":229,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":261,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":321,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":46,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":404,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":157,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":349,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":560,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":154,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":35,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":125,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":456,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":8,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":190,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":373,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":399,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":489,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":386,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":412,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":152,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":432,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":164,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":322,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":460,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":586,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":337,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":212,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":41,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":416,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":572,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":587,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":151,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":650,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":254,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":490,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":621,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":76,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":457,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":557,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":613,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":68,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":279,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":330,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":636,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":144,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":543,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":359,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":178,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":653,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":238,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":410,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":609,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":162,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":241,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":167,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":181,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":556,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":474,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":36,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":360,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":388,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":361,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":500,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":419,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":574,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":546,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":287,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":430,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":518,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":165,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":533,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":493,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":501,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":582,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":176,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":615,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":255,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":641,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":484,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":392,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":269,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":50,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":58,"org.apache.commons.collections4.ListUtilsTest.testSubtract":342,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":628,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":71,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":414,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":576,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":405,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":243,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":640,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":625,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":350,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":124,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":595,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":77,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":95,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":109,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":24,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":98,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":529,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":525,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":632,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":528,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":369,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":343,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":516,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":153,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":588,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":294,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":135,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":331,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":310,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":155,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":314,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":82,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":379,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":345,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":409,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":69,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":508,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":302,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":619,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":117,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":515,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":311,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":368,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":427,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":303,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":309,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":258,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":86,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":652,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":93,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":150,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":602,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":38,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":208,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":200,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":270,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":89,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":336,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":81,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":219,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":616,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":503,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":239,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":387,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":428,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":286,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":295,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":293,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":450,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":356,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":573,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":195,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":100,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":633,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":486,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":646,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":149,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":383,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":483,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":264,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":189,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":192,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":473,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":329,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":80,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":365,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":464,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":514,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":206,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":581,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":334,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":268,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":591,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":425,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":220,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":283,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":335,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":462,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":228,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":463,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":505,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":363,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":202,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":403,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":16,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":97,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":435,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":372,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":629,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":318,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":589,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":90,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":441,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":253,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":312,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":584,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":649,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":630,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":319,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":121,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":224,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":452,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":593,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":417,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":101,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":159,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":480,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":520,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":523,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":142,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":266,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":315,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":442,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":440,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":362,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":389,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":366,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":317,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":567,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":487,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":177,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":477,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":66,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":433,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":472,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":280,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":358,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":246,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":39,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":549,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":424,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":11,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":590,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":534,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":502,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":522,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":445,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":139,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":394,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":136,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":143,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":599,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":524,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":571,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":511,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterableNull":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":504,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":130,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":267,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":531,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":131,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":138,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":413,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":494,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":376,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":215,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":347,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":375,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":443,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":551,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":624,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":498,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":606,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":300,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":639,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":608,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":168,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":568,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":34,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":548,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":281,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":217,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":180,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":251,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":83,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":594,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":110,"org.apache.commons.collections4.map.LRUMapTest.testLRU":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":113,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":282,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":459,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":512,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":106,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":391,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":566,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":250,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":547,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":234,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":377,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":492,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":559,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":465,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":578,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":601,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":7,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":585,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":158,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":509,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":470,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":40,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":147,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":307,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":565,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":49,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":242,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":306,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":54,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":538,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":626,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":552,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":426,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":540,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":600,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":273},"transformations":[{"failures":[],"tindex":"22c373fd-13b9-11e5-aa6d-1b9ce7037639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-2},{"failures":[],"tindex":"22c39b0e-13b9-11e5-aa6d-29d242f6e8a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-2},{"failures":[],"tindex":"22c39b0f-13b9-11e5-aa6d-d38f5f6eb50f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"22c3c220-13b9-11e5-aa6d-a5e7cacf4a3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":0},{"failures":[],"tindex":"22c3c221-13b9-11e5-aa6d-cb6ecaaca57a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"a":"list","b":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"22c3c222-13b9-11e5-aa6d-73d0817b870d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[0],"tindex":"22c3c223-13b9-11e5-aa6d-3bf611cd2a34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"22c3e934-13b9-11e5-aa6d-b1f40c1ae3fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"22c3e935-13b9-11e5-aa6d-17ba30558cd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"22c3e936-13b9-11e5-aa6d-e9df5498ee00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[1,2,3,4],"tindex":"22c3e937-13b9-11e5-aa6d-2334d0a87d02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"22c3e938-13b9-11e5-aa6d-21339fa2eaee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"22c3e939-13b9-11e5-aa6d-1d3bfe78bb0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":-2},{"failures":[],"tindex":"22c4104a-13b9-11e5-aa6d-8548ebc3bcbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"22c4104b-13b9-11e5-aa6d-2bca5bf43dad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:903","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[5,6,7,8,9],"tindex":"22c4104c-13b9-11e5-aa6d-9b1593753a3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"22c4104d-13b9-11e5-aa6d-79406af506d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:466","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<E> java.util.Iterator<E> = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet().iterator()"},"status":-2},{"failures":[10,11],"tindex":"22c4104e-13b9-11e5-aa6d-51cd6fa54017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"parent","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"22c4375f-13b9-11e5-aa6d-072b330e6ac8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"22c43760-13b9-11e5-aa6d-8d19eda94767","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[],"tindex":"22c43761-13b9-11e5-aa6d-bdf61cee3051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[],"tindex":"22c43762-13b9-11e5-aa6d-cf2f610e4c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"22c43763-13b9-11e5-aa6d-7b3f480d220f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"22c45e74-13b9-11e5-aa6d-cf3fbdbb177e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"22c8a435-13b9-11e5-aa6d-4da6519bea40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:158","type":"CtIfImpl","sourcecode":"if ((T[].int) > (java.lang.Object[].int)) {\n    T[][java.lang.Object[].int] = null;\n} "},"variableMap":{"result":"key5","array":"key5","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[53,54,55],"tindex":"22c8a436-13b9-11e5-aa6d-790415bf64d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:160","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"22c8cb47-13b9-11e5-aa6d-9f5a963887ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"22c8cb48-13b9-11e5-aa6d-e39d60e31508","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-2},{"failures":[],"tindex":"22c8cb49-13b9-11e5-aa6d-bf46828e13f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"22c8cb4a-13b9-11e5-aa6d-6db2e401794b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"existingSet","subSet":"existingSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"status":-2},{"failures":[73,74,75,76],"tindex":"22c8cb4b-13b9-11e5-aa6d-59ae5484ec66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"22c8cb4c-13b9-11e5-aa6d-19b74c3fe9b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"22c8cb4d-13b9-11e5-aa6d-53ec6c0b2b2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[89,90,91,92,93,94],"tindex":"22c8cb4e-13b9-11e5-aa6d-3504a3abc78e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"22c8cb4f-13b9-11e5-aa6d-230f03514f50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[95,96],"tindex":"22c8f160-13b9-11e5-aa6d-2984754044d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":-1},{"failures":[97,98,99,100],"tindex":"22c8f161-13b9-11e5-aa6d-23e87a61f1f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"22c8f162-13b9-11e5-aa6d-352bf4f157ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"status":-2},{"failures":[],"tindex":"22c8f163-13b9-11e5-aa6d-f3b8c401fba5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[101],"tindex":"22c8f164-13b9-11e5-aa6d-334a48fc4fc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"count","proposedCapacity":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:615","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n    if (java.lang.Object == null) {\n        int++;\n    } \n}"},"status":-1},{"failures":[],"tindex":"22c8f165-13b9-11e5-aa6d-23bad884cfcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[],"tindex":"22c8f166-13b9-11e5-aa6d-37db65b4a6d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"22c8f167-13b9-11e5-aa6d-9bae6f0cf856","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}"},"status":-2},{"failures":[],"tindex":"22c91878-13b9-11e5-aa6d-efb4f5bb1e93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"22c91879-13b9-11e5-aa6d-4d847f5f316a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"22c9187a-13b9-11e5-aa6d-2b3879d5ff05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[102,103,43,44,104,45,46,105,47,106,50,51],"tindex":"22ca9f1b-13b9-11e5-aa6d-2b35db5111e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"22ca9f1c-13b9-11e5-aa6d-8bd4b2d4d741","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[107,108,109,110],"tindex":"22ca9f1d-13b9-11e5-aa6d-29cdfbce94b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"22ca9f1e-13b9-11e5-aa6d-092652078a20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"variableMap":{"size":"h","array":"key4","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[111,112,113,114,115,10,116,117,118,119,120,121,122,123,12,13,124,14,15,16,17,125,18,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,11,149,150,151,152,153,154,155,156,157,158,159,160,161,19,20,21,22,23,24,25,162,26,163,164,165,166,167,27,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"tindex":"22ca9f1f-13b9-11e5-aa6d-77d6e5f693d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[189,190,191],"tindex":"22ca9f20-13b9-11e5-aa6d-191cfe5ee11c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":-1},{"failures":[56,192,193,194,195,196,58,197,198,199,200,201,202,203,204,205,206,207,65,208,209,210,211,212,66,213,214,215,216,217,218,219,220,221,222,223],"tindex":"22cac631-13b9-11e5-aa6d-3d56165f8106","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-1},{"failures":[224],"tindex":"22cac632-13b9-11e5-aa6d-2bc93bd5ff4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:274","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,224,255,256,257,258,259,260,107,261,262,263,108,264,265,266,267,268,269,270,109,271,272,273,110,274,275,276,194,195,196,58,197,198,199,200,201,202,203,277,278,279,280,281,282,283,284,285,286,287,288,289,210,211,212,66,213,214,215,216,217,218,219,290],"tindex":"22cac633-13b9-11e5-aa6d-8fab135a17b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"22cac634-13b9-11e5-aa6d-e7fafeccb0c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"22cac635-13b9-11e5-aa6d-812fbe048de1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[291],"tindex":"22cac636-13b9-11e5-aa6d-2747033a0ccb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[292,293,294],"tindex":"22cac637-13b9-11e5-aa6d-edd81f032536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"22cac638-13b9-11e5-aa6d-a5ee17479fc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"22caed49-13b9-11e5-aa6d-b992016c2d7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"22caed4a-13b9-11e5-aa6d-356f392000c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x","replacement":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[295,105],"tindex":"22caed4b-13b9-11e5-aa6d-6fa05dc3b2c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:305","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[293],"tindex":"22caed4c-13b9-11e5-aa6d-3dd666d41b89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[12,13,14,15,16,18,19,20,22,23,24,26,164,167,27],"tindex":"22caed4d-13b9-11e5-aa6d-a9b0dff5dae7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"22caed4e-13b9-11e5-aa6d-c500f386b6fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[296,297,298,299,300,301,302,303,304,305],"tindex":"22caed4f-13b9-11e5-aa6d-c15496efc1e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[306,307,308,309,310,311],"tindex":"22caed50-13b9-11e5-aa6d-17e4120ccb07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"22caed51-13b9-11e5-aa6d-c3e4bb1a27d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"22cb1462-13b9-11e5-aa6d-ad77a3dfc911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"22cb1463-13b9-11e5-aa6d-398f0c6b1433","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-2},{"failures":[],"tindex":"22cb1464-13b9-11e5-aa6d-8f75606717be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[312,313],"tindex":"22cb1465-13b9-11e5-aa6d-bbbcf3ec3039","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[10,11],"tindex":"22cb1466-13b9-11e5-aa6d-293a993c783a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[314,315,316,317],"tindex":"22cb1467-13b9-11e5-aa6d-391f641763cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"added","beforeFirst":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[318,319],"tindex":"22cb1468-13b9-11e5-aa6d-0b8619d00d0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"variableMap":{"closures":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-1},{"failures":[],"tindex":"22cb1469-13b9-11e5-aa6d-dd5caa70a3a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"22cb146a-13b9-11e5-aa6d-5562d2d608c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"hash","modifications":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":0},{"failures":[],"tindex":"22cb3b7b-13b9-11e5-aa6d-a1dd9f6c177b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"key","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-2},{"failures":[320,321,322],"tindex":"22cb3b7c-13b9-11e5-aa6d-7fbc8f9369ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"22cb3b7d-13b9-11e5-aa6d-792d2d387753","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"22cb3b7e-13b9-11e5-aa6d-cd33c1442b44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"size","expectedModCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[323],"tindex":"22cb3b7f-13b9-11e5-aa6d-353ef1f69911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:878","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n    return false;\n} "},"status":-1},{"failures":[324,325],"tindex":"22cb3b80-13b9-11e5-aa6d-fddd0fed1271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"22cb3b81-13b9-11e5-aa6d-d58f7a0d30b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"22cb3b82-13b9-11e5-aa6d-63fdb4bb40f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"22cb6293-13b9-11e5-aa6d-85e91c11fe8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"22cb6294-13b9-11e5-aa6d-6f4837d05fa4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"value","out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"22cb6295-13b9-11e5-aa6d-4f61cfacb4e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"bitIndex","index":"lengthInBits","beyond":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[56,326,192,194,195,196,58,197,198,199,200,201,202,203,327,61,328,329,62,65,330,208,210,211,212,66,213,214,215,216,217,218,219,331,69,332,333,70],"tindex":"22cb6296-13b9-11e5-aa6d-6f2642755f85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"22cb6297-13b9-11e5-aa6d-bfecee7825a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"22cb6298-13b9-11e5-aa6d-2fe8b5888ef7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"obj","k":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"22cb6299-13b9-11e5-aa6d-d7528131b91e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"22cb629a-13b9-11e5-aa6d-392c0265054d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":0},{"failures":[12,13,14,15,16,125,18,19,20,22,23,24,162,26,164,167,27],"tindex":"22cb629b-13b9-11e5-aa6d-913c0c757f0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"total","listSize":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[16,24],"tindex":"22cb89ac-13b9-11e5-aa6d-fd42043e57f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"22cb89ad-13b9-11e5-aa6d-fdd683692a98","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":0},{"failures":[334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,73,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,74,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,75,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,76,649,650,651,652,653],"tindex":"22cb89ae-13b9-11e5-aa6d-c92ac820e9ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"22cb89af-13b9-11e5-aa6d-ffc628185381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"xFormerParent","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"22cb89b0-13b9-11e5-aa6d-eb77c6789a23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:873","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return 0;\n} "},"variableMap":{"removed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}