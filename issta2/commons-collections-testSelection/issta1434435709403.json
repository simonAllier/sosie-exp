{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":250,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":458,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":260,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":364,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":526,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":121,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":158,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":336,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":148,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":190,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":511,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":300,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":445,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":21,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":470,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":464,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":345,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":259,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":222,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":452,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":506,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":296,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":517,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":378,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":115,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":444,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":188,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":138,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":405,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":135,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":143,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":468,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":426,"org.apache.commons.collections4.CollectionUtilsTest.select":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":285,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":390,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":454,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":240,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":408,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":129,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":185,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":233,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":492,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":366,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":241,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":493,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":58,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":27,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":217,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":4,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":334,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":481,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":335,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":404,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":498,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":436,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":29,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":64,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":503,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":194,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":228,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":42,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":139,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":165,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":342,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":1,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":204,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":268,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":156,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":291,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":377,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":186,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":373,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":427,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":81,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":274,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":172,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":536,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":328,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":386,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":142,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":450,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":489,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":319,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":2,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":332,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":52,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":213,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":77,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":114,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":197,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":231,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":321,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":320,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":184,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":333,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":358,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":256,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":466,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":355,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":394,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":532,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":152,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":283,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":528,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":459,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":33,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":516,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":324,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":382,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":205,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":199,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":281,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":449,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":79,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":36,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":299,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":359,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":255,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":28,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":413,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":65,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":252,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":94,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":215,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":276,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":509,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":167,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":47,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":483,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":303,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":116,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":295,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":279,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":380,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":201,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":448,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":227,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":484,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":12,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":482,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":141,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":490,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":288,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":388,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":218,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":365,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":535,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":441,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":375,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":157,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":520,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":128,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":495,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":136,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":76,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":60,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":280,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":267,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":392,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":438,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":518,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":412,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":403,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":510,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":524,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":430,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":440,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":80,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":9,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":78,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":529,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":341,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":224,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":118,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":420,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":421,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":277,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":534,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":406,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":475,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":407,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":521,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":220,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":225,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":383,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":356,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":261,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":160,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":151,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":316,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":133,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":126,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":533,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":453,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":97,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":294,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":248,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":474,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":137,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":269,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":500,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":175,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":318,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":109,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":456,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":145,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":159,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":211,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":435,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":284,"org.apache.commons.collections4.ListUtilsTest.testSelect":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":278,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":238,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":502,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":202,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":134,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":312,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":253,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":313,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":297,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":326,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":525,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":460,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":472,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":8,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":164,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":488,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":476,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":200,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":422,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":424,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":169,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":372,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":189,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":262,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":230,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":0,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":423,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":505,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":504,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":174,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":402,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":162,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":99,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":433,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":13,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":206,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":311,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":254,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":90,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":122,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":53,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":485,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":389,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":486,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":192,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":487,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":95,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":443,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":98,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":302,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":41,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":234,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":530,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":101,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":163,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":384,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":38,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":305,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":418,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":437,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":462,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":154,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":272,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":125,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":478,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":431,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":477,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":479,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":480,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":239,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":347,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":434},"transformations":[{"failures":[],"tindex":"f8a8c71d-13ef-11e5-875e-974e02552d32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"f8a8ee2e-13ef-11e5-875e-87a21d0576f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"f8a8ee2f-13ef-11e5-875e-ed88fd1a9388","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"f8a8ee30-13ef-11e5-875e-3dcf437b8f6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f8a91541-13ef-11e5-875e-23c06a72274d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34],"tindex":"f8a91542-13ef-11e5-875e-37282eec8a30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"maximumCacheSize":"i","cacheSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f8a9d893-13ef-11e5-875e-1b4b9eaaa10c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[],"tindex":"f8aa26b4-13ef-11e5-875e-39448af0c223","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"modified":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[35,36],"tindex":"f8aa26b5-13ef-11e5-875e-55b76283aef8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"f8aa26b6-13ef-11e5-875e-7389d023c03e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1},{"failures":[153,154,155,156,157,158],"tindex":"f8aa26b7-13ef-11e5-875e-154fb094560f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"delta","start":"end2","end":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"f8aa26b8-13ef-11e5-875e-6349bd946154","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f8aa4dc9-13ef-11e5-875e-677256effc3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[159,160],"tindex":"f8aa4dca-13ef-11e5-875e-472dececdaf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f8aa4dcb-13ef-11e5-875e-0f700fb1efc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[],"tindex":"f8aa4dcc-13ef-11e5-875e-f54a57171653","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"f8aa4dcd-13ef-11e5-875e-7bc5ff26839a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"f8aa4dce-13ef-11e5-875e-4d44dea18d32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)"},"variableMap":{"fromIndexInclusive":"totalSize","toIndexExclusive":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[161],"tindex":"f8aa4dcf-13ef-11e5-875e-216d7381fc6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[162,163,164],"tindex":"f8aa4dd0-13ef-11e5-875e-09a3eb6bded5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"f8aa4dd1-13ef-11e5-875e-e38c5034153a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:59","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super E>[])"},"variableMap":{"predicates":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-2},{"failures":[165,166,167,168,169,170,171],"tindex":"f8aa73e2-13ef-11e5-875e-53b95daaff95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"f8aa73e3-13ef-11e5-875e-ebfde06924e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[190],"tindex":"f8aa73e4-13ef-11e5-875e-693daf4c244e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[191,192],"tindex":"f8aa73e5-13ef-11e5-875e-4557a25642c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:232","type":"CtIfImpl","sourcecode":"if (boolean) {\n    super.remove(java.lang.Object);\n} "},"status":-1},{"failures":[193],"tindex":"f8aa73e6-13ef-11e5-875e-8f0fdc42d084","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"f8aa73e7-13ef-11e5-875e-efbff98ec681","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"f8aa73e8-13ef-11e5-875e-b5f063bff9dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:652","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{"data":"data","newEntries":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:632","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":0},{"failures":[214],"tindex":"f8aa73e9-13ef-11e5-875e-8912726d116c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-1},{"failures":[215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"f8aa73ea-13ef-11e5-875e-59d049a1278a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)"},"status":-1},{"failures":[],"tindex":"f8aa9afb-13ef-11e5-875e-a7787d5eab88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f8aa9afc-13ef-11e5-875e-8969ab43fae2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[243,244],"tindex":"f8aa9afd-13ef-11e5-875e-ff064d1696a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[245],"tindex":"f8ab373e-13ef-11e5-875e-d72eea012dd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"f8ab373f-13ef-11e5-875e-8df909ef5eb4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[19],"tindex":"f8ab5e50-13ef-11e5-875e-1bda80bfbd18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"f8ab5e51-13ef-11e5-875e-db804b906d1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"f8ab5e52-13ef-11e5-875e-7524473ea959","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"f8ab5e53-13ef-11e5-875e-6d1b3e532857","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1169","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f8ab5e54-13ef-11e5-875e-1f43659a7324","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[246,247],"tindex":"f8ab5e55-13ef-11e5-875e-45127d3ec193","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f8ad0c06-13ef-11e5-875e-c56297725c56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"currentNode","dataElement":"dataElement","child":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"f8ad0c07-13ef-11e5-875e-ad5497b71245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[248,249],"tindex":"f8ad0c08-13ef-11e5-875e-1d978bae559e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[250,251,252],"tindex":"f8ad0c09-13ef-11e5-875e-138e82a9ba62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"f8ad0c0a-13ef-11e5-875e-27059e802ba3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f8ad0c0b-13ef-11e5-875e-97ee125c7bb4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f8ad331c-13ef-11e5-875e-afc716d60964","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1001","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size())"},"status":-2},{"failures":[],"tindex":"f8ad331d-13ef-11e5-875e-d5b6bf91cc05","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":0},{"failures":[],"tindex":"f8ad331e-13ef-11e5-875e-fb5ea179f190","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"f8ad331f-13ef-11e5-875e-5f90d3476c88","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:489","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:445","type":"CtInvocationImpl","sourcecode":"java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)))"},"status":-2},{"failures":[],"tindex":"f8ad3320-13ef-11e5-875e-d31208b59584","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[],"tindex":"f8ad3321-13ef-11e5-875e-29cd216be8f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1027","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1059","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"f8ad3322-13ef-11e5-875e-4d4d945ee88a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f8ad3323-13ef-11e5-875e-d55a59d58dd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:823","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:337","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonMapIterator<K, V>(this)"},"status":-2},{"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"f8ad3324-13ef-11e5-875e-870a9e7a1310","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f8ad3325-13ef-11e5-875e-0df4d966e184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[301,302,303,304],"tindex":"f8ad5a36-13ef-11e5-875e-bb5a3f512f1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f8ad5a37-13ef-11e5-875e-19d31976fc5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"newNode","to":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f8ad5a38-13ef-11e5-875e-7729cb0a068c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[3,305,4,306,307,308,309,310,311],"tindex":"f8ad5a39-13ef-11e5-875e-83db3fdfdc5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"f8ad5a3a-13ef-11e5-875e-c1cd5f1dc4fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"f8ad5a3b-13ef-11e5-875e-5f108effadea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:586","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","entry":"entry","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:258","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"f8ad5a3c-13ef-11e5-875e-abd50b0d25da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":0},{"failures":[439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"f8ad814d-13ef-11e5-875e-07b7f7718d26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f8ad814e-13ef-11e5-875e-0dde1a379517","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[451],"tindex":"f8ad814f-13ef-11e5-875e-dd2bfceaa291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":-1},{"failures":[452,453,454,455,456,457,458,459,460,461,462,463],"tindex":"f8ad8150-13ef-11e5-875e-e9c3b22af0d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"f8ad8151-13ef-11e5-875e-5538120f8e1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 2"},"variableMap":{"modCount":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:260","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int"},"status":-2},{"failures":[464],"tindex":"f8ad8152-13ef-11e5-875e-e9d87b517727","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll1","list2":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[465,466,467,468,469,470,471,472],"tindex":"f8ad8153-13ef-11e5-875e-9fe10ea1c3b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[],"tindex":"f8ad8154-13ef-11e5-875e-d91ebc23ae4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"f8ad8155-13ef-11e5-875e-4989c48700aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"f8ada866-13ef-11e5-875e-bdd8589ed052","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[],"tindex":"f8ada867-13ef-11e5-875e-35fe7984599d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} "},"variableMap":{"ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"f8ada868-13ef-11e5-875e-430c5b304925","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-2},{"failures":[],"tindex":"f8ada869-13ef-11e5-875e-b3921533edaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"variableMap":{"buf":"buf","hasNext":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"f8ada86a-13ef-11e5-875e-13b5c40deb06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"f8ada86b-13ef-11e5-875e-738c1a9d45df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[473,474,475,476,477,478,479,480,481,482,483,484],"tindex":"f8ada86c-13ef-11e5-875e-a30449966096","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"f8ada86d-13ef-11e5-875e-b973d5906736","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"f8ada86e-13ef-11e5-875e-0545eb80800b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-2},{"failures":[],"tindex":"f8ada86f-13ef-11e5-875e-7b61a2369f6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f8adcf80-13ef-11e5-875e-91faa5c86d3b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"parent","current":"left","tree":"parent","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f8adcf81-13ef-11e5-875e-4d8e7a6cf7e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[485,486,487,488,489,490,491,492,493,494,495,496,497],"tindex":"f8adcf82-13ef-11e5-875e-b37393398d0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)"},"variableMap":{"this":"this","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"f8adcf83-13ef-11e5-875e-81bd1de3e439","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-2},{"failures":[498,373,374,499,500,501,502,503,504,505,506,507,508,375,509,380,510,511,381,512,402,403,513,514,515,516,517,404,518,519,520,521,405,522,410,523,524,411],"tindex":"f8adcf84-13ef-11e5-875e-fd3515f4022e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"f8adcf85-13ef-11e5-875e-ed4cca2d8a7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"f8adcf86-13ef-11e5-875e-cb4f5928ab16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f8adcf87-13ef-11e5-875e-b35f3023f54b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"status":-2},{"failures":[525,526,527,528],"tindex":"f8adcf88-13ef-11e5-875e-b792373233e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:393","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0"},"status":-1},{"failures":[],"tindex":"f8adcf89-13ef-11e5-875e-331d6fbb9f3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[529,530],"tindex":"f8adf69a-13ef-11e5-875e-6d3e0b158bd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:82","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.SortedBag<E>.clear()"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"f8adf69b-13ef-11e5-875e-530a74881ba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[531,532,533],"tindex":"f8adf69c-13ef-11e5-875e-85ac56953433","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[534,535,536,537],"tindex":"f8adf69d-13ef-11e5-875e-3f97fd51bbc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[],"tindex":"f8adf69e-13ef-11e5-875e-7b05b47b5f53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f8adf69f-13ef-11e5-875e-35d40b6cb89a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[153,154,155,156,157,158],"tindex":"f8adf6a0-13ef-11e5-875e-512f5680940d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}