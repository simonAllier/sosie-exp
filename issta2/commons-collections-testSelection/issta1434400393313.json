{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":190,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":154,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":242,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":173,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":234,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":180,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testToString":2,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":121,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":91,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":388,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":468,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":384,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":400,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":153,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":310,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":232,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":58,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":93,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":188,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":148,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":438,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":233,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":94,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":429,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":339,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":289,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":418,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":259,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":214,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":420,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":117,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":395,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":329,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":421,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":460,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":299,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":296,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":335,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":254,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":209,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":172,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":273,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":141,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":61,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":362,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":319,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":220,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":331,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":9,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":169,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":446,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":408,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":68,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":281,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":452,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":295,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":54,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":309,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":368,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":65,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":166,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":341,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":15,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":447,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":318,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":419,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":194,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":414,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":427,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":97,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":350,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":221,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":253,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":103,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":104,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":410,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":361,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":110,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":326,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":332,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":302,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":463,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":322,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":268,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":266,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":387,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":401,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":464,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":461,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":202,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":393,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":432,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":426,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":390,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":356,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":162,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":20,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":21,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":219,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":207,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":116,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":167,"org.apache.commons.collections4.ListUtilsTest.testSubtract":297,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":257,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":305,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":424,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":143,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":291,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":458,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":347,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":372,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":437,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":353,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":168,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":346,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":156,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":439,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":134,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":175,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":57,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":433,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":371,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":53,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":135,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":336,"org.apache.commons.collections4.CollectionUtilsTest.filter":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":69,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":133,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":187,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":48,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":19,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":211,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":101,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":349,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":99,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":422,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":342,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":120,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":212,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":404,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":206,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":338,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":294,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":274,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":416,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":241,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":278,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":269,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":52,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":301,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":286,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":270,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":340,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":375,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":430,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":177,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":389,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":164,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":454,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":373,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":30,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":197,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":150,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":348,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":399,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":171,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":126,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":213,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":199,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":344,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":11,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":124,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":249,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":453,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":306,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testToString":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":12,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":125,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":435,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":17,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":238,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":237,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":182,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":380,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":224,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":280,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":43,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":330,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":396,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":285,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":13,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":445,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":466,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":222,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":440,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":183,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":315,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":377,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":413,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":261,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":406,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":320,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":55,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":459,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":308,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":158,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":434,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":343,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":467,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":96,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":95,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":46,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":165,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":405,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":303,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":436,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":108,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":186,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":185,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":383,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":397,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":360,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":293,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":27,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":159,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":379,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":74,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":75,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":18,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":195,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":109,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":316,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":357,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":226,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":358,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":359,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":10,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":457,"org.apache.commons.collections4.map.LRUMapTest.testLRU":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":333,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":196,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":364,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":144,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":385,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":8,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":178,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":45,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":465,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":276,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":449,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":16,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":290,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":392,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":216,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":151,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":327,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":157,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":129,"org.apache.commons.collections4.map.Flat3MapTest.testToString":106,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":145,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":307,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":256,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":287,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":128,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":130,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":292,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":448,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":217,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":370,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":391},"transformations":[{"failures":[],"tindex":"be9d96df-139d-11e5-9156-1196656ae0f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2],"tindex":"be9dbdf0-139d-11e5-9156-476798839365","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey()).append('=')"},"status":-1},{"failures":[],"tindex":"be9dbdf1-139d-11e5-9156-9f27bd03cdfe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:244","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"be9e3322-139d-11e5-9156-1bbd4ba4c2e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"be9e3323-139d-11e5-9156-213e04e70226","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n} "},"status":-1},{"failures":[],"tindex":"be9e3324-139d-11e5-9156-3b09977f9217","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[43,44,45,46],"tindex":"be9e3325-139d-11e5-9156-8d15a690aa67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"be9e3326-139d-11e5-9156-bd8240e9e49f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"be9e5a37-139d-11e5-9156-3f9fdf5712fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"be9e5a38-139d-11e5-9156-49f764c8c674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"be9e5a39-139d-11e5-9156-578acdd7375e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:605","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(E)"},"status":-2},{"failures":[],"tindex":"be9e5a3a-139d-11e5-9156-f11cf7a6ffa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"be9e5a3b-139d-11e5-9156-ffe652748ba6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[107,108,109,110,111,112,113,114,115],"tindex":"be9e814c-139d-11e5-9156-475bf7530afc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"from","rightChild":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"be9e814d-139d-11e5-9156-7d552806041d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"variableMap":{"siblingNode":"deletedNode","currentNode":"deletedNode","this":"this","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"be9ea85e-139d-11e5-9156-91826f483d91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"be9ea85f-139d-11e5-9156-59d4c689fedd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[116],"tindex":"be9ea860-139d-11e5-9156-91c19dcf37a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[117],"tindex":"be9ea861-139d-11e5-9156-7d81c3cbc2b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:189","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"result":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"status":-1},{"failures":[118,119,120,121,122,123],"tindex":"be9ecf72-139d-11e5-9156-93ffb1612df9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"k","start":"start1","end":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"be9ecf73-139d-11e5-9156-d924a89b8494","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[],"tindex":"be9ecf74-139d-11e5-9156-91c86c6ad8ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"be9ecf75-139d-11e5-9156-19407f81d185","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"be9ecf76-139d-11e5-9156-578f33bc70dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"be9ecf77-139d-11e5-9156-032184784603","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"h","parent":"predecessor","left":"parent","h":"p","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"be9ecf78-139d-11e5-9156-9ffd7bbe8158","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[136],"tindex":"be9ef689-139d-11e5-9156-0f4cb87dd0d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"be9ef68a-139d-11e5-9156-8de74ebc40e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[],"tindex":"be9ef68b-139d-11e5-9156-dd63a6f0e555","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-2},{"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"be9ef68c-139d-11e5-9156-d524d02961d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[154,155,156,157],"tindex":"be9ef68d-139d-11e5-9156-1f2506fdfe70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"be9ef68e-139d-11e5-9156-33dd0c45ca52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[158,159,160,161,162,163,164,165,166,167,168],"tindex":"be9ef68f-139d-11e5-9156-41e43e4f0d3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,7,8,10,11,12,13,14,15,17,20,21,34,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,154,156,245,246,247,248,157,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296],"tindex":"be9ef690-139d-11e5-9156-193e0031082f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"be9f1da1-139d-11e5-9156-3f47b67a13c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"be9f1da2-139d-11e5-9156-3d866c67306c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:511","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"be9f1da3-139d-11e5-9156-5f8656858e8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"child","root":"child","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"be9f1da4-139d-11e5-9156-31b31165725d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"be9f1da5-139d-11e5-9156-453583741b4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"be9f1da6-139d-11e5-9156-af8b2932d02e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[7,8,9,10,11,12,13,15,17,20,21,352],"tindex":"be9f1da7-139d-11e5-9156-a7307693de28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"be9f1da8-139d-11e5-9156-4d5a4093f345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"value","defaultValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"be9f1da9-139d-11e5-9156-5dd02e8a18a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"be9f44ba-139d-11e5-9156-75a788c07277","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[],"tindex":"be9f44bb-139d-11e5-9156-353d737348fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-2},{"failures":[],"tindex":"be9f44bc-139d-11e5-9156-1704f25a9fcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"be9f44bd-139d-11e5-9156-ef3f059878f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"be9f44be-139d-11e5-9156-eb9d4c8b83d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[353,354,355,356],"tindex":"be9f44bf-139d-11e5-9156-7ba70d0cb9ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[118,119,120,121,122,123],"tindex":"be9f44c0-139d-11e5-9156-493894f25e67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"be9f44c1-139d-11e5-9156-4d6f7048d33d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":0},{"failures":[357,358,359,360],"tindex":"be9f44c2-139d-11e5-9156-7becaf10b08b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[],"tindex":"be9f44c3-139d-11e5-9156-7139ca99df69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"variableMap":{"buf":"buf","hasNext":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"be9f6bd4-139d-11e5-9156-7d66836081eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"variableMap":{"inverse":"reverseMap","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"be9f6bd5-139d-11e5-9156-efed2ff98707","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"be9f6bd6-139d-11e5-9156-7fb513652c1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"be9f6bd7-139d-11e5-9156-f117bffe02b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[93,94,95,97,99,100,101,102,103,104,10,17,20],"tindex":"be9f6bd8-139d-11e5-9156-f7f2cc469dc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"be9f6bd9-139d-11e5-9156-41eb6f69b9db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":0},{"failures":[244,154,155,156],"tindex":"be9f6bda-139d-11e5-9156-b352151d142a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"h","index":"h","beyond":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"be9f6bdb-139d-11e5-9156-77439d00d010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"be9f6bdc-139d-11e5-9156-a1ac6ff286ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"be9f6bdd-139d-11e5-9156-f5efa6456db2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"be9f92ee-139d-11e5-9156-6bb126fe1912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[361],"tindex":"be9f92ef-139d-11e5-9156-a92ed2c90291","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"be9f92f0-139d-11e5-9156-534b720244fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"bea1b4d1-139d-11e5-9156-4d500ba6ad91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"bea1b4d2-139d-11e5-9156-3b95b820afb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-2},{"failures":[362,363,364,365,366],"tindex":"bea1b4d3-139d-11e5-9156-f78e85b98bf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[130,131,132,133,134,135],"tindex":"bea1dbe4-139d-11e5-9156-532e4de3b316","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"bea1dbe5-139d-11e5-9156-d31e9bdf1d03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtIfImpl","sourcecode":"if (java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"bea1dbe6-139d-11e5-9156-8d3c6517fa37","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"variableMap":{"siblingNode":"siblingNode","currentNode":"siblingNode","this":"this","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":0},{"failures":[367,368,369,370,371,372],"tindex":"bea1dbe7-139d-11e5-9156-7d60f0f35536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:66","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[373,374,375,376,299,300,377,301,302,378,379,380,304,305,381,382,383,306,384,385,386,308,309,387,310,311,388,389,390,313,391,392,393,314,315,394,316,317,395,396,397,319,398,399,400,401,402,403,320,321,404,322,323,405,406,407,325,326,408,409,410,327,328,411,329,330,412,413,414,332,415,416,417,333,334,418,335,336,419,420,421,338,339,422,423,424,340,425,426,342,343,427,344,345,428,429,430,347,431,432,433],"tindex":"bea1dbe8-139d-11e5-9156-756417e691db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"bea202f9-139d-11e5-9156-63468f7157d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":-2},{"failures":[434],"tindex":"bea202fa-139d-11e5-9156-179172c16142","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-1},{"failures":[435,436],"tindex":"bea202fb-139d-11e5-9156-2b54764ed061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"variableMap":{"result":"result","predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"bea202fc-139d-11e5-9156-b1530da599e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:555","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"bea202fd-139d-11e5-9156-51991880f18d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"bea202fe-139d-11e5-9156-198da9edeeec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:366","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))"},"status":-2},{"failures":[437],"tindex":"bea202ff-139d-11e5-9156-5d9d660103b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1645","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.iterators.PermutationIterator<E>.hasNext()) {\n    java.util.Collection<java.util.List<E>>.add(org.apache.commons.collections4.iterators.PermutationIterator<E>.next());\n}"},"status":-1},{"failures":[],"tindex":"bea20300-139d-11e5-9156-c342f0043e7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[218,216,220,438,157],"tindex":"bea20301-139d-11e5-9156-199808f81c57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"bea20302-139d-11e5-9156-b3f4f313cf19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"bea22a13-139d-11e5-9156-4bbcac98f49e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"bea22a14-139d-11e5-9156-d1cf98ca596b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"deletedNode","currentNode":"replacement","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"bea22a15-139d-11e5-9156-11e1114de6f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"status":-2},{"failures":[],"tindex":"bea22a16-139d-11e5-9156-45f49d67eac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"bea22a17-139d-11e5-9156-438f5b3a5c2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":0},{"failures":[],"tindex":"bea22a18-139d-11e5-9156-6366baec62f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"bea22a19-139d-11e5-9156-09bfbbae4ea9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":0},{"failures":[],"tindex":"bea22a1a-139d-11e5-9156-0bc629c62f96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-2},{"failures":[439,440,441,442,443,444,445,446,447,448,449,450,303,304,305,451,381,382,452,453,454,455,456,457,458,312,313,363,459,391,392,460],"tindex":"bea22a1b-139d-11e5-9156-67796c6e26f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"bea22a1c-139d-11e5-9156-f14bb32b8585","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"bea22a1d-139d-11e5-9156-09e256f37b88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"bea2512e-139d-11e5-9156-659acba11fba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[461,462,463,464,465,466,467,468],"tindex":"bea2512f-139d-11e5-9156-89692f5c3d9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1039","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList<E>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,4,5,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"bea25130-139d-11e5-9156-d59a1bcd5249","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[109,111,113,114,115],"tindex":"bea25131-139d-11e5-9156-3da182121b0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rval","y":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[469,470],"tindex":"bea25132-139d-11e5-9156-bbda5d4c7494","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}