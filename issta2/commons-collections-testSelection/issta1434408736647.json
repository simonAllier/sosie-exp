{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":410,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":273,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":694,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":578,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":665,"org.apache.commons.collections4.CollectionUtilsTest.collect":627,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":666,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":763,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":667,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":135,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":371,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":458,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":303,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":705,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":36,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":185,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":637,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":776,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":599,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":791,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":648,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":790,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":593,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":210,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":225,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":138,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":261,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":717,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":757,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":729,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":689,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":536,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":555,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":576,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":608,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":98,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":564,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":279,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":782,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":541,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":783,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":640,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":653,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":184,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":421,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":276,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":701,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":789,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":427,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":673,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":169,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":170,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":106,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":144,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":625,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":566,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":746,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":186,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":778,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":44,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":591,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":743,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":354,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":621,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":683,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":191,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":290,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":450,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":736,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":496,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":785,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":756,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":179,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":632,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":691,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":406,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":548,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":4,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":400,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":644,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":618,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":402,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":574,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":704,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":774,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":392,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":139,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":716,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":525,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":193,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":145,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":505,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":786,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":374,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":302,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":629,"org.apache.commons.collections4.map.LinkedMapTest.testReset":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":794,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":795,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":229,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":793,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":161,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":799,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":134,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":739,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":238,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":481,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":404,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":741,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":699,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":511,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":482,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":248,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":69,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":417,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":744,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":651,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":258,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":321,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":260,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":709,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":464,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":761,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":112,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":105,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":412,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":281,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":486,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":670,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":462,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":287,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":215,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":216,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":58,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":530,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":679,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":17,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":605,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":714,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":438,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":226,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":558,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":516,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":367,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":506,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":522,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":752,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":620,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":26,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":733,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":731,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":205,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":510,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":614,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":252,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":304,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":780,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":292,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":373,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":725,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":723,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":246,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":157,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":428,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":372,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":280,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":307,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":779,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":456,"org.apache.commons.collections4.map.LRUMapTest.testLRU":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":463,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":181,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":513,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":340,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":529,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":507,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":572,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":759,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":611,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":568,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":122,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":792,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":376,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":160,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":483,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":539,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":769,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":129,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":567,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":695,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":416,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":502,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":540,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":580,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":202,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":764,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":241,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":342,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":654,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":322,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":355,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":27,"org.apache.commons.collections4.functors.EqualPredicateTest.testNullArgumentEqualsNullPredicate":762,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":254,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":545,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":544,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":158,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":67,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":652,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":330,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":668,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":727,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":172,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":142,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":306,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":375,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":675,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":338,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":528,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":362,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":735,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":127,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":348,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":28,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":333,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":212,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":712,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":30,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":466,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":676,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":352,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":659,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":797,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":732,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":798,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":579,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":349,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":542,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":166,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":577,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":631,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":796,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":459,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":703,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":40,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":688,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":755,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":390,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":546,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":361,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":68,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":213,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":291,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":635,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":370,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":224,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":377,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":538,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":436,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":754,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":29,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":368,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":422,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":445,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":697,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":592,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":431,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":411,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":245,"org.apache.commons.collections4.ListUtilsTest.testHashCode":565,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":767,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":461,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":537,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":674,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":247,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":356,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":233,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":335,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":446,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":415,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":219,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":211,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":218,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":318,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":345,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":209,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":738,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":562,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":235,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":610,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":499,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":267,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":393,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":331,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":655,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":682,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":262,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":766,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":414,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":298,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":379,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":137,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":788,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":437,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":425,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":597,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":180,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":515,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":15,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":781,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":600,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":282,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":647,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":760,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":405,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":347,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":518,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":547,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":380,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":283,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":638,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":710,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":337,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":85,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":772,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":444,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":758,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":107,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":60,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":424,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":664,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":617,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":612,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":512,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":751,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":485,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":749,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":549,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":765,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":777,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":305,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":159,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":498,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":413,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":589,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":543,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":734,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":684,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":680,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":363,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":698,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":297,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":663,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":721,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":386,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":730,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":77,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":535,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":551,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":601,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":278,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":488,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":642,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":454,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":784,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":660,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":275,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":487,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":286,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":672,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":324,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":473,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":556,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":14,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":787,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":495,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":79,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":658,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":320,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":570,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":681,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":346,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":770},"transformations":[{"failures":[0,1,2,3,4],"tindex":"2ba12bf6-13b1-11e5-a9f4-cda53b7d217c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-1},{"failures":[],"tindex":"2ba15307-13b1-11e5-a9f4-a1041c1d3d38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":0},{"failures":[],"tindex":"2ba1a128-13b1-11e5-a9f4-0fff490fbd40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[5],"tindex":"2ba1a129-13b1-11e5-a9f4-9991bdf28860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[],"tindex":"2ba1a12a-13b1-11e5-a9f4-b3566010f829","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"2ba1a12b-13b1-11e5-a9f4-7d92be985ea3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"tindex":"2ba1c83c-13b1-11e5-a9f4-b53efae3974a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"2ba1c83d-13b1-11e5-a9f4-a971072affca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"2ba1ef4e-13b1-11e5-a9f4-efba2b45ffc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"2ba1ef4f-13b1-11e5-a9f4-3f6b7ec5c57c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"variableMap":{"entry":"entry","index":"size","after":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"2ba1ef50-13b1-11e5-a9f4-53981e52e1ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"2ba1ef51-13b1-11e5-a9f4-ddb01d132667","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"callCounter","lengthInBits":"callCounter","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"callCounter","otherOffsetInBits":"callCounter","otherLengthInBits":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":0},{"failures":[350,351,352,353,354,355,356],"tindex":"2ba21662-13b1-11e5-a9f4-fdedb45b1bb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2ba21663-13b1-11e5-a9f4-6b604e09d96a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"2ba21664-13b1-11e5-a9f4-57df81da8a2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"2ba21665-13b1-11e5-a9f4-dfb8f3e4d868","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:608","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"2ba21666-13b1-11e5-a9f4-db28fcaa6d66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"2ba21667-13b1-11e5-a9f4-d380b14a43b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"2ba21668-13b1-11e5-a9f4-93cfb76f7a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"2ba23d79-13b1-11e5-a9f4-fb1bcf2bde04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1359","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2ba23d7a-13b1-11e5-a9f4-73d057af05ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"size","start":"size","end":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:274","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"2ba23d7b-13b1-11e5-a9f4-1381f5c2cab5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"2ba23d7c-13b1-11e5-a9f4-bd1466aa7acc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"size","maxElements":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[],"tindex":"2ba4394d-13b1-11e5-a9f4-03953b94ba6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[476,477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"2ba4394e-13b1-11e5-a9f4-e13b8254aa60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"tindex":"2ba4394f-13b1-11e5-a9f4-cf1a7373a4a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[510,511],"tindex":"2ba43950-13b1-11e5-a9f4-272401bbf468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"removed","beforeFirst":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"2ba43951-13b1-11e5-a9f4-07228bd11122","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":0},{"failures":[512,513,514,515],"tindex":"2ba43952-13b1-11e5-a9f4-e1d82484c992","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[516,517,518,519,520],"tindex":"2ba46063-13b1-11e5-a9f4-db7be15b1710","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561],"tindex":"2ba46064-13b1-11e5-a9f4-d7933a47c3a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[562,563,564],"tindex":"2ba46065-13b1-11e5-a9f4-65e6c32adc4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":-1},{"failures":[],"tindex":"2ba46066-13b1-11e5-a9f4-594be6613dfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[565],"tindex":"2ba46067-13b1-11e5-a9f4-ed841b31ced7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"variableMap":{"coll":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"2ba46068-13b1-11e5-a9f4-81020c2a1fb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1069","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[],"tindex":"2ba46069-13b1-11e5-a9f4-6f450629a5b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2ba4606a-13b1-11e5-a9f4-3f22bd6b0717","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"2ba4606b-13b1-11e5-a9f4-05340e471d3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[566,567,568,412,426,427,429,430,432,435,569,450,465,466,467,468,470,473,570],"tindex":"2ba4877c-13b1-11e5-a9f4-21cf0a016014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"value","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[571,572,521,522,523,524,525,526,573,527,528,574,575,576,529,530,531,577,534,535,578,536,537,538,539,579,540,580,541,581,582,542,543,583,584,585,544,545,586,546,532,533,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,547,548,549,550,551,603,604,552,605,606,553,554,607,555,556,557,558,608,559,609,610,611,612,613,560,561,614,615,616,617,618,619,620,621,622,623,624,625,626],"tindex":"2ba4877d-13b1-11e5-a9f4-3df0cf60e6f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rval","y":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[627],"tindex":"2ba4877e-13b1-11e5-a9f4-49dd5bd82bad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[628,629],"tindex":"2ba4877f-13b1-11e5-a9f4-d737e92bd02f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[630,631,632,633,634,635,636,637,638,639],"tindex":"2ba48780-13b1-11e5-a9f4-534ce5c2bf38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"myCount","listSize":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[640],"tindex":"2ba48781-13b1-11e5-a9f4-afdbe1a95535","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey();\n    org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662],"tindex":"2ba48782-13b1-11e5-a9f4-bbf4477150be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends J, ? extends U>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends J, ? extends U>));\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"2ba4ae93-13b1-11e5-a9f4-837d36e7bbbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[23,29,69,83,86,115,129,132,151,157,174,663,241,247,264,287,301,304],"tindex":"2ba4ae94-13b1-11e5-a9f4-f5679323cf9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2ba4ae95-13b1-11e5-a9f4-9ba9a83f4f1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[],"tindex":"2ba4ae96-13b1-11e5-a9f4-432955e7fb2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"xFormerParent","to":"xFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[664,665,666,667,668,669],"tindex":"2ba4ae97-13b1-11e5-a9f4-0955e7653e5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[670],"tindex":"2ba4ae98-13b1-11e5-a9f4-1190468ee155","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-1},{"failures":[671,672,673,674],"tindex":"2ba4ae99-13b1-11e5-a9f4-eb8ab6f3d9d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"end2","index":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"2ba4ae9a-13b1-11e5-a9f4-f3896dbb71d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-2},{"failures":[675,489,490,491,492,493,494,495,496,497],"tindex":"2ba4ae9b-13b1-11e5-a9f4-a756914be7b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"2ba4d5ac-13b1-11e5-a9f4-abb60d108313","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"entry","predecessor":"current","bitIndex":"bitIndex","child":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693],"tindex":"2ba4d5ad-13b1-11e5-a9f4-e378d4aa36d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"i","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2ba4d5ae-13b1-11e5-a9f4-dd6216829305","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"variableMap":{"entry":"entry","size":"hashCode","before":"entry","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"2ba4d5af-13b1-11e5-a9f4-0fae3f54c1b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"2ba4d5b0-13b1-11e5-a9f4-771d1e137064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[694,695,696,670,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738],"tindex":"2ba4d5b1-13b1-11e5-a9f4-7dcefd0ab7d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"2ba4d5b2-13b1-11e5-a9f4-f5873be2ffa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:359","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.isEmpty()) {\n    return \"{}\";\n} "},"status":0},{"failures":[7,8,739,9,740],"tindex":"2ba4d5b3-13b1-11e5-a9f4-314b4e6564e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"total","newCapacity":"total","proposedCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[571,572,521,522,575,576,529,530,531,534,535,578,536,537,538,539,579,540,541,542,543,583,584,585,544,545,586,546,532,533,595,598,741,742,601,602,547,548,552,605,553,554,607,555,556,557,558,608,559,743,610,611,612,613,560,561,614,615,616,617,618,619,620,621,622,623,624,625,626],"tindex":"2ba4fcc4-13b1-11e5-a9f4-3b423c578746","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"2ba4fcc5-13b1-11e5-a9f4-27c927fbb095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"index","start":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[744,745,746,747],"tindex":"2ba4fcc6-13b1-11e5-a9f4-331fb3676418","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[],"tindex":"2ba4fcc7-13b1-11e5-a9f4-ef79344eee83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:904","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":0},{"failures":[],"tindex":"2ba4fcc8-13b1-11e5-a9f4-f5001190dc1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"variableMap":{"this":"this","collectionRetainAll":"collectionRetainAll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":0},{"failures":[14,96,97,98,748,99,100],"tindex":"2ba4fcc9-13b1-11e5-a9f4-ffbab2f48843","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"2ba4fcca-13b1-11e5-a9f4-b1983f263d39","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":0},{"failures":[],"tindex":"2ba4fccb-13b1-11e5-a9f4-b5fd4cee8952","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[749,750,751,752,753,754,755,756,757,758,759,760],"tindex":"2ba523dc-13b1-11e5-a9f4-4bf4807502aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[534,535,536,537,538,579,540,541,542,543,553,554,555,556,557,608,559],"tindex":"2ba523dd-13b1-11e5-a9f4-17065b4edf10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[761],"tindex":"2ba523de-13b1-11e5-a9f4-db1f7cfe32f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"2ba523df-13b1-11e5-a9f4-d9f437a5eae0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[],"tindex":"2ba523e0-13b1-11e5-a9f4-95b23c519185","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[762],"tindex":"2ba523e1-13b1-11e5-a9f4-b3514a4ce764","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:53","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate();\n} "},"status":-1},{"failures":[],"tindex":"2ba523e2-13b1-11e5-a9f4-33aefb4b6de8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2ba523e3-13b1-11e5-a9f4-a3f9c5c0491e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"length","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[],"tindex":"2ba523e4-13b1-11e5-a9f4-33e6fb2bb5c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"rightChild","to":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[370,372,374,378,379,380,381,382,383,384,385,386,389,390,391,393,420],"tindex":"2ba54af5-13b1-11e5-a9f4-c52f3715f32b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"2ba54af6-13b1-11e5-a9f4-dff9e38e8874","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[763,764,742],"tindex":"2ba54af7-13b1-11e5-a9f4-31467c84f352","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[739,19,20,22,23,24,27,29,32,33,42,59,60,62,63,64,67,69,72,73,82,100,97,98,96,765,766,767,768,769,770,771,772,773,774,775,776,105,106,108,109,110,113,115,118,119,128,196,197,199,200,201,204,206,209,210,219,237,238,240,241,242,245,247,250,251,777,778,277,278,280,281,282,285,287,290,291,300,313,315,320,321,324,326,328,329,330,331,333,338,339,342,344,346,347,348],"tindex":"2ba54af8-13b1-11e5-a9f4-95ad91fc723c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2ba54af9-13b1-11e5-a9f4-6f77b528bd6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[541,543,587,590,591,594,595,596,597,598],"tindex":"2ba54afa-13b1-11e5-a9f4-37694c855c60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"siblingNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[779,780,781,782,783,784,785,786,787],"tindex":"2ba54afb-13b1-11e5-a9f4-2d197bfa66ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"2ba5720c-13b1-11e5-a9f4-73bff8a9d9c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[516,517,518,519,520],"tindex":"2ba5720d-13b1-11e5-a9f4-7bcf124ecb74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2ba5720e-13b1-11e5-a9f4-b94ae08e585b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[788],"tindex":"2ba5720f-13b1-11e5-a9f4-cdc0268d0db4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:111","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey();\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"2ba57210-13b1-11e5-a9f4-712b674b5b49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"2ba57211-13b1-11e5-a9f4-19bea6b8f8f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"2ba57212-13b1-11e5-a9f4-f30fa02413b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"2ba57213-13b1-11e5-a9f4-1dc3f8c3a40c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"convertedKey","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[789,790,791,792],"tindex":"2ba57214-13b1-11e5-a9f4-9309a8bdb5be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n    java.util.Iterator<K>.next();\n    java.util.Iterator<K>.remove();\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[793,794,795,796,797,798],"tindex":"2ba59925-13b1-11e5-a9f4-af7534dda39a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"2ba59926-13b1-11e5-a9f4-15c679dfbb01","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[768,771,799,200,206,223],"tindex":"2ba59927-13b1-11e5-a9f4-7d8c0c20ef26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"2ba59928-13b1-11e5-a9f4-11f56ca9be32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}