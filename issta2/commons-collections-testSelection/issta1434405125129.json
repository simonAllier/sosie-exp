{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":765,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":560,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":461,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":405,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":771,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":548,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":472,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":732,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":681,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":531,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":84,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":438,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":52,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":728,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":743,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":769,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":787,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":455,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":722,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":594,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":513,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":400,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":793,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":680,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":786,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":210,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":145,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":635,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":215,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":583,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":51,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":775,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":234,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":277,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":174,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":700,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":168,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":15,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":595,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":94,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":24,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":652,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":390,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":672,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":638,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":790,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":493,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":311,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":572,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":604,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":328,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":329,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":327,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":242,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":753,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":418,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":783,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":389,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":189,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":119,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":151,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":486,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":121,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":602,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":648,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":487,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":279,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":593,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":359,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":288,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":623,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":34,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":409,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":525,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":115,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":130,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":270,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":636,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":733,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":457,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":413,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":505,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":425,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":644,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":642,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":762,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":746,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":205,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":27,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":83,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":58,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":229,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":300,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":299,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":79,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":153,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":154,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":155,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":678,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":477,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":8,"org.apache.commons.collections4.CollectionUtilsTest.exists":132,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":344,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":601,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":95,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":358,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":484,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":203,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":624,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":450,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":679,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":759,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":336,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":686,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":611,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":260,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":261,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":356,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":152,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":259,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":324,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testRemove":335,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":675,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":231,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":641,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":357,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":370,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":556,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":304,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":503,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":78,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":661,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":481,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":451,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":422,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":625,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":524,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":564,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":167,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":307,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":308,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":495,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":16,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":375,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":561,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":193,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":408,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":75,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":555,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":540,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":535,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":196,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":671,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":391,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":290,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":768,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":537,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":519,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":734,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":185,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":488,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":305,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":748,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":498,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":293,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":543,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":282,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":752,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":110,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":683,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":662,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":643,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":693,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":742,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":741,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":740,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":90,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":628,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":750,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":294,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":102,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":146,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":436,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":462,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":175,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":159,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":192,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":529,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":439,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":715,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":443,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":489,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":490,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":491,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":653,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":691,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":467,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":449,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":591,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":767,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":339,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":272,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":136,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":500,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":682,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":620,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":253,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":482,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":406,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":772,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":224,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":142,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":658,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":73,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":592,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":379,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":717,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":685,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":788,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":144,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":605,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":38,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":777,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":315,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":773,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":321,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":207,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":539,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":542,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":407,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":59,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":346,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":183,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":480,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":238,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":412,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":729,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":444,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":645,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":387,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":779,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":106,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":695,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":206,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":706,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":126,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":318,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":763,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":551,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":713,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":314,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":312,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":670,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":754,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":429,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":393,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":162,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":122,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":577,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":392,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":478,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":778,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":674,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":149,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":598,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":454,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":770,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":532,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":501,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":607,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":622,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":280,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":626,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":647,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":553,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":528,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":581,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":782,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":791,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":367,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":348,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":423,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":198,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":232,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":570,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":603,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":212,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":634,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":637,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":523,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":704,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":549,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":545,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":496,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":702,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":703,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":125,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":363,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":254,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":515,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":579,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":269,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":421,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":184,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":696,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":117,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":68,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":569,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":541,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":521,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":698,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":516,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":785,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":574,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":630,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":471,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":369,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":666,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":303,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":566,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":758,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":522,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":563,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":211,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":292,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":291,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":565,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":209,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":586,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":736,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":420,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":718,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":42,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":221,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":494,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":694,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":458,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":199,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":580,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":237,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":246,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":633,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":383,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":448,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":692,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":721,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":194,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":730,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":573,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":345,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":316,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":157,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":385,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":697,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":751,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":465,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":599,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":89,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":227,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":536,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":156,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":271,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":509,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":668,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":134,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":166,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":273,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":552,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":447,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":615,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":133,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":613,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":745,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":86,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":738,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":33,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":629,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":609,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":794,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":725,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":138,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":707,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":709,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":708,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":188,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":200,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":257,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":416,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":140,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":684,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":267,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":562,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":342,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":784,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":320,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":512,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":757,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":631,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":284,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":239,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":101,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":689,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":719,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":792,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":776,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":120,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":243,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":109,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":18,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":557,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":727,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":724,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":244,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":191,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":646,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":143,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":216,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":705,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":361,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":13,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":665,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":576,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":430,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":388,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":297,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":298,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":404,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":204,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":182,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":466,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":217,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":502,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":340,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":640,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":225},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"c2fd6d21-13a8-11e5-8124-21af3c29799d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[],"tindex":"c2fd6d22-13a8-11e5-8124-3fc4005c5e0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"c2fd9433-13a8-11e5-8124-db748af0f344","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"c2fd9434-13a8-11e5-8124-639590ab5c26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"c2fd9435-13a8-11e5-8124-aff28016f4f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"c2fd9436-13a8-11e5-8124-5906cc2bdbd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-1},{"failures":[],"tindex":"c2fdbb47-13a8-11e5-8124-33b06a71d6b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c2fdbb48-13a8-11e5-8124-61de09015787","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[24,26,46,47,48,49,50],"tindex":"c2fdbb49-13a8-11e5-8124-5913cb2b258a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[51,52],"tindex":"c2fde25a-13a8-11e5-8124-0931830677a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"c2fde25b-13a8-11e5-8124-f1ce2de30ea9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":0},{"failures":[53,54,50,46,47,48,49,24,26],"tindex":"c2fde25c-13a8-11e5-8124-a36c610a5c82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[55,56,57,58,59],"tindex":"c2fde25d-13a8-11e5-8124-d33630a9b095","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:128","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[60],"tindex":"c2fde25e-13a8-11e5-8124-51c0dcf1ea9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[61,62,63,64,65,66],"tindex":"c2fde25f-13a8-11e5-8124-0160f27695bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"end2","delta":"i","end2":"i","this":"this","i":"i","end1":"k","k":"k","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[67,68,69,70],"tindex":"c2fe0970-13a8-11e5-8124-edf8a0c3549a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"c2fe0971-13a8-11e5-8124-e755e7ab5672","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"c2fe0972-13a8-11e5-8124-fd1ecf3d358b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"object","entryValue":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":0},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"c2fe0973-13a8-11e5-8124-a1cc918b08ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[46,117,47,48,49,24,26,118,50,119],"tindex":"c2fe3084-13a8-11e5-8124-3311de085b41","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"yFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"c2fe5795-13a8-11e5-8124-11da7030fba1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"c2fe5796-13a8-11e5-8124-07df3ec100aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"index","start":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"c2fe5797-13a8-11e5-8124-07c251253a42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[132],"tindex":"c2fe5798-13a8-11e5-8124-af452832db28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[133,134,76],"tindex":"c2fe5799-13a8-11e5-8124-e7124ea9bcfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"c2fe579a-13a8-11e5-8124-25bdca9eaaee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[135,136,137],"tindex":"c2fe7eab-13a8-11e5-8124-3773523dbd51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"o","this":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:160","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c2fe7eac-13a8-11e5-8124-576615ace811","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[138,139,140],"tindex":"c2fe7ead-13a8-11e5-8124-0d3a8b720a93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[141,142,143,144,145,146,147,148,122,149,150],"tindex":"c2fe7eae-13a8-11e5-8124-1513df73b220","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"c2fe7eaf-13a8-11e5-8124-7556c9f52672","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[55,56,151,57,152,58,59],"tindex":"c2fe7eb0-13a8-11e5-8124-cf6a3e6760bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"c2fe7eb1-13a8-11e5-8124-9558114c6ab6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"c2fea5c2-13a8-11e5-8124-1bec4993f9c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"variableMap":{"total":"relativePosition","keys":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"c2fea5c3-13a8-11e5-8124-813e665ae24f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"value","proposedCapacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[153,154,155,156,157,158],"tindex":"c2fea5c4-13a8-11e5-8124-dd4e4b210f2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"c2fea5c5-13a8-11e5-8124-572e8d8501a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[253,254,255,177],"tindex":"c2fea5c6-13a8-11e5-8124-37c1a0151534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[256,257,258,259,260,261,262,263,264,196,197],"tindex":"c2fea5c7-13a8-11e5-8124-c35d430b99f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[265,266,267,268,68,269,270,69,271,272,273],"tindex":"c2fea5c8-13a8-11e5-8124-e796ac53d2ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"c2fea5c9-13a8-11e5-8124-6d4929558fd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[165,166,167,168,169,170,171,172,173,274,275,276,277,176,178,179,180,181,182,183,184,185,186,278,279,280,281,282,190,191,192,193,194,195,198,283,284,285,286,201,287,288,202,203,204,205,206,207,208,209,210,289,290,291,292,214,293,52,294,295,220,221,222,223,224,296,225,226,227,228,297,298,299,300,301,302,303,230,231,232,233,234,304,235,236,237,238,305,306,307,308,309,241,242,243,244,245,246,247,248,249,310,311,312,313,252,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"tindex":"c2feccda-13a8-11e5-8124-175694c34912","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"c2feccdb-13a8-11e5-8124-0b269bbd52bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":0},{"failures":[330,331],"tindex":"c2feccdc-13a8-11e5-8124-cdde81e4f149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[332,333,334,335,336,337],"tindex":"c2feccdd-13a8-11e5-8124-158ac9b93b54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-1},{"failures":[],"tindex":"c2feccde-13a8-11e5-8124-47adc64056e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"c2feccdf-13a8-11e5-8124-f1446e6d875e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[338,339],"tindex":"c2fef3f0-13a8-11e5-8124-2d0fd6a4beac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"c2fef3f1-13a8-11e5-8124-d3e7560dd302","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"variableMap":{"buf":"buf","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":0},{"failures":[],"tindex":"c2fef3f2-13a8-11e5-8124-dbd265123bd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[27,340,30,36,44,45],"tindex":"c2fef3f3-13a8-11e5-8124-6f59fce1c910","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"tindex":"c2fef3f4-13a8-11e5-8124-29289c5890bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,135,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,137,574,575,576,577,578,579,580],"tindex":"c2fef3f5-13a8-11e5-8124-715f00874b6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"c2fef3f6-13a8-11e5-8124-7f336f08f73d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":0},{"failures":[],"tindex":"c2ff1b07-13a8-11e5-8124-6f2a14d38bfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[],"tindex":"c2ff1b08-13a8-11e5-8124-4d24797ee698","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-2},{"failures":[],"tindex":"c2ff1b09-13a8-11e5-8124-819fdc71d44e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1218","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map<?, ?>))"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[253,177,254],"tindex":"c2ff421a-13a8-11e5-8124-61bdbf3d8f00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"c2ff421b-13a8-11e5-8124-4b1b2912c6c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[81,82,84,85,86,89,91,94,95,581,582,583,584,585,586,587,588,589,202,203,204,205,206,207,208,209,210,220,221,222,223,224,225,226,227,228,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],"tindex":"c2ff421c-13a8-11e5-8124-d9b694da125e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"c2ff421d-13a8-11e5-8124-894f1c0536ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:129","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"variableMap":{"chars":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[133],"tindex":"c2ff421e-13a8-11e5-8124-ada8b7bf8448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:859","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return this;\n} "},"status":-1},{"failures":[],"tindex":"c2ff421f-13a8-11e5-8124-c7b774697d21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1716","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object)"},"variableMap":{"key":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"c2ff4220-13a8-11e5-8124-db628e3b94e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"c2ff4221-13a8-11e5-8124-4bebbba246b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"c2ff6932-13a8-11e5-8124-f18f5ffceaef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[612],"tindex":"c2ff6933-13a8-11e5-8124-7b2d5f7c5381","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[24,26,118,50,119,46,117,47,48,49],"tindex":"c2ff6934-13a8-11e5-8124-ddda8ce48bf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"siblingNode","this":"this","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[265,268,613,614,615,616,617,618],"tindex":"c2ff6935-13a8-11e5-8124-5de5403e3a54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[619,620,621],"tindex":"c2ff9046-13a8-11e5-8124-09ee6eee0e9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"c2ff9047-13a8-11e5-8124-33b0c5c33a17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[],"tindex":"c2ff9048-13a8-11e5-8124-29636e51afe3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-2},{"failures":[622],"tindex":"c2ff9049-13a8-11e5-8124-530025d3571a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656],"tindex":"c2ff904a-13a8-11e5-8124-79ab4ad5370c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[657],"tindex":"c2ff904b-13a8-11e5-8124-abccffcb55cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:149","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"c2ff904c-13a8-11e5-8124-750a219ff640","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":0},{"failures":[545,658,579],"tindex":"c2ff904d-13a8-11e5-8124-3735ec8a5ea1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"c2ff904e-13a8-11e5-8124-d1cc0cfcae3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"status":-2},{"failures":[338,659,339,660],"tindex":"c2ffb75f-13a8-11e5-8124-339174a79d48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[333,661,662],"tindex":"c2ffb760-13a8-11e5-8124-8f1762460a29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"c2ffb761-13a8-11e5-8124-134c832b5675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"node","to":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,120,146,147,121,686,148,687,122,149,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,123,124,712,125,126,713,127,128,714,715,129,130,131,716,717,718,719],"tindex":"c2ffb762-13a8-11e5-8124-91ab9221795e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"c2ffb763-13a8-11e5-8124-071c090f2f4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[720],"tindex":"c2ffb764-13a8-11e5-8124-03924058054e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"c2ffb765-13a8-11e5-8124-557ff722ba1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[60],"tindex":"c2ffde76-13a8-11e5-8124-ed05246eba73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[],"tindex":"c2ffde77-13a8-11e5-8124-d1ad6ecd82ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"c2ffde78-13a8-11e5-8124-5de5d630428d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"c2ffde79-13a8-11e5-8124-b34038431747","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":0},{"failures":[721,722,723,659,724,338,725,726,727,728,729,730,731,732,10,11,733,12,13,14,734,15,16,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,660,756,339,757,758,759,760,761,762,763,764,765,766,767,768,769,770,17,18,771,19,20,21,772,22,23,773,24,774,775,25,26,776,777,778,779,780,781,53,54,782,118,783,784,50,119,785,786,46,117,47,48,49],"tindex":"c2ffde7a-13a8-11e5-8124-21e9c71cf5e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"c2ffde7b-13a8-11e5-8124-d9bb57c533e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"c2ffde7c-13a8-11e5-8124-f7d4c7084248","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[69],"tindex":"c2ffde7d-13a8-11e5-8124-8f9e97172ec1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[787,788,789,790,791,792,793,794],"tindex":"c2ffde7e-13a8-11e5-8124-0fddbd2f2e7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[],"tindex":"c2ffde7f-13a8-11e5-8124-6f021ebaeed1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[667],"tindex":"c3000590-13a8-11e5-8124-0f23dd8d24f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"offset","currentIndex":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"c3000591-13a8-11e5-8124-bb3c06a4b8f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:207","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[705,710,123,124,712,125,126,713,127,715,130,131],"tindex":"c3000592-13a8-11e5-8124-fdf9f6ad0899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c3000593-13a8-11e5-8124-5b2e2260640d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"c3000594-13a8-11e5-8124-efc144baaff1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}