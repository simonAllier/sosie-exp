{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":84,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":761,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":730,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":571,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":572,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":744,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":662,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":746,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":411,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":324,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":775,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":622,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":563,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":114,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":39,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":282,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":291,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":312,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":618,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":633,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":464,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":612,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":609,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":751,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":752,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":680,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":73,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":494,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":328,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":257,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":153,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":370,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":146,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":598,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":591,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":582,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":177,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":459,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":594,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":461,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":77,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":402,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":749,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":449,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":93,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":444,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":445,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":186,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":643,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":223,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":677,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":462,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":8,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":29,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":244,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":765,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":298,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":541,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":313,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":783,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":192,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":326,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":479,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":684,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":665,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":13,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":126,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":467,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":280,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":327,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":556,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":711,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":284,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":687,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":623,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":71,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":614,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":10,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":634,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":655,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":317,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":1,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":173,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":340,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":339,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":562,"org.apache.commons.collections4.map.LRUMapTest.testReset":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":710,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":742,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":247,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":650,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":472,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":421,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":784,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":61,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":38,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":319,"org.apache.commons.collections4.map.LinkedMapTest.testReset":460,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":226,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":329,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":224,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":436,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":344,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":410,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":770,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":150,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":143,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":343,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":218,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":693,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":62,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":490,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":515,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":246,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":91,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":254,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":255,"org.apache.commons.collections4.map.HashedMapTest.testClone":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":256,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":535,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":595,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":760,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":87,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":233,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":315,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":732,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":12,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":485,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":484,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":231,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":486,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":357,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":659,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":281,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":380,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":621,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":534,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":530,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":529,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":532,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":531,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":526,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":528,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":495,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":527,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":466,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":624,"org.apache.commons.collections4.map.LinkedMapTest.testClone":465,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":273,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":648,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":274,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":754,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":638,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":365,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":320,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":305,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":575,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":116,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":724,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":285,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":629,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":478,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":419,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":632,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":248,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":321,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":689,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":519,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":686,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":782,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":245,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":433,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":376,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":213,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":581,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":20,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":112,"org.apache.commons.collections4.map.LRUMapTest.testLRU":318,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":714,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":554,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":758,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":51,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":509,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":776,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":105,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":335,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":658,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":358,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":786,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":333,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":646,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":578,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":590,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":172,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":399,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":501,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":502,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":271,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":342,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":663,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":86,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":717,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":372,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":549,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":72,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":781,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":297,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":602,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":664,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":476,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":431,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":576,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":133,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":207,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":715,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":149,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":250,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":670,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":698,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":434,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":347,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":220,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":24,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":773,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":447,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":417,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":198,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":766,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":205,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":551,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":427,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":654,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":729,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":772,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":743,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":404,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":211,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":286,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":204,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":382,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":322,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":482,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":787,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":544,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":740,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":132,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":696,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":727,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":669,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":228,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":390,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":47,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":601,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":520,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":725,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":603,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":441,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":440,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":661,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":115,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":734,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":296,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":295,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":709,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":673,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.map.LRUMapTest.testClone":310,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":688,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":492,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":361,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":27,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":719,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":301,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":681,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":712,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":493,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":518,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":122,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":764,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":388,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":762,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":763,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":759,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":550,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":272,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":101,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":771,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":573,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":708,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":157,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":360,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":778,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":543,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":707,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":120,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":608,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":679,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":96,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":85,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":147,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":599,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":148,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":238,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":504,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":649,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":121,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":607,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":721,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":80,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":202,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":481,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":488,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":510,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":90,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":487,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":300,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":240,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":394,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":203,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":691,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":258,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":35,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":102,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":560,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":270,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":545,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":455,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":331,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":279,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":364,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":777,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":610,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":22,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":685,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":70,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":314,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":210,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":606,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":779,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":641,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":613,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":739,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":506,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":171,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":683,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":127,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":109,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":716,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":728,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":756,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":391,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":723,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":583,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":745,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":579,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":580,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":628,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":569,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":570,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testDecorateFactory":537,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":705,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":703,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":615,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":767,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":769,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":692,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":768,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":7,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":435,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":780,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":678,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":539,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":747,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":303,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":58,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":32,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":234,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":184,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":559,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":667,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":690,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":540,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":277,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":611,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":748,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":110,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":11,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":564,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":565,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":139,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":160,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":98,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":338,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":278,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":336,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":337,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":555,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":567,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":155,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":217,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":169},"transformations":[{"failures":[],"tindex":"1422a5fd-13a3-11e5-9950-316340f5d132","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"1428996e-13a3-11e5-9950-8b8ec1b03bcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[5],"tindex":"1428996f-13a3-11e5-9950-c780ed92dbc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:255","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"14289970-13a3-11e5-9950-550a8706bf0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[13,49,50,51,52,53,54],"tindex":"14289971-13a3-11e5-9950-91ab0bd2c642","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"threshold","lengthInBits":"threshold","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[],"tindex":"1428c082-13a3-11e5-9950-574627f856fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:259","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"1428c083-13a3-11e5-9950-fbf76c8eb668","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":0},{"failures":[55,56],"tindex":"1428c084-13a3-11e5-9950-718754d71256","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"1428c085-13a3-11e5-9950-6972262fc25d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"endMarkerAllowed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[7,8,17,18,20,21,22,25,12,13,27,36,142,143,144,145,146,147,148,49,149,150,151,152,153,154,155,156,157,50,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,51,181,182,183,184,185,186,187,188,189,190,191,52,192,193,194,195,196,197,198,199,200,54,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"1428e796-13a3-11e5-9950-5973009fa4ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"1429f907-13a3-11e5-9950-9527e29da8b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"1429f908-13a3-11e5-9950-7d2b6200d249","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"right","left":"child","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[221,222],"tindex":"1429f909-13a3-11e5-9950-478497f1e20b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"142a201a-13a3-11e5-9950-35a314a4e6f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"h","h":"p","predecessor":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[6,223,224,225,226,227,228,229,12,13],"tindex":"142a201b-13a3-11e5-9950-49445f1e91a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"142a201c-13a3-11e5-9950-d30c866c63c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"142bf4dd-13a3-11e5-9950-0f86f08566e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:320","type":"CtInvocationImpl","sourcecode":"java.util.Collection<E>.clear()"},"status":0},{"failures":[],"tindex":"142bf4de-13a3-11e5-9950-970cff8baf56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"142bf4df-13a3-11e5-9950-a74b179b9416","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[230,231],"tindex":"142bf4e0-13a3-11e5-9950-c95389477455","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-1},{"failures":[],"tindex":"142c1bf1-13a3-11e5-9950-01a1878897ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"child","parent":"node","left":"node","root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"142c1bf2-13a3-11e5-9950-250d4bbf9a16","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"143b8543-13a3-11e5-9950-1503bfb84507","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[6,7,8,9,10,11,16,17,18,19,20,21,22,23,24,25,26,12,15,14,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,232,233,234,235,236,237,238,239,240,241,142,143,242,144,145,146,243,244,147,245,148,246,247,49,149,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,150,272,273,274,275,276,277,278,279,280,281,282,151,152,283,153,154,155,284,285,156,286,157,287,288,50,158,289,290,291,292,293,294,295,296,159,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,160,163,161,162,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,164,165,327,166,167,168,328,329,169,330,170,331,332,171,172,333,334,335,336,337,338,339,340,173,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,174,175,358,176,177,178,359,360,179,361,180,362,363,51,181,364,365,366,367,368,369,370,371,182,372,373,374,375,376,377,378,379,380,381,382,383,183,384,385,184,386,387,388,389,390,185,186,391,187,188,189,392,393,190,394,191,395,396,52,192,397,398,399,400,401,402,403,404,193,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,53,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,194,195,475,196,197,198,476,477,199,478,200,479,480,54,201,481,482,483,484,485,486,487,488,202,489,490,491,492,493,494,495,496,497,498,499,500,501,203,502,204,503,504,505,506,205,206,507,508,207,509,208,510,209,210,211,212,511,213,512,513,514,515,214,215,516,517,216,518,217,519,218,219,220,520,521],"tindex":"143bac54-13a3-11e5-9950-030591875217","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"size","expectedModCount":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"143bac55-13a3-11e5-9950-2385d24faf9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"143bac56-13a3-11e5-9950-49a6a38c7f7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-2},{"failures":[],"tindex":"143bac57-13a3-11e5-9950-57295ff0da11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"143bd368-13a3-11e5-9950-339b5150aa30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"previous","entry":"entry","previous":"previous","loop":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"143bd369-13a3-11e5-9950-f9b0f46d9844","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:380","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"143bd36a-13a3-11e5-9950-575224c55207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":0},{"failures":[],"tindex":"143bd36b-13a3-11e5-9950-ed4771dccd6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[522,523,524,525],"tindex":"143bd36c-13a3-11e5-9950-510689aee154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"143bd36d-13a3-11e5-9950-972f05539c03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:105","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"143bd36e-13a3-11e5-9950-135630ec9c06","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:196","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":0},{"failures":[],"tindex":"143bd36f-13a3-11e5-9950-c1c6004d4811","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[],"tindex":"143bfa80-13a3-11e5-9950-f34a6bc81a1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"143bfa81-13a3-11e5-9950-1dae28b5218a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":0},{"failures":[271,150,272],"tindex":"143bfa82-13a3-11e5-9950-216b655703d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"key5","this":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[526,527,528,529,530,531,532,533,534,535,536],"tindex":"143bfa83-13a3-11e5-9950-3f2e929f32d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"143bfa84-13a3-11e5-9950-ed330386d2a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[537],"tindex":"143bfa85-13a3-11e5-9950-0d5a814732fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:50","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.MapIterator<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>));\n    return org.apache.commons.collections4.MapIterator<K, V>;\n} "},"status":-1},{"failures":[538,539,540,541,542,543,544,545,546],"tindex":"143bfa86-13a3-11e5-9950-2731550ccb0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563],"tindex":"143bfa87-13a3-11e5-9950-cf1439aa85ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[6,7,8,9,10,11,14,16,17,18,19,20,21,22,23,24,25,26,12,15,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"143bfa88-13a3-11e5-9950-e3476561dff8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"143c2199-13a3-11e5-9950-2dba69955b4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"143c219a-13a3-11e5-9950-4944d8f5264e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"143c219b-13a3-11e5-9950-97ffcf620814","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"143c219c-13a3-11e5-9950-cbd0fb242698","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hash","proposedCapacity":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"143c219d-13a3-11e5-9950-8da02f85f6e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[55,56],"tindex":"143c219e-13a3-11e5-9950-ab4e33ff5cd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[564,565,566,567,568,569,570,571,572,573,574,575],"tindex":"143c219f-13a3-11e5-9950-abc99276283a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[576,577,6,223,224,225,226,227,228,229,12],"tindex":"143c21a0-13a3-11e5-9950-71f0f314e977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[578,579,580,581,582,583,584,585,586,587,588],"tindex":"143c21a1-13a3-11e5-9950-6f80e3f3e864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-1},{"failures":[589,590,591,592,593,594,595,596,597,598,599,600,601,602,538,603,539],"tindex":"143c48b2-13a3-11e5-9950-d766357e4e45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"143c48b3-13a3-11e5-9950-837f0c35d435","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[604,605,606,607,608],"tindex":"143c48b4-13a3-11e5-9950-0b941164a8b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[609,610,611,612,613,614,615,616,617,618,619,620,621,622,589,590,623,591,592,593,624,594,595,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,596,597,662,598,599,600,663,601,602,664,538,665,666,603,539,667,668,669,670,671,672,673,674,675,676,677,678,540,541,679,680,542,543,544,545,546],"tindex":"143c48b5-13a3-11e5-9950-9ff414911e81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"143c48b6-13a3-11e5-9950-a5512eb918a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"deletedNode","dataElement":"dataElement","child":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"143c48b7-13a3-11e5-9950-174c5a91cc88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"143c48b8-13a3-11e5-9950-dd0279ce3949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[],"tindex":"143c6fc9-13a3-11e5-9950-030b43d5032b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700],"tindex":"143c6fca-13a3-11e5-9950-75299e03ee9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[538,539,541,543],"tindex":"143c6fcb-13a3-11e5-9950-2b23ae5705fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[701],"tindex":"143c6fcc-13a3-11e5-9950-69f9c895581a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:538","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[],"tindex":"143c6fcd-13a3-11e5-9950-2d44f7469a00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,578,717,718,719,720,721,722,579,580,723,581,724,725,582,583,726,727,584,585,586,587,588],"tindex":"143c6fce-13a3-11e5-9950-1d9ab8941d12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"143c6fcf-13a3-11e5-9950-13cfc9504235","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[71,728,729,85,86,89,90,72,73,108,730,731,124,125,128,129,110,111],"tindex":"143c95e0-13a3-11e5-9950-d182c7fc5aac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"143c95e1-13a3-11e5-9950-b199210b246a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[732,733,734,735,736,737,738,739,740,741,742,743,744],"tindex":"143c95e2-13a3-11e5-9950-b3c0113f8196","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[745,746],"tindex":"143c95e3-13a3-11e5-9950-9f620561bc15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"143c95e4-13a3-11e5-9950-4ffcb40da46a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:452","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:104","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"143c95e5-13a3-11e5-9950-017d4ae903d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"143c95e6-13a3-11e5-9950-3104a88e8cb5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"143c95e7-13a3-11e5-9950-6d1290414963","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[589,590,591,592,593,595,747,596,597,598,599,600,602,538,603,539],"tindex":"143c95e8-13a3-11e5-9950-dbb225c24874","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-1},{"failures":[270,271,150,272,748],"tindex":"143cbcf9-13a3-11e5-9950-c3abf7d11561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"total","proposedCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"143cbcfa-13a3-11e5-9950-eb5d78aec492","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"parent","right":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[749,750,751,752],"tindex":"143cbcfb-13a3-11e5-9950-2f1ad7f2e5a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[681,682,683,684,685,686,687,688,690,691,692,693,695,696,697,699,700],"tindex":"143cbcfc-13a3-11e5-9950-a3b266550c8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[753],"tindex":"143cbcfd-13a3-11e5-9950-1512e6c4e8ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:42","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB":"i","bit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"143cbcfe-13a3-11e5-9950-1d94b8ad6c07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[318,311,312],"tindex":"143cbcff-13a3-11e5-9950-fdb7039c0efb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[742,754,755,745,756,746,757,758,759,760],"tindex":"143ce410-13a3-11e5-9950-d37e0c528a04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"143ce411-13a3-11e5-9950-5fe2faa9aa62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"143ce412-13a3-11e5-9950-231ec62da19b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"143ce413-13a3-11e5-9950-d392505c6629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"143ce414-13a3-11e5-9950-c71a485fb3a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"143ce415-13a3-11e5-9950-058f9738c0fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"143d0b26-13a3-11e5-9950-9f8bfd31d0f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":0},{"failures":[],"tindex":"143d0b27-13a3-11e5-9950-fde78cc6faac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[203,502,204,503,504,506,205,206,507,207,509,510,210,211,212,511,213,512,513,515,214,215,516,216,518,519,219,220],"tindex":"143d0b28-13a3-11e5-9950-55866361c9cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"143d0b29-13a3-11e5-9950-1305af596bd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:246","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E"},"status":-2},{"failures":[],"tindex":"143d0b2a-13a3-11e5-9950-014fb26b2479","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"143d0b2b-13a3-11e5-9950-a14ccda8d2fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"previous","current":"parent","tree":"right","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"143d0b2c-13a3-11e5-9950-07fcc50825a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:191","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayInputStream.close()"},"variableMap":{"bais":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"143d0b2d-13a3-11e5-9950-e90904743432","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-2},{"failures":[761,762,763,764,765,766,767,768,769,770,771,547,548,550,551,772,552,553,555,556,557],"tindex":"143d0b2e-13a3-11e5-9950-df6ea4e1e917","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-1},{"failures":[773,774,775,776,777,778,779,608,780,781,782,5,783,784,785,786,787,788],"tindex":"143d323f-13a3-11e5-9950-af5325174e45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"143d3240-13a3-11e5-9950-6ba5803e7e2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}