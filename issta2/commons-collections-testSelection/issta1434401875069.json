{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":717,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":679,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":579,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":179,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":490,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":374,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":142,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullKey":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":664,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":178,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":173,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":728,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":416,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":524,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":44,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":632,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":604,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":575,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":197,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":437,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":392,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":484,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":205,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":293,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":578,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":13,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":58,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":331,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":130,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":9,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":687,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":188,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":348,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":671,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":682,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":562,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":337,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":662,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":238,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":190,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":217,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":724,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":568,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":688,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":485,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":280,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":353,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":80,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":195,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":226,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":703,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":479,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":523,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":375,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":705,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":37,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":199,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":402,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":24,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":673,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":283,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":421,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":697,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":730,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":68,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":376,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":715,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":670,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":135,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":361,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":412,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":707,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":652,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":124,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":529,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMakeMap":294,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":54,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":721,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":388,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":317,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":584,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":698,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":566,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":455,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":373,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":146,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":451,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":500,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":645,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":590,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":351,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":193,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":325,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":17,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":444,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":611,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":729,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":432,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":549,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":84,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":215,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":607,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":617,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":501,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":203,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":304,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":693,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":520,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":608,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":684,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":229,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":596,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":354,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":288,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":706,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":352,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":615,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":627,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":355,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":56,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":539,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":177,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":148,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":563,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":638,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMakeMap":243,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":261,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":393,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":321,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":184,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":420,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":675,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":268,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":493,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":560,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":536,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":410,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":436,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":169,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":265,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":543,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":267,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":459,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":692,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":253,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":690,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":333,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":423,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":512,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":558,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":714,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":201,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":429,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":648,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":102,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":313,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":314,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":315,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":284,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":244,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":491,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":574,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":464,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":637,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":377,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":378,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":300,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":181,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":487,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":272,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":681,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":258,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":273,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":725,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":341,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":644,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":41,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":609,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":653,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":237,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":570,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":556,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":440,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":457,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":52,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullKey":306,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":605,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":642,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":686,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":48,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":631,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":382,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":505,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":259,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":720,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":452,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":187,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":641,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":613,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":614,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":629,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":515,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":598,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":289,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":453,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":32,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullValue":307,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":389,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":680,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":634,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":186,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":251,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":239,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":557,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":509,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":542,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":486,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":396,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":424,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":597,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":232,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":295,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":433,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":223,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":230,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":349,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":122,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":183,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":189,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":528,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":710,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":362,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":494,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":297,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":495,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":559,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":593,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":659,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":125,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":482,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":167,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":62,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":633,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":460,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":95,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":19,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":580,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":535,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":708,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":108,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullValue":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":621,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":7,"org.apache.commons.collections4.SetUtilsTest.testHashCode":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":667,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":35,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":553,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":585,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":14,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":712,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":647,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":192,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":504,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":257,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":537,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":565,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":554,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":691,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":663,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":711,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":219,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":110,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":618,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":162,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":263,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":161,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":264,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":372,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":683,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":163,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":262,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":160,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":126,"org.apache.commons.collections4.CollectionUtilsTest.isFull":154,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":695,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":202,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":555,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":180,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":726,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":248,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":336,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":531,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":220,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":356,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":170,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":216,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":709,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":622,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":387,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":533,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":532,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":655,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":185,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":428,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":676,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":60,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":545,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":55,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":335,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":718,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":214,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":384,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":386,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":83,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":497,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":610,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":292,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":450,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":347,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":71,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":581,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":702,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":227,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":106,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":398,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":145,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":477,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":643,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":661,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":50,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":723,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":78,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":75,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":672,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":250,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":591,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":660,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":25,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":525,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":657,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":211,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":310,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":212,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":506,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":198,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":576,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":624,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":713,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":138,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":270,"org.apache.commons.collections4.map.LRUMapTest.testLRU":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":207,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":722,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":630,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":408,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":357,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":461,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":358,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":290,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":302,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":175,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":359,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":131,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":492,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":700,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":129,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":338,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":115,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":573,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":94,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":588,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":309,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":623,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":174,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":409,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":727,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":699,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":635,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":439,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":236,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":489,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":147,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":182,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":719,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":200},"transformations":[{"failures":[],"tindex":"31dae730-13a1-11e5-a537-2111442e6ec9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"31dc1fb1-13a1-11e5-a537-d5cd67dfef64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"d","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[],"tindex":"31dc1fb2-13a1-11e5-a537-959001f14722","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:129","type":"CtReturnImpl","sourcecode":"return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])))"},"variableMap":{"iArgs":"iArgs","input":"input","method":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:126","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])));\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' does not exist\"));\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\"));\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' threw an exception\") , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[],"tindex":"31dc46c3-13a1-11e5-a537-3156085a612b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12],"tindex":"31dc46c4-13a1-11e5-a537-3130fae6c2ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[],"tindex":"31dc46c5-13a1-11e5-a537-0beb04fdec57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[13],"tindex":"31dc46c6-13a1-11e5-a537-5b99666a8fbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:387","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"31dc46c7-13a1-11e5-a537-9557c4a6baf5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[],"tindex":"31dc46c8-13a1-11e5-a537-c725784e578b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"path","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[14,15],"tindex":"31dc6dd9-13a1-11e5-a537-e39f64276118","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"31dc6dda-13a1-11e5-a537-a16972620450","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"31dc6ddb-13a1-11e5-a537-0d9a9f7b7e77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"predecessor","current":"node","tree":"predecessor","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[16,17,18,19,20,21,22],"tindex":"31dc6ddc-13a1-11e5-a537-d3715672b4f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"31dc6ddd-13a1-11e5-a537-fd9a1b35143c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"31dc94ee-13a1-11e5-a537-775067099f0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[23],"tindex":"31dc94ef-13a1-11e5-a537-4d74a90ddb2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","newCapacity":"hashCode","proposedCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"31dc94f0-13a1-11e5-a537-b3324e2061e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[42,43],"tindex":"31de69b1-13a1-11e5-a537-2f363bbbb3d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"31de69b2-13a1-11e5-a537-270f39505e96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[90],"tindex":"31de69b3-13a1-11e5-a537-d197592504af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"status":-1},{"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"31de69b4-13a1-11e5-a537-519ca221f8db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"31de69b5-13a1-11e5-a537-f388df949d96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,25,139,140,28,30,32,35,141,142,38,41],"tindex":"31de69b6-13a1-11e5-a537-758028d854b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"31de90c7-13a1-11e5-a537-fd5d29ea8560","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[143,144,145,146,147,148,149,150,151,152,153],"tindex":"31de90c8-13a1-11e5-a537-a533649f365a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"31de90c9-13a1-11e5-a537-058ff74235c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"d","index":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"31de90ca-13a1-11e5-a537-c1c7d0e5e28f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[],"tindex":"31de90cb-13a1-11e5-a537-ebf8f81b5af3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"31de90cc-13a1-11e5-a537-892f399d67d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"31de90cd-13a1-11e5-a537-2fd37a04ca8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"31de90ce-13a1-11e5-a537-9db5b29569ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"31deb7df-13a1-11e5-a537-2156bda33539","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[],"tindex":"31deb7e0-13a1-11e5-a537-a9f7ce412724","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"31deb7e1-13a1-11e5-a537-dfe8b3ed3efa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"variableMap":{"vDown":"key4","x":"h","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"31deb7e2-13a1-11e5-a537-7d7968856d7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"31deb7e3-13a1-11e5-a537-f79689d59a57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,6,168,7,169,170,171,8,9,172,10,173,174,175,176,177,178,179,180,181,182,183,184,185,11,186,187,12],"tindex":"31deb7e4-13a1-11e5-a537-0340f687d4ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[44,45,46,47,49,50,51,52,55,56,58,59,60,61,62,63,65,68,69,73,74,76,77,78,53,82,86],"tindex":"31deb7e5-13a1-11e5-a537-47d7308aca42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"31deb7e6-13a1-11e5-a537-a10c2b892f54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[188,143,189,144,145,190,146,147,148,191,149,192,150,193,151,152,194,153],"tindex":"31deb7e7-13a1-11e5-a537-b501f896e00f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"31dedef8-13a1-11e5-a537-63d43fc3509b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[211,212,213,214,215,216,217,218,219,220,221],"tindex":"31dedef9-13a1-11e5-a537-af8bbad3b174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,6,168,7,169,170,171,172,10,173,174,175,176,177,178,179,180,181,182,183,184,185,11,186,187],"tindex":"31dedefa-13a1-11e5-a537-a152dba3d312","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"end","listSize":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"31dedefb-13a1-11e5-a537-97004e278e24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"this":"this","oldNode":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[222,223,224,225,226,227,228],"tindex":"31dedefc-13a1-11e5-a537-b3816e2a3745","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"31dedefd-13a1-11e5-a537-25c28e292690","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"31dedefe-13a1-11e5-a537-71e8a182569e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[],"tindex":"31dedeff-13a1-11e5-a537-d1b39f47c7cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"31df0610-13a1-11e5-a537-f95a4742ae82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"31df0611-13a1-11e5-a537-ad5ff29b1efe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"31df0612-13a1-11e5-a537-d736d618ec0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"31df0613-13a1-11e5-a537-ffe66658f357","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":0},{"failures":[373],"tindex":"31df0614-13a1-11e5-a537-8d51db60665a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-1},{"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413],"tindex":"31df0615-13a1-11e5-a537-8100b842e7e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-1},{"failures":[],"tindex":"31df0616-13a1-11e5-a537-57c2f9a06038","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-2},{"failures":[414,415,416,417,418,419,420,195,421,422,423,197,424,425,426,427,428,429,202,203,204,205,206,430,431,432,433,434,207,208,209,435],"tindex":"31df0617-13a1-11e5-a537-716589291434","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[111,112,116,118,121,126,127,131,133,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,26,457,458,459,460,461,462,463,464,465,466,467,468,469,29,470,471,472,473,474,475,476,477,478,479,480,481,482,483,33,484,485,486,487,488,489,490,491,492,493,494,495,496,36,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,39,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548],"tindex":"31df2d28-13a1-11e5-a537-179fe3b08ba3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"31e01789-13a1-11e5-a537-3f85d1b3f80b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"31e0178a-13a1-11e5-a537-9f11ae272e62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"31e0178b-13a1-11e5-a537-410c37df6870","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"31e0178c-13a1-11e5-a537-8d49162ebcb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[549,550,551,552],"tindex":"31e0178d-13a1-11e5-a537-e3b560bd40c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[553,554],"tindex":"31e0178e-13a1-11e5-a537-1b92a39204df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"31e0178f-13a1-11e5-a537-0136545334b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,196,576,577,578,579,580,581,582,583,210,584,585,586,587,588,589,590,591,592,593],"tindex":"31e01790-13a1-11e5-a537-17b96f823630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"31e01791-13a1-11e5-a537-856949315f1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"31e03ea2-13a1-11e5-a537-eb36e4e3cef4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    java.lang.Boolean = java.lang.Boolean;\n} "},"variableMap":{"answer":"p","defaultValue":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"31e03ea3-13a1-11e5-a537-69eb9ab09f8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[],"tindex":"31e03ea4-13a1-11e5-a537-e5032564f5ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"31e03ea5-13a1-11e5-a537-1d971a4c23c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"31e03ea6-13a1-11e5-a537-7f34f8e710c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[394,397,399,401,402,404,406,408,409,410,411,594,595],"tindex":"31e03ea7-13a1-11e5-a537-15a5580e750e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"31e03ea8-13a1-11e5-a537-c97d68f15a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"variableMap":{"this":"e","previousObjectSet":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"31e03ea9-13a1-11e5-a537-c5c6904423d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:902","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.select(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"status":-2},{"failures":[44,45,47,48,49,46,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,53,82,83,84,85,86,87,88,89],"tindex":"31e03eaa-13a1-11e5-a537-7326e5bd89b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[596,597,598,599,600,601,602,603,604,605,606,607],"tindex":"31e065bb-13a1-11e5-a537-b7725929f770","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"leastIndex","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[104,106,608,609],"tindex":"31e065bc-13a1-11e5-a537-09be1ed3d1bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"31e065bd-13a1-11e5-a537-af2065c4e0fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"31e065be-13a1-11e5-a537-b7d8244f25f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":0},{"failures":[610,611,612,613,614,615,616,617,35],"tindex":"31e065bf-13a1-11e5-a537-97381cf721e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"31e065c0-13a1-11e5-a537-a13d6d1ccac5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"31e065c1-13a1-11e5-a537-89b4acba9e77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"31e065c2-13a1-11e5-a537-0fd817e26dc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"31e065c3-13a1-11e5-a537-3f0bbdab7017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"31e065c4-13a1-11e5-a537-1be2bc29096a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[618,619,620,621,622,623,624,625,626,627,628,629,564,630,631,556,557,558,559,560,561,562,563,555,565,566,567,568,569,570,571,572,573,574,575,632,633,414,415,634,635,416,417,418,196,422,419,195,209,435,636,637,638,197,639,198,640,641,199,200,201,424,425,426,427,428,429,202,203,204,205,206,430,431,432,642,433,434,207,208,423,421,643,420,644,645,646,647,648,649,650,651,652,653,654,655,656,576,577,578,579,580,581,582,583,210,584,657,585,586,587,588,589,590,591,592,593,658,659],"tindex":"31e08bd5-13a1-11e5-a537-2ddc11afee08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[232,240,241,242,258,283,291,292,293,309,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675],"tindex":"31e08bd6-13a1-11e5-a537-bff8328f77eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[],"tindex":"31e08bd7-13a1-11e5-a537-6ba3412a0d97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:209","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)))"},"variableMap":{"this":"this","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":0},{"failures":[],"tindex":"31e08bd8-13a1-11e5-a537-31fa664b7f3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:608","type":"CtReturnImpl","sourcecode":"return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0"},"status":0},{"failures":[222,223,224,225,226,227,228],"tindex":"31e08bd9-13a1-11e5-a537-85aecdd2af65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"nextObjectSet","beforeFirst":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[676,677,678,679,680,681,682],"tindex":"31e08bda-13a1-11e5-a537-e1fadb1b112e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"31e08bdb-13a1-11e5-a537-39c6a5dc5287","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"31e08bdc-13a1-11e5-a537-69a11870e2c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"31e0b2ed-13a1-11e5-a537-a1c74094cf7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[683,684,685,686,687,688,689,690,691,692],"tindex":"31e0b2ee-13a1-11e5-a537-458f19eb0597","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[693,694,695,696,697,698,699,700,701,702,551,690,703,704,150,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,153,720,721,722,723,724,725,726],"tindex":"31e0b2ef-13a1-11e5-a537-a990af9b283d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"31e0b2f0-13a1-11e5-a537-d7ccdbfc08f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[560,565,566,567,568,570,727,635,728,729,580,210,584,585,586,588,730],"tindex":"31e0b2f1-13a1-11e5-a537-9791fd995176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"31e0b2f2-13a1-11e5-a537-898751a50dbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}