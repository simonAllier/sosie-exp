{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":203,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":600,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":483,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":41,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":673,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":128,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":166,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":717,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":736,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":760,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":634,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":813,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":678,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":796,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":417,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":496,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":638,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":71,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":765,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":426,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":239,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":824,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":204,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":282,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":244,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":343,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":535,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":544,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":612,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":512,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":527,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":452,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":586,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":59,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":273,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":607,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":109,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":233,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":91,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":572,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":488,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":840,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":698,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":526,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":624,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":420,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":456,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":13,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":780,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":660,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":674,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":165,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":545,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":342,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":302,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":827,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":777,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":484,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":281,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":537,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":219,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":801,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":831,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":785,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":802,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":317,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":401,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":242,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":392,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":216,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":367,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":626,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":734,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":567,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":118,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":396,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":117,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":349,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":772,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":543,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":245,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":215,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":232,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":650,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":790,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":209,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":11,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":402,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":791,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":283,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":473,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":102,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":288,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":733,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":261,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":720,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":632,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":761,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":808,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":693,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":653,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":250,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":230,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":551,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":280,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":807,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":28,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":810,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":464,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":619,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":804,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":518,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":194,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":773,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":461,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":422,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":129,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":42,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":692,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":391,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":778,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":127,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":805,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":363,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":794,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":307,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":75,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":74,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":821,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.map.LRUMapTest.testReset":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":110,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":832,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":253,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":847,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":328,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":774,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":816,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":211,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":229,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":594,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":57,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":115,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":475,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":806,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":312,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":98,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":604,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":238,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":284,"org.apache.commons.collections4.map.LinkedMapTest.testReset":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":651,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":295,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":793,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":116,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":371,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":460,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":775,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":852,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":318,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":581,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":309,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":532,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":728,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":730,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":652,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":151,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":314,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":427,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":588,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":820,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":271,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":792,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":354,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":529,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":327,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":524,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":679,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":171,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":767,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":750,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":390,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":746,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":336,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":465,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":709,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":828,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":690,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":662,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":348,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":666,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":362,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":441,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":443,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":136,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":817,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":437,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":577,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":597,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":574,"org.apache.commons.collections4.SetUtilsTest.testHashCode":776,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":227,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":445,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":269,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":160,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":398,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":56,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":29,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":715,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":677,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":550,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":708,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":707,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":704,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":703,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":706,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":705,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":627,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":702,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":274,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":701,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":243,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":663,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":23,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":743,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":201,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":476,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":549,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":360,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":24,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":839,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":536,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":747,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEmptyMapCompatibility":684,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":285,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":36,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":822,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":635,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":617,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":195,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":841,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":260,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":454,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":562,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":385,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":668,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":330,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":493,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":799,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":231,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":403,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":764,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":825,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":286,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":811,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":513,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":3,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":838,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":837,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":836,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":691,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":325,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":503,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":386,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":137,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":601,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":58,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":220,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":241,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":511,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":579,"org.apache.commons.collections4.map.LRUMapTest.testLRU":276,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":689,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":462,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":174,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":124,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":719,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":7,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":639,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":744,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":152,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":303,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":447,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":769,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":570,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":636,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":687,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":718,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":659,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":633,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":582,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":364,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":453,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":739,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":724,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":768,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":147,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":389,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":131,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":308,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":722,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":494,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":631,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":293,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":105,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":721,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":474,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":648,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":407,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":815,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":400,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":533,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":552,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":788,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":797,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":812,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":470,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":469,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":591,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":339,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":762,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":784,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":685,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":257,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":384,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":259,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":321,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":548,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":759,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":795,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":450,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":141,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":319,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":770,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":415,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":332,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":637,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":406,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":106,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":387,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":311,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":169,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":547,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":145,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":740,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":224,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":480,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":397,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":373,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":603,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":681,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":256,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":459,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":380,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":541,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":432,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":374,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":748,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":103,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":444,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":258,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":675,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":104,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":598,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":676,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":197,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":20,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":148,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":265,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":287,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":478,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":830,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":199,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":599,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":671,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":584,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":667,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":55,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":347,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":846,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":783,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":157,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":448,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":520,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":786,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":540,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":482,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":395,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":757,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":823,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":31,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":763,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":435,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":485,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":640,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":429,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":539,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":248,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":404,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":623,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":510,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":726,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":413,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":44,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":266,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":628,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":320,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":712,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":683,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":641,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":553,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":182,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":416,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":2,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":505,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":782,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":528,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":100,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":458,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":522,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":657,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":134,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":198,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":642,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":849,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":710,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":818,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":798,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":842,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":583,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":585,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":383,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":487,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":729,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":315,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":324,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":771,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":781,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":735,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":326,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":358,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":508,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":84,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":576,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":845,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":150,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":8,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":264,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":497,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":814,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":492,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":86,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":399,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":370,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":340,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":357,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":596,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":146,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":725,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":755,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":337,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":649,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":290,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":672,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":353,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":754,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":695,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":149,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":329,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":495,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":555,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":580,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":530,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":123,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":486,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":569,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":298,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":356,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":27,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":800,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":175,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":310,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":222,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":455,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":377,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":556,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":155,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":752,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":851,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":419,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":223,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":561,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":716,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":829,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":5,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":183,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":300,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":423,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":723,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":379,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":499,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":442,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":753,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":350,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":853,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":162,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":697,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":433,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":694,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":688,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":727,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":658,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":809,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":826,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":514,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":595,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":578,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":405,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":214,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":213,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":388,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":521,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":647,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":466,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":613,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":538,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":749,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":504,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":571,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":711,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":787,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":758,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":212,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":436,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":620,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":848,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":819,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":236,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":756,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":313,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":344,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":833,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":834,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":835,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":625,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":425,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":608,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":228,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":481,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":741,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":351,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":575,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":502,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":519,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":843,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":844,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":696,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":178,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":779,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":130,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":352,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":766,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":218,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":559,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":803,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":714,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":226,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":738,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":142,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":278,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":501,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":438,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":661,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":439,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":644,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":737,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":409,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":345,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":732,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":305,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":616,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":463,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":255,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":193,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":850,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":143,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":279,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":751,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":731,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":296,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":566},"transformations":[{"failures":[],"tindex":"a0de2b02-13b9-11e5-855e-f334f5a7774b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"a0de2b03-13b9-11e5-855e-d71796fe60b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[69,127,128,83,129,130],"tindex":"a0e074f4-13b9-11e5-855e-3faa18f74498","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a0e074f5-13b9-11e5-855e-83175dbcd9f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[],"tindex":"a0e09c06-13b9-11e5-855e-d78ad772f1b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"a0e0c317-13b9-11e5-855e-63ac2593bfbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>"},"status":-2},{"failures":[131,132,133,134],"tindex":"a0e0c318-13b9-11e5-855e-af3b44975568","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[135,136,137,138,139,0,1,140,141,142,2,143,3,144,145,4,146,147,148,149,150,5,6,151,152,153,7,154,8,155,156,157,158,159,9,10,11,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,12,175,176,177,178,179,180,13,14,181,15,182,183,22,16,184,185,17,18,19,20,21,186,132,131,134,23,24,25,26,27,28,29,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,30,202,203,204,205,206,207,31,32,208,33,209,210,40,34,211,212,35,36,37,38,39,213,214,215,41,42,43,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,44,231,232,233,234,235,236,45,46,237,47,238,239,54,48,240,241,49,50,51,52,53,242,243,244,245,55,246,247,248,249,250,56,57,58,251,252,253,254,255,127,256,257,258,259,260,128,261,262,263,59,264,265,266,267,268,269,60,61,270,62,271,272,69,63,273,274,64,65,66,67,68,275,276,277,278,279,280,281,282,283,284,285,286,287,70,71,72,288,289,290,291,292,129,293,294,295,296,297,130,298,299,300,73,301,302,303,304,305,306,74,75,307,76,308,309,83,77,310,311,78,79,80,81,82,312,313,314,315,84,85,86,316,317,318,319,320,321,87,322,323,324,325,326,327,328,329,88,330,331,332,333,334,335,89,90,336,91,337,338,98,92,339,340,93,94,95,96,97,341,342,343,344,345,346,99,100,101,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,102,362,363,364,365,366,367,103,104,368,105,369,370,112,106,371,372,107,108,109,110,111,373,374,113,114,115,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,116,390,391,392,393,394,395,117,118,396,119,397,398,126,120,399,400,121,122,123,124,125],"tindex":"a0e0c319-13b9-11e5-855e-3137a9afcd2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[401,402,403,404,405],"tindex":"a0e0ea2a-13b9-11e5-855e-77c0e18d0bdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-1},{"failures":[406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"a0e1113b-13b9-11e5-855e-fbcddd204f2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"tindex":"a0e1113c-13b9-11e5-855e-772acd79ede7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"code","index":"code","beyond":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"a0e1113d-13b9-11e5-855e-47f589e44903","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[466,467,468,469,470,471,472,473,474,475,476,477,478,479,455,456,458,459,460,461,463,464,465,480],"tindex":"a0e1113e-13b9-11e5-855e-afbfb4c23894","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"a0e1113f-13b9-11e5-855e-0fa8da04cde4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:687","type":"CtInvocationImpl","sourcecode":"C.execute(java.util.Iterator<T>.next())"},"status":-2},{"failures":[481],"tindex":"a0e11140-13b9-11e5-855e-e73d540af5a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-1},{"failures":[482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,159,503,504,505,506,507,508,509,510,511,512,513,514,515,516,188,189,190,191,192,193,194,196,198,201,30,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,342,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671],"tindex":"a0e13851-13b9-11e5-855e-59e16e4cfd30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[672,673,674,675,464],"tindex":"a0e13852-13b9-11e5-855e-e5afc537746f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[237],"tindex":"a0e13853-13b9-11e5-855e-8571efa18466","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-1},{"failures":[],"tindex":"a0e13854-13b9-11e5-855e-9d12ca62703d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"a0e15f65-13b9-11e5-855e-e32449098c7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[161,162,163,164,165,166,167,169,171,174,12,676,188,189,190,191,192,193,194,196,198,201,30,517,217,218,220,221,222,225,227,230,44,252,253,254,255,127,256,257,259,128,263,59,677,289,290,291,292,129,293,294,296,130,300,73,678,317,318,319,320,321,87,322,324,326,329,88,679,348,349,350,351,352,353,354,356,358,361,102,680,376,377,378,379,380,381,382,384,386,389,116,681],"tindex":"a0e15f66-13b9-11e5-855e-5b10e7486be7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"a0e15f67-13b9-11e5-855e-1db4296666b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":0},{"failures":[682,683,133,188,189,191,192,193,194,196,30],"tindex":"a0e15f68-13b9-11e5-855e-c7afaf95b28f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"a0e18679-13b9-11e5-855e-81553faf896f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a0e1867a-13b9-11e5-855e-3734a4146c6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:710","type":"CtInvocationImpl","sourcecode":"java.lang.Runnable.run()"},"variableMap":{"r":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[684,685,686,687],"tindex":"a0e1867b-13b9-11e5-855e-b3316a4190c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"a0e1867c-13b9-11e5-855e-f77339549bc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"a0e1867d-13b9-11e5-855e-b1b20cdee896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"a0e1867e-13b9-11e5-855e-0fc09c37d73e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[688],"tindex":"a0e1867f-13b9-11e5-855e-3f38dd56c51f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"a0e18680-13b9-11e5-855e-bddaa58bf9ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"a0e1ac91-13b9-11e5-855e-83b295034731","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"a0e1ac92-13b9-11e5-855e-c5717b3e6918","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a0e1ac93-13b9-11e5-855e-597771c8749f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[],"tindex":"a0e1ac94-13b9-11e5-855e-071da2bb257b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"a0e1ac95-13b9-11e5-855e-e3183290ce9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":0},{"failures":[689,690,691,692,693,694,695],"tindex":"a0e1ac96-13b9-11e5-855e-6de31ebd4d2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[],"tindex":"a0e1ac97-13b9-11e5-855e-750114d0b3ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a0e1ac98-13b9-11e5-855e-5133944feabb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"newNode","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a0e1d3a9-13b9-11e5-855e-6f8f2b6f393c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"a0e1d3aa-13b9-11e5-855e-11a5279d0ade","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[696,697,698],"tindex":"a0e1d3ab-13b9-11e5-855e-dbaad975b75f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"a0e1d3ac-13b9-11e5-855e-fbe170c4f459","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1804","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive()"},"variableMap":{"this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:212","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729],"tindex":"a0e1d3ad-13b9-11e5-855e-a186f0de6ded","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"start","newCapacity":"start","proposedCapacity":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"a0e1d3ae-13b9-11e5-855e-e991678d9719","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"h","previous":"parent","left":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[135,136,137,138,0,1,140,141,142,2,143,3,730,144,145,146,148,5,6,151,153,7,154,8,731,155,156,161,162,164,165,166,167,168,169,171,174,12,22,132,131,134,23,24,25,26,732,27,28,29,188,189,191,192,193,194,195,196,198,201,30,205,206,207,31,32,208,40,217,218,220,221,222,223,224,225,227,230,44,54,55,249,250,56,57,58,252,253,255,127,256,257,259,128,263,59,267,268,60,61,270,62,69,276,278,279,280,281,317,318,320,321,87,322,324,326,329,88,98,348,349,351,352,353,354,355,356,358,361,102,112,376,377,379,380,381,382,383,384,386,389,116,126],"tindex":"a0e1fabf-13b9-11e5-855e-0de6cf2600bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"variableMap":{"data":"newEntries","length":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"a0e1fac0-13b9-11e5-855e-69870a993f87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":0},{"failures":[],"tindex":"a0e1fac1-13b9-11e5-855e-b9d07e8bb31c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"a0e1fac2-13b9-11e5-855e-a7f4ea7ea712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:231","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"a0e1fac3-13b9-11e5-855e-fd4a9dbd7715","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"variableMap":{"size":"oldCapacity","data":"newEntries","org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","length":"oldCapacity","this":"this","threshold":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"a0e221d4-13b9-11e5-855e-477b08c01804","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"a0e221d5-13b9-11e5-855e-31b330c50523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"a0e221d6-13b9-11e5-855e-2ff1f0549881","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"a0e221d7-13b9-11e5-855e-699398fc6679","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:181","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.set.CompositeSet<E>.size()"},"status":-2},{"failures":[],"tindex":"a0e221d8-13b9-11e5-855e-e1c92c0d552e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"a0e221d9-13b9-11e5-855e-6382709fa868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[733,734,735,736,737,738],"tindex":"a0e221da-13b9-11e5-855e-a30bd9858032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[739,740,741,742],"tindex":"a0e221db-13b9-11e5-855e-491b114bfb5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774],"tindex":"a0e221dc-13b9-11e5-855e-e7972eafd10e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[470,775,472,473,475,476,477,479,455,456,458,459,460,461,463,464,465],"tindex":"a0e248ed-13b9-11e5-855e-bf862e67ff9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[131,134,133],"tindex":"a0e248ee-13b9-11e5-855e-595605b7d3f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a0e248ef-13b9-11e5-855e-1b71c3143e37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[25],"tindex":"a0e248f0-13b9-11e5-855e-05ee528546d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a0e248f1-13b9-11e5-855e-63858d0bfe4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[294],"tindex":"a0e248f2-13b9-11e5-855e-7b32422e1e98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:178","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"a0e248f3-13b9-11e5-855e-d58e480a544d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"length","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-2},{"failures":[],"tindex":"a0e248f4-13b9-11e5-855e-6752464147ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"a0e248f5-13b9-11e5-855e-4bc278057d4f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"a0e248f6-13b9-11e5-855e-077191e77be5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"a0e27007-13b9-11e5-855e-47473fcc57bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:266","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"header","link":"after","header":"after","after":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:165","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"a0e27008-13b9-11e5-855e-69ca7fb1fa0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"a0e27009-13b9-11e5-855e-4b11d828f265","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a0e2700a-13b9-11e5-855e-1decbf7c6e8b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[438,440,441,443,444,445,446,447,449,451,452,455,456,457,458,459,460,462,464,465],"tindex":"a0e2700b-13b9-11e5-855e-abcefbaff051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:116","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"a0e2700c-13b9-11e5-855e-557194a5878b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a0e2700d-13b9-11e5-855e-3bfd4a250010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"a0e2700e-13b9-11e5-855e-0367dcd6b1c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"variableMap":{"result":"key2","size":"h","array":"key2","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[776],"tindex":"a0e2700f-13b9-11e5-855e-cf1562005754","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"hashCode","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"a0e29720-13b9-11e5-855e-9fb7906920aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:145","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Load factor must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-2},{"failures":[157],"tindex":"a0e29721-13b9-11e5-855e-49aa3e671366","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:196","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.clear()"},"variableMap":{"normalMap":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"a0e29722-13b9-11e5-855e-7144126fcb09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"a0e29723-13b9-11e5-855e-5373267bc49a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"a0e29724-13b9-11e5-855e-81f4745fba1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"a0e29725-13b9-11e5-855e-6369c6aed33a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"indent","newCapacity":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-2},{"failures":[132,131,133,134],"tindex":"a0e29726-13b9-11e5-855e-9d6a60f713e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[658,659,660,661,662,777,664,778,779,780,781,782,783,784,785,786,787],"tindex":"a0e29727-13b9-11e5-855e-0db8525f83fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"total","maxElements":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"a0e29728-13b9-11e5-855e-5d97104c19cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[788],"tindex":"a0e2be39-13b9-11e5-855e-2df39385daa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-1},{"failures":[],"tindex":"a0e2be3a-13b9-11e5-855e-c5360a5066b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"a0e2be3b-13b9-11e5-855e-71582c58ec57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a0e2be3c-13b9-11e5-855e-d746de1fe7e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"a0e2be3d-13b9-11e5-855e-15f906010804","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"a0e2be3e-13b9-11e5-855e-ebf54bc6b662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"variableMap":{"buf":"value","hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[789,790,791,792,793,794,795,796,797,798],"tindex":"a0e2be3f-13b9-11e5-855e-99280c39e0b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[799,800,801,802,803,804,805,806],"tindex":"a0e2be40-13b9-11e5-855e-29ab0f718a48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-1},{"failures":[807,808,809,810,811,812],"tindex":"a0e2be41-13b9-11e5-855e-c9151e322e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":-1},{"failures":[813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842],"tindex":"a0e2be42-13b9-11e5-855e-c1b6594ce217","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[843,844,696,845,846,847,848,698,849,850,851,852,853],"tindex":"a0e2e553-13b9-11e5-855e-c551e79cf89f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"a0e2e554-13b9-11e5-855e-43bededa9a75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}