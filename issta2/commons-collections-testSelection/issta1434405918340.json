{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":365,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":424,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":454,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":197,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":375,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":392,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":500,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":380,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":110,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":109,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":395,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":188,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":334,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":81,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":517,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":518,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":313,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":291,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":91,"org.apache.commons.collections4.CollectionUtilsTest.get":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":416,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":470,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":503,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":308,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":328,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":519,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":218,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":452,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":509,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":431,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":234,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":266,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":485,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":285,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":79,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":396,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":56,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":41,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":252,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":105,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":354,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":78,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":246,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":208,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":223,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":304,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":350,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":139,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":356,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":235,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":121,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":221,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":336,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":255,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":58,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":233,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":243,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":384,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":125,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":64,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":348,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":192,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":257,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":325,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":465,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":273,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":202,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":341,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":170,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":199,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":496,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":497,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":177,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":124,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":406,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":14,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":225,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":455,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":464,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":206,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":0,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":68,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":450,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":183,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":296,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":152,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":89,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":487,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":458,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":4,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":44,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":370,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":337,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":117,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":510,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":385,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":272,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":94,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":201,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":408,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":434,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":513,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":484,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":186,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":362,"org.apache.commons.collections4.ListUtilsTest.testSubtract":15,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":489,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":438,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":440,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":522,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":63,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":47,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":359,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":80,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":87,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":227,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":493,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":494,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":495,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":211,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":161,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":511,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":287,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":468,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":486,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":264,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":404,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":366,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":381,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":249,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":414,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":297,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":343,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":374,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":198,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":505,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":476,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":171,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":345,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":112,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":115,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":138,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":205,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":28,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":126,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":456,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":137,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":169,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":469,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":142,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":331,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":391,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":502,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":190,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":472,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":480,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":319,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":237,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":300,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":3,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":67,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":146,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":17,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":159,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":309,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":232,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":231,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":358,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":299,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":9,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":382,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":516,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":135,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":114,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":96,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":419,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":453,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":521,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":305,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":275,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":407,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":316,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":393,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":364,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":483,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":83,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":66,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":259,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":415,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":261,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":200,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":417,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":514,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":148,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":19,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":248,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":267,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":222,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":320,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":409,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":274,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":147,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":111,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":387,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":353,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":8,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":324,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":251,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":277,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":226,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":478,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":213,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":344,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":474,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":507,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":436,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":418,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":435,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":123,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":242,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testNextKey":405,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":492,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":427,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":240,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":389,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":258,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":339,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":367,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":32,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":120,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":116,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":512,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":281,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":60,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":210,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":182,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":108,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":7,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":399,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":333,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":215,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":451,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":193,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":295,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":430,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":101,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":166,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":523,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":131,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":129,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":127,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":178,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":312,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":515,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":429,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":90,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":335,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":106,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":293,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":50,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":133,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":162,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":163,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":164,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":425,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":278,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":99,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":25,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":504,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":298,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":401,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":386,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":270,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":445,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":156,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":397,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":283,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":349,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":317,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":236,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":318,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":479,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":379,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":150,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":411,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":361,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":40,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":224,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":244,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":412,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":421,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":398,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":508,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":230,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":286,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":104,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":282},"transformations":[{"failures":[],"tindex":"9bc75c96-13aa-11e5-9f4a-43e1403b12f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} "},"variableMap":{"ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"9bc75c97-13aa-11e5-9f4a-29380ab68fae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[9],"tindex":"9bc75c98-13aa-11e5-9f4a-7f394eb55543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"9bc783a9-13aa-11e5-9f4a-35003609f5a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[10,11,12,13,14],"tindex":"9bc783aa-13aa-11e5-9f4a-67c8033a2b5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"9bc783ab-13aa-11e5-9f4a-0784ae4c5455","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"key","k":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:219","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n}"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"9bc783ac-13aa-11e5-9f4a-e1961d4dc0c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"9bc783ad-13aa-11e5-9f4a-310bc228e964","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[104,105,106,107],"tindex":"9bc7aabe-13aa-11e5-9f4a-add9417c6ca4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"9bc7aabf-13aa-11e5-9f4a-53a9ce6e4056","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":0},{"failures":[7,108],"tindex":"9bc7aac0-13aa-11e5-9f4a-e9164cfc2db7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"9bc7aac1-13aa-11e5-9f4a-b965fcefe77f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"9bc7aac2-13aa-11e5-9f4a-c9252e01e80d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"9bc7d1d3-13aa-11e5-9f4a-ed64a9249d86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"index","bitIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"status":-1},{"failures":[155,156,157,158,159,160],"tindex":"9bc7d1d4-13aa-11e5-9f4a-15ab91b3e135","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"delta","delta":"end1","end2":"end1","this":"this","i":"k","end1":"delta","k":"start2","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"9bc7d1d5-13aa-11e5-9f4a-e5d7a6aa9fe3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-2},{"failures":[],"tindex":"9bc7d1d6-13aa-11e5-9f4a-1fe7df2c473f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[161],"tindex":"9bc7d1d7-13aa-11e5-9f4a-75b3129b5501","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"9bc7d1d8-13aa-11e5-9f4a-871cf9a6ee31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"methodName","defaultValue":"methodName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[162,163,164,165,166,167,168],"tindex":"9bc7f8e9-13aa-11e5-9f4a-7160c198d46f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[],"tindex":"9bc7f8ea-13aa-11e5-9f4a-abe9873615db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:156","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[109,110,169,111,112,113,114,115,170,116,117,171,118,119,120,121,122,123,172,124,173,174,125,126,175,176,177,127,128,178,129,130,131,179,180,181,132,133,182,183,184,134,185,186,187,135],"tindex":"9bc7f8eb-13aa-11e5-9f4a-3b52797743e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[188,189,190,191],"tindex":"9bc7f8ec-13aa-11e5-9f4a-6bd6e60bcdf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"slotFilled","beforeFirst":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    E = java.util.Iterator<? extends E>.next();\n    boolean = true;\n} else {\n    boolean = true;\n    E = null;\n    boolean = false;\n}"},"status":-1},{"failures":[155,156,157,158,159,160],"tindex":"9bc81ffd-13aa-11e5-9f4a-c5404e345074","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9bc81ffe-13aa-11e5-9f4a-c58e40f14405","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[20,28,31,35,38,44,47,51,57,63],"tindex":"9bc81fff-13aa-11e5-9f4a-b96a9b2b5184","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"9bc82000-13aa-11e5-9f4a-c9f03473d994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[20,28,31,35,38,44,47,51,57,63],"tindex":"9bc84711-13aa-11e5-9f4a-df5c43458852","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[192,193,194,195,196,197,198,199,200,201],"tindex":"9bc84712-13aa-11e5-9f4a-218d80d52d43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[155,156,157,158,159,160],"tindex":"9bc84713-13aa-11e5-9f4a-fb36dcf0b332","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"k","end2":"end2","this":"this","i":"end1","end1":"k","k":"i","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"9bc84714-13aa-11e5-9f4a-9f51b3bc3f83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":0},{"failures":[155,156,157,158,159,160],"tindex":"9bc84715-13aa-11e5-9f4a-b920b232e82e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"end1","n":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"9bc84716-13aa-11e5-9f4a-f731b0a8c63c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"9bc84717-13aa-11e5-9f4a-27a318dd694c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:62","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) != (org.apache.commons.collections4.Transformer<? super I, ? extends O>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n} "},"status":-2},{"failures":[0,6,7,1,2,3,4,5,8],"tindex":"9bc84718-13aa-11e5-9f4a-bf4ba1d027a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"9bc84719-13aa-11e5-9f4a-edf0cbab67b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[202,203],"tindex":"9bc8471a-13aa-11e5-9f4a-413278e896d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"9bc86e2b-13aa-11e5-9f4a-bf1594a6b2fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"9bc86e2c-13aa-11e5-9f4a-7be1b4f7ca7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[204,205],"tindex":"9bc86e2d-13aa-11e5-9f4a-2b79bd66e9d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"this","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[15,16,206,20,207,208,209,210,211,212,213,21,22,214,215,216,217,218,28,219,220,221,11,222,223,29,30,31,224,225,226,227,12,228,229,230,231,232,35,233,234,235,13,236,237,36,37,38,238,239,240,44,241,242,243,14,244,245,45,46,47,246,247,248,51,249,250,251,252,253,254,255,52,53,256,257,258,259,260,57,261,262,263,264,265,266,267,58,59,268,269,270,271,272,63,273,274,275,276,277,278,279,64,65,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"9bc86e2e-13aa-11e5-9f4a-c156676286e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"9bc86e2f-13aa-11e5-9f4a-7b35ccd8b9e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"9bc86e30-13aa-11e5-9f4a-3bcb9e360380","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"9bc86e31-13aa-11e5-9f4a-c1e6aa352fbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtIfImpl","sourcecode":"if (java.lang.Float == null) {\n    java.lang.Float = java.lang.Float;\n} "},"variableMap":{"answer":"object","defaultValue":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"9bc89542-13aa-11e5-9f4a-0f49d821ab69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"9bc89543-13aa-11e5-9f4a-57b4e99bdb7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[294,8,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"9bc89544-13aa-11e5-9f4a-9f711306410f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"9bc89545-13aa-11e5-9f4a-bbf795ea6f22","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"9bc89546-13aa-11e5-9f4a-e726205068c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[],"tindex":"9bc89547-13aa-11e5-9f4a-cd9385c7692a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"9bc8bc58-13aa-11e5-9f4a-73b3df7a9612","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"length","index":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"9bc8bc59-13aa-11e5-9f4a-0751b9dc7670","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"9bc8bc5a-13aa-11e5-9f4a-690469add23e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"variableMap":{"currentIterator":"currentIterator","iteratorChain":"iteratorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[364,346,347,348,362],"tindex":"9bc8bc5b-13aa-11e5-9f4a-07d8202071fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"9bc8bc5c-13aa-11e5-9f4a-39ad1728b76a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"parent","right":"node","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"9bc8bc5d-13aa-11e5-9f4a-49d19d6abf2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[365,9,366],"tindex":"9bc8bc5e-13aa-11e5-9f4a-7be052ca007e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[7,0,1,2,3,4,5,6],"tindex":"9bc8bc5f-13aa-11e5-9f4a-7b31d487e094","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"9bc8e370-13aa-11e5-9f4a-c558fe24e956","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[367,195,197,199,200,201,368],"tindex":"9bc8e371-13aa-11e5-9f4a-636bb4b66396","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"child","node":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[369,370],"tindex":"9bc8e372-13aa-11e5-9f4a-0354b7c1e07b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:162","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final K K = ((K)(java.lang.Object));\n    final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} "},"status":-1},{"failures":[371,372,373,374,375,376],"tindex":"9bc8e373-13aa-11e5-9f4a-e3f886b0d3db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"9bc8e374-13aa-11e5-9f4a-795e9bca01c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"variableMap":{"size":"h","array":"key5","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"9bc8e375-13aa-11e5-9f4a-73f5b55c333f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[377,378],"tindex":"9bc8e376-13aa-11e5-9f4a-01a44a0ec0b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[367,368],"tindex":"9bc8e377-13aa-11e5-9f4a-cdec432589a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],"tindex":"9bc8e378-13aa-11e5-9f4a-a9f944150c80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[317,318,319,320,321,322,323,324,325,397,326,327,328,329,332,398,399,353,354,400,355,356,358,359,401,361,362,363],"tindex":"9bc8e379-13aa-11e5-9f4a-5d9f01c7a5ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"code","lengthInBits":"code","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"code","otherOffsetInBits":"code","otherLengthInBits":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[333,334,335,402,336,337,338,339,340,341,342,348,349,353,354,355,356,358,359,361,362,363],"tindex":"9bc90a8a-13aa-11e5-9f4a-bd7b2e5dc8af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-1},{"failures":[109,110,169,111,112,113,114,115,170,116,117,171,118,119,120,121,122,123,172,124,173,174,125,126,175,176,177,127,128,178,129,130,131,179,180,181,132,133,182,183,184,134,185,186,187,135],"tindex":"9bc90a8b-13aa-11e5-9f4a-35dd6b27086a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9bc90a8c-13aa-11e5-9f4a-975d9cbe6893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:126","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.hasPrevious()"},"variableMap":{"li":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"9bc90a8d-13aa-11e5-9f4a-ffed46c415df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"predecessor","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[403,404,405],"tindex":"9bc90a8e-13aa-11e5-9f4a-b9e23fafdde8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"9bc90a8f-13aa-11e5-9f4a-2b9209d2fbfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[350,353,354,355,356,358,359,361,362,363],"tindex":"9bc90a90-13aa-11e5-9f4a-91c0c30424a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[406,407,408],"tindex":"9bc90a91-13aa-11e5-9f4a-7d6175e8a015","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"9bc931a2-13aa-11e5-9f4a-935cc723704e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"9bc931a3-13aa-11e5-9f4a-c118e999287c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[192,193,194,195,196,197,198,199,200,201],"tindex":"9bc931a4-13aa-11e5-9f4a-a367ccee4bee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-1},{"failures":[],"tindex":"9bc931a5-13aa-11e5-9f4a-67661ea6470e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"9bc958b6-13aa-11e5-9f4a-b7fd6473d75f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"p","parent":"parent","left":"left","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"9bc958b7-13aa-11e5-9f4a-69aec672ba0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[409,410,411,412,413,414],"tindex":"9bc958b8-13aa-11e5-9f4a-276a52cccdba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[415,365,9,366],"tindex":"9bc958b9-13aa-11e5-9f4a-adc2a9d43acd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"total":"h","object":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"9bc958ba-13aa-11e5-9f4a-83153121d0bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"9bc958bb-13aa-11e5-9f4a-dfcd725eb5c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"variableMap":{"buf":"buf","first":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":0},{"failures":[],"tindex":"9bc958bc-13aa-11e5-9f4a-af60d56c8a25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"9bc958bd-13aa-11e5-9f4a-db4669156b6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"bitIndex","proposedCapacity":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"9bc958be-13aa-11e5-9f4a-c31b4f3eb221","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[416,417],"tindex":"9bc958bf-13aa-11e5-9f4a-133cde077c65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"9bc958c0-13aa-11e5-9f4a-d1e3f76412f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"9bc97fd1-13aa-11e5-9f4a-79bac4380368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"9bc97fd2-13aa-11e5-9f4a-7b2cc05bc405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[504,365,366,415,9],"tindex":"9bc97fd3-13aa-11e5-9f4a-23fddd4b822b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"total","maxElements":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"9bc97fd4-13aa-11e5-9f4a-a357d4f86e27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524],"tindex":"9bc97fd5-13aa-11e5-9f4a-15f3f368585d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"uniqueIndex","nextCalled":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"9bc97fd6-13aa-11e5-9f4a-c5bcb82d4b32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:59","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BidiMap<K, V>"},"variableMap":{"tmpMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:88","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(java.util.Map<V, K> , java.util.Map<K, V> , org.apache.commons.collections4.BidiMap<K, V>)"},"status":-2},{"failures":[],"tindex":"9bc97fd7-13aa-11e5-9f4a-d576ef7dae0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}