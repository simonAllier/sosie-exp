{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":558,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":307,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":650,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":383,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":316,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":576,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":451,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":66,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":113,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":111,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":461,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":626,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":728,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":396,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":429,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":581,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":315,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":485,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":107,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":649,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":707,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":264,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":577,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":542,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":700,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":506,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":308,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":527,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":173,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":237,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":346,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":131,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":486,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":727,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":148,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":698,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":405,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection":699,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":326,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":160,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":358,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":497,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":413,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":246,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":660,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":627,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":583,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":472,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":579,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":511,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":145,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":174,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":273,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":96,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":456,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":452,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":137,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":683,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":321,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":233,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":207,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":559,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":556,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":99,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":631,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":51,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":108,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":449,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":243,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":345,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":224,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":476,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":330,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":228,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":424,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":446,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":447,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":709,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":715,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":658,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":64,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":617,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":481,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":482,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":480,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":180,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":664,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":143,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":347,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":582,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":6,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":335,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":435,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":719,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":721,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":106,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":244,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":288,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":568,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":705,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":722,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":672,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":478,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":477,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":574,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":479,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":314,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":313,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":373,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":312,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":372,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":611,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":90,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":200,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":59,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":706,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":60,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":376,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":608,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":48,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":231,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":463,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":693,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":77,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":357,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":220,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":648,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":540,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":85,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":487,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":697,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":625,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":422,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":689,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":691,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":76,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":530,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":685,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":155,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":557,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":668,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":510,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":621,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":725,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":34,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":117,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":433,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":44,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":484,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":591,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":470,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":153,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":729,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":661,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":290,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":552,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":354,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":455,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":79,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":319,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":175,"org.apache.commons.collections4.map.LinkedMapTest.testReset":344,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":4,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":364,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":724,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":196,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":65,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":426,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":656,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":171,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":13,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":640,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":686,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":245,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":642,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":605,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":653,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":27,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":657,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":240,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":374,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":381,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":639,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":655,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":292,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":112,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":80,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":427,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":439,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":214,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":507,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":723,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":92,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":437,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":409,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":133,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":140,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":256,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":393,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":162,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":593,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":342,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":607,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":667,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":417,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":695,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":204,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":688,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":464,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":442,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":53,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":503,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":285,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":209,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":599,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":493,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":518,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":702,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":54,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":684,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":635,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":620,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":596,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":614,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":659,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":378,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":377,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":189,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":379,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":594,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":643,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":561,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":512,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":287,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":367,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":526,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":499,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":681,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":712,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":55,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":671,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":495,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":232,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":168,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":251,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":615,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":638,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":436,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":682,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":636,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":415,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":613,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":416,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":532,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":18,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":267,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":545,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":502,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":590,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":520,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":302,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":515,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":546,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":8,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":718,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":320,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":0,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":473,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":453,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":549,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":531,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":710,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":714,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":567,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":110,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":323,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":469,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":550,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":628,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":115,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":338,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":123,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":122,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":690,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":332,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":408,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsSelfHashCode":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":673,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":355,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":674,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":24,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":78,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":269,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":270,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":647,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":324,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":726,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":612,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":167,"org.apache.commons.collections4.map.LRUMapTest.testLRU":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":687,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":182,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":50,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":141,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":465,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":505,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":238,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":318,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":602,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":235,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":624,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":97,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":560,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":22,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":601,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":488,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":597,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":467,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":221,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":130,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":386,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":423,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":708,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":227},"transformations":[{"failures":[],"tindex":"523e623b-13b0-11e5-a0b6-313cd0cb4222","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"523e623c-13b0-11e5-a0b6-13982cfd5dbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"523e894d-13b0-11e5-a0b6-7d000230758b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"status":-2},{"failures":[],"tindex":"523e894e-13b0-11e5-a0b6-61be7509d9c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"523e894f-13b0-11e5-a0b6-8ddcc8c62309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"523f2590-13b0-11e5-a0b6-79fa0fc828b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"hash1","index":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"523f4ca1-13b0-11e5-a0b6-dbe645472c44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":0},{"failures":[],"tindex":"523f4ca2-13b0-11e5-a0b6-2d617707e24b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"largestKey","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[63,64,65,66,67,68],"tindex":"523f4ca3-13b0-11e5-a0b6-a1e4fdcd22ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"k","vDown":"vDown","delta":"start2","end2":"end2","this":"this","i":"end2","end1":"end1","k":"k","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[69,70],"tindex":"523f73b4-13b0-11e5-a0b6-6b3d56fcbb87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"523f73b5-13b0-11e5-a0b6-4992fdcb408f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":0},{"failures":[],"tindex":"523f73b6-13b0-11e5-a0b6-031bc11a531e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"523fe8e7-13b0-11e5-a0b6-7dfaf01f5c14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[71],"tindex":"523fe8e8-13b0-11e5-a0b6-1fc93abd9f3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:167","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior = org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior"},"status":-1},{"failures":[],"tindex":"523fe8e9-13b0-11e5-a0b6-df36fde5e8d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[72,73,74],"tindex":"523fe8ea-13b0-11e5-a0b6-31bcb37abe94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:378","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[75,76],"tindex":"523fe8eb-13b0-11e5-a0b6-e7de935ca1b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"nextCalled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"523fe8ec-13b0-11e5-a0b6-3123636d5f93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[],"tindex":"523fe8ed-13b0-11e5-a0b6-1bec77dced69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"523fe8ee-13b0-11e5-a0b6-0bc83f94b0e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"52400fff-13b0-11e5-a0b6-6398400c849a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"52401000-13b0-11e5-a0b6-a3e82960b643","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:366","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"52401001-13b0-11e5-a0b6-859a99ea3712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2416","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"52401002-13b0-11e5-a0b6-a3afd4d4e952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[111,112,33,34,113,114,115,116,117,35,36,37,38,39,40,118,41,42,43,44,119,120,121,122,123,124,125,126,127,128],"tindex":"52401003-13b0-11e5-a0b6-61dc3a41fa20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"root","left":"entry","right":"current","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"52401004-13b0-11e5-a0b6-290e84c0185b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[129,130,131,132,133],"tindex":"52401005-13b0-11e5-a0b6-c3b32a175df4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,49,50,52,53,54,57,58,59,60,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"tindex":"52403716-13b0-11e5-a0b6-0dd37a79f834","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[197,198,94,95,96,97,98,99,100,199,200,201,101,102,103,104,105,106,107,108,109,110,202,203],"tindex":"52403717-13b0-11e5-a0b6-a13087484c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"52403718-13b0-11e5-a0b6-89b30de96018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"variableMap":{"result":"args","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"52403719-13b0-11e5-a0b6-31fab7043b11","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[204,205,206,207],"tindex":"5240371a-13b0-11e5-a0b6-c17c3ad4178b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"5240371b-13b0-11e5-a0b6-c1ca3729480b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"newCapacity","currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,204,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,134,135,260,136,137,138,261,262,139,263,140,264,265,141,142,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,143,144,300,145,146,147,301,302,148,303,149,304,305,150,151,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,49,50,51,52,53,54,55,56,57,331,58,332,333,59,60,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,152,153,368,154,155,156,369,370,157,371,158,372,373,159,160,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,170,171,405,172,173,174,406,407,175,408,176,409,410,177,178,411,412,413,414,415,416,417,418,419,420,206,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,179,180,436,181,182,183,437,438,184,439,185,440,441,186,187,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,188,189,468,190,191,192,469,470,193,471,194,472,473,195,196,474,475,476,477,478,479,480,481,482,483],"tindex":"52405e2c-13b0-11e5-a0b6-e5b60a2081d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"newCapacity","expectedModCount":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[284],"tindex":"52405e2d-13b0-11e5-a0b6-1bce0551e6ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"52405e2e-13b0-11e5-a0b6-0b0554f3700f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[484,485],"tindex":"52405e2f-13b0-11e5-a0b6-d39505e1a5b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"52405e30-13b0-11e5-a0b6-bbe868c7c259","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:76","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) || (org.apache.commons.collections4.Predicate<? super T>.evaluate(T))"},"status":-2},{"failures":[],"tindex":"52405e31-13b0-11e5-a0b6-c37d9ed3c9fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[486,487,488,489],"tindex":"52408542-13b0-11e5-a0b6-0df6bedfdbe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"52408543-13b0-11e5-a0b6-e95359a9e629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"node","to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[64,65,67,68],"tindex":"52408544-13b0-11e5-a0b6-87533a0d8dcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"52408545-13b0-11e5-a0b6-4b809f7dfb91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"52425a06-13b0-11e5-a0b6-c5942c251314","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH","index":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:66","type":"CtLocalVariableImpl","sourcecode":"final int int = int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":0},{"failures":[],"tindex":"52425a07-13b0-11e5-a0b6-fde44ee954dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"left","prior":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"52428118-13b0-11e5-a0b6-f3055ab1c9fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":0},{"failures":[],"tindex":"52428119-13b0-11e5-a0b6-65f14ba5192b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"5242811a-13b0-11e5-a0b6-d3656ba3142b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"helper":"helper","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"status":-2},{"failures":[490,491,492,493,494],"tindex":"5242811b-13b0-11e5-a0b6-0711c0d24d2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[129,130,495,132,133],"tindex":"5242811c-13b0-11e5-a0b6-a1a3fb5a264a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[496,497,498,499,500,501,502,503,504,505],"tindex":"5242a82d-13b0-11e5-a0b6-67127557436b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"previousObjectSet","beforeFirst":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[506,496,497,498,499,507,500,501,502,503,504,505],"tindex":"5242a82e-13b0-11e5-a0b6-c561ea237f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[508],"tindex":"5242a82f-13b0-11e5-a0b6-fdb964db5260","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":-1},{"failures":[],"tindex":"5242cf40-13b0-11e5-a0b6-c182311a5fed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[509],"tindex":"5242cf41-13b0-11e5-a0b6-c112946dc26a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:80","type":"CtInvocationImpl","sourcecode":"java.util.Queue<E>.clear()"},"status":-1},{"failures":[111,112,33,115,116,117,35,36,510,37,38,39,40,118,41,42,43,44,119,120,121,122,123,124,125,126,127,47,48,128,511,512,513,514],"tindex":"5242cf42-13b0-11e5-a0b6-ef03a8d81064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[],"tindex":"5242cf43-13b0-11e5-a0b6-133cceeb78f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[515,516,517],"tindex":"5242cf44-13b0-11e5-a0b6-c56ba96bec82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"5242cf45-13b0-11e5-a0b6-6995d7777ec8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:622","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[518,519,197,487,198,486,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,94,95,540,96,97,98,541,99,100,542,543,544,545,546,547,548,549,199,489,200,488,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,201,568,569,570,571,572,202,203,573,574,101,102,575,103,104,105,576,106,107,577,108,578,579,109,110,580,581,582,583,584,585,586],"tindex":"5242cf46-13b0-11e5-a0b6-2fbddb834a6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"5242f657-13b0-11e5-a0b6-5bfc740a7943","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"5242f658-13b0-11e5-a0b6-05f536166f2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[587],"tindex":"5242f659-13b0-11e5-a0b6-d51fa7724404","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:180","type":"CtAssignmentImpl","sourcecode":"boolean = int >= 0"},"variableMap":{"result":"result","comparison":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:174","type":"CtAssignmentImpl","sourcecode":"boolean = int > 0"},"status":-1},{"failures":[588],"tindex":"5242f65a-13b0-11e5-a0b6-01a98d7f2968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[108,110,565,201,568,571,572,202,203,573],"tindex":"5242f65b-13b0-11e5-a0b6-750f94efee30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"52431d6c-13b0-11e5-a0b6-3d9049df03f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"left","current":"node","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"52431d6d-13b0-11e5-a0b6-a3f15a233912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"x","dataElement":"dataElement","child":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"52431d6e-13b0-11e5-a0b6-b3a1d577a96e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[589,590],"tindex":"52431d6f-13b0-11e5-a0b6-0fd8edd593dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[591,592,593,594,595,596,597],"tindex":"52434480-13b0-11e5-a0b6-0d3a3c1a1aa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"52434481-13b0-11e5-a0b6-9b819aeae075","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:194","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().clear()"},"status":-2},{"failures":[598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,77,630,78,80,81,82,86,87,88,89,92,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"52434482-13b0-11e5-a0b6-fd75c49d4a93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[668,669,670,671],"tindex":"52434483-13b0-11e5-a0b6-e9328b0c6f15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"52436b94-13b0-11e5-a0b6-99e5d16f922e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"node","parent":"predecessor","left":"node","root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[],"tindex":"52436b95-13b0-11e5-a0b6-f7740a8d6ef8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"52436b96-13b0-11e5-a0b6-6da7266d1770","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[],"tindex":"52436b97-13b0-11e5-a0b6-25ba8fa35172","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"h","parent":"h","left":"h","h":"h","right":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[111,112,33,115,116,117,35,36,37,38,39,118,41,42,43,44,119,120,121,122,123,124,125,126,127,47,48,128],"tindex":"524392a8-13b0-11e5-a0b6-e3fb67e0a92b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[],"tindex":"524392a9-13b0-11e5-a0b6-a3564dd6d014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[345,346,347,672],"tindex":"5243e0ca-13b0-11e5-a0b6-35fdc815ab81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"5243e0cb-13b0-11e5-a0b6-317af6479d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-2},{"failures":[673,674,675,676,677,678,679,680,681,682,683],"tindex":"5243e0cc-13b0-11e5-a0b6-8d7b0e0e6aaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[684,685],"tindex":"5243e0cd-13b0-11e5-a0b6-8742a25a7b1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"5243e0ce-13b0-11e5-a0b6-0d9d2826edcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"root","current":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"524407df-13b0-11e5-a0b6-2b9080823de7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[63,64,65,66,67,68],"tindex":"524407e0-13b0-11e5-a0b6-0719838ab788","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[686,687,688,689,690,691,692,693,694,695,696],"tindex":"524407e1-13b0-11e5-a0b6-c1e93bfc0caa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:603","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.list.AbstractLinkedList<E>.size())"},"status":-1},{"failures":[],"tindex":"524407e2-13b0-11e5-a0b6-913488595917","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[697,698,699,700,701,702,703,704],"tindex":"524407e3-13b0-11e5-a0b6-95ce9dabc3f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[705,706,707,708],"tindex":"524407e4-13b0-11e5-a0b6-a51be7ccd1b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"524407e5-13b0-11e5-a0b6-b518cb5d355d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"524407e6-13b0-11e5-a0b6-ed087d26031a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[111,112,113,114,33,34,115,116,117,709,35,36,510,37,38,39,40,118,41,710,42,711,712,43,44,713,714,715,119,120,121,122,123,124,125,716,717,126,45,718,719,127,46,47,48,128],"tindex":"524407e7-13b0-11e5-a0b6-2badf605a033","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"524407e8-13b0-11e5-a0b6-45bd9f522591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"524407e9-13b0-11e5-a0b6-8d03473e66b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"52442efa-13b0-11e5-a0b6-59d43104910e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"52442efb-13b0-11e5-a0b6-d9b1527dffbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[720,721,722,723,724,725,726,727,728,729,730,731],"tindex":"52442efc-13b0-11e5-a0b6-bbbea64a781c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"valueSet","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}