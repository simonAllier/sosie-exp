{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":998,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":740,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":111,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":503,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":134,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":915,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":198,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":437,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":986,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":657,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":11,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":846,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":1030,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":1001,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":73,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":584,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":580,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":320,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":896,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":852,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":963,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":164,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":603,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":281,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":94,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":441,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":112,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":307,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":941,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":586,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":176,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":1042,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":37,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":479,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":510,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":758,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":801,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":1022,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":170,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":962,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":760,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":507,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":202,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":217,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":879,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":329,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":976,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":667,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":803,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":663,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":616,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":838,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":564,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":929,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":98,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":291,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":1002,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":864,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":916,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":1012,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":817,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":692,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":1029,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":274,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":339,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":767,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":21,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":848,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":621,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":314,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":140,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":595,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":822,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":25,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":738,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":471,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":954,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":572,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":727,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":175,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":247,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":137,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":590,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":63,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":729,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":1018,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":984,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":806,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":797,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":845,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":252,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":253,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":809,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":171,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":227,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":754,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":821,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":807,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":709,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":129,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":177,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":133,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":374,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":872,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":861,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":120,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":2,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":456,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":308,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":565,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":883,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":906,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":566,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":1020,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":57,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":322,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":869,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":983,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":199,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":715,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":781,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":687,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":959,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":723,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":468,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":151,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":313,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":180,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":753,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":92,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":492,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":939,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":537,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":975,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":519,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":814,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":262,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":101,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":450,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":695,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":935,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":858,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":841,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":469,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":1032,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":737,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":1049,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":654,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":650,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":991,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":502,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":467,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":534,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":996,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":617,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":720,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":246,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":609,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":999,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":192,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":59,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":894,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":997,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":486,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":888,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":346,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":772,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":345,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":258,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":344,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":805,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":485,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":960,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":1021,"org.apache.commons.collections4.map.LRUMapTest.testReset":306,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":556,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":974,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":383,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":789,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":877,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":379,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":708,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":576,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":961,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":759,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":124,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":993,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":185,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":547,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":228,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":907,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":394,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":528,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":163,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":315,"org.apache.commons.collections4.map.LinkedMapTest.testReset":174,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":771,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":221,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":330,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":244,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":628,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":926,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":790,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":934,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":832,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":957,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":863,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":714,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":368,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":596,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":33,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":967,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":739,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":676,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":427,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":887,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":666,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":409,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":874,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":670,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":280,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":722,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":733,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":787,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":531,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":245,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":745,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":588,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":273,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":724,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":411,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":629,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":389,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":871,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":390,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":940,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":1036,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":808,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":1016,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":664,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":50,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":1014,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":58,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":142,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":949,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":951,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":13,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":989,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":148,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":953,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":207,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":615,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":206,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":208,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":269,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":1041,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":184,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":93,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":645,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":494,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":581,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":1024,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":515,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":516,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":514,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":218,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":710,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":179,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":1015,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":866,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":465,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":567,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":908,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":837,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":971,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":1037,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":647,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":87,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":719,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":756,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":286,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":316,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":310,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":892,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":127,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":505,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":102,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":445,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":197,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":965,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":899,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":1053,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":558,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":1052,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":688,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":885,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":165,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":810,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":19,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":317,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":697,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":416,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":979,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":694,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":457,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":904,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":466,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":508,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":376,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":240,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":785,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":598,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":298,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":406,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":34,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":186,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":988,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":168,"org.apache.commons.collections4.map.LRUMapTest.testLRU":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":793,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":622,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":635,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":937,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":752,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":835,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":283,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":568,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":522,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":569,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":570,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":430,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":897,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":686,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":847,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":886,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":1033,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":428,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":552,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":955,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":718,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":743,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":798,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":769,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":1040,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":447,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":909,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":594,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":338,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":978,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":229,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":819,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":1011,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":685,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":826,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":337,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":500,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":60,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":964,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":840,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":421,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":243,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":84,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":348,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":561,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":1005,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":67,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":297,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":890,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":930,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":15,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":553,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":942,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":902,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":717,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":1026,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":396,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":833,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":1006,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":194,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":990,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":583,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":637,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":958,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":412,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":795,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":757,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":103,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":559,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":791,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":655,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":876,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":987,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":381,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":765,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":802,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":880,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":533,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":849,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":827,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":599,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":1023,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":384,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":860,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":682,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":1044,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":1043,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":606,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":707,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":241,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":353,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":278,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":1035,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":418,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":145,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":796,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":893,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":689,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":764,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":255,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":224,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":167,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":922,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":426,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":932,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":1039,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":905,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":882,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":761,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":933,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":270,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":683,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":225,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":633,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":748,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":995,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":830,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":952,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":195,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":917,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":520,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":538,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":623,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":65,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":1027,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":434,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":104,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":304,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":422,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":204,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":318,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":910,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":777,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":451,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":994,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":438,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":544,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":545,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":24,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":706,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":106,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":620,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":704,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":859,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":891,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":571,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":831,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":867,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":630,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":1034,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":557,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":96,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":794,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":42,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":172,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":403,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":956,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":911,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":1007,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":535,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":844,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":249,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":248,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":679,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":868,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":250,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":750,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":668,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":690,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":116,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":481,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":834,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":284,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":56,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":608,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":610,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":643,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":1047,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":1046,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":1045,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":799,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":513,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":1025,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":696,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":532,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":279,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":152,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":677,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":319,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":823,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":370,"org.apache.commons.collections4.ListUtilsTest.testSubtract":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":123,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":9,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":480,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":776,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":768,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":811,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":414,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":920,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":782,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":1004,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":542,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":543,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":644,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":40,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":829,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":855,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":575,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":918,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":919,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":818,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":618,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":1028,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":878,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":931,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":651,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":640,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":854,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":702,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":85,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":512,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":530,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":973,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":105,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":277,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":912,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":972,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":591,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":914,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":865,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":14,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":873,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":804,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":1008,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":477,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":214,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":482,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":744,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":712,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":579,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":1019,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":948,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":360,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":375,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":820,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":800,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":1003,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":985,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":377,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":749,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":1031,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":408,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":363,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":613,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":459,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":680,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":5,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":266,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":1038,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":475,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":211,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":203,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":432,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":122,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":12,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":201,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":549,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":496,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":397,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":529,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":675,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":498,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":521,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":420,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":661,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":699,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":943,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":392,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":587,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":324,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":573,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":900,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":159,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":161,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":927,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":75,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":980,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":48,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":945,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":625,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":81,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":380,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":439,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":263,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":631,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":597,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":51,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":881,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":815,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":91,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":731,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":602,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":285,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":898,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":352,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":843,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":862,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":143,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":705,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":725,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":693,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":816,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":928,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":1051,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":231,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":735,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":526,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":779,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":778,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":497,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":511,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":678,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":652,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":433,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":671,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":913,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":462,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":604,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":601,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":734,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":107,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":1048,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":407,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":870,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":144,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":454,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":875,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":425,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":296,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":336,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":681,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":476,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":783,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":435,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":669,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":540,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":977,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":233,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":506,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":665,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":950,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":45,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":271,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":786,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":780,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":659,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":593,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":627,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":607,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":824,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1010,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":20,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":741,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":969,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":1017,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":1050,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":923,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":925,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":700,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":924,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":323,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":132,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":166,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":242,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":901,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":970,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":656,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":674,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":775,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":842,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":856,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":509,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":992,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":884,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":364,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":691,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":125,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":792,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":483,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":672,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":361,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":489,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":895,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":944,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":721,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":903,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":149,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":836,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":288,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":289,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":1000,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":736,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":1009,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":784,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":47,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":711,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":139,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":136,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":147,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":982,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":413,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":311,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":921,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":7,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":946,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":1013,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":947,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":470,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":981,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":889,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":632,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":857,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":35,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":527,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":966,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":342,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":853,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":938,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":850,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":100,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":415,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":612,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":312,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":812,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":788,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":828,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":968,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":331},"transformations":[{"failures":[],"tindex":"00cef2f6-13bc-11e5-a236-a5d09a1145a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:637","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"00cef2f7-13bc-11e5-a236-69068afc5b67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"00cef2f8-13bc-11e5-a236-29662156542d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"00cf1a09-13bc-11e5-a236-9b49d6f15383","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"normalMap","decorated":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"00cf1a0a-13bc-11e5-a236-ef568d477e88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"variableMap":{"childValue":"key","out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"00cf1a0b-13bc-11e5-a236-25ea0e06243a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-2},{"failures":[],"tindex":"00cf1a0c-13bc-11e5-a236-13ab7d00c2f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1476","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BoundedCollection<?>.isFull()"},"variableMap":{"bcoll":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"00cf1a0d-13bc-11e5-a236-6d5e3e297e40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[4,5,6,7],"tindex":"00cf411e-13bc-11e5-a236-77dbe7402acf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:999","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeFloat(float)"},"status":-1},{"failures":[8,9,10],"tindex":"00cf411f-13bc-11e5-a236-390e1f09c0c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"00cf4120-13bc-11e5-a236-db8a48380165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"h":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"00cf4121-13bc-11e5-a236-a5beb6a0ab23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[32,33,34],"tindex":"00cf4122-13bc-11e5-a236-d3c3c0e9e4d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434],"tindex":"00cf6833-13bc-11e5-a236-57df31b44f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[10],"tindex":"00cf6834-13bc-11e5-a236-bb5dbc24f3b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[0,1,435,436,2,437,3,438,439,440],"tindex":"00cf6835-13bc-11e5-a236-9d75b88aa90d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"00d24e66-13bc-11e5-a236-437f42f48afa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[441,442],"tindex":"00d24e67-13bc-11e5-a236-a1085465cf3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:109","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"00d24e68-13bc-11e5-a236-7d7e6fb0a19a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"child","right":"child","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[192,198,215,327,333,350],"tindex":"00d24e69-13bc-11e5-a236-45e760b5f6e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"00d24e6a-13bc-11e5-a236-9f454abd1c65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"00d24e6b-13bc-11e5-a236-6d07a37eea57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"00d24e6c-13bc-11e5-a236-9ba223f28905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"00d24e6d-13bc-11e5-a236-41bd0e614907","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","leftChild":"xFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"00d2757e-13bc-11e5-a236-597293c30ef3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index2","newCapacity":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[463],"tindex":"00d2757f-13bc-11e5-a236-cfa40465e1fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior == null) {\n    throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n} "},"variableMap":{"unknownObjectBehavior":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:378","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n    if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n        boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[84,464,85,90],"tindex":"00d27580-13bc-11e5-a236-db00d65ac05a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"00d27581-13bc-11e5-a236-dde89a321230","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"00d27582-13bc-11e5-a236-d55be599671c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"00d27583-13bc-11e5-a236-3585529ed532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[],"tindex":"00d27584-13bc-11e5-a236-5f33c3155a2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"label","defaultValue":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"00d27585-13bc-11e5-a236-8d27f3382a27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":0},{"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"tindex":"00d27586-13bc-11e5-a236-0192276c8faa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[481,482],"tindex":"00d27587-13bc-11e5-a236-e530255663be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:225","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[11,12,13,483,484,485,16,17,486,18,19,20,21,22,23,24,25,26,487,488,489,27,28,29,30,31,490,491,492,493,494,495,496,497],"tindex":"00d27588-13bc-11e5-a236-f941f1aab4a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[],"tindex":"00d29c99-13bc-11e5-a236-7bbea8bce352","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex","otherOffsetInBits":"bitIndex","otherLengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"00d29c9a-13bc-11e5-a236-e94e2cef2421","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583],"tindex":"00d29c9b-13bc-11e5-a236-d7baeb4c7dbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[584],"tindex":"00d29c9c-13bc-11e5-a236-c9e7445cc299","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[],"tindex":"00d29c9d-13bc-11e5-a236-37ef19ca72dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:378","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"00d29c9e-13bc-11e5-a236-b565dfe84916","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtIfImpl","sourcecode":"if (java.lang.Number == null) {\n    java.lang.Number = java.lang.Number;\n} "},"variableMap":{"answer":"key3","defaultValue":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"00d29c9f-13bc-11e5-a236-b34ea42ace49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"00d29ca0-13bc-11e5-a236-675b87b8288f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[585,586,587,588,589,590,591,592,593,594,595,443,596,597,598,444,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,445,629,630,631,446,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,447,664,665,666,448,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,449,450,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,451,714,715,716,452,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,453,748,749,750,454,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,455,456,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,457,794,795,796,458,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,459,460,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,461,858,859,860,462,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888],"tindex":"00d29ca1-13bc-11e5-a236-2186a79327b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"00d2c3b2-13bc-11e5-a236-b5a574ecef34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[32,889,890,891,892],"tindex":"00d2c3b3-13bc-11e5-a236-a371f3cd69a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965],"tindex":"00d2c3b4-13bc-11e5-a236-91d2c5d29680","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"00d2c3b5-13bc-11e5-a236-eba2bb93b7c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"00d2c3b6-13bc-11e5-a236-7533f03f0c55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,90,84,85,86,87,88,89,966,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,174,182,183,180,181,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,309,311,312,313,314,359,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,416,967,417,418,420,421,422,423,425,426,427,428,429,430,431,432,968,433,434],"tindex":"00d2eac7-13bc-11e5-a236-ad801ef20285","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:346","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"variableMap":{"entry":"entry","previous":"entry","this":"this","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"00d2eac8-13bc-11e5-a236-c18888719422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-2},{"failures":[],"tindex":"00d2eac9-13bc-11e5-a236-9b0ec6ee530f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"current","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"00d2eaca-13bc-11e5-a236-b777c86f5f21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-2},{"failures":[969,970,971,972,973,974,975,976,977,978],"tindex":"00d2eacb-13bc-11e5-a236-091d3086120a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[979,980],"tindex":"00d2eacc-13bc-11e5-a236-4b3d0166d1ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-1},{"failures":[],"tindex":"00d2eacd-13bc-11e5-a236-7b1926e1d875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"00d311de-13bc-11e5-a236-d107a15c624b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[],"tindex":"00d311df-13bc-11e5-a236-03949145fc2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:666","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"00d311e0-13bc-11e5-a236-7d5ec7dc474c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":0},{"failures":[],"tindex":"00d311e1-13bc-11e5-a236-a54cb88922a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"00d311e2-13bc-11e5-a236-91782a936e6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"left","parent":"node","left":"left","root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"00d311e3-13bc-11e5-a236-effaaf6dcc1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"00d311e4-13bc-11e5-a236-8b9ad4b4170f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[928,929,930,931,932,934,935,937,938,939,940,941,944,945,946,960,963],"tindex":"00d311e5-13bc-11e5-a236-7db8c430d068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"00d311e6-13bc-11e5-a236-aff91977710c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"00d311e7-13bc-11e5-a236-fb3062ea1dd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K), V)"},"status":-2},{"failures":[192,198,215,327,333,350],"tindex":"00d338f8-13bc-11e5-a236-dd88159adc42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"00d338f9-13bc-11e5-a236-b7fe1666da67","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:546","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"00d338fa-13bc-11e5-a236-090d95e760cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"00d338fb-13bc-11e5-a236-8b5df559a98e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[],"tindex":"00d338fc-13bc-11e5-a236-65c6b3c7155e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[981,982,983,984,985,986],"tindex":"00d338fd-13bc-11e5-a236-6bc91f3953a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"end2","lengthInBits":"start2","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"start1","otherOffsetInBits":"j","otherLengthInBits":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-1},{"failures":[0,1,2,3],"tindex":"00d338fe-13bc-11e5-a236-01eb3fb3a64b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"00d338ff-13bc-11e5-a236-c1a277918c75","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"variableMap":{"predicates":"key1","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"00d33900-13bc-11e5-a236-c753ad60e22b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"00d36011-13bc-11e5-a236-eb4d8c794d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"00d36012-13bc-11e5-a236-05623ec71779","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"right","right":"current","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[987,988,989,990,991],"tindex":"00d36013-13bc-11e5-a236-a5a3c1b85c67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[],"tindex":"00d36014-13bc-11e5-a236-9fe49558bf73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"00d3d545-13bc-11e5-a236-db7f2efe9c13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[],"tindex":"00d3d546-13bc-11e5-a236-a716dbe52ae2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"00d3d547-13bc-11e5-a236-714d4d95fdf4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:746","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> == null) || (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"status":-2},{"failures":[0,1,435,2,3],"tindex":"00d3d548-13bc-11e5-a236-13e9c2f8be39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,0,1007,1,1008,1009,1010,1011,1012,1013,1014,1015,1016],"tindex":"00d3d549-13bc-11e5-a236-d58e5e0c4453","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[1017,52,1018,1019,1020,104,1021,1022,1023,197,1024,1025,1026,279,1027,1028,1029,332,1030,1031,967,1032,968,1033],"tindex":"00d3d54a-13bc-11e5-a236-bd40fd246424","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"00d3fc5b-13bc-11e5-a236-ff51adfebb46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[981,982,983,984,985,986],"tindex":"00d3fc5c-13bc-11e5-a236-3923e8403358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"d","vDown":"vUp","delta":"end2","end2":"d","this":"this","i":"start2","end1":"offset","k":"start1","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[1034,1035],"tindex":"00d3fc5d-13bc-11e5-a236-db31320c6620","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-1},{"failures":[969,970,971,972,973,975,976,977,978],"tindex":"00d3fc5e-13bc-11e5-a236-b1b5c0c861af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"00d3fc5f-13bc-11e5-a236-4bfb83ba9153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"previous","entry":"previous","key2":"key2","hashCode":"hashCode","key3":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"00d3fc60-13bc-11e5-a236-311bac9a76af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"p","e":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:591","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"00d3fc61-13bc-11e5-a236-b556e410b361","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rval","y":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"00d3fc62-13bc-11e5-a236-c1ecc4ee6b4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1231","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(int)"},"variableMap":{"size":"h","out":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"00d3fc63-13bc-11e5-a236-0b31efe37b54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[1036,1037,992,1038,993,994,996,1039,1040,1041,1042,999,1000,1002,1003,1004,1005,1006,0,1007,1,1043,1044,1045,1046,1047,1048,1049,1050,1008,1009,1051,1010,1011,1012,1013,1014,1015,1016,1052,1053],"tindex":"00d42274-13bc-11e5-a236-07257f683d05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"00d42275-13bc-11e5-a236-9db62d8a1b9f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"00d42276-13bc-11e5-a236-558fec368110","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"00d42277-13bc-11e5-a236-31a4072fc5d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[981,982,984,985],"tindex":"00d42278-13bc-11e5-a236-3f9ce2bb24f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"start1","modifications":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}