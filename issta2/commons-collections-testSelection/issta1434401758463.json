{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":467,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":360,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":404,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":106,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":146,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":502,"org.apache.commons.collections4.CollectionUtilsTest.collect":476,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":171,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":31,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":371,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":16,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":49,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":103,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":198,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":255,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":350,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":8,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":275,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":297,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":7,"org.apache.commons.collections4.CollectionUtilsTest.transform2":474,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":452,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":327,"org.apache.commons.collections4.CollectionUtilsTest.select":359,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":311,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":13,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":284,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":437,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":113,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":211,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":152,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":427,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":319,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":341,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":264,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":322,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":496,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":115,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":449,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":179,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":374,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":61,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":422,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":312,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":401,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":270,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":330,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":233,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":32,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":149,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":194,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":225,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":485,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":473,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":241,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":367,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":378,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":313,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":271,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":480,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":269,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":453,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":289,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":331,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":10,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":436,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":109,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":398,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":93,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":490,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":98,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":308,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":472,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":151,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":369,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":204,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":21,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":223,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":244,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":334,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":316,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":199,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":433,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":160,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":407,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":481,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":402,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":184,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":324,"org.apache.commons.collections4.ListUtilsTest.testSubtract":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":261,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":224,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":287,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":318,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":232,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":379,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":150,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":460,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":345,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":161,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":417,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":265,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":348,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":295,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":178,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":92,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":72,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":207,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":482,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":165,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":370,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":305,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":366,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":456,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":96,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":256,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":479,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":294,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":382,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":136,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":477,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":110,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":432,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":239,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":445,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":188,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":281,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":100,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":272,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":253,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":197,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":332,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":468,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":208,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":486,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":234,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemove":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":484,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":99,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":409,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":228,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":250,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":441,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":442,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":443,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":220,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":129,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":153,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":466,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":470,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":87,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":59,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":84,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":298,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":424,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":262,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":127,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":226,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":362,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":263,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":128,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":193,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":12,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":210,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":243,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":242,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":222,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":343,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":347,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":167,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":53,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":380,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":426,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":292,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":172,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":376,"org.apache.commons.collections4.CollectionUtilsTest.isFull":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":60,"org.apache.commons.collections4.ListUtilsTest.testSelect":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":0,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":307,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":501,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":219,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":124,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":121,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":249,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":88,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":227,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":342,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":497,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":325,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":493,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":20,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":125,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":373,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":236,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":95,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":119,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":397,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":414,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":448,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":202,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":413,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":483,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":377,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":384,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":317,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":447,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAdd":457,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":301,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":406,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":364,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":439,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":390,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":463,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":326,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":387,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":388,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":158,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":471,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":157,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":336,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":94,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":396,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":117,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":423,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":450,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":102,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":247,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":217,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":182,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":408,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":335,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":421,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":504,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":85,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":418,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":303,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":315,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":429,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":195,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":279,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":2,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":464,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":132,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":183,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":492,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":55,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":114,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":131,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":133,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":9,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":337,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":259,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":168,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":201,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":6,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":251,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":328,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":487,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":237},"transformations":[{"failures":[0,1,2,3,4],"tindex":"ec4c81e2-13a0-11e5-951b-6d1a51c917f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ec4ca8f3-13a0-11e5-951b-f7a08440f0cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[5,6,7,8],"tindex":"ec4ca8f4-13a0-11e5-951b-6bb3a3a27426","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"ec4cd005-13a0-11e5-951b-43ee7999fe4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[1,9,10,11,12,13,14,15,16,17,18],"tindex":"ec4cd006-13a0-11e5-951b-b1e77b321394","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"value","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"ec4d6c47-13a0-11e5-951b-bba603f2d483","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[2,0,1,3,4],"tindex":"ec4d6c48-13a0-11e5-951b-3b3d53ae94a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ec4d6c49-13a0-11e5-951b-9d302c2e1896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ec4d6c4a-13a0-11e5-951b-5f60deb25edd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"deletedNode","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:998","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[19],"tindex":"ec4d6c4b-13a0-11e5-951b-e9319a01589e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"endIndexInBits","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"ec4d6c4c-13a0-11e5-951b-8d5c87c3ab12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[20],"tindex":"ec4d935d-13a0-11e5-951b-c5b6032b0d31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"ec4d935e-13a0-11e5-951b-5f81e1f180c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[9,13,17],"tindex":"ec4d935f-13a0-11e5-951b-bf9b80e66ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:160","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ec4d9360-13a0-11e5-951b-ab7bcdb021f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"ec4d9361-13a0-11e5-951b-ef344bca0233","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"ec4d9362-13a0-11e5-951b-57361aff59cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:57","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"ec4d9363-13a0-11e5-951b-1b7c396c5efb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[21],"tindex":"ec4d9364-13a0-11e5-951b-71fce94986c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1342","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int++;\n    java.util.Iterator<?>.next();\n}"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"ec4d9365-13a0-11e5-951b-43fcf2baf71d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"ec4dba76-13a0-11e5-951b-c759dc373c62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"variableMap":{"args":"result","paramTypes":"result","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-2},{"failures":[83,84,85,86],"tindex":"ec4dba77-13a0-11e5-951b-693fafafc01b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[87,88,89,90,91,92,24,25,27,28,29,30,93,31,32,33,34,94,50,51,95,96,97,54,55,57,58,59,60,61,62],"tindex":"ec4dba78-13a0-11e5-951b-b307ceab3bc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"ec4dba79-13a0-11e5-951b-9db837c46c92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"ec4dba7a-13a0-11e5-951b-a5bf82f08106","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"ec4dba7b-13a0-11e5-951b-7f8ab4f83605","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"ec4dba7c-13a0-11e5-951b-7f242a374f8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"ec4dba7d-13a0-11e5-951b-19e709973a5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ec4dba7e-13a0-11e5-951b-379fced21871","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1611","type":"CtIfImpl","sourcecode":"if ((O == null) || (!(O.equals(O)))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"ec4de18f-13a0-11e5-951b-b52ea01cf407","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:259","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[110,111,112,113,114,115],"tindex":"ec4de190-13a0-11e5-951b-9f1248dad9c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[116,117,118,119,120,121,122,113,123,124,115],"tindex":"ec4de191-13a0-11e5-951b-2db56e33a4b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[125,126],"tindex":"ec4de192-13a0-11e5-951b-33845144483e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"ec4de193-13a0-11e5-951b-2b41dc779eab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.NodeList == null) {\n    throw new java.lang.NullPointerException(\"NodeList must not be null\");\n} "},"variableMap":{"nodeList":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"ec4de194-13a0-11e5-951b-d50a804a2274","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"ec4de195-13a0-11e5-951b-2975e82cac31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[29,139,59,140],"tindex":"ec4de196-13a0-11e5-951b-4bd8f83e911d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ec4de197-13a0-11e5-951b-61a4d0c7936a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ec4de198-13a0-11e5-951b-637988f8ad65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"y","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[141,142,143,144],"tindex":"ec4e07a9-13a0-11e5-951b-7b35d92033c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"ec4e07aa-13a0-11e5-951b-2f7315150b9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"ec4e07ab-13a0-11e5-951b-ed0be5487467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[],"tindex":"ec4e07ac-13a0-11e5-951b-878b12ced298","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[],"tindex":"ec4e07ad-13a0-11e5-951b-67bf194fb2ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"ec4e07ae-13a0-11e5-951b-c9d3966c616e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"ec4e07af-13a0-11e5-951b-f7251650622b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"variableMap":{"closures":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":0},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"ec4e07b0-13a0-11e5-951b-b9e311c1d825","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"ec4e07b1-13a0-11e5-951b-352f0d406be7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"ec4e2ec2-13a0-11e5-951b-7139aa184f4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[203,204],"tindex":"ec4e2ec3-13a0-11e5-951b-f35242057445","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-1},{"failures":[205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,142,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,143,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,144,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"ec4e2ec4-13a0-11e5-951b-61dae7b74360","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[358,359],"tindex":"ec4ecb05-13a0-11e5-951b-336bce0bbcf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"ec4ef216-13a0-11e5-951b-8915ff9f9b94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ec4f1927-13a0-11e5-951b-b36d7dd46196","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[],"tindex":"ec4f1928-13a0-11e5-951b-bdbf1f38387d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)"},"status":-2},{"failures":[406,407],"tindex":"ec4f1929-13a0-11e5-951b-57218c8194c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"beforeFirst","removed":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:121","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[408,409],"tindex":"ec4f192a-13a0-11e5-951b-d5cb25ba0bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[32,34,410,94,411,412,42,43,44,45],"tindex":"ec4f192b-13a0-11e5-951b-0f6a01b94eb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455],"tindex":"ec4f192c-13a0-11e5-951b-0949c707c438","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[456,457,458,459,460,461],"tindex":"ec4f192d-13a0-11e5-951b-c1bd4c342ce3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[462,463,464,465],"tindex":"ec4f192e-13a0-11e5-951b-518f82d1352a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-1},{"failures":[32,34,94,411,412,42,43,44,45],"tindex":"ec4f403f-13a0-11e5-951b-0fb5723a74ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"ec4f4040-13a0-11e5-951b-a91c2a9f3c1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"ec4f4041-13a0-11e5-951b-896f4224c966","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"length","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"ec4f4042-13a0-11e5-951b-95075f1c21b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:141","type":"CtIfImpl","sourcecode":"if ((T[].int) > 0) {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), 0)));\n} "},"variableMap":{"result":"key4","array":"key4","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"ec4f4043-13a0-11e5-951b-9b009ae69295","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[98,99,100,101,102,103,104,105,466,106,107,108,109],"tindex":"ec4f6754-13a0-11e5-951b-4d772b710655","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"ec4f6755-13a0-11e5-951b-f79465be2793","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":0},{"failures":[5,6,7,8],"tindex":"ec4f6756-13a0-11e5-951b-2de357f32745","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[9,13,17],"tindex":"ec4f6757-13a0-11e5-951b-49f407ec6870","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:160","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ec4f6758-13a0-11e5-951b-0d359325df35","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"next","after":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"ec4f8e69-13a0-11e5-951b-c5d5c078c63b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"ec4f8e6a-13a0-11e5-951b-0b12f8dcc977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"ec4fb57b-13a0-11e5-951b-6fba86c6436c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"ec4fb57c-13a0-11e5-951b-3f03175d218d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:305","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:121","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.ArrayList<E>.size()"},"status":-2},{"failures":[],"tindex":"ec4fb57d-13a0-11e5-951b-69b0d9e3bf7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"right","predecessor":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ec4fb57e-13a0-11e5-951b-0f7b689b7e4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[467,468,469,470],"tindex":"ec4fdc8f-13a0-11e5-951b-bbf9c5d779ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"total":"h","object":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"ec4fdc90-13a0-11e5-951b-cb5a3bbcb8dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"ec4fdc91-13a0-11e5-951b-e9cda74cb2fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"ec4fdc92-13a0-11e5-951b-e70c8e9d4120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ec4fdc93-13a0-11e5-951b-6da20afa2c26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"ec4fdc94-13a0-11e5-951b-db3069c09fa7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[175,176,178,179,180,181,183,184,185,471,472,473],"tindex":"ec4fdc95-13a0-11e5-951b-512af98f891a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[474,475,476],"tindex":"ec4fdc96-13a0-11e5-951b-732c669c27d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends I> != null) {\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable<? extends I>.iterator(), org.apache.commons.collections4.Transformer<? super I, ? extends O>, R);\n} "},"status":-1},{"failures":[],"tindex":"ec4fdc97-13a0-11e5-951b-85fba3d43a99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"i","currentIndex":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ec502ab8-13a0-11e5-951b-615ea87f6fda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:274","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"ec502ab9-13a0-11e5-951b-abddb1fb1e85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[84,477,478,479],"tindex":"ec5051ca-13a0-11e5-951b-4bac002542e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"ec5051cb-13a0-11e5-951b-2b72c983bedc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:307","type":"CtIfImpl","sourcecode":"if (null != E) {\n    E[][(int)++] = null;\n    if ((int) >= (int)) {\n        int = 0;\n    } \n    boolean = false;\n} "},"status":0},{"failures":[480],"tindex":"ec5051cc-13a0-11e5-951b-9ff2132ad9ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1},{"failures":[481,482,483,484,485,486,487],"tindex":"ec5051cd-13a0-11e5-951b-459a389af805","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"ec5051ce-13a0-11e5-951b-0fb341c61f9f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"ec5051cf-13a0-11e5-951b-fb8cf5a1d76f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"previous","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[488,489,175,176,178,179,180,181,183,184,185,186,188,189,490,191,192,193,194,196,197,198,199,491,200],"tindex":"ec5051d0-13a0-11e5-951b-39e0d549466e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"ec5051d1-13a0-11e5-951b-b9113f782021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-2},{"failures":[32,34,94,43,44],"tindex":"ec5051d2-13a0-11e5-951b-1bd432313810","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[492,493,494,495,496,497,498,499,500],"tindex":"ec5051d3-13a0-11e5-951b-91ab061f4878","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"hash","expectedModCount":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ec5051d4-13a0-11e5-951b-a3bfb99bb9b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":0},{"failures":[382,392,395,19,501,502,503,504,505,506],"tindex":"ec5051d5-13a0-11e5-951b-9bc40f12ad51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}