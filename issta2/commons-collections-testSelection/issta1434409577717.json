{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":145,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":319,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":103,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":128,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":177,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":665,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":321,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":464,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":259,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":366,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":416,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":327,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":402,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":102,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":415,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":545,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":575,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":272,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":642,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":673,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":658,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":289,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":318,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":422,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":67,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":143,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":559,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":396,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":248,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":477,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":618,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":533,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":235,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":672,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":682,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":270,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":179,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":328,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":576,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":479,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":340,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":669,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":513,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":659,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":666,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":131,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":242,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":501,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":283,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":549,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":212,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":116,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":152,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":605,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":122,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":496,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":347,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":246,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":552,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":38,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":578,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":63,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":315,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":587,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":492,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":313,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":461,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":535,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":664,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":254,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":584,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":333,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":244,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":611,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":507,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":373,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":337,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":445,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":390,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":188,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":614,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":683,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":210,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":5,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":648,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":164,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":499,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":293,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":520,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":213,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":287,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":570,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":546,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":568,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":385,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":421,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":224,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":472,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":457,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":166,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":469,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":26,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":651,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":257,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":27,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":208,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":437,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":557,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":641,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":674,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":443,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":405,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":493,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":600,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":335,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":271,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":478,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":654,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":237,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":309,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":569,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":661,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":407,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":646,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":303,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":93,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":453,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":551,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":634,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":517,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":480,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":346,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":305,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":650,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":508,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":547,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":640,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":368,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":495,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":532,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":645,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":506,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":419,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":104,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":438,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":670,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":85,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":117,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":142,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":171,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":320,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":448,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":168,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":475,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":490,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":275,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":154,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":525,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":387,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":485,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":657,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":146,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":83,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":647,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":155,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":149,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":264,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":452,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":362,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":599,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":601,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":369,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":408,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":247,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":326,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":336,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":251,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":633,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":418,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":72,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":232,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":0,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":296,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":192,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":243,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":132,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":610,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":324,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":371,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":349,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":561,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":484,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":126,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove":35,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":110,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":628,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":489,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":589,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":598,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":629,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":193,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":94,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":652,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":656,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":322,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":76,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":207,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":638,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":505,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":380,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":567,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":21,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":301,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":394,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":473,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":548,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":57,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":339,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":181,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":180,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":308,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":585,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":538,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":167,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":209,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":609,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":253,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":414,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":594,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":595,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":512,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":22,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":450,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":468,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":655,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":426,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":245,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":530,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":364,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":442,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":106,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":361,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":411,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":314,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":202,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":294,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":579,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":588,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":383,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":204,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":203,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":284,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":424,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":474,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":75,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":435,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":680,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":519,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":4,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":681,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":406,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":454,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":613,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":510,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":323,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":460,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":141,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":423,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":262,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":543,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":274,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":107,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":417,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":441,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":534,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":591,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":429,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":577,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":430,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":431,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":288,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":345,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":518,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":273,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":382,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":105,"org.apache.commons.collections4.map.LRUMapTest.testLRU":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":391,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":190,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":555,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":497,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":456,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":133,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":78,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":379,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":249,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":357,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":574,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":80,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":398,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":160,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":61,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":343,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":206,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":412,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":556,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":172,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":233,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":112,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":401,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":115,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":261,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":636,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":252,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":500,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":451,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":278,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":685},"transformations":[{"failures":[],"tindex":"20f44104-13b3-11e5-9f1a-755e1ddfcc60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"20f46815-13b3-11e5-9f1a-3f7aa95bcb83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"20f46816-13b3-11e5-9f1a-e778edc6e0af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":0},{"failures":[],"tindex":"20f46817-13b3-11e5-9f1a-1b0bab8efc1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:54","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.Transformer))"},"variableMap":{"org.apache.commons.collections4.functors.ConstantTransformer.NULL_INSTANCE":"org.apache.commons.collections4.functors.InstantiateTransformer.NO_ARG_INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:54","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<java.lang.Class<? extends T>, T>)(org.apache.commons.collections4.functors.InstantiateTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[0],"tindex":"20f46818-13b3-11e5-9f1a-5de9ba7bb12d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"20f52b69-13b3-11e5-9f1a-4fa83197814a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[35,36],"tindex":"20f52b6a-13b3-11e5-9f1a-132cd211cceb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"20f52b6b-13b3-11e5-9f1a-5327eef13993","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"20f5527c-13b3-11e5-9f1a-8d9762c5500c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index1","maxElements":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"20f5527d-13b3-11e5-9f1a-516072b35256","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"20f5527e-13b3-11e5-9f1a-ef1c4da4d241","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"20f5798f-13b3-11e5-9f1a-cbea7ef20131","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"value","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"20f57990-13b3-11e5-9f1a-19b82dc3be3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"20f5c7b1-13b3-11e5-9f1a-2735317456d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"20f5eec2-13b3-11e5-9f1a-b3320a873f78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"20f5eec3-13b3-11e5-9f1a-a37d108b5c82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"key","out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"20f5eec4-13b3-11e5-9f1a-d5a7d72bab4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":0},{"failures":[],"tindex":"20f5eec5-13b3-11e5-9f1a-fffe046eb5ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"20f5eec6-13b3-11e5-9f1a-b38fa5df3aa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtIfImpl","sourcecode":"if (java.lang.Number == null) {\n    java.lang.Number = java.lang.Number;\n} "},"variableMap":{"answer":"data","defaultValue":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[],"tindex":"20f5eec7-13b3-11e5-9f1a-070fd6c779ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"cmp","proposedCapacity":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[79,80,81,82,83,84],"tindex":"20f5eec8-13b3-11e5-9f1a-ad2071fb3c35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94],"tindex":"20f5eec9-13b3-11e5-9f1a-672cc8cd12b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[95,96,97,98,99,100,101,39,40,102,41,42,43,103,45,46,47,48,104,105,58,59,60,61,62,106,64],"tindex":"20f5eeca-13b3-11e5-9f1a-51b4a701a002","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"20f615db-13b3-11e5-9f1a-27c9453a9d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:261","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.TreeList<E>.get(int)"},"status":-2},{"failures":[107],"tindex":"20f615dc-13b3-11e5-9f1a-6d05eff5ac4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:334","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<I>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getKey());\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int++] = java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getValue();\n}"},"status":-1},{"failures":[108,109,110,111,112,113,114,115],"tindex":"20f615dd-13b3-11e5-9f1a-5d5dea189df2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"variableMap":{"a":"label","b":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"20f615de-13b3-11e5-9f1a-b9113a8e1fce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"node","right":"left","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[112,113,116,117,118,119],"tindex":"20f615df-13b3-11e5-9f1a-ebc5bf4667cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[120,121,122,123],"tindex":"20f615e0-13b3-11e5-9f1a-f5b9048512ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-1},{"failures":[],"tindex":"20f615e1-13b3-11e5-9f1a-5df3e2869b52","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"20f615e2-13b3-11e5-9f1a-fdc8519a374c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-2},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,17,18,19,20,21,22,23,24,25,26,27,32,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"20f615e3-13b3-11e5-9f1a-a94c772eb279","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[199,255],"tindex":"20f63bf4-13b3-11e5-9f1a-ef5109bfc4e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"20f63bf5-13b3-11e5-9f1a-0dcb6b9b0739","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:73","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"20f63bf6-13b3-11e5-9f1a-bb457979d984","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[256],"tindex":"20f63bf7-13b3-11e5-9f1a-af4edc6342a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:315","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"20f63bf8-13b3-11e5-9f1a-d9eb3a1ea012","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407],"tindex":"20f63bf9-13b3-11e5-9f1a-8be4920fa8b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[408,409,410,411,412,413,414,415],"tindex":"20f63bfa-13b3-11e5-9f1a-5167ba5dce48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"callCounter","listSize":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[416,417,418,419,420,421,422,423,424,425,426,427,428,85,429,430,431,432,433,434,86,87,435,436,437,438,439,440],"tindex":"20f6630b-13b3-11e5-9f1a-73d2ca373fbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[441,442,443,444,445],"tindex":"20f6630c-13b3-11e5-9f1a-7f96721747bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"20f6630d-13b3-11e5-9f1a-6d1cd61e4f04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[260,345,398],"tindex":"20f6630e-13b3-11e5-9f1a-47872f412d0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"tindex":"20f6630f-13b3-11e5-9f1a-3dd991380e2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:194","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E)) {\n    java.util.List<E>.add(E);\n    return true;\n} "},"status":-1},{"failures":[484,485,486,487],"tindex":"20f66310-13b3-11e5-9f1a-f3cf2163b51f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[488,489,490,491,492,493,494,495,496,497,498],"tindex":"20f7c2a1-13b3-11e5-9f1a-b57ae2786eae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-1},{"failures":[],"tindex":"20f7e9b2-13b3-11e5-9f1a-73a5802cc87d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-2},{"failures":[499],"tindex":"20f7e9b3-13b3-11e5-9f1a-05567e882c2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[500,501,502,503],"tindex":"20f7e9b4-13b3-11e5-9f1a-6b3867516ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[416,504,505,506,417,418,419,507,420,421,508,422,423,424,509,425,426,510,427,511,512,428,85,513,514,515,429,430,431,432,433,434,86,516,517,87,518,519,520,435,521,436,437,438,439,440],"tindex":"20f7e9b5-13b3-11e5-9f1a-8f13c643b37b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"20f7e9b6-13b3-11e5-9f1a-7b2b83d74b53","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"20f7e9b7-13b3-11e5-9f1a-4f4c31fd79a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"20f810c8-13b3-11e5-9f1a-ef7991ce14c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"20f810c9-13b3-11e5-9f1a-25e4a0c8387e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[124,125,126,127,128,131,132,133,134,522,148,149,150,151,152,154,155,156,157,160,161,162,163,523,524,525,526,527,528,529,530,531,532,170,171,172,173,174,176,177,178,179,184,533,534,187,188,189,190,191,194,195,196,197,535,255,210,211,212,213,214,217,218,219,220,226,4,6,17,18,19,20,21,24,25,26,27,31,228,230,233,234,236,238,240,241,242,243,244,246,247,248,250,252,253,254],"tindex":"20f810ca-13b3-11e5-9f1a-fff54e211e4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"20f837db-13b3-11e5-9f1a-f94435b45554","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"20f837dc-13b3-11e5-9f1a-adffb4f80704","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"20f837dd-13b3-11e5-9f1a-f3ce4ccd1629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()"},"status":-1},{"failures":[],"tindex":"20f837de-13b3-11e5-9f1a-bf0adb9d532a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"20f837df-13b3-11e5-9f1a-91a1a2825faa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"20f837e0-13b3-11e5-9f1a-19fff69974f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"variableMap":{"result":"result","size":"i","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":0},{"failures":[],"tindex":"20f837e1-13b3-11e5-9f1a-b342d0c985f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"variableMap":{"label":"value","out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564],"tindex":"20f837e2-13b3-11e5-9f1a-b7cc2ab8210e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"20f837e3-13b3-11e5-9f1a-39226fdfc7f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"20f85ef4-13b3-11e5-9f1a-177faafa77ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"20f85ef5-13b3-11e5-9f1a-57286fdf5aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"20f85ef6-13b3-11e5-9f1a-4b461c910b10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"20f85ef7-13b3-11e5-9f1a-49c5dfc4e088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"20f85ef8-13b3-11e5-9f1a-37178ac6febf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} "},"status":-2},{"failures":[565,566,567,568,569],"tindex":"20f85ef9-13b3-11e5-9f1a-d57de00607e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[46,48,570,571],"tindex":"20f8860a-13b3-11e5-9f1a-f983fc063406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"y","leftChild":"y","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[572,573,256,574,575,576,577,578,579,580,581],"tindex":"20f8860b-13b3-11e5-9f1a-09655eecfe4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"20f8860c-13b3-11e5-9f1a-5d8cef8082be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[582,583,584,585,586,587,588,589,590,591,592],"tindex":"20f8860d-13b3-11e5-9f1a-35094cdd961b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"20f8860e-13b3-11e5-9f1a-c146f86b7173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"20f8ad1f-13b3-11e5-9f1a-db682a0e28fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"20f8ad20-13b3-11e5-9f1a-6d8aaef4f0ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[500,593,502,503,594],"tindex":"20f8ad21-13b3-11e5-9f1a-fb2225ec0d05","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:194","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"20f8ad22-13b3-11e5-9f1a-9b9ff94f47b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"20f8ad23-13b3-11e5-9f1a-37049ab2fce2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"20f8ad24-13b3-11e5-9f1a-d9b1b1ca6b7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[595,596,597,598,599,600],"tindex":"20f8d435-13b3-11e5-9f1a-57e07bfb6283","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super K, ? extends K>) == null) {\n    return K;\n} "},"status":-1},{"failures":[],"tindex":"20f8d436-13b3-11e5-9f1a-39ab7d640c71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[601,602,603,134,604,605,606,135,607,608,609,610,611,612,613,614,615,146,616,617,618,147,619,620,621,622,623,624,625,626,627,152,157,628,629,630,158,631,632,633,634,635,636,637,638,639,640,641,642,643,531,644,645,646,647,648,649,650,651,652,653,164,167,168,169,179,182,183,185,186,654,655,656,657,658,659,660,661,662,197,663,664,665,198,666,667,668,669,670,671,672,202,203,204,205,207,208,209,220,224,225,673,227,674,675,676,677,678,679,14,15,16,27,29,30,680,32,681,33,682,683,684,34,232,233,237,239,685,245,246,249,251],"tindex":"20f92257-13b3-11e5-9f1a-515526f15eea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"20f92258-13b3-11e5-9f1a-7df117d8e6bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"20f92259-13b3-11e5-9f1a-e9947d5a2341","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:187","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:185","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[org.apache.commons.collections4.list.TreeList<E>.size()]"},"status":-2},{"failures":[],"tindex":"20f9225a-13b3-11e5-9f1a-4dec27fffc03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":0},{"failures":[],"tindex":"20f9225b-13b3-11e5-9f1a-034a69608d1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":0},{"failures":[],"tindex":"20f9225c-13b3-11e5-9f1a-33019ab05f1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:212","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()"},"variableMap":{"this":"subSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:334","type":"CtAssignmentImpl","sourcecode":"java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size())"},"status":-2},{"failures":[],"tindex":"20f9225d-13b3-11e5-9f1a-35d05b138a16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"set","existingSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[],"tindex":"20f9225e-13b3-11e5-9f1a-95b8aa1b25c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value can be removed at present\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"20f9225f-13b3-11e5-9f1a-83de75ee0c8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"20f92260-13b3-11e5-9f1a-db7fde47a349","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:555","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"20f92261-13b3-11e5-9f1a-cdacecf0f6e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"20f92262-13b3-11e5-9f1a-d3c06e4ea3e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"20f94973-13b3-11e5-9f1a-7fe78239ef40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[258,266,268,283,276,299,300,301,279,307,316,317,318,319,322,323,326,329,330,331,332,333,334,335,336,337,339,340,341,342,343,344,345,346,349,355,358,361,368,369,370,371,374,375,378,388,381,382,383,384,385,386,387,389,390,392,393,394,395,396,397,398,399,402],"tindex":"20f94974-13b3-11e5-9f1a-ade2f0890975","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"20f94975-13b3-11e5-9f1a-6f78a8f08bd2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[416,505,506,417,418,419,420,421,422,423,424,509,425,426,427,428,85,429,430,432,433,434,87,518,521,439,440],"tindex":"20f94976-13b3-11e5-9f1a-439b3a85f968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}