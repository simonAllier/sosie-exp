{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":413,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":773,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":676,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":490,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":552,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":191,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":168,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":32,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":33,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":827,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":469,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":468,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":875,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":284,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":637,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":370,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":689,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":831,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":471,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":601,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":888,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":93,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":90,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":695,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":704,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":716,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":811,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":629,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":804,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":84,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":747,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":554,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":659,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":780,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":427,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":622,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":216,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":565,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":681,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":808,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":250,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":706,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":350,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":352,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":754,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":803,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":29,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":842,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":383,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":740,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":595,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":57,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":510,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":501,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":723,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":647,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":133,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":717,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":516,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":111,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":677,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":887,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":697,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":616,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":15,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":582,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":756,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":211,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":424,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":822,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":571,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":79,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":857,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":610,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":881,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":794,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":880,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":338,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":869,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":819,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":578,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":268,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":232,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":858,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":825,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":127,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":603,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":694,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":604,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":671,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":620,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":229,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":522,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":158,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":711,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":795,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":244,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":597,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":823,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":156,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":411,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":775,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":385,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":407,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":95,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":380,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":714,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":548,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":212,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":872,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":646,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":537,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":843,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":331,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":641,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":588,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":818,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":545,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":876,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":210,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":42,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":373,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":669,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":563,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":871,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":594,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":507,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":365,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":692,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":205,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":850,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":405,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":511,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":749,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":778,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":852,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":377,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":476,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":870,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":800,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":575,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":667,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":806,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":635,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":801,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":416,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":489,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":297,"org.apache.commons.collections4.map.HashedMapTest.testClone":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":159,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":39,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":109,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":814,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":570,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":562,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":319,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":567,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":148,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":480,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":518,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":672,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":835,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":402,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":728,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":769,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":463,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":183,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":766,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":445,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":149,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":557,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":556,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":257,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":543,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":241,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":102,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":730,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":215,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":178,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":436,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":175,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":177,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":171,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":757,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":173,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":172,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":110,"org.apache.commons.collections4.map.LinkedMapTest.testClone":542,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":703,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":599,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":185,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":454,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":790,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":589,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":466,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":336,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":608,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":828,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":355,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":709,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":238,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":817,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":863,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":213,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":787,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":686,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":9,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":638,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":812,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":372,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":845,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":662,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":332,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":864,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":838,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":425,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":774,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":280,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":371,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":815,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":617,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":873,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":453,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":810,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":771,"org.apache.commons.collections4.map.LRUMapTest.testLRU":885,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":443,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":710,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":324,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":648,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":493,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":239,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":193,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":783,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":438,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":531,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":248,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":762,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":829,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":278,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":488,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":105,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":826,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":366,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":743,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":530,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":579,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":289,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":375,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":477,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":60,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":687,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":824,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":525,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":841,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":655,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":792,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":357,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":693,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":732,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":877,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":267,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":722,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":70,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":315,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":546,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":550,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":461,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":833,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":140,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":188,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":720,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":874,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":233,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":802,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":598,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":666,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":514,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":860,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":368,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":734,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":830,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":356,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":855,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":492,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":719,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":296,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":221,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":300,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":306,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":776,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":660,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":374,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":865,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":656,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":486,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":281,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":890,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":44,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":737,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":584,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":729,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":504,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":277,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":162,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":330,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":854,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":619,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":460,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":853,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":291,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":772,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":404,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":431,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":592,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":745,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":255,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":237,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":664,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":593,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":225,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":262,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":61,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":483,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":797,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":387,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":700,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":456,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":295,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":607,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":605,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":259,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":452,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":678,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":784,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":434,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":77,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":75,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":809,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":202,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":539,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":304,"org.apache.commons.collections4.map.LRUMapTest.testClone":517,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":846,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":364,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":555,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":621,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":758,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":478,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":519,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":509,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":279,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":785,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":733,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":329,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":643,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":422,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":859,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":369,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":820,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":448,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":376,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":879,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":59,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":805,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":467,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":750,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":354,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":199,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":353,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":153,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":799,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":645,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":851,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":653,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":432,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":34,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":86,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":786,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":367,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":421,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":464,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":878,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":744,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":444,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":680,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":640,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":271,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":206,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":891,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":512,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":523,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":167,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":141,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":418,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":789,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":807,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":768,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":333,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":634,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":41,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":415,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":283,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":561,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":560,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":832,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":658,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":417,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":553,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":685,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":114,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":396,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":201,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":260,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":848,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":503,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":793,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":521,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":626,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":627,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":586,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":574,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":433,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":246,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":35,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":435,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":513,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":88,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":735,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":741,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":690,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":679,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":761,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":540,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":576,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":759,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":591,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":91,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":472,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":618,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":844,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":406,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":243,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":129,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":311,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":382,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":816,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":568,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":316,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":13,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":318,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":779,"org.apache.commons.collections4.CollectionUtilsTest.isFull":208,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":529,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":861,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":442,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":198,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":654,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":834,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":328,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":236,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":572,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":487,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":408,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":684,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":203,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":384,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":116,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":30,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":813,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":31,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":479,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":726,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":867,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":849,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":264,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":270,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":612,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":798,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":791,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":705,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":217,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":414,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":763,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":839,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":862,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":245,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":359,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":712,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":748,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":3,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":624,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":139,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":623,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":495,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":219,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":326,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":755,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":204,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":388,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":781,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":160,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":301,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":847,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":767,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":837,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":223,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":796,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":882,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":883,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":884,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":496,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":410,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":98,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":683,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":143,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":615,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":739,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":868,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":482,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":481,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":186,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":25,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":164,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":322,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":836,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":886,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":636,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":108,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":163,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":788,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":430,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":360,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":441,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":282,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":889,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":533,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":27,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":708,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":157,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":596,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":263,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":312,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":249,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":527,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":821},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"96bac8aa-13c0-11e5-a3f0-074ea1580225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"endIndex1","expectedModCount":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"96baefbb-13c0-11e5-a3f0-0b1f37157e23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"96baefbc-13c0-11e5-a3f0-9da9bca2e036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:417","type":"CtReturnImpl","sourcecode":"return (((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger)(java.lang.Object)).int) == (int)"},"variableMap":{"obj":"key","value":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"96baefbd-13c0-11e5-a3f0-410e84d7076c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[],"tindex":"96baefbe-13c0-11e5-a3f0-a909af1f284c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"96bb16cf-13c0-11e5-a3f0-2d72da700e72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"96bb16d0-13c0-11e5-a3f0-3d664a9b11e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1076","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"96bb3de1-13c0-11e5-a3f0-eb0f21510344","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"length","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[],"tindex":"96bb3de2-13c0-11e5-a3f0-9998147587a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"96bb3de3-13c0-11e5-a3f0-230131808ce1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"variableMap":{"obj":"value","delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"96bb3de4-13c0-11e5-a3f0-9324235e7657","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[163,164,165,166,167,168],"tindex":"96bb3de5-13c0-11e5-a3f0-1b256348aa61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"96bb3de6-13c0-11e5-a3f0-7f119ddd8449","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":0},{"failures":[],"tindex":"96bb64f7-13c0-11e5-a3f0-8de623ca4383","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"96bb64f8-13c0-11e5-a3f0-d9af10e4d6e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"variableMap":{"root":"found","h":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"96bb64f9-13c0-11e5-a3f0-db6b5bbc08db","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[0,210,1,2,3,4,5,211,6,7,212,8,9,10,11,12,13,213,14,214,215,15,16,216,217,218,17,18,219,19,20,21,220,221,222,22,223,224,225,226,227,228,229,230,23,24],"tindex":"96bb64fa-13c0-11e5-a3f0-43cd31e7aa5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"current","h":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[231,232,233,234,235,236,237],"tindex":"96bb8c0b-13c0-11e5-a3f0-711a70d17441","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[238,239],"tindex":"96bbb31c-13c0-11e5-a3f0-217ceaa0e42c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"96bbb31d-13c0-11e5-a3f0-5f3d668636f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[0,210,1,2,3,4,5,6,7,212,8,9,10,11,12,13,14,15,16,216,217,218,17,18,219,19,20,21,220,227,230,240,241,242,243,23,24],"tindex":"96bbb31e-13c0-11e5-a3f0-7bd5af314efe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"tindex":"96bbb31f-13c0-11e5-a3f0-b71fa346bd60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[262,263],"tindex":"96bbb320-13c0-11e5-a3f0-6da501d6f59c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[1,2,6,7,8,9,10,11,13,14,15,16,223,227,228,229,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"tindex":"96bbb321-13c0-11e5-a3f0-e11a0dc4738c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"tindex":"96bbb322-13c0-11e5-a3f0-b7f701c4fbcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"96bbda33-13c0-11e5-a3f0-c3d999c49d11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[319,320,321,322],"tindex":"96bbda34-13c0-11e5-a3f0-c30f0e9e5a90","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[151,152,323,153,154,155,156,324,157,158,159,325,326],"tindex":"96bbda35-13c0-11e5-a3f0-2fffafe569d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"96bbda36-13c0-11e5-a3f0-177dd160eeaf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"96bbda37-13c0-11e5-a3f0-d3732f0e8a61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"96bbda38-13c0-11e5-a3f0-ada2e2ae6ada","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"tindex":"96bbda39-13c0-11e5-a3f0-511440a62320","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"96bbda3a-13c0-11e5-a3f0-373bbdd90405","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":0},{"failures":[289,290,291,347,297,300,301,302,307,348,308],"tindex":"96bbda3b-13c0-11e5-a3f0-9d0fda02fcb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"total","lengthInBits":"total","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"total","otherOffsetInBits":"total","otherLengthInBits":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"96bc014c-13c0-11e5-a3f0-9d1a82699761","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[349],"tindex":"96bc014d-13c0-11e5-a3f0-6772a648cb3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1276","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Enumeration<?>.nextElement();\n    } else {\n        java.util.Enumeration<?>.nextElement();\n    }\n}"},"status":-1},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209],"tindex":"96bc014e-13c0-11e5-a3f0-77d87ee276e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"end","lengthInBits":"maxElements","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"end","otherOffsetInBits":"end","otherLengthInBits":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"96bc014f-13c0-11e5-a3f0-8b7599aea47a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":0},{"failures":[350,351,352,353,354,355],"tindex":"96bc0150-13c0-11e5-a3f0-675abd95350f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,319,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,320,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,321,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,322,467,468,469,470],"tindex":"96bc0151-13c0-11e5-a3f0-334bdb69706c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[471,472,473,474,475,476,477,478,479,480,481,482],"tindex":"96bc2862-13c0-11e5-a3f0-adeb688e0e14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[356,357,358,360,362,361,363,364,368,369,370,377,378,382,383,384,385,386,387,388,389,390,391,392,393,396,397,398,399,400,401,402,434,469],"tindex":"96bc2863-13c0-11e5-a3f0-71cb17c7eb97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[16,22,228,229],"tindex":"96bc2864-13c0-11e5-a3f0-ff318c74a051","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[163,164,165,166,167,168],"tindex":"96bc2865-13c0-11e5-a3f0-8fa8bcc5c09d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"d","d":"d","vDown":"vUp","delta":"start1","end2":"delta","this":"this","i":"end2","end1":"start2","k":"d","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"96bc2866-13c0-11e5-a3f0-e520a5f5e392","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"96bc2867-13c0-11e5-a3f0-f75633b20ef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-2},{"failures":[],"tindex":"96bc2868-13c0-11e5-a3f0-0df4baf6c10c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[483,484,485,486,487,488,489,133,490,491,492,134,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,140,510,511,512,141,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,143,574,575,576,144,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,146,596,597,598,147,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,148,618,619,149,620,621,622,623,624,625,626,627,628,629,630,631,632],"tindex":"96bc4f79-13c0-11e5-a3f0-b12dafe9d096","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"96bc4f7a-13c0-11e5-a3f0-fd2542b5dc4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[633,634,635,636],"tindex":"96bc4f7b-13c0-11e5-a3f0-dd0fa916934d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"purgeValues"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:998","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeBoolean(boolean)"},"status":-1},{"failures":[394,379,380,381,409,410,411,412,413,319,414,415,416,423,424,426,427,428,429,430,431,320,432,433,435,442,444,445,446,447,448,449,321,450,451,452,459,460,461,462,463,464,465,466,322,467,468,470],"tindex":"96bc4f7c-13c0-11e5-a3f0-2d7ec928a714","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[637],"tindex":"96bc4f7d-13c0-11e5-a3f0-3f3a4e9d328a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"96bc4f7e-13c0-11e5-a3f0-f98a6b48176a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":0},{"failures":[],"tindex":"96bc768f-13c0-11e5-a3f0-4f897930ad8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"hashCode","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"96bc7690-13c0-11e5-a3f0-8d617b2ce157","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[638,231,327,639,232,329,640,641,233,331,334,642,234,335,338,643,644,645,235,339,646,236,341,344,647,648,237,345,649],"tindex":"96bc7691-13c0-11e5-a3f0-39511f90c4b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"96bc7692-13c0-11e5-a3f0-a1b801a36146","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-2},{"failures":[],"tindex":"96bc7693-13c0-11e5-a3f0-5b6deb2ae613","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"96bc7694-13c0-11e5-a3f0-3d643ea3ba85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[524,528,650,548,552,651],"tindex":"96bc7695-13c0-11e5-a3f0-1fb018a840aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"96bc7696-13c0-11e5-a3f0-1385ef46458f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"parent":"left","bitIndex":"bitIndex","child":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[262,263],"tindex":"96bc9ca7-13c0-11e5-a3f0-17f6b8dad725","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[358,320,322],"tindex":"96bc9ca8-13c0-11e5-a3f0-f189920dc2f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[356,357,358,652,360,359,653,361,362,654,363,364,367,655,368,369,370,372,373,374,375,402,379,380,381,376,377,378,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,371,365,366,403,404,405,406,407,656,408,409,410,411,412,413,657,319,414,658,415,659,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,320,432,660,661,433,434,435],"tindex":"96bc9ca9-13c0-11e5-a3f0-190cb2fa592c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[662,663,664,665,666,667,668,104,105,107,108,109,110,112,669,670,671,672,673,674,675,298,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,516,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,567,838,839,840,841,842,592,593,594,595,146,596,597,598,147,599,600,843],"tindex":"96bc9caa-13c0-11e5-a3f0-7951bb6f1f34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[844,845,244,846,638,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861],"tindex":"96bc9cab-13c0-11e5-a3f0-47ac5a80d4d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[862,42,43,44,45,47,48,54,55,56,57,58,59,60,62,64,67,68,97,98,104,105,107,108,109,110,112],"tindex":"96bcc3bc-13c0-11e5-a3f0-0dc137e0a42f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"96bcc3bd-13c0-11e5-a3f0-7971cfc13b4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[471,472,473,474,475,476,477,478,479,480,481,482],"tindex":"96bcc3be-13c0-11e5-a3f0-d717adbe0f2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"96bcc3bf-13c0-11e5-a3f0-5946db85b9c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"end1","index":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[863,864],"tindex":"96bcc3c0-13c0-11e5-a3f0-bb6dcec682b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[38,93],"tindex":"96bcc3c1-13c0-11e5-a3f0-53e1a42f70bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"nodeCount","lengthInBits":"nodeCount","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"96bcc3c2-13c0-11e5-a3f0-fdc35cd98a9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:546","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[865,151,152,153,154,155,156,157,158,159],"tindex":"96bcc3c3-13c0-11e5-a3f0-a12bfd228616","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"code","currentIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"96bcc3c4-13c0-11e5-a3f0-dbac2230de79","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"96bcc3c5-13c0-11e5-a3f0-576ca28b11ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"96bcead6-13c0-11e5-a3f0-3fdd27968171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:637","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[313],"tindex":"96bcead7-13c0-11e5-a3f0-b7c8b69c312f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[64,68,82,86],"tindex":"96bcead8-13c0-11e5-a3f0-933e52279385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"96bcead9-13c0-11e5-a3f0-d175bfdf4582","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtIfImpl","sourcecode":"if (java.lang.Float == null) {\n    java.lang.Float = java.lang.Float;\n} "},"variableMap":{"answer":"nextElement","defaultValue":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:373","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n    continue;\n} "},"status":-2},{"failures":[471,472,473,474,475,476,477,478,479,480,481,482],"tindex":"96bceada-13c0-11e5-a3f0-c5ab51dae6f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"96bceadb-13c0-11e5-a3f0-793dab52a877","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":-2},{"failures":[],"tindex":"96bceadc-13c0-11e5-a3f0-1b663f5defbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[37,38,39,40,862,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"96bceadd-13c0-11e5-a3f0-d9b304d3738b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"96bd11ee-13c0-11e5-a3f0-1340bf8ce27a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"96bd11ef-13c0-11e5-a3f0-71d6d5e795cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"variableMap":{"result":"object","size":"total","array":"object","length":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[327,329,331,334,335,338,339,341,344,345],"tindex":"96bd11f0-13c0-11e5-a3f0-6704e9179896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[866,867,868],"tindex":"96bd11f1-13c0-11e5-a3f0-9ddf45cad906","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[869,870,871,872,873,874,875,876,877,878,879,880],"tindex":"96bd11f2-13c0-11e5-a3f0-d925657f0dd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"valueSet","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[881],"tindex":"96bd3903-13c0-11e5-a3f0-bf2b1bff061d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[882,883,884],"tindex":"96bd3904-13c0-11e5-a3f0-0b58e7d4de03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"96bd3905-13c0-11e5-a3f0-cd22744bbf85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[],"tindex":"96bd3906-13c0-11e5-a3f0-2f9fd04fe3fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[885,886,887,888,889],"tindex":"96bd3907-13c0-11e5-a3f0-d366e59a8d8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"96bd3908-13c0-11e5-a3f0-efc0bedc9e8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"96bd3909-13c0-11e5-a3f0-81cd13026d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"96bd390a-13c0-11e5-a3f0-7f0da2aa052d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:380","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[869,870,871,872,873,874,875,876,877,878,879,880],"tindex":"96bd390b-13c0-11e5-a3f0-f329894370bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"leastIndex","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"96bd601c-13c0-11e5-a3f0-3d5ca1782e83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} "},"status":-2},{"failures":[890,891],"tindex":"96bd601d-13c0-11e5-a3f0-adc202431edf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}