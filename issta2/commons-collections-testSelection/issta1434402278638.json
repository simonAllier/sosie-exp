{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":101,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":6,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":4,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":386,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":233,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":54,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":523,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":341,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":533,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":510,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":354,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":339,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":123,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":191,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":260,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":115,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":361,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":372,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":16,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":249,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":373,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":513,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":146,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":82,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":217,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":144,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":434,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":440,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":405,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":390,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":369,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":250,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":270,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":119,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":397,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":254,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":35,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":536,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":160,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":522,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":255,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":310,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":497,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":99,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":21,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":164,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":392,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":351,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":97,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":370,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":425,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":367,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":117,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":78,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":335,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":389,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":347,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":224,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":26,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":325,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":459,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":366,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":248,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":300,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":493,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":197,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":421,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":184,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":428,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":132,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":234,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":215,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":377,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":429,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":307,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":382,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":404,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":383,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":516,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":114,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":431,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":489,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":258,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":443,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":225,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":308,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":456,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":381,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":22,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":304,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":203,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":340,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":118,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":453,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":469,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":318,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":244,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":371,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":188,"org.apache.commons.collections4.ListUtilsTest.testSubtract":315,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":349,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":471,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":436,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":334,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":452,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":287,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":433,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":59,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":159,"org.apache.commons.collections4.list.TreeListTest.testListEquals":439,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":496,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":112,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":295,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":509,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":42,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":43,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":281,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":294,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":98,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":175,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":468,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":331,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":467,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":251,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":38,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":306,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":199,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":293,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":280,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":470,"org.apache.commons.collections4.CollectionUtilsTest.exists":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":136,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":207,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":368,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":384,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":401,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":187,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":413,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":379,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":263,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":380,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":290,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":454,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":462,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":221,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":446,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":81,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":282,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":507,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":239,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":353,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":261,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":345,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":479,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":167,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":438,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":272,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":419,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":230,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":437,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":266,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":346,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":410,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":411,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":502,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":189,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":190,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":292,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":236,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":394,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":73,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":358,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":32,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":143,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":512,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":52,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":441,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":154,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":317,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":241,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":451,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":442,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":247,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":147,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":458,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":396,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":365,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":163,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":476,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":196,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":216,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":208,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":521,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":486,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":466,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":210,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":209,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":179,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":491,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":484,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":514,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":3,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":183,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":284,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":465,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":149,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":229,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":488,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":435,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":515,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":47,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":528,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":49,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":291,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":170,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":412,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":336,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":342,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":375,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":416,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":89,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":374,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":17,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":33,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":530,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":133,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":121,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":319,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":330,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":231,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":407,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":186,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":278,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":20,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":227,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":29,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":320,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":259,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":400,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":424,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":503,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":326,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":327,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":393,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":418,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":232,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":525,"org.apache.commons.collections4.map.LRUMapTest.testLRU":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":474,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":145,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":321,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":61,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":391,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":427,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":388,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":399,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":79,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":426,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":245,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":12,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":161,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":309,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":348,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":271,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":91,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":62,"org.apache.commons.collections4.map.Flat3MapTest.testToString":385,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":477,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":2,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":432,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":246,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":235,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":256},"transformations":[{"failures":[],"tindex":"225d5641-13a2-11e5-9572-2b8f11f943e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"225d5642-13a2-11e5-9572-b7ce25e69035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[],"tindex":"225d5643-13a2-11e5-9572-4d0b36a100b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"variableMap":{"buf":"buf","hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":0},{"failures":[0,1,2,3,4],"tindex":"225d7d54-13a2-11e5-9572-252648b9c191","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"225e1995-13a2-11e5-9572-c173ae33ceac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"225e1996-13a2-11e5-9572-0f0f8cc867b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"225e1997-13a2-11e5-9572-e924961d3674","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"225e1998-13a2-11e5-9572-1b9e238c87a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[5,6,7,8,9],"tindex":"225e40a9-13a2-11e5-9572-634b440d2ef5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[10,11,12,13,14,15,16],"tindex":"225e67ba-13a2-11e5-9572-bf1c6908dd48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"225e67bb-13a2-11e5-9572-397d8face4d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"225e67bc-13a2-11e5-9572-d31f78b76c6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[46,52,53,55,56,58,59,62,63,64],"tindex":"225f792d-13a2-11e5-9572-073b7cc791b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"225f792e-13a2-11e5-9572-2d0aa8f0d702","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:298","type":"CtReturnImpl","sourcecode":"return E[][int]"},"status":-2},{"failures":[],"tindex":"225f792f-13a2-11e5-9572-6b59b4e8bf7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"225f7930-13a2-11e5-9572-771fbb5866a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"225fa041-13a2-11e5-9572-ebf60c188e31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"225fa042-13a2-11e5-9572-f3cfed22cf71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"225fc753-13a2-11e5-9572-63827ee77be5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"value","k":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"225fc754-13a2-11e5-9572-79a5dfa4d867","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n} "},"status":-2},{"failures":[203,204,205,206,207,8,208,209,210,211,212,213,214,215],"tindex":"225fc755-13a2-11e5-9572-47592fdcc6d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"225fc756-13a2-11e5-9572-df3bec9b5673","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashIndex","proposedCapacity":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"225fc757-13a2-11e5-9572-3f9e9c1ff33c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"225fc758-13a2-11e5-9572-07163b33f0e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"225fee69-13a2-11e5-9572-317ec84d243f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":0},{"failures":[],"tindex":"225fee6a-13a2-11e5-9572-c1a8b01a44e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:102","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"225fee6b-13a2-11e5-9572-9b7c7cac81d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[93,148],"tindex":"225fee6c-13a2-11e5-9572-9fce2c1adfdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[216,217,218,219,220,221,222],"tindex":"225fee6d-13a2-11e5-9572-114894edb381","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[30,223,224,225,226,227,228,229,230,231,232,35],"tindex":"225fee6e-13a2-11e5-9572-5128a4e5b37e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"225fee6f-13a2-11e5-9572-7f950f04d013","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"variableMap":{"entry":"path","endIndexInBits":"lengthInBits","root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"225fee70-13a2-11e5-9572-6766ed415c0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"225fee71-13a2-11e5-9572-8db14ba8fce7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"22601582-13a2-11e5-9572-27e1c31a675a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:118","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.nextIndex()"},"status":-2},{"failures":[233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"tindex":"22601583-13a2-11e5-9572-f930ba2b39a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"22601584-13a2-11e5-9572-e1d93f94a632","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[252,253,254,255,256,257,258,259,260,261],"tindex":"22601585-13a2-11e5-9572-a19c8f1defed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"22601586-13a2-11e5-9572-c1293addfc19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"22601587-13a2-11e5-9572-2d06c10b1f9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"22601588-13a2-11e5-9572-8958a3d40994","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-2},{"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"22601589-13a2-11e5-9572-413e0c09c70e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[317],"tindex":"2260158a-13a2-11e5-9572-4ba47c0c84dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1164","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n    return false;\n} "},"status":-1},{"failures":[254,252,253,255,256,257,258,259,260,261],"tindex":"22603c9b-13a2-11e5-9572-6fd2c2954be7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[317,318],"tindex":"22603c9c-13a2-11e5-9572-17b19d92aa12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1175","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-1},{"failures":[],"tindex":"22603c9d-13a2-11e5-9572-099003d4d613","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"variableMap":{"entry":"next","this":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[107,108,110,111,112,114,115,117,120,121,157,158,160,161,162,164,165],"tindex":"22603c9e-13a2-11e5-9572-715a47aab9a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"2262868f-13a2-11e5-9572-4d00710f5b5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"p","left":"p","h":"p","right":"parent","child":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[90,91,93,92,319,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,143,145,146,148,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"22628690-13a2-11e5-9572-43d64a7ca3d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"22628691-13a2-11e5-9572-0b85cbeed46d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[320,321],"tindex":"22628692-13a2-11e5-9572-c3ec1bc44985","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:723","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        final T T = java.util.Iterator<T>.next();\n        if (java.util.Iterator<T>.hasNext()) {\n            C.execute(T);\n        } else {\n            return T;\n        }\n    }\n} "},"status":-1},{"failures":[322,323,52,53,55,56,58,59,62,63,64,70,72,73,324,75,76,77,78,80,81,82,83,85,86],"tindex":"2262ada3-13a2-11e5-9572-a518dddb776e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"2262ada4-13a2-11e5-9572-fbdafb99de9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-2},{"failures":[],"tindex":"2262d4b5-13a2-11e5-9572-9df50a0bfc55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"2262d4b6-13a2-11e5-9572-9322219fb630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"2262d4b7-13a2-11e5-9572-d1fa4fbbb202","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[325],"tindex":"2262d4b8-13a2-11e5-9572-9365a1fa1b84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"2262d4b9-13a2-11e5-9572-89af2a2a29fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"variableMap":{"next":"entry","data":"key","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[117,121,134,135,138,139,140,141,142],"tindex":"2262d4ba-13a2-11e5-9572-f398f39aca22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"2262d4bb-13a2-11e5-9572-45c7a05881df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"2262d4bc-13a2-11e5-9572-6761bdf02b6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"2262d4bd-13a2-11e5-9572-976fc4adab7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"2262d4be-13a2-11e5-9572-1346e91e59bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[326,327,328,329,330,331,332],"tindex":"2262fbcf-13a2-11e5-9572-bfcf87521d11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[333,334,335],"tindex":"2262fbd0-13a2-11e5-9572-3b8147232179","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-1},{"failures":[336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"tindex":"2262fbd1-13a2-11e5-9572-e7fe21098050","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,317,400,401,318,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],"tindex":"2262fbd2-13a2-11e5-9572-03c0ca6772f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"2262fbd3-13a2-11e5-9572-db81fe87c1eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hash","newCapacity":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:159","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":0},{"failures":[424,425,426,427],"tindex":"226322e4-13a2-11e5-9572-c50d078000b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"retval","index":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[7,428,429,430,431,432,433,434,212,435,436],"tindex":"226322e5-13a2-11e5-9572-a79ff377ad64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"other","o2":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"226322e6-13a2-11e5-9572-39d2fd96f7e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-1},{"failures":[104,105,103,117,121,128,129,131,134,135,138,139,140,141,142],"tindex":"226322e7-13a2-11e5-9572-2dcfd401cd1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"226322e8-13a2-11e5-9572-35e2808a92ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"226349f9-13a2-11e5-9572-0f6387721d8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":0},{"failures":[],"tindex":"226349fa-13a2-11e5-9572-d3b05fc39d2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"226349fb-13a2-11e5-9572-a96af63e05ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"lengthInBits","listSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"226349fc-13a2-11e5-9572-77f48ff19fec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"proposedCapacity","index":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-2},{"failures":[459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498],"tindex":"226349fd-13a2-11e5-9572-17c870c9fa4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"2263710e-13a2-11e5-9572-6f129eae6d9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[499,500,501,238,502,503,241,242,504,243,505,506,237,507,508,509,246,510,511,249,250,512,251,513,514,245],"tindex":"2263710f-13a2-11e5-9572-a350ae047479","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-1},{"failures":[326,327,328,515,516,330,517,518,519,520,521,522],"tindex":"22637110-13a2-11e5-9572-d5f5ed06619a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"2263bf31-13a2-11e5-9572-438767f16e12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[375,422,421],"tindex":"2263bf32-13a2-11e5-9572-fb607b522611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"2263bf33-13a2-11e5-9572-afaa1252652e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:254","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[523],"tindex":"2263bf34-13a2-11e5-9572-a57914087939","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-1},{"failures":[],"tindex":"2263bf35-13a2-11e5-9572-3dcc654fc1e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[524,525,526,527],"tindex":"2263bf36-13a2-11e5-9572-cf2d21a81c1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:144","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[327,328,515,516,517,518,519,520],"tindex":"2263e647-13a2-11e5-9572-1ba7dd5bef6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"2263e648-13a2-11e5-9572-439c38aeb606","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"2263e649-13a2-11e5-9572-85c76d481dde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"variableMap":{"root":"current","h":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[528,529,530],"tindex":"2263e64a-13a2-11e5-9572-2bbe4e370464","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2263e64b-13a2-11e5-9572-8104ae9b54cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"hashCode","removeIndex":"length","currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"2263e64c-13a2-11e5-9572-db32e64fe152","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[531],"tindex":"2263e64d-13a2-11e5-9572-554d6bf00635","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:849","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2263e64e-13a2-11e5-9572-dbe9775d560b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[],"tindex":"2263e64f-13a2-11e5-9572-955769e45643","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[531],"tindex":"2263e650-13a2-11e5-9572-e1ef35651ace","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"2263e651-13a2-11e5-9572-9d6bd5c302d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[532,533,534,535,536,537,538,37,539],"tindex":"2263e652-13a2-11e5-9572-a92284b3df85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"total","modifications":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"2263e653-13a2-11e5-9572-21264a463588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[],"tindex":"22640d64-13a2-11e5-9572-e738a666dd31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1471","type":"CtReturnImpl","sourcecode":"return int != org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.(size())"},"variableMap":{"size":"hash3","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}