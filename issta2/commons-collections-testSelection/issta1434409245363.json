{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":272,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":482,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":184,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":498,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":95,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":429,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":165,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":360,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":290,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":69,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":288,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":19,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":220,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":391,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":241,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":161,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":160,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":330,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":127,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":244,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":364,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":336,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":51,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":275,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":424,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":121,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":390,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":216,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":471,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":499,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":406,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":71,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":328,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":207,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":410,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":277,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":443,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":419,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":304,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":246,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":492,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":213,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":493,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":461,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":314,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":223,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":101,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":231,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":374,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":380,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":174,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":299,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":234,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":120,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":72,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":349,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":253,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":56,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":270,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":24,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":426,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":259,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":402,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":446,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":287,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":475,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":263,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":460,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":464,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":125,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":297,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":190,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":81,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":196,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":149,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":319,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":226,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":404,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":228,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":245,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":110,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":11,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":112,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":79,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":164,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":422,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":50,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":41,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":129,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":357,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":434,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":342,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":421,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":8,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":347,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":257,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":407,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":431,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":154,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":237,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":251,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":130,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":323,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":126,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":178,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":339,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":444,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":260,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":335,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":176,"org.apache.commons.collections4.CollectionUtilsTest.get1":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":442,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":203,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":269,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":378,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":302,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":225,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":219,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":376,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":377,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":418,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":416,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":484,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":486,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":247,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":33,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":198,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":346,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":331,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":153,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":111,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":333,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":298,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":201,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":372,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":144,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":143,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":296,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":20,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.map.LRUMapTest.testReset":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":78,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":57,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":243,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":83,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":18,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":291,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":193,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":103,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":239,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":438,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":166,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":106,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":485,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":122,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":325,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":93,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":13,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":359,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":384,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":452,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":483,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":466,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":415,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":202,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":189,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":473,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":236,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":89,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":289,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":158,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":280,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":453,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":344,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":462,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":392,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":92,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":265,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":368,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":433,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":199,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":394,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":465,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":179,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":235,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":59,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":233,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":134,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":185,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":284,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":397,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":441,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":264,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":399,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":292,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":428,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":238,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":150,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":276,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":34,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":435,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":191,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":267,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":477,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":350,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":210,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":371,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":332,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":266,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":279,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":451,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":54,"org.apache.commons.collections4.CollectionUtilsTest.isFull":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":467,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":252,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":109,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":502,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":200,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":248,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":398,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":480,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":340,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":353,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":497,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":313,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":345,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":479,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":229,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":49,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":273,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":437,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":104,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":283,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":489,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":381,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":383,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":318,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":413,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":417,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":157,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":367,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":77,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":73,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":258,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":338,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":436,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":25,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":321,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":52,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":439,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":135,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":108,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":294,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":310,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":61,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":307,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":309,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":363,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":393,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":487,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":488,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":222,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":15,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":268,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":97,"org.apache.commons.collections4.map.LRUMapTest.testLRU":115,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":62,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":249,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":389,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":420,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":286,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":285,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":365,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":427,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":256,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":341,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":470,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":356,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":403,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":457,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":117,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":68,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":232,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":396,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":327,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":355,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":194,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":113,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":139,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":140,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":495,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":177,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":255,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":118,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":99,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":412,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":6,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":414,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":274,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":463},"transformations":[{"failures":[],"tindex":"5e15c78b-13b2-11e5-90ec-91232b95a413","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:71","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"}\\n\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1397","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"5e1e04ec-13b2-11e5-90ec-7fcea1c74f5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[],"tindex":"5e1e04ed-13b2-11e5-90ec-b398d2fcf2aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"leastIndex","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"5e1e04ee-13b2-11e5-90ec-996d1f68bf89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"root","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":0},{"failures":[],"tindex":"5e1e2bff-13b2-11e5-90ec-5b7a7b1b4659","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"5e1e2c00-13b2-11e5-90ec-19ecb972fb69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"5e1e2c01-13b2-11e5-90ec-15ed1844293f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1253","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int))"},"status":0},{"failures":[],"tindex":"5e1e5312-13b2-11e5-90ec-15746dae129e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"5e1e5313-13b2-11e5-90ec-7b0cee046c53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"5e1e5314-13b2-11e5-90ec-1917f1ad051a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"5e1e5315-13b2-11e5-90ec-9d7c0f27fb19","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":0},{"failures":[23,24,25,26,27,28,29,30,31,32],"tindex":"5e1e5316-13b2-11e5-90ec-c9384c3ac088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[33,34],"tindex":"5e2298d7-13b2-11e5-90ec-3fb60e6802d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-1},{"failures":[35,36,37,38,39,40,41],"tindex":"5e22bfe8-13b2-11e5-90ec-f1fc907005c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"5e22bfe9-13b2-11e5-90ec-35389d77fae2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:191","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayInputStream.close()"},"variableMap":{"bais":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"5e22bfea-13b2-11e5-90ec-01b5d1f79829","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:89","type":"CtReturnImpl","sourcecode":"return (\"ReverseComparator\".hashCode()) ^ (java.util.Comparator<E>.hashCode())"},"status":-2},{"failures":[],"tindex":"5e22bfeb-13b2-11e5-90ec-6587da723a10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[35,36,37,38,39,42,43,44,45,46,47],"tindex":"5e22bfec-13b2-11e5-90ec-d9286183865e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"5e22e6fd-13b2-11e5-90ec-f1473532d6e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:257","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<?>.hasNext()) && (java.util.Iterator<?>.hasNext())) {\n    java.lang.Object = java.util.Iterator<?>.next();\n    java.lang.Object = java.util.Iterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"5e22e6fe-13b2-11e5-90ec-cd35a6e64e33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"5e23833f-13b2-11e5-90ec-c7054908ec51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"5e23f770-13b2-11e5-90ec-c9ce0e747c7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:648","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<V>)(java.lang.Object)).clear()"},"variableMap":{"value":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"5e241e81-13b2-11e5-90ec-9937e9bff87c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"5e257e12-13b2-11e5-90ec-b7f24e41121d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[48],"tindex":"5e257e13-13b2-11e5-90ec-d102b446beb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"5e257e14-13b2-11e5-90ec-474bff3a6c03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"5e257e15-13b2-11e5-90ec-47a359091dc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[107,108],"tindex":"5e257e16-13b2-11e5-90ec-d3d539cf0aa7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[24,25,109,110,111],"tindex":"5e257e17-13b2-11e5-90ec-edf54b7e1e0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x","replacement":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[112],"tindex":"5e28b268-13b2-11e5-90ec-9ba04a0b2c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"5e28d979-13b2-11e5-90ec-23cb307c7c17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"5e28d97a-13b2-11e5-90ec-b73193103ec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[113,114,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,91,92,130,93,94,95,131,132,96,133,97,134,135,98,99,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"5e28d97b-13b2-11e5-90ec-bfc012039247","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"5e2a390c-13b2-11e5-90ec-c1f652b4f68d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"5e2a601d-13b2-11e5-90ec-1579122e2511","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"5e2a601e-13b2-11e5-90ec-e5e99003c6a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"tindex":"5e2a872f-13b2-11e5-90ec-dd7992dfdf85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"5e2a8730-13b2-11e5-90ec-8123cd11ed2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[],"tindex":"5e2a8731-13b2-11e5-90ec-8d0ac2e9c97b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"5e2a8732-13b2-11e5-90ec-a51a37a565cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"5e2a8733-13b2-11e5-90ec-51486241d936","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"5e2aae44-13b2-11e5-90ec-59e607f4f3f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[221,222,223,224,225,226,227,24,228,25,229,230,231,232,233,234,235],"tindex":"5e2aae45-13b2-11e5-90ec-05e832ec4820","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"5e2aae46-13b2-11e5-90ec-c96117041452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:211","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, true)"},"status":-2},{"failures":[236,237,238,239,240],"tindex":"5e2aae47-13b2-11e5-90ec-592774d8507e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"removed","beforeFirst":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-1},{"failures":[241,242],"tindex":"5e2aae48-13b2-11e5-90ec-436e25a67fcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"5e2ad559-13b2-11e5-90ec-b79f5b55e8c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"5e2ad55a-13b2-11e5-90ec-f7a7026fcdc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5e2ad55b-13b2-11e5-90ec-1ddff1ac3d6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"5e2ad55c-13b2-11e5-90ec-ddb9a05ccf8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"obj","k":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"5e2afc6d-13b2-11e5-90ec-6bde9a4cd97f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"5e2afc6e-13b2-11e5-90ec-d5256ad39c08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[243,244],"tindex":"5e2afc6f-13b2-11e5-90ec-4991d74715fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,2,263,264,265,266,267,268,269,270,271,272,273,274,4],"tindex":"5e2afc70-13b2-11e5-90ec-d3935789bb52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"5e2b2381-13b2-11e5-90ec-01af6a1ab1cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":0},{"failures":[275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"5e2b2382-13b2-11e5-90ec-ddcc838d1161","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"5e2b2383-13b2-11e5-90ec-0f8bd404c047","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"5e2b2384-13b2-11e5-90ec-4d0b6cb5f363","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[],"tindex":"5e2b2385-13b2-11e5-90ec-2192123eff76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[287],"tindex":"5e2b4a96-13b2-11e5-90ec-bdf303437c4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[288,289,290,291,292,293,294,295,296,297,49,50,298,51,52,53,299,300,54,301,55,302,303,56,57,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"tindex":"5e2b4a97-13b2-11e5-90ec-ad8bb3d34bea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"5e2b4a98-13b2-11e5-90ec-f11dcbf65d4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[325],"tindex":"5e2b4a99-13b2-11e5-90ec-9b10b7f0d5f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[326,327,328,329,330,331,332,333,334,335],"tindex":"5e2b4a9a-13b2-11e5-90ec-29f6d5600e77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:189","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"status":-1},{"failures":[],"tindex":"5e2b71ab-13b2-11e5-90ec-4f297b31846d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":0},{"failures":[],"tindex":"5e2b71ac-13b2-11e5-90ec-9d8415460090","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5e2b71ad-13b2-11e5-90ec-5dd802a1cbcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key4","i":"hashCode","value":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[327],"tindex":"5e2b98be-13b2-11e5-90ec-0bef8c44af3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(org.apache.commons.collections4.OrderedMap<? extends K, ? extends V>));\n    return org.apache.commons.collections4.OrderedMap<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"5e2b98bf-13b2-11e5-90ec-fdfd2b829fc9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[336,337,36,37,38,39,42,43,44,45,46,47,338,339,340,341,342,343,344,345],"tindex":"5e2b98c0-13b2-11e5-90ec-2528f7e8bac7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"5e2b98c1-13b2-11e5-90ec-c9e68dfab242","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-2},{"failures":[346,347,251,348,263,349,350,351,352,353,354],"tindex":"5e2b98c2-13b2-11e5-90ec-df23970663b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"5e2bbfd3-13b2-11e5-90ec-8f02c1a0917a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"5e2bbfd4-13b2-11e5-90ec-85c5a7f32b1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[355,356,357,358,359,360],"tindex":"5e2bbfd5-13b2-11e5-90ec-29bdace2c860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[361,362,363,364,365,366,367,368,157,161,162,369,163,164,166,167,168,169,170,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,171,172,386,173,174,387,175,176,388,389,177,178,179,390,391,392,393,394,395,396,325,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413],"tindex":"5e2be6e6-13b2-11e5-90ec-a3792b33a353","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"5e2be6e7-13b2-11e5-90ec-d7286061b44a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"5e2be6e8-13b2-11e5-90ec-5dbb8ed049cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"5e2c0df9-13b2-11e5-90ec-57d32a1fa2e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"value","obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"5e2c0dfa-13b2-11e5-90ec-91204153013b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"5e2c0dfb-13b2-11e5-90ec-e3da10adc64f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"5e2c0dfc-13b2-11e5-90ec-452c8e8e8919","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[355,356],"tindex":"5e2c350d-13b2-11e5-90ec-8949bb796909","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[476,477,478],"tindex":"5e2c350e-13b2-11e5-90ec-f3ba46e0d031","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[479,480],"tindex":"5e2c350f-13b2-11e5-90ec-b7eca413906e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[481,482,483,484],"tindex":"5e2c3510-13b2-11e5-90ec-5f2ebb8f8253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"variableMap":{"a":"key1","b":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"5e2c5c21-13b2-11e5-90ec-7f617ebe3e4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[485,486],"tindex":"5e2c5c22-13b2-11e5-90ec-97741c75ce34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"iPredicate","predicate2":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[],"tindex":"5e2c5c23-13b2-11e5-90ec-9d64c0721038","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:588","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"variableMap":{"buf":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:597","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":0},{"failures":[227,235],"tindex":"5e2c5c24-13b2-11e5-90ec-8dbfb7f88666","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"5e2c5c25-13b2-11e5-90ec-cd151a8b2b64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"left","current":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"5e2c8336-13b2-11e5-90ec-1de89e4a0b45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"5e2c8337-13b2-11e5-90ec-a910ebd21cc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:280","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":0},{"failures":[487,488,489,490,491,492,493,494],"tindex":"5e2c8338-13b2-11e5-90ec-c3f8b38f5985","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[171,172,386,173,174,175,389,178,179,390,393,325,408,411],"tindex":"5e2c8339-13b2-11e5-90ec-bddeb3374dfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"5e2c833a-13b2-11e5-90ec-132ea42ea12f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"variableMap":{"size":"h","array":"key1","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[379,384,171,172,386,173,174,387,175,389,178,179],"tindex":"5e2caa4b-13b2-11e5-90ec-ef9f789123e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[495,496,497,221,222,223,224,225,498,226,227,24,228,25,28,499,500,501,229,230,231,232,233,502,234,235],"tindex":"5e2caa4c-13b2-11e5-90ec-33b1d2d5aff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"5e2caa4d-13b2-11e5-90ec-7950f31cc240","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"5e2caa4e-13b2-11e5-90ec-f9c013645bd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}