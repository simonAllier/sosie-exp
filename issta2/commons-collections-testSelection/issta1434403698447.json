{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":400,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":520,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":105,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":352,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":505,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":557,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":543,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":392,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":307,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":429,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":366,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":669,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":41,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":86,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":475,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":384,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":393,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":480,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":522,"org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest":379,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":510,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":195,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":275,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":84,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":645,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":502,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":465,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":346,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":518,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":660,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":570,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":371,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":290,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":363,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":159,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":137,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":588,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":577,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":568,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":508,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":154,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":260,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":639,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":269,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":212,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":507,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":620,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":259,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":243,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":544,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":456,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":440,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":648,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":594,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":319,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":167,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":661,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":313,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":218,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":225,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":415,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":184,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":560,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":599,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":338,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":571,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":142,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":248,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":177,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":459,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":628,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":556,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":501,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":144,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":514,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":174,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":468,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":230,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":593,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":262,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":331,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":287,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":420,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":487,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":50,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":34,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":611,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":655,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":272,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":471,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":103,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":65,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":537,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":566,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":634,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":95,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":460,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":637,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":483,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":372,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":81,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":410,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":671,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":71,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":626,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":615,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":332,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":349,"org.apache.commons.collections4.functors.EqualPredicateTest.testPredicateTypeCanBeSuperClassOfObject":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":170,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":162,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":229,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":135,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":171,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":652,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":580,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":250,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":283,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":56,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":122,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":344,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":581,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":613,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":61,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":158,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":62,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":573,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":591,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":584,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":16,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":68,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":150,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":358,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":455,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":251,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":130,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":320,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":535,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":614,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":476,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":83,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":434,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":276,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":534,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":205,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":295,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":279,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":91,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":417,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":164,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":509,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":64,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":623,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":112,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":328,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":35,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":353,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":540,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":569,"org.apache.commons.collections4.ListUtilsTest.testSubtract":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":485,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":386,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":405,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":175,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":375,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":85,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":421,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":111,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":586,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":173,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":241,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":670,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":428,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":644,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":658,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":102,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":14,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":198,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":304,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":300,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":667,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":271,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":236,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":178,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":227,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":235,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":293,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":414,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":96,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":226,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":89,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":1,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":605,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":654,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":629,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":404,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":500,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":612,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":3,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":361,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":523,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":536,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":343,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":445,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":148,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":443,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":169,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":168,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":638,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":550,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":161,"org.apache.commons.collections4.CollectionUtilsTest.exists":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":257,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":26,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":491,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":517,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":497,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":365,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":121,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":412,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":409,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":673,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":627,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":609,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":147,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":574,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":58,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":59,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":342,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":490,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":360,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":545,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":426,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":165,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":521,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":280,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":616,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":582,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":129,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":631,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":203,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":533,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":247,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":82,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":567,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":477,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":640,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":329,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":104,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":416,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":657,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":394,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":489,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":572,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":506,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":625,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":351,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":255,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":530,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":291,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":310,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":561,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":482,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":90,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":340,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":98,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":539,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":377,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":436,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":10,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":529,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":656,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":341,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":234,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":92,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":555,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove":370,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":441,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":254,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":576,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":531,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":284,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":524,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":209,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":597,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":176,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":97,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":496,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":246,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":347,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":598,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":119,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":662,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":425,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCloneMethod":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":647,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":224,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":511,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":324,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":432,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":296,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":244,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":216,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":622,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":99,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":214,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":253,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":131,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":469,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":610,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":76,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":330,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":548,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":406,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":513,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":316,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":38,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":233,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":396,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":526,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":590,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":183,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":408,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":201,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":403,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":411,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":453,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":29,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":88,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":579,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":136,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":447,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":13,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":665,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":127,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":604,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":463,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":106,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":299,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":399,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":354,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":587,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":281,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":472,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":478,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":55,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":621,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":325,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":52,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":132,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":335,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":66,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":516,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":172,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":185,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":217,"org.apache.commons.collections4.CollectionUtilsTest.find":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":391,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":422,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":608,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":413,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":23,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":672,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":157,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":17,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":51,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":78,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":277,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":383,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":653,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":435,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":210,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":646,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":596,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":592,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":101,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":547,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":659,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":528,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":77,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":449,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":595,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":562,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":357,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":398,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":390,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":356,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":457,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":643,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":619,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":309,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":389,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":602,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":87,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":163,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":94,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":651,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":239,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":286,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":484,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":554,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":314,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":488,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":196,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":407,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":194,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":603,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":499,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":585,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":668,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":333,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":448,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":549,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":424,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":186,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":642,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":107,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":546},"transformations":[{"failures":[0,1],"tindex":"724b09ed-13a5-11e5-b307-99c88e1c4a67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[],"tindex":"72578d0e-13a5-11e5-b307-393229286cab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"72578d0f-13a5-11e5-b307-5d170560b754","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"bitIndex","expectedModCount":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"72578d10-13a5-11e5-b307-b1c4e3bf3922","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[2,3,4,5],"tindex":"7257b421-13a5-11e5-b307-316cda2cef9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"72589e82-13a5-11e5-b307-f7c9cc31cfcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:157","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator())"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"7258c593-13a5-11e5-b307-c320f2fe1e1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"7258c594-13a5-11e5-b307-6b9b54991800","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"7258c595-13a5-11e5-b307-1b117ec09db5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"variableMap":{"h":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7258c596-13a5-11e5-b307-2b15f08ed3fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[],"tindex":"7258eca7-13a5-11e5-b307-872f94d11c3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"entry":"left","parent":"right","current":"left","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7258eca8-13a5-11e5-b307-956b63071762","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"7258eca9-13a5-11e5-b307-adcb3a98bb12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"p","h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"7258ecaa-13a5-11e5-b307-f11f890ae14d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"725913bb-13a5-11e5-b307-297424dca5f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"other","k":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[],"tindex":"725913bc-13a5-11e5-b307-c7c7fb03a58e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key1","key5":"key2","hashCode":"hashCode","key3":"key4","key4":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"725913bd-13a5-11e5-b307-193ecb5e9c67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[50,51,52,53,54],"tindex":"725c20fe-13a5-11e5-b307-71e1ab2d6751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:62","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\", ((java.lang.Class[])(null)));\n    return new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeCloneFactory<T>(T , java.lang.reflect.Method);\n} catch (final java.lang.NoSuchMethodException ex) {\n    try {\n        T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n        return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n    } catch (final java.lang.NoSuchMethodException ex2) {\n        if (T instanceof java.io.Serializable) {\n            return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"725c480f-13a5-11e5-b307-3f0c67f5194e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"725c4810-13a5-11e5-b307-357ccdd00b41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"725c4811-13a5-11e5-b307-1974a2adb629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64],"tindex":"725f7c62-13a5-11e5-b307-29be6d219603","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"725fa373-13a5-11e5-b307-3dd1fa43a093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"725fa374-13a5-11e5-b307-3f8486ede848","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":"725fa375-13a5-11e5-b307-3f1c07aa7d92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n} "},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73],"tindex":"725fa376-13a5-11e5-b307-2159c696415c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from","replacement":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"725fa377-13a5-11e5-b307-e145c831f205","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1023","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.values();\n} "},"status":0},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"725fca88-13a5-11e5-b307-3df94c3ec557","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"725ff199-13a5-11e5-b307-15cfa25b4d62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[],"tindex":"725ff19a-13a5-11e5-b307-5b2e9c7b1f31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"entry","previous":"current","left":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"725ff19b-13a5-11e5-b307-cb5215992758","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"end2","proposedCapacity":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7263740c-13a5-11e5-b307-592bafa2b506","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"7263740d-13a5-11e5-b307-795acf631157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"72639b1e-13a5-11e5-b307-6f22b4b66598","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"72639b1f-13a5-11e5-b307-15341b62f8bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"predecessor","current":"start","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[370,371],"tindex":"72639b20-13a5-11e5-b307-2f60a2c71019","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"status":-1},{"failures":[372,373],"tindex":"72639b21-13a5-11e5-b307-89d81b558bfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-1},{"failures":[],"tindex":"72639b22-13a5-11e5-b307-6b0c26afbe24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"value","listSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[],"tindex":"7263c233-13a5-11e5-b307-4bd2753b3952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:391","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n    org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n}"},"variableMap":{"size":"lineageIndex","buckets":"childValue","lock":"childValue","i":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[374,375,376,377,378,379,380,381,382],"tindex":"7263c234-13a5-11e5-b307-f759ab77e579","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-1},{"failures":[],"tindex":"7263c235-13a5-11e5-b307-b16221e32ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"7263c236-13a5-11e5-b307-23239fbd1e2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"variableMap":{"closure":"iClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>.execute(E)"},"status":0},{"failures":[],"tindex":"7263c237-13a5-11e5-b307-81d4a98a3401","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"tree","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"7263e948-13a5-11e5-b307-ef39349cd078","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[383,384,385,386,387,388,389,390],"tindex":"7263e949-13a5-11e5-b307-a3c71b46f88c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[391,392,393,394,395],"tindex":"7263e94a-13a5-11e5-b307-cd35be3a8061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:207","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"7263e94b-13a5-11e5-b307-3d4da99297bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[396,397,398,399],"tindex":"7263e94c-13a5-11e5-b307-217a4320d926","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"bound","expectedModCount":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[400,401,402,403,3,404,405,4,406,407,408],"tindex":"7263e94d-13a5-11e5-b307-319d7d834241","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"hash","key":"key","bitIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[74,75,76,77,95,78,79,409,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,410,96,97,411,98,99,100,101,102,103,104,105,106,107,108,412,109,110,111,112,413,113,114,115,116,414,117,118,119,120,415,121,122,123,141,124,125,416,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,417,142,143,418,144,145,146,419,147,148,149,150,151,420,152,421,153,171,154,155,422,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,423,172,173,424,174,175,176,425,177,178,179,180,181,426,182,427,183,184,185,186,428,187,188,189,190,429,191,192,193,194,430,195,196,431,432,197,433,434,198,199,200,435,201,436,202,437,203,221,204,205,438,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,439,222,223,440,224,225,226,227,228,229,230,231,232,233,234,441,235,236,254,237,238,442,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,443,255,256,444,257,258,259,260,261,262,263,264,265,266,267,445,446,447,268,448,269,270,271,272,273,274,275,276,449,277,295,278,279,450,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,451,296,297,452,298,299,300,301,302,303,304,305,306,307,308,453,309,310,328,311,312,454,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,455,329,330,456,331,332,333,457,334,335,336,337,338,458,339,459,340,341,342,460,343,344,345],"tindex":"7264105e-13a5-11e5-b307-f9da6deca99a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[368],"tindex":"7264376f-13a5-11e5-b307-65f48dad5bef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"mergedList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1609","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<O>.hasNext()) {\n    final O O = java.util.Iterator<O>.next();\n    if ((O == null) || (!(O.equals(O)))) {\n        java.util.ArrayList<O>.add(O);\n    } \n    O = O;\n}"},"status":-1},{"failures":[461,462,463,464,465,466,467,468,469,470,471,26,31,33,34,35,472,473,474,475,476,477,478,479,480,37,38,481,482,483,484,485,486,487,488,489,39,44,46,47,48],"tindex":"72643770-13a5-11e5-b307-179c68ca8e33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"72643771-13a5-11e5-b307-87281731f344","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"72643772-13a5-11e5-b307-c53745549540","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[358,359,360,361,363,368,369],"tindex":"72643773-13a5-11e5-b307-3b3b360a37e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[490],"tindex":"72643774-13a5-11e5-b307-d52bd627a6e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[],"tindex":"72645e85-13a5-11e5-b307-05f599d796ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"7269dcc6-13a5-11e5-b307-63a029b2177e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[81,85,127,131,149,150,157,161,179,180,207,211,240,244,281,285,314,318,336,337],"tindex":"7269dcc7-13a5-11e5-b307-517884503efa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"7269dcc8-13a5-11e5-b307-6f08cd1a6ba4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:84","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\");\n} "},"status":-2},{"failures":[491,492],"tindex":"726a03d9-13a5-11e5-b307-69939fe8af0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"726a03da-13a5-11e5-b307-15981396b362","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-2},{"failures":[],"tindex":"726a03db-13a5-11e5-b307-8be7ae1de1ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"726a03dc-13a5-11e5-b307-610cbeced32a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"726a03dd-13a5-11e5-b307-6bd8c50606f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[56,493],"tindex":"726a03de-13a5-11e5-b307-df0fd2d983ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[2,3,494,5],"tindex":"726a2aef-13a5-11e5-b307-8d89a57466bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"value","value1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[358,359,360,361,362,363,364,365,366,368,369],"tindex":"726a2af0-13a5-11e5-b307-4f6c94ac7930","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:150","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"726a2af1-13a5-11e5-b307-3779fa2672f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1159","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null"},"variableMap":{"next":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"726a2af2-13a5-11e5-b307-875b81f79e0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:380","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"726a2af3-13a5-11e5-b307-37d2b49d698e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"726c74e4-13a5-11e5-b307-a174a2f5d55a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[65,66,495,67,68,69,70,71,72,73],"tindex":"726c74e5-13a5-11e5-b307-c14e00c3a043","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"xWasLeftChild","beforeFirst":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"726c9bf6-13a5-11e5-b307-1b28eeba0f81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":0},{"failures":[496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,63,64,601],"tindex":"726c9bf7-13a5-11e5-b307-c35612fd49be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"726c9bf8-13a5-11e5-b307-ff12bcbea8c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"variableMap":{"out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[602,603,604,605,606,607,608,609,610,610,611,611,612,613],"tindex":"726c9bf9-13a5-11e5-b307-fd52fbeb5b19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[614,615,616,617,618,619],"tindex":"726cc30a-13a5-11e5-b307-a3139a7d5d7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start1","n":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"726cc30b-13a5-11e5-b307-d79359761820","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"726cc30c-13a5-11e5-b307-672dd35b2cf0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":0},{"failures":[381],"tindex":"726cea1d-13a5-11e5-b307-f30000bd5846","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:111","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey();\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643],"tindex":"726cea1e-13a5-11e5-b307-3d15ca83ca14","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"variableMap":{"in":"in","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669],"tindex":"726cea1f-13a5-11e5-b307-1dc69b3f974f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"726cea20-13a5-11e5-b307-0745bf4b1b77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"726cea21-13a5-11e5-b307-69066b34c3b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[],"tindex":"726cea22-13a5-11e5-b307-7fb38745df00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"726d1133-13a5-11e5-b307-ef96296da064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":0},{"failures":[670],"tindex":"726d1134-13a5-11e5-b307-7ffc00582249","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")"},"status":-1},{"failures":[],"tindex":"726d1135-13a5-11e5-b307-bb2d056572f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"726d1136-13a5-11e5-b307-4117e529ab68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"726d1137-13a5-11e5-b307-6b18d393389e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"variableMap":{"h":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"726d1138-13a5-11e5-b307-e926758402df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[514,519,671,672,570,575,673],"tindex":"726d1139-13a5-11e5-b307-7b244f7a3c7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":-1},{"failures":[674],"tindex":"726d384a-13a5-11e5-b307-c59cfd74c0cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"726d384b-13a5-11e5-b307-f59f5d19329e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"726d384c-13a5-11e5-b307-576152ee76cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"numberOfNodesToCache","index":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[37,39,43,47,48],"tindex":"726d5f5d-13a5-11e5-b307-19c7eab5f539","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"726d5f5e-13a5-11e5-b307-6f6db9c9f976","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}