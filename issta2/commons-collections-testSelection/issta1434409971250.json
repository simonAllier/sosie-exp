{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":296,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":258,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":490,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":244,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":557,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":567,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":439,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":239,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":84,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":626,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":665,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":716,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":195,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":726,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":269,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":692,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":732,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":529,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":42,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":395,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":86,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":672,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":662,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":431,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":396,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":397,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":221,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":70,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":708,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":162,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":252,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":621,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":329,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":476,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":421,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":521,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":206,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":219,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":607,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":344,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":302,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":753,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":372,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":660,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":568,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":87,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":386,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":118,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":499,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":587,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":537,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":222,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":522,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":127,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":538,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":314,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":332,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":464,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":558,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":602,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":640,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":653,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":40,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":374,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":735,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":560,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":624,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":4,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":345,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":316,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":443,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":199,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":355,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":696,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":634,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":605,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":20,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":413,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":450,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":550,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":202,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":165,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":45,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":686,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":122,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":279,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":317,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":628,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":411,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":172,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":5,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":495,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":577,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":611,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":356,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":623,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":218,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":337,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":680,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":324,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":604,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":275,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":429,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":50,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":158,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":82,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":176,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":169,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":553,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":591,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":497,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":291,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":520,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":94,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":342,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":343,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":341,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":572,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":144,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":462,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":627,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":220,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":650,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":189,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":535,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":376,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":63,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":312,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":212,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":115,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":217,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":125,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":148,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":709,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":585,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":290,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":720,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":268,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":242,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":559,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":517,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":697,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":546,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":617,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":306,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":248,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.map.LRUMapTest.testClone":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":630,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":419,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":193,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":259,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":436,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":27,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":430,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":373,"org.apache.commons.collections4.ListUtilsTest.testSubtract":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":277,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":351,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":728,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":130,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":682,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":683,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":661,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":488,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":512,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":642,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":677,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":528,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":458,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":729,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":543,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":6,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":284,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":410,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":505,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":615,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":673,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":213,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":700,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":750,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":659,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":681,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":425,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":232,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":524,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":510,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":113,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":457,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":154,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":347,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":157,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":739,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":740,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":741,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.map.LRUMapTest.testReset":415,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":651,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":385,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":173,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":328,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":747,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":562,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":702,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":152,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":518,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":688,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":47,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":320,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":315,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":633,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":55,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":377,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":437,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":211,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":140,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":711,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":441,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":145,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":134,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":292,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":207,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":361,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":475,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":371,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":460,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":631,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":250,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":712,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":360,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":675,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":511,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":493,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":496,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":365,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":694,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":196,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":400,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":368,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":278,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":637,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":398,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":257,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":652,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":541,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":380,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":603,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":471,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":31,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":200,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":378,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":435,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":551,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":690,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":593,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":638,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":574,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":506,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":139,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":556,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":390,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":734,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.map.HashedMapTest.testClone":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":391,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":479,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":28,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":698,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":357,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":530,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":730,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":352,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":594,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":131,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":571,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":285,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testEmptyIterator":752,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":679,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":214,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":56,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":261,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":286,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":423,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":153,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":37,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":722,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":463,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":658,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":523,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":287,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":509,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":498,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":323,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":549,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":743,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":676,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":346,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":422,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":519,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":119,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":237,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":256,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":539,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":171,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":230,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":639,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":701,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":226,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":110,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":225,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":227,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":224,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":406,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":714,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":643,"org.apache.commons.collections4.map.LinkedMapTest.testClone":299,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyIterator":749,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":508,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":245,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":742,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":671,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":92,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":477,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":687,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":483,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":555,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":235,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":387,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":654,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":705,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":614,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":618,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":684,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":408,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":745,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":249,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":271,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":427,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":725,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":416,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":526,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":164,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":748,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":710,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":159,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":260,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":350,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":547,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":534,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":11,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":133,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":264,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":188,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":305,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":72,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":727,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":333,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":38,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":41,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":318,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":128,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":74,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":216,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":327,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":326,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":620,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":367,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":163,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":657,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":667,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":155,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":570,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":178,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":545,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":484,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":197,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":645,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":379,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":504,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":90,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":474,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":532,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":487,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":723,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":445,"org.apache.commons.collections4.map.LRUMapTest.testLRU":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":655,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":724,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":713,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":209,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":283,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":588,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":295,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":263,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":721,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":241,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":36,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":262,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":703,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":85,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":451,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":62,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":289,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":527,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":417,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":409,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":685,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":502,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":126,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":706,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":280,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":482,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":453,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":449,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":240,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":26,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":424,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":117,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":321,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":582,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":596,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":311,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":629,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":625,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":369,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":403,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":542,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":609,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":731,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":246,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":635},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"0b8255f2-13b4-11e5-821e-cb80ba503ac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"0b827d03-13b4-11e5-821e-cba8d5b06c59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81],"tindex":"0b827d04-13b4-11e5-821e-efef417165fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[82,83,84,85,86,87,44,45,48,50,51],"tindex":"0b827d05-13b4-11e5-821e-210ac2765e1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"0b82a416-13b4-11e5-821e-910bbe327d4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"0b82a417-13b4-11e5-821e-4fff62ebbd4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1159","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null"},"variableMap":{"next":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0b82a418-13b4-11e5-821e-6b4153553154","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"parent","tree":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[55],"tindex":"0b82a419-13b4-11e5-821e-a55180d540db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0b82cb2a-13b4-11e5-821e-e943e2c56cad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[143,144,145,146,147,148,149,150],"tindex":"0b82cb2b-13b4-11e5-821e-1d7474354c8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"tindex":"0b82cb2c-13b4-11e5-821e-93d1e7b1920e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0b82cb2d-13b4-11e5-821e-e35a750507f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[197,198],"tindex":"0b82cb2e-13b4-11e5-821e-937959eedeb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"0b82f23f-13b4-11e5-821e-6f28a64eadd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"variableMap":{"obj":"value","delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0b82f240-13b4-11e5-821e-c7c125e54fac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[217,218,219,220],"tindex":"0b82f241-13b4-11e5-821e-5330ca3440fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0b82f242-13b4-11e5-821e-85bec5aa58e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0b82f243-13b4-11e5-821e-fd291d2decf1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"previous","parent":"current","left":"left","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0b831854-13b4-11e5-821e-8dd546aaf1c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"tindex":"0b831855-13b4-11e5-821e-8dbd78947f38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"0b833f66-13b4-11e5-821e-b743d8c6a42e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":0},{"failures":[],"tindex":"0b833f67-13b4-11e5-821e-f9ac62d71853","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"0b833f68-13b4-11e5-821e-5744e3cb4bd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[153,159,160,162,163,164,166,167,169,172,173,186,192,193,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"0b833f69-13b4-11e5-821e-6fcd67471acb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"tree","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[286,287],"tindex":"0b833f6a-13b4-11e5-821e-330e9ae136fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtIfImpl","sourcecode":"if (java.lang.Runnable == null) {\n    throw new java.lang.NullPointerException();\n} "},"variableMap":{"r":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[288,289,290,291,292,293],"tindex":"0b83667b-13b4-11e5-821e-614e5cb61993","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"0b83667c-13b4-11e5-821e-63253117d5d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}"},"status":-2},{"failures":[],"tindex":"0b83667d-13b4-11e5-821e-3503680dfdc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"0b83667e-13b4-11e5-821e-3dff2dad3de8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"0b83667f-13b4-11e5-821e-fde4a58727d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"0b836680-13b4-11e5-821e-03971a9d7f63","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[307,308,309,310],"tindex":"0b838d91-13b4-11e5-821e-57a4a0359b4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0b838d92-13b4-11e5-821e-a361226332b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[311],"tindex":"0b838d93-13b4-11e5-821e-553c4815a5d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"status":-1},{"failures":[],"tindex":"0b838d94-13b4-11e5-821e-43aa07c3835b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"0b838d95-13b4-11e5-821e-099f0bbc0d5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"0b838d96-13b4-11e5-821e-f75f33c1661f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"0b83b4a7-13b4-11e5-821e-5745347612b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"0b83b4a8-13b4-11e5-821e-472208cb21b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"0b8625a9-13b4-11e5-821e-e7e8ce3eb19f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[312,313,294,314,315,295,316,317,318,319,320,321,322,323,324,325,202,326,327,328,329,330,331,203,332,333,296,334,335,336,337,338,339,340,341,342,343,344,345,346,204,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,205,365,366,367,368,369,370,371,372,373,206,374,375,376,377,378,379,207,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,208,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,297,414,415,416,417,418,419,420,421,217,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,298,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,299,478,300,479,480,301,481,302,303,482,304,305,306],"tindex":"0b8625aa-13b4-11e5-821e-a11f5f93eb42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530],"tindex":"0b864cbb-13b4-11e5-821e-6fbcae8fa566","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"0b864cbc-13b4-11e5-821e-51df94732bf7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"key3","k":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"0b864cbd-13b4-11e5-821e-1b5f139e2f12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"0b8673ce-13b4-11e5-821e-1b5eafadd394","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[197],"tindex":"0b8673cf-13b4-11e5-821e-b117d98d75a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[531],"tindex":"0b8673d0-13b4-11e5-821e-bfea6d63933a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"0b8673d1-13b4-11e5-821e-83236c02ccef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"0b8673d2-13b4-11e5-821e-a9300a4c1ced","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"0b8673d3-13b4-11e5-821e-fdade6bbb1f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[532,533,534,535,536,537,538,539],"tindex":"0b8673d4-13b4-11e5-821e-0539a585cb1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[73,74,540,76,78],"tindex":"0b8673d5-13b4-11e5-821e-73cf33892035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[9,28],"tindex":"0b869ae6-13b4-11e5-821e-add0a4babb69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1823","type":"CtReturnImpl","sourcecode":"return int <= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[541],"tindex":"0b869ae7-13b4-11e5-821e-fd5bc029ed65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-1},{"failures":[],"tindex":"0b869ae8-13b4-11e5-821e-d171104d424b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[532,533,534,535,536,537,538,539],"tindex":"0b869ae9-13b4-11e5-821e-f5dfe9bfdf06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[542],"tindex":"0b869aea-13b4-11e5-821e-45c13fa897f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":-1},{"failures":[197,198],"tindex":"0b869aeb-13b4-11e5-821e-cfd124b66da6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"0b869aec-13b4-11e5-821e-5d75df6b52e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0b869aed-13b4-11e5-821e-09ea9d9feca5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:558","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"before","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:303","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"status":-2},{"failures":[],"tindex":"0b869aee-13b4-11e5-821e-fd1fdffd6133","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ClosureUtils.<E>switchClosure(org.apache.commons.collections4.Predicate<E>[], org.apache.commons.collections4.Closure<? super E>[], org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[543,544,545,546,547,548,549,550,551,552,553],"tindex":"0b869aef-13b4-11e5-821e-25715caa691c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[],"tindex":"0b869af0-13b4-11e5-821e-6dc5edd54d66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"0b86c201-13b4-11e5-821e-bd1573670648","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[554,555,556,199,557,558,200,295,559,560,370,371,373,206,374,377,207,382,383,417,418,419,420,434,435,437,438,439,442,445,298,448,457,561,562,563,564,565,566,567,300,568,569,570,302,571,572,573,209,574,575,210,303,576,577,578,579,580,581,212,582,583,213,304,584,585,305,586,587,588,589,214,590,591,215,306,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611],"tindex":"0b86c202-13b4-11e5-821e-532f416de4d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0b86c203-13b4-11e5-821e-bdbd23be305c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[3,4,5,6,7,8,9,612,613,10,11,12,13,614,82,14,15,615,616,617,16,618,619,17,620,18,621,19,20,21,22,622,23,24,25,26,27,28,623,624],"tindex":"0b86c204-13b4-11e5-821e-4bf5c3279326","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-1},{"failures":[],"tindex":"0b86c205-13b4-11e5-821e-bdedb9ab6cbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:59","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super E>[])"},"variableMap":{"predicates":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[625,626,627,491,496,497,498,499,501,504,628,514,519,520,521,522,524,527,629],"tindex":"0b86c206-13b4-11e5-821e-9311b0e6811f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"value","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"0b86c207-13b4-11e5-821e-13d3f3fcb9f6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"0b86c208-13b4-11e5-821e-55ca296279b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0b86e919-13b4-11e5-821e-4b92dbc5ae3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[290,291,292,293],"tindex":"0b86e91a-13b4-11e5-821e-bbade204295d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"start2","d":"end1","vDown":"vUp","delta":"end1","end2":"i","this":"this","i":"end2","end1":"end1","k":"start2","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"0b86e91b-13b4-11e5-821e-6bd16958da57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"0b86e91c-13b4-11e5-821e-a58cd6493d49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[],"tindex":"0b86e91d-13b4-11e5-821e-e9384281a4e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[630,631,625,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,483,651,652,653,654,655,656,657,658,484,485,486,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,495,686,687,487,488,489,490,688,689,491,492,690,691,493,692,693,494,694,496,497,695,498,499,500,501,502,503,504,505,696,628,506,697,507,698,699,700,701,702,703,704,705,706,508,707,708,709,710,711,712,713,714,518,509,715,716,510,511,512,513,717,718,514,515,719,720,516,721,722,517,723,519,520,724,521,522,523,524,525,526,527,528,725,629,529,726,530,727,728,729],"tindex":"0b86e91e-13b4-11e5-821e-cb7e8bfc16a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"0b86e91f-13b4-11e5-821e-f369611fa1a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"0b86e920-13b4-11e5-821e-737a9b76b4b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"0b86e921-13b4-11e5-821e-118fa7efc4a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"0b871032-13b4-11e5-821e-d99a106c6040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[307,308,309,310],"tindex":"0b871033-13b4-11e5-821e-6dc0d5b14651","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[153,155,156,157,159,160,162,163,164,166,167,169,172,173,177,178,179,180,181,182,183,186,190,192,193,194,195,196],"tindex":"0b871034-13b4-11e5-821e-956c93c593cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[730],"tindex":"0b871035-13b4-11e5-821e-710ed1fb9617","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"0b871036-13b4-11e5-821e-ebdea40e5dd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"0b871037-13b4-11e5-821e-f5b8b72e532c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"set","subSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[731,732,733,734,735,736,737,1,738],"tindex":"0b871038-13b4-11e5-821e-f1a8ad73089f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"0b871039-13b4-11e5-821e-d94b9de3ebc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"0b87103a-13b4-11e5-821e-6336cc214f13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[739,740,741,742,743,744],"tindex":"0b87103b-13b4-11e5-821e-ff70e07d30f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"0b87103c-13b4-11e5-821e-371f63c3a0a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rightChild","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"0b87374d-13b4-11e5-821e-8fbe1e6103cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2},{"failures":[],"tindex":"0b87374e-13b4-11e5-821e-6f2509b8c43a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"value","length":"length","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[745,312],"tindex":"0b87374f-13b4-11e5-821e-497490850e52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[746],"tindex":"0b873750-13b4-11e5-821e-fdb185ef738f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:248","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"0b873751-13b4-11e5-821e-e9c06e1c5fbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:161","type":"CtAssignmentImpl","sourcecode":"this.E = E"},"status":-2},{"failures":[],"tindex":"0b873752-13b4-11e5-821e-3347dec4ff93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[747,748,749,750,751,752,753],"tindex":"0b873753-13b4-11e5-821e-79c438a6bcc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[16,17,18,19,20,22,23,25,26,27,28,29,32,52,53,67,70],"tindex":"0b873754-13b4-11e5-821e-91eb450ac785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}