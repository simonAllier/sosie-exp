{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":302,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":487,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":680,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":346,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":414,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":576,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":727,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":20,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":201,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":198,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":54,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":675,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":16,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":716,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":632,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":69,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":497,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":634,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":15,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":457,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":633,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":38,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":420,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":463,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":293,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":396,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":679,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":340,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":211,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":300,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":648,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":667,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":321,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":439,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":496,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":570,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":385,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":108,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":369,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":408,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":614,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":591,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":630,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":527,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":327,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":83,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":415,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":397,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":543,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":254,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":598,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":663,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":524,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":251,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":348,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":557,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":287,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":688,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":235,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":584,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":449,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":276,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":143,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":530,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":49,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":357,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":461,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":617,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":365,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":456,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":442,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":484,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":279,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":354,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":343,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":579,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":30,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":624,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":715,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":423,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":436,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":533,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":18,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":146,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":647,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":175,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":157,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":350,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":394,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":472,"org.apache.commons.collections4.map.CompositeMapTest.testGet":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":599,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":241,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":638,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":221,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":63,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":447,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":586,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":317,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":495,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":50,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":555,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":592,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":295,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":561,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":468,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":24,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":207,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":720,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":574,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":686,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":158,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":666,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":502,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":306,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":692,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":43,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":133,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":559,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":380,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":93,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":56,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":698,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":612,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":515,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":585,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":391,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":389,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":363,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":238,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":575,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":372,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":386,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":421,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":280,"org.apache.commons.collections4.list.TreeListTest.testRemove":245,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":545,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":90,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":510,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":569,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":506,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":154,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":257,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":702,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":209,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":315,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":458,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":181,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":136,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":664,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":95,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":4,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":160,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":382,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":453,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":722,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":621,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":336,"org.apache.commons.collections4.map.LRUMapTest.testClone":650,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":542,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":607,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":242,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":283,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":320,"org.apache.commons.collections4.ListUtilsTest.testSubtract":196,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":470,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":547,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":61,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":113,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":383,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":260,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":182,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":368,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":381,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":32,"org.apache.commons.collections4.CollectionUtilsTest.get1":696,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":111,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":678,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":659,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":189,"org.apache.commons.collections4.list.TreeListTest.testListEquals":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":219,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":122,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":285,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":444,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":500,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":572,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":60,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":674,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":131,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":116,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":544,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":171,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":644,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":100,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":435,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":709,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":417,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":529,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":639,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":609,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":564,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":440,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":540,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":571,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":418,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":210,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":517,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":670,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":738,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":657,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":94,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":109,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":594,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":339,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":202,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":689,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":433,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":21,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":53,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":642,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":87,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":250,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":700,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":619,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":701,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":398,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":462,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":699,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":443,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRetainAll":478,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":262,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":364,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":80,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":252,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":127,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":583,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":488,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":141,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":318,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":459,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":518,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":620,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":432,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":683,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":724,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":465,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":199,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":205,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":13,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":513,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":311,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":511,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":615,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":375,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":401,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":358,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":466,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":407,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":185,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":282,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":573,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":541,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":660,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":684,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":695,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":48,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":152,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":601,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":168,"org.apache.commons.collections4.map.HashedMapTest.testClone":653,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":36,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":326,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":305,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":611,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":593,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":681,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":332,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":606,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":203,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":622,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":565,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":581,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":552,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":44,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":626,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":669,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":558,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":656,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":590,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":259,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":687,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":142,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":294,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":535,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":438,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":101,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":665,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":562,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":349,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":400,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":706,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":277,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":220,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":736,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":735,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":265,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":390,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":732,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":81,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":731,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":651,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":734,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":733,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":728,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":730,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":216,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":637,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":156,"org.apache.commons.collections4.list.TreeListTest.testBug35258":249,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":290,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":77,"org.apache.commons.collections4.map.LinkedMapTest.testClone":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":655,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":65,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":258,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":725,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":523,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":153,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":628,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":151,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":404,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":247,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":278,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":676,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":22,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":274,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":125,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":568,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":232,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":563,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":393,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":672,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":213,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":608,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":711,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":425,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":272,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":239,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":707,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":454,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":237,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":388,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":697,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":12,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":424,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":708,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":429,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":613,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":224,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":682,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":178,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":299,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":448,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":526,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":431,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":240,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":376,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":165,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":710,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":231,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":402,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":387,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":228,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":525,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":493,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":467,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":17,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":693,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":718,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":577,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":269,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":270,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":271,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":441,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":677,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":331,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":550,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":553,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":427,"org.apache.commons.collections4.map.LRUMapTest.testLRU":645,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":705,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":124,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":486,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":309,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":33,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":406,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":330,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":556,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":359,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":39,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":538,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveAll":477,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":11,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":195,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":673,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":646,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":86,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":726,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":437,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":469,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":352,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":384,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":536,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":580,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":649,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":34,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":602,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":367,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":419,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":159,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":291,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":516,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":567,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":126,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":130,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":194,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":288},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"d73f11d2-13ae-11e5-a1fb-8bf2eaca6de4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[6,7,8,9,10,11],"tindex":"d7404a53-13ae-11e5-a1fb-85779fe704bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"d7404a54-13ae-11e5-a1fb-2d339779a539","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":0},{"failures":[],"tindex":"d7404a55-13ae-11e5-a1fb-19c8f9a05134","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"d7407166-13ae-11e5-a1fb-bd1b788f109b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d7407167-13ae-11e5-a1fb-71d3734e073b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"d7407168-13ae-11e5-a1fb-d3a35710c777","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"child","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d7409879-13ae-11e5-a1fb-8d311cd2883d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"d740987a-13ae-11e5-a1fb-6bbac89239bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"d740987b-13ae-11e5-a1fb-93cdf6f5d3e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} "},"variableMap":{"paramTypes":"paramTypes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"d740987c-13ae-11e5-a1fb-b58b8ca12ea8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[60],"tindex":"d740987d-13ae-11e5-a1fb-6f8247cd54ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:122","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.CloneTransformer.<T>cloneTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-1},{"failures":[61,62],"tindex":"d740987e-13ae-11e5-a1fb-674dedea7827","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[63],"tindex":"d740bf8f-13ae-11e5-a1fb-67037e70c375","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71],"tindex":"d740bf90-13ae-11e5-a1fb-cb14ef3b8158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"d740bf91-13ae-11e5-a1fb-e15c2425ca32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d740bf92-13ae-11e5-a1fb-b123693881fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"d740bf93-13ae-11e5-a1fb-cb13c8c7956c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode","value":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[0,1,72,73,74,75,76,77,78,79],"tindex":"d740bf94-13ae-11e5-a1fb-51065a7ab3c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"d740e6a5-13ae-11e5-a1fb-e99a77cd862f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"d7410db6-13ae-11e5-a1fb-ddf520aebee8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[89,117,127,162,244],"tindex":"d7410db7-13ae-11e5-a1fb-15ffb00153da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1471","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull()"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-1},{"failures":[],"tindex":"d74134c8-13ae-11e5-a1fb-1f133d9768f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"d74134c9-13ae-11e5-a1fb-df66e23e23dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[],"tindex":"d74134ca-13ae-11e5-a1fb-83fa28be35fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[269,270,271,272,273,274,275,276,277,278,279],"tindex":"d74134cb-13ae-11e5-a1fb-5d07fa5370b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"d74134cc-13ae-11e5-a1fb-63699af111f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:522","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object);\n} "},"variableMap":{"values":"valuesForKey","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"d7415bdd-13ae-11e5-a1fb-db3cbe92c8bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[280],"tindex":"d7415bde-13ae-11e5-a1fb-c30f1e059c28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[6,7,8,9,10,11],"tindex":"d7415bdf-13ae-11e5-a1fb-6d5f52941156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"delta","end2":"end1","this":"this","i":"i","end1":"delta","k":"delta","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"d7415be0-13ae-11e5-a1fb-bb0850d9fd5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[374,92,375,107,376,377,120,126,136,378,152,379,165,380,180,381,382,195],"tindex":"d7415be1-13ae-11e5-a1fb-8b7881e09946","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-1},{"failures":[383],"tindex":"d74182f2-13ae-11e5-a1fb-d92fa98428e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:363","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey());\n    org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[384,385,386,387,311,317,318,320,321,322,324,325,326,327,388,389,390,391,344,356,368],"tindex":"d74182f3-13ae-11e5-a1fb-c5809823bbd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"d74182f4-13ae-11e5-a1fb-6f7ab7915438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d74182f5-13ae-11e5-a1fb-85c9942800a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[392,393,394,92,395,106,107,376,396,397,398,120,399,126,135,136,400,151,152,401,402,403,165,404,179,180,381,405,406,407,194,195],"tindex":"d74182f6-13ae-11e5-a1fb-998bca1be1be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"d74182f7-13ae-11e5-a1fb-ed2d960df23e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":0},{"failures":[408],"tindex":"d74182f8-13ae-11e5-a1fb-6d88296f7dcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"d74182f9-13ae-11e5-a1fb-6f5b988ca82b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"d741aa0a-13ae-11e5-a1fb-9197a1f04b3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[309,409,410,411,412,354,413,414,415],"tindex":"d741aa0b-13ae-11e5-a1fb-4ff37ea4246d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"d741aa0c-13ae-11e5-a1fb-83d53d193e5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[416,417,418,419,279],"tindex":"d741aa0d-13ae-11e5-a1fb-ed7b80358878","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[],"tindex":"d741aa0e-13ae-11e5-a1fb-39ecd35ce743","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":0},{"failures":[198,199,203,232,235,239,241,242,243,208,209,211,212,213,215,216,218,221,222],"tindex":"d741aa0f-13ae-11e5-a1fb-b3400f20380f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"previous","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"d741aa10-13ae-11e5-a1fb-edd989e9f5d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"d741aa11-13ae-11e5-a1fb-47e7279b8dff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"d741d122-13ae-11e5-a1fb-33730bdaae91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"variableMap":{"key1":"key3","entry":"next","key2":"key4","hashCode":"hashCode","key3":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"d741d123-13ae-11e5-a1fb-dd5c7dde090a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:63","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"status":-2},{"failures":[],"tindex":"d741d124-13ae-11e5-a1fb-7ba24f2948a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"d741d125-13ae-11e5-a1fb-a58df87a57d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-2},{"failures":[],"tindex":"d741d126-13ae-11e5-a1fb-57549d8e9ca6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[420,421],"tindex":"d741d127-13ae-11e5-a1fb-8db24912be1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[422,423,424],"tindex":"d741d128-13ae-11e5-a1fb-232390b946a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[0,1,425,426,427,428,72,73,74,75,76,77,79,429,430,2,3,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,280,448,449,450,451,452,453],"tindex":"d741f839-13ae-11e5-a1fb-5f059a1dc8bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"d741f83a-13ae-11e5-a1fb-9704de499786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,206,208,209,210,211,212,213,214,216,218,221,222,223,233,234,235],"tindex":"d741f83b-13ae-11e5-a1fb-13bca50734c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[],"tindex":"d741f83c-13ae-11e5-a1fb-8fd90b6b00d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[332,335,412],"tindex":"d741f83d-13ae-11e5-a1fb-a9192fae8e60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[480,33],"tindex":"d7421f4e-13ae-11e5-a1fb-afed3c1b7e51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[481,482,483,484],"tindex":"d7421f4f-13ae-11e5-a1fb-b187097347fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[485,486,415,487,488,489,490],"tindex":"d7421f50-13ae-11e5-a1fb-9bdfdaf40710","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtIfImpl","sourcecode":"if (java.lang.Runnable == null) {\n    throw new java.lang.NullPointerException();\n} "},"variableMap":{"r":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[491,492,493,494,495,496,497,498],"tindex":"d7421f51-13ae-11e5-a1fb-51c9e36c2885","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[],"tindex":"d7421f52-13ae-11e5-a1fb-51a09cc1b81e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[499,500,501,502,503,504,505,506,507,508,509],"tindex":"d7421f53-13ae-11e5-a1fb-39e8b8324239","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-1},{"failures":[],"tindex":"d7421f54-13ae-11e5-a1fb-e3fb13ee48a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[198,199,200,201,203,204,205,206,208,209,211,212,213,214,215,216,218,221,222,226,227,229,230,231,235],"tindex":"d7421f55-13ae-11e5-a1fb-690eb7cd2ecb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625],"tindex":"d7421f56-13ae-11e5-a1fb-4f731f610a54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1},{"failures":[454,455,456,457,458,460,626,627,628,629,465,466,468,469,470,472,473,474,475,630,631,632,633,634,635,636,479,201,204,205,206,208,209,211,212,213,216,218,221,222,226,227,229,230,231,241,242,235],"tindex":"d7424667-13ae-11e5-a1fb-f9bad5b3cc21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[637,637,638,638,639,640,641,642],"tindex":"d7424668-13ae-11e5-a1fb-4bdb3054fe04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[288,300,312,324,334,345,357,369],"tindex":"d7424669-13ae-11e5-a1fb-79c7775b5b44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[],"tindex":"d742466a-13ae-11e5-a1fb-19463bef2693","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[332],"tindex":"d742466b-13ae-11e5-a1fb-2930db89dee9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[643,644],"tindex":"d742466c-13ae-11e5-a1fb-7f091c017599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"nextCalled","beforeFirst":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"d742466d-13ae-11e5-a1fb-2bcca643e7de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[645,646,647,648,649],"tindex":"d742466e-13ae-11e5-a1fb-213d9919cfd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"next","before":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"d744de7f-13ae-11e5-a1fb-ed6943e183eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[650,290,302,651,385,314,388,336,652,347,653,359,371],"tindex":"d744de80-13ae-11e5-a1fb-ab45ae3064f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"mapSize","newCapacity":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"d744de81-13ae-11e5-a1fb-3d1b6357cef1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[335,336],"tindex":"d744de82-13ae-11e5-a1fb-79f94ff97865","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"hash2","expectedModCount":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[72,73,74,75,76,78,79,440,441,442,443,444,654,446,447,280,448],"tindex":"d744de83-13ae-11e5-a1fb-c36d5aa0a37e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"d744de84-13ae-11e5-a1fb-635c0e392177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695],"tindex":"d744de85-13ae-11e5-a1fb-0d2717e47523","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[696],"tindex":"d744de86-13ae-11e5-a1fb-59e42f8d9dc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"d7450497-13ae-11e5-a1fb-5b7dad029d48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-2},{"failures":[697,698,699,700,701,702,703,704],"tindex":"d7450498-13ae-11e5-a1fb-e770af4f3313","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"d7450499-13ae-11e5-a1fb-a51d6ac912a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":0},{"failures":[],"tindex":"d745049a-13ae-11e5-a1fb-f91f9326df89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"d745049b-13ae-11e5-a1fb-175ce2fcb36f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"d745049c-13ae-11e5-a1fb-5d9a10a35792","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[705,1,428,706,72,73,74,75,76,77,78,79,707,429,430,708,709,710,711,712,713,714,3,436,715,437,438,439,440,441,716,442,443,444,445,654,446,447,280,448,449,450,717,451,452,453,718,719,720,721,722,723,724],"tindex":"d745049d-13ae-11e5-a1fb-2d5be5c3e3a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[672,725,726,727,692],"tindex":"d745049e-13ae-11e5-a1fb-f71038b42ce2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d7452baf-13ae-11e5-a1fb-dda6b0c55ba6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"d7452bb0-13ae-11e5-a1fb-f155cb8e1548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.listIterator(0)"},"status":-2},{"failures":[],"tindex":"d7452bb1-13ae-11e5-a1fb-39c4f751a12c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:317","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"d7452bb2-13ae-11e5-a1fb-23d370480aae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"variableMap":{"closures":"cmds","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:77","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : java.util.Collection<org.apache.commons.collections4.Closure<E>>) {\n    org.apache.commons.collections4.Closure<? super E>[][int++] = org.apache.commons.collections4.Closure<? super E>;\n}"},"status":-2},{"failures":[],"tindex":"d7452bb3-13ae-11e5-a1fb-99e4b540f6a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:293","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V"},"status":-2},{"failures":[728,729,730,731,732,733,734,735,736,737,738],"tindex":"d7452bb4-13ae-11e5-a1fb-4beb8fc16f21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"variableMap":{"size":"end","start":"end","maxElements":"end","end":"start","full":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}