{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":30,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":372,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":190,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":205,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":247,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":316,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":418,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":130,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":124,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":60,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":68,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":253,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":81,"org.apache.commons.collections4.CollectionUtilsTest.collect":325,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":448,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":66,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":342,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":285,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":134,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":341,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":447,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":173,"org.apache.commons.collections4.CollectionUtilsTest.get":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":17,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":393,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":199,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":203,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":302,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":180,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":359,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":333,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":204,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":360,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":319,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":56,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":50,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":168,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":211,"org.apache.commons.collections4.CollectionUtilsTest.transform2":323,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":207,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":248,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":384,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":221,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":279,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":42,"org.apache.commons.collections4.CollectionUtilsTest.intersection":446,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":192,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":283,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":300,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":378,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":340,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":164,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":405,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":214,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":256,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":189,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":396,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":202,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":307,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":26,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":376,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":94,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":336,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":159,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":100,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":423,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":375,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":424,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":74,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":355,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":338,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":6,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":226,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testReset":101,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":122,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":231,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.CollectionUtilsTest.union":445,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":363,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":99,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":162,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":357,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":369,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":383,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":311,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":370,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":16,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":171,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":422,"org.apache.commons.collections4.list.TreeListTest.testRemove":432,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":38,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":368,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":240,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":313,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":67,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":239,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testReset":104,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":271,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":125,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":9,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":228,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":420,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":229,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":98,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":212,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":137,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":335,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":167,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":64,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":139,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":15,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":330,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":354,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":201,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":306,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":305,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":172,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":131,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":408,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":48,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":95,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":438,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":406,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":198,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":371,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":352,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":381,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":431,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":117,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":116,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":216,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":245,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":429,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":366,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":334,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":367,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":443,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":53,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":284,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":183,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":315,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":217,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":434,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":238,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":129,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":156,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":210,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":349,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":80,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":272,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":72,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":215,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":435,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":206,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":77,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":304,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":108,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":52,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":236,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":193,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":437,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":73,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":243,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":160,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":388,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":254,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":389,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":235,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":356,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":439,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":188,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":275,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":59,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":218,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":84,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":144,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":142,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":289,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":237,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":224,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":412,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":197,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":225,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":115,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":280,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":281,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":282,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":227,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":344,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":174,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":449,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":44,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":377,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":92,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":155,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":251,"org.apache.commons.collections4.list.TreeListTest.testBug35258":428,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":301,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":127,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":176,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":232,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":170,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":186,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":286,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":264,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":332,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":90,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":86,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":114,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":345,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":39,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":414,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":242,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":310,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":362,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":361,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":103,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":308,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":179,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":394,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":178,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":382,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":409,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":89,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":347,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":154,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":386,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":387,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testIterator":102,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":385,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":276,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":324,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":343,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":153,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":297,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":233,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":309,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":147,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":270,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":223,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":397,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":55,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":348,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":250,"org.apache.commons.collections4.map.LRUMapTest.testLRU":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":234,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":222,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":194,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":288,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":374,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":141,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":317,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":75,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":79,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":259,"org.apache.commons.collections4.map.Flat3MapTest.testToString":358,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":166,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":403,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":404,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":273,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":252,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":151,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testIterator":106,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":419,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":416,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":249},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"4d71003f-13a9-11e5-93be-d73539257f0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"4d712750-13a9-11e5-93be-d7ba8b16e3cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,0,18,1,2,6,7,19,20,21,22,23,24,25,26,27],"tindex":"4d712751-13a9-11e5-93be-8b82d4328776","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[0,1,2,4,6,7,8],"tindex":"4d712752-13a9-11e5-93be-27375ad89bf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"yFormerRightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"4d714e63-13a9-11e5-93be-39d7b9329bbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[],"tindex":"4d714e64-13a9-11e5-93be-a3c062d65eae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"4d714e65-13a9-11e5-93be-33e9cc60558f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[],"tindex":"4d714e66-13a9-11e5-93be-93e56288b9dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[],"tindex":"4d714e67-13a9-11e5-93be-2569924a3c6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"entry","current":"root","tree":"root","right":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":0},{"failures":[28],"tindex":"4d714e68-13a9-11e5-93be-37a96e823c60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1609","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<O>.hasNext()) {\n    final O O = java.util.Iterator<O>.next();\n    if ((O == null) || (!(O.equals(O)))) {\n        java.util.ArrayList<O>.add(O);\n    } \n    O = O;\n}"},"status":-1},{"failures":[],"tindex":"4d717579-13a9-11e5-93be-090d266dd506","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"4d71757a-13a9-11e5-93be-0d2d8d1f8447","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[29,30],"tindex":"4d71757b-13a9-11e5-93be-77edd44e38ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"4d71757c-13a9-11e5-93be-f34d537ac9e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"variableMap":{"previous":"next","this":"this","header":"next","i":"i","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"4d71757d-13a9-11e5-93be-9d601dc8bc41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"4d719c8e-13a9-11e5-93be-81ad68f53d3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"4d719c8f-13a9-11e5-93be-43e88c22149b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,28,62],"tindex":"4d719c90-13a9-11e5-93be-f3ad7bb20bff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"4d719c91-13a9-11e5-93be-e3f26c1947fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[99,100],"tindex":"4d719c92-13a9-11e5-93be-e5b32fa63c76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.getEntry(int).getKey()"},"status":-1},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"4d71c3a3-13a9-11e5-93be-db133cb3c77b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"beforeFirst","nextCalled":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"4d71c3a4-13a9-11e5-93be-49e648d27e10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":0},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"4d71c3a5-13a9-11e5-93be-a3e07b19efd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[150,151,152,153,154,155],"tindex":"4d71c3a6-13a9-11e5-93be-b9147e51bdac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[29,30,156,157],"tindex":"4d71c3a7-13a9-11e5-93be-2b85391b68c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"total":"h","object":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"4d71c3a8-13a9-11e5-93be-0749f6580c77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"leastIndex","maxElements":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[158,159,160],"tindex":"4d71eab9-13a9-11e5-93be-751d01478ef9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"4d71eaba-13a9-11e5-93be-093956bfd76a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"4d71eabb-13a9-11e5-93be-e1984ce705b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"4d71eabc-13a9-11e5-93be-459d6c03e4af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"end1","currentIndex":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"4d71eabd-13a9-11e5-93be-5dd349953481","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"4d71eabe-13a9-11e5-93be-e97250e80c45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"4d7211cf-13a9-11e5-93be-5bb870d7e52c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"4d7211d0-13a9-11e5-93be-c79169393ee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:263","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"4d7211d1-13a9-11e5-93be-d1ed39872583","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"4d7211d2-13a9-11e5-93be-e7761c4f5e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"4d7211d3-13a9-11e5-93be-cf9deec9de5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":0},{"failures":[],"tindex":"4d7211d4-13a9-11e5-93be-db2b97839b83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:62","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) != (org.apache.commons.collections4.Transformer<? super I, ? extends O>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n} "},"status":-2},{"failures":[],"tindex":"4d7211d5-13a9-11e5-93be-ef3ba9022a43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"4d7211d6-13a9-11e5-93be-393d89e45c62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[],"tindex":"4d7211d7-13a9-11e5-93be-3fa878ffd1a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"element"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    int++;\n} "},"status":-2},{"failures":[168,180,192,204,216,226,237,249],"tindex":"4d7211d8-13a9-11e5-93be-7f4bdfabaf6d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[254,255,256,257,258],"tindex":"4d7238e9-13a9-11e5-93be-b791142bb1b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[259,260,261,262,263,264,265,266,267,268,269],"tindex":"4d7238ea-13a9-11e5-93be-0b8f58ca4599","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"4d7238eb-13a9-11e5-93be-8fb1959dd257","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"index","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":0},{"failures":[],"tindex":"4d7238ec-13a9-11e5-93be-d196b8e0cb39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"4d7238ed-13a9-11e5-93be-bda2d77e46a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"4d7238ee-13a9-11e5-93be-1982ad7b7c66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"length","start":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"4d7238ef-13a9-11e5-93be-bd43e2e07ac9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"4d7238f0-13a9-11e5-93be-35acd7ff7520","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[270],"tindex":"4d7238f1-13a9-11e5-93be-fd32af7874a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1276","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Enumeration<?>.nextElement();\n    } else {\n        java.util.Enumeration<?>.nextElement();\n    }\n}"},"status":-1},{"failures":[271,272,63,64,273,65,66,67,274,68,69,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,72,73,297,74,75,76,298,78,79,80,81,299,300,301,302,303,304,305,86,87,306,88,89,90,307,92,93,94,95,308,309,310,311,312],"tindex":"4d726002-13a9-11e5-93be-d10977d767d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[],"tindex":"4d726003-13a9-11e5-93be-4fc569763d24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"4d726004-13a9-11e5-93be-53dcd1079712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"4d726005-13a9-11e5-93be-ff5732000505","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"4d726006-13a9-11e5-93be-d3042823011b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:214","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeSet without a SetMutator strategy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"))"},"status":-2},{"failures":[313,314,315,316],"tindex":"4d726007-13a9-11e5-93be-b12d6c865893","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"delta","d":"end1","vDown":"vUp","delta":"end2","end2":"start1","this":"this","i":"start1","end1":"d","k":"offset","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"4d728718-13a9-11e5-93be-532006f7fd5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[],"tindex":"4d728719-13a9-11e5-93be-df8a7fb16598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"left","root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"4d72871a-13a9-11e5-93be-3f24f79b9d1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":0},{"failures":[317,318,319,320,321,322,2,3,4,5,6,7,8,0,1],"tindex":"4d72871b-13a9-11e5-93be-156775d08204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"4d72871c-13a9-11e5-93be-d3c25dda9b40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"4d72871d-13a9-11e5-93be-0b6bc80742c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":0},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"4d72871e-13a9-11e5-93be-3f3dc4db6fae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"4d72871f-13a9-11e5-93be-1927c2c50214","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"index","start":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"4d72ad30-13a9-11e5-93be-9122ff391905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":0},{"failures":[323,324,325],"tindex":"4d72ad31-13a9-11e5-93be-4dac21384e4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"4d72ad32-13a9-11e5-93be-bbb13242c8e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[326,327,328,329,330],"tindex":"4d72ad33-13a9-11e5-93be-53a62240898e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"indexOfLargestMobileInteger","expectedModCount":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"4d72ad34-13a9-11e5-93be-134bf3388bb8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"4d72ad35-13a9-11e5-93be-e11c606e32c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"newNode","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"4d72ad36-13a9-11e5-93be-51313a5a527c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"right","h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"4d72ad37-13a9-11e5-93be-cb424a5e73a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":0},{"failures":[],"tindex":"4d72d448-13a9-11e5-93be-1928d81867f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"4d72d449-13a9-11e5-93be-71972a5fe1aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:86","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.apache.commons.collections4.Trie<K, V>.keySet())"},"status":-2},{"failures":[331,332,333],"tindex":"4d72d44a-13a9-11e5-93be-55e1514ff496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[51,52,53,54,56,28,62],"tindex":"4d72d44b-13a9-11e5-93be-11baf7461ba8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4d72d44c-13a9-11e5-93be-db347863d7de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[334],"tindex":"4d72d44d-13a9-11e5-93be-2d9098669483","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"count","closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[335,336],"tindex":"4d72d44e-13a9-11e5-93be-ab15bde187e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4d72d44f-13a9-11e5-93be-f31c139112c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1149","type":"CtIfImpl","sourcecode":"if ((int) != (java.util.Map<?, ?>.size())) {\n    return false;\n} "},"variableMap":{"other":"other","size":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"4d72d450-13a9-11e5-93be-11190318133d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"4d72fb61-13a9-11e5-93be-13d1c3c6f919","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"4d72fb62-13a9-11e5-93be-677ab3292779","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"4d72fb63-13a9-11e5-93be-19165a306396","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"4d72fb64-13a9-11e5-93be-d9fb35437711","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"4d72fb65-13a9-11e5-93be-fd05cbcbf573","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"childValue","defaultValue":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-2},{"failures":[337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"4d72fb66-13a9-11e5-93be-59496347aab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[349,350,351,352,353,354],"tindex":"4d72fb67-13a9-11e5-93be-af83bc5120cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:240","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-1},{"failures":[],"tindex":"4d72fb68-13a9-11e5-93be-0b1261a9907a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"indent","index":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-2},{"failures":[70,71],"tindex":"4d72fb69-13a9-11e5-93be-0737f73dea25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"4d72fb6a-13a9-11e5-93be-09a51fd3f539","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[355,356,357],"tindex":"4d73227b-13a9-11e5-93be-73c9a9338326","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-1},{"failures":[358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,221,222,376,223,224,225,377,378,226,379,227,380,381,228,229,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"4d73227c-13a9-11e5-93be-a9d159e5ef25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[29,30,156,157],"tindex":"4d73227d-13a9-11e5-93be-c596034df158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1},{"failures":[403,404,405,406,407,408],"tindex":"4d73227e-13a9-11e5-93be-a181b915ea4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-1},{"failures":[409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425],"tindex":"4d73227f-13a9-11e5-93be-6b2e9e3359ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[426,427,428,429,430,431,432,433,434,435],"tindex":"4d732280-13a9-11e5-93be-6902bb37d54d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1111","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[436,437,438,439,440,441,442,443,444,158,324,445,446,447,448,449,355,356,357],"tindex":"4d732281-13a9-11e5-93be-55ebcaad7c4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}