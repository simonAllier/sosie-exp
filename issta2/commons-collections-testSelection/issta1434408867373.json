{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":417,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":200,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":46,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":269,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":307,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":529,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":451,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":546,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullKey":317,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":432,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":385,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":390,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":68,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":160,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":101,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":542,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":663,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":172,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":614,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":174,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":155,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":173,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":662,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":2,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":288,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":549,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":647,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":0,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":613,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":355,"org.apache.commons.collections4.CollectionUtilsTest.get":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":547,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":285,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":108,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":251,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":415,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":425,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":450,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":575,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":553,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":648,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":15,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":627,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":399,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":638,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":170,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":209,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":171,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":498,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":361,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":211,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":515,"org.apache.commons.collections4.CollectionUtilsTest.select":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":26,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":551,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":258,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":453,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":292,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":218,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":135,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":621,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":33,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":81,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":345,"org.apache.commons.collections4.CollectionUtilsTest.intersection":612,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":464,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":272,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":532,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":674,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":221,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":188,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":655,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":396,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":91,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":470,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":605,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":543,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":654,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":561,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":139,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":462,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":449,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":676,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":207,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":536,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":665,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":181,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":459,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":592,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":167,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":408,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":114,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":485,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":280,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":483,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":164,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":599,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":10,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":427,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMakeMap":356,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":671,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":350,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":213,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":378,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":379,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":220,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":52,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":182,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":230,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":31,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":422,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":423,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":421,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":474,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":622,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":270,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":394,"org.apache.commons.collections4.CollectionUtilsTest.union":611,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":265,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":522,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":395,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":601,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":225,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":397,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":672,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":178,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":548,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":363,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":86,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":294,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":273,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":420,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":657,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":342,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":567,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":666,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":303,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":107,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":639,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":481,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":405,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":17,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":623,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":404,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":185,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":146,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":626,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":331,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":444,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMakeMap":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":323,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":383,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":642,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":530,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":360,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":510,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":126,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":234,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":491,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":166,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":367,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":328,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":329,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":651,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":315,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":77,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":632,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":252,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":678,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":216,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":296,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":545,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":376,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":377,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":589,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":527,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":597,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":640,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":362,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":143,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":675,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":42,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":320,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":335,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":204,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":540,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":99,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":358,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":400,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":261,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":634,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":250,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":537,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":20,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":206,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":105,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullKey":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":264,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":322,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":115,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":603,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":98,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":616,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":446,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":633,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":389,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":535,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":321,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":668,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":487,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":495,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":608,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":343,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":544,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":67,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":496,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":18,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullValue":369,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":145,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":479,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":490,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":683,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":313,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":645,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":293,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":594,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":658,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":169,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":457,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":456,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":494,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":128,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":452,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":391,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":568,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":104,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":660,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":232,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":297,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":357,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":295,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":619,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":650,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":465,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":163,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":193,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":429,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":513,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":486,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":477,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":62,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":600,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":604,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":625,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":461,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":501,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":503,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":596,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":144,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":16,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":458,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":507,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":521,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":236,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":89,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":192,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullValue":318,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":445,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":228,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":508,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":88,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":159,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":673,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":556,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":455,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":454,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":195,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":410,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":526,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":615,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":351,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":538,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":617,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":319,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":30,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":583,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":636,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":557,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":137,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":217,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":554,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":325,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":326,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":393,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":324,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":653,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":180,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":25,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":564,"org.apache.commons.collections4.ListUtilsTest.testSelect":516,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":374,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":205,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":411,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":257,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":310,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":524,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":244,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":161,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":401,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":669,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":500,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":384,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":580,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":140,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":298,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":577,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":407,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":570,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":106,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":256,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":641,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":584,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":235,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":5,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":132,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":591,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":93,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":148,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":241,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":571,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":428,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":152,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":224,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":354,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":573,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":579,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":186,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":414,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":314,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":226,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":624,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":629,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":190,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":151,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":426,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":7,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":103,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":512,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":121,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":488,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":242,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":116,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":644,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":312,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":302,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":664,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":365,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":372,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":130,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":131,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":253,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":468,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":541,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":506,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":196,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":435,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":332,"org.apache.commons.collections4.map.LRUMapTest.testLRU":587,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":176,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":593,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":552,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":595,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":476,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":505,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":466,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":238,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":276,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":277,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":340,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":344,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":364,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":278,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":237,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":184,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":259,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":64,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":562,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":56,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":602,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":165,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":371,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":352,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":670,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":168,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":438,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":439,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":679,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":607,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":569,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":398,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":94,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":686,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":40,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":96,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":97,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":437,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":301,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":304,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":637,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":208,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":618,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":202,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":434},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"798c6038-13b1-11e5-bafa-2fe2d1d2d8bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[12],"tindex":"798c8749-13b1-11e5-bafa-77ae0551adb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-1},{"failures":[13,14,15,16,17,18,19],"tindex":"798c874a-13b1-11e5-bafa-59a4fb8c8c7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"798c874b-13b1-11e5-bafa-b94aee5d413f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"798c874c-13b1-11e5-bafa-df2317e11e85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-1},{"failures":[63,64,65,66,67,68],"tindex":"798de6dd-13b1-11e5-bafa-094d21601039","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"y","vDown":"vUp","i":"y","k":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[69,70,71,72,73,74,75],"tindex":"798de6de-13b1-11e5-bafa-074832397514","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[76,77,78,79,80,81,82,83,84,85],"tindex":"798de6df-13b1-11e5-bafa-1bed6737dbc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[69,70,86,87],"tindex":"798de6e0-13b1-11e5-bafa-49afd7f79219","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"y","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"798e0df1-13b1-11e5-bafa-0ba141b95c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"798e0df2-13b1-11e5-bafa-8546d45564b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"798e0df3-13b1-11e5-bafa-4bce90466b64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"798e3504-13b1-11e5-bafa-c7f2c3f036c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"798e3505-13b1-11e5-bafa-d7198eb63082","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"798e3506-13b1-11e5-bafa-a11764f3ecab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[129,130,131,132,133,134,135,136,137,138,139],"tindex":"798e3507-13b1-11e5-bafa-4d3843c920b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[140,141,142,143,144],"tindex":"798e3508-13b1-11e5-bafa-b5833ee11d13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"798e5c19-13b1-11e5-bafa-8b54dba6b7f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[145,146,147,148,149,150],"tindex":"798e5c1a-13b1-11e5-bafa-37aa17afe22a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"798e5c1b-13b1-11e5-bafa-452a7e14080e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:69","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int))"},"variableMap":{"lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i","beginIndex1":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:196","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[129,130,131,132,133,151,134,135,136,137,138,139],"tindex":"798e5c1c-13b1-11e5-bafa-e7618588750d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"798e832d-13b1-11e5-bafa-d371f55a326e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"798e832e-13b1-11e5-bafa-0f57f0ce1175","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"entry","parent":"entry","left":"right","h":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[152,153,154,155,156,157,158,159,160,103,104,105,106,107,108,109,110,112,113,114,115,116,117,119,120,121,123,125,126,140,161,162,163,164,165,166,167,168,169,141,170,171,172,173,174,142,143,144],"tindex":"798e832f-13b1-11e5-bafa-39b80a51fbc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"node","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,77,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"798eaa40-13b1-11e5-bafa-f76e009c3c4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"798eaa41-13b1-11e5-bafa-478018ef07c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[101,160,102,206,103,104,105,106,107,108,109,110,207,111,112,113,114,115,116,117,119,120,121,123,128],"tindex":"798eaa42-13b1-11e5-bafa-a54416fd934a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"variableMap":{"other":"key","endIndex2":"index1","f":"k","index2":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"798eaa43-13b1-11e5-bafa-319117e682d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:739","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[208,209,210,211],"tindex":"798eaa44-13b1-11e5-bafa-8100ecee8021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"798eaa45-13b1-11e5-bafa-2f486c861fe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>)"},"status":-2},{"failures":[101,102,106,107,108,109,110,111,112,113,114,115,122,123,125,126,128],"tindex":"798eaa46-13b1-11e5-bafa-abfa9bfd369d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[101,160,212,102,206,103,104,105,213,106,107,214,108,109,110,207,111,112,215,113,216,217,114,115,218,219,220,116,117,118,119,120,121,122,221,222,123,223,224,225,124,226,125,126,127,128],"tindex":"798eaa47-13b1-11e5-bafa-a1cba6807d52","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"798ed158-13b1-11e5-bafa-f16bfe22593f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"798ed159-13b1-11e5-bafa-6ff6f99aedf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"798ed15a-13b1-11e5-bafa-994e7bcc5d85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"lengthInBits","currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"798ed15b-13b1-11e5-bafa-d312318cc850","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"tree","parent":"tree","left":"tree","root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"798ed15c-13b1-11e5-bafa-815086e748c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"variableMap":{"coll":"coll","modified":"modified","it":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":0},{"failures":[239],"tindex":"798ed15d-13b1-11e5-bafa-151b1ea6b5b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[240,76,187,77,241,78,242,79,243,80,244,81,245,82,246,83,247,84,248,85],"tindex":"798ef86e-13b1-11e5-bafa-0be54e488c2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"798ef86f-13b1-11e5-bafa-07e7f1c04d5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[249],"tindex":"798ef870-13b1-11e5-bafa-d7e138704bda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:232","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) {\n    case BEFORE :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1;\n    case AFTER :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;\n    case EXCEPTION :\n        final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n        throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));\n    default :\n        throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)));\n}"},"status":-1},{"failures":[],"tindex":"798ef871-13b1-11e5-bafa-f159a9bf72d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393],"tindex":"798ef872-13b1-11e5-bafa-67a9a8c1c80a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[],"tindex":"798ef873-13b1-11e5-bafa-31865c4fc939","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"798ef874-13b1-11e5-bafa-dd03d3cc9b7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"798f1f85-13b1-11e5-bafa-b9aa575e3749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515],"tindex":"798f1f86-13b1-11e5-bafa-653e2d7dddeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"status":-1},{"failures":[516,517,518,519,520,521,522,523,524],"tindex":"798f1f87-13b1-11e5-bafa-fb26b2c5eab7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:519","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"798f1f88-13b1-11e5-bafa-69115304dcd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[63,64,65,66,67,68],"tindex":"798f1f89-13b1-11e5-bafa-339763861fb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"start1","start":"start1","end":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[240,76,187,77,241,78,242,79,243,80,244,81,245,82,246,83,247,84,248,85],"tindex":"798f1f8a-13b1-11e5-bafa-cbc4a863f3e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[525,526],"tindex":"798f469b-13b1-11e5-bafa-53a57e1d7a59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()"},"status":-1},{"failures":[431,527,528,448,529,530],"tindex":"798f469c-13b1-11e5-bafa-590bfa735629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"799009ed-13b1-11e5-bafa-11556c206530","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"parent","left":"p","h":"left","right":"left","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[103,104,105,115,119,120,122,123,223,124,226,125,126,127,140,161,141,531,142,532,533,534,143,144,535],"tindex":"799009ee-13b1-11e5-bafa-e7f2876f51c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"799009ef-13b1-11e5-bafa-edea5d5e905d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"799009f0-13b1-11e5-bafa-eb8997467c39","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:603","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.list.AbstractLinkedList<E>.size())"},"variableMap":{"this":"setOrder","outputStream":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"799009f1-13b1-11e5-bafa-a74dfd637ada","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"799009f2-13b1-11e5-bafa-37ddea93aa96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[536,537,538,539,540,541,542,543,544,545,546,547,69,548,70,549,86,550,551,72,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"79903103-13b1-11e5-bafa-2da2b05391c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[587,424,425],"tindex":"79903104-13b1-11e5-bafa-9f1217b4b412","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[],"tindex":"79903105-13b1-11e5-bafa-a75d29ecd41e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"p","left":"right","h":"predecessor","right":"predecessor","child":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"79903106-13b1-11e5-bafa-138a6fb67b60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"lengthInBits","lengthInBits":"lengthInBits","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex","otherOffsetInBits":"lengthInBits","otherLengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"79903107-13b1-11e5-bafa-b9294e950c85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"79903108-13b1-11e5-bafa-53d82b71784d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"79903109-13b1-11e5-bafa-d1782f9076a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"7990581a-13b1-11e5-bafa-91c1b1812027","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[],"tindex":"7990581b-13b1-11e5-bafa-8751ed115b6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[63,64,65,66,67,68],"tindex":"7990581c-13b1-11e5-bafa-bbaec9f06b27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"i","vDown":"vUp","i":"k","k":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"7990581d-13b1-11e5-bafa-831e065dc92e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7990581e-13b1-11e5-bafa-6dfb6a2501a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"7990581f-13b1-11e5-bafa-f1db21c54e42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-2},{"failures":[],"tindex":"79905820-13b1-11e5-bafa-8996a34039e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:491","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"79905821-13b1-11e5-bafa-79b981588951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"79905822-13b1-11e5-bafa-e79397056ef5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"newCapacity","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"79907f33-13b1-11e5-bafa-f9ef120b8d4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:907","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[588,589,590,510],"tindex":"79907f34-13b1-11e5-bafa-dd9253be74a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"79907f35-13b1-11e5-bafa-470cef420844","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.hasPrevious()"},"status":-2},{"failures":[],"tindex":"79907f36-13b1-11e5-bafa-85389c97f5a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-2},{"failures":[591,592],"tindex":"79907f37-13b1-11e5-bafa-41c42cf07c04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"keyPredicate","predicate2":"keyPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-1},{"failures":[593],"tindex":"79907f38-13b1-11e5-bafa-c3dacbd03099","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-1},{"failures":[594,595,596,597],"tindex":"79907f39-13b1-11e5-bafa-5d84a103d242","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"79907f3a-13b1-11e5-bafa-2b2c8390c8e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"path","root":"left","this":"this","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"79907f3b-13b1-11e5-bafa-c98abf027d4f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[598,520],"tindex":"79907f3c-13b1-11e5-bafa-59f6d5384605","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[599,600,601,602,598,603,604,605,606,607,608,609,610,520,611,612,613,614,615],"tindex":"7990a64d-13b1-11e5-bafa-5b87efe2b18a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"7990a64e-13b1-11e5-bafa-cfe9fd61f1d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[616],"tindex":"7990a64f-13b1-11e5-bafa-0fe9656a414f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"7990a650-13b1-11e5-bafa-351eb6d61df2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:274","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"variableMap":{"coll":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:252","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[617,190,618,619,620,621,622,623,624,625,626,203,627,628,629,630,631,632],"tindex":"7990a651-13b1-11e5-bafa-c37cb0fe10dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[],"tindex":"7990a652-13b1-11e5-bafa-57feb1feeed9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<? extends E>)"},"variableMap":{"list":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1550","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collate(java.lang.Iterable<? extends O>, java.lang.Iterable<? extends O>, org.apache.commons.collections4.ComparatorUtils.<O>naturalComparator(), boolean)"},"status":-2},{"failures":[633,89,90,92,93,94,95,96,97,91,98,99,100],"tindex":"7990a653-13b1-11e5-bafa-0b472c017ca1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"status":-2},{"failures":[],"tindex":"7990a654-13b1-11e5-bafa-c5f7246094d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658],"tindex":"7990cd65-13b1-11e5-bafa-19807de041df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[],"tindex":"7990cd66-13b1-11e5-bafa-95b1f9f2beca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682],"tindex":"7990cd67-13b1-11e5-bafa-39bde40ea30f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"7990cd68-13b1-11e5-bafa-8b52358f3efe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7990cd69-13b1-11e5-bafa-1b28e26e32a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7990cd6a-13b1-11e5-bafa-4fa93ab662cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":0},{"failures":[129,130,131,683,132,133,684,151,134,135,685,136,686,137,687,138,139],"tindex":"7990cd6b-13b1-11e5-bafa-2777dbc970a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}