{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":638,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":49,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":369,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":443,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":562,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":2,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":565,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":592,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":315,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":385,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":220,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":491,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":569,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":510,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":436,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":346,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":528,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":21,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":613,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":212,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":140,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":442,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":124,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":128,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":409,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":118,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":262,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":14,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":130,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":493,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":317,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":277,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":532,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":328,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":391,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":376,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":88,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":322,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":424,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":310,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":474,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":373,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":236,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":131,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":221,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":257,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":355,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":452,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":546,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":299,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":482,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":54,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":106,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":396,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":184,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":527,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":75,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":607,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":146,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":102,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":591,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":459,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":520,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":293,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":40,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":158,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":340,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":149,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":410,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":179,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":507,"org.apache.commons.collections4.map.CompositeMapTest.testGet":536,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":431,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":227,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":557,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":129,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":588,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":404,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":305,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":112,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":19,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":416,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":281,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":161,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":578,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":492,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":61,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":456,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":304,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":567,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":301,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":73,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":558,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":172,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":192,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":173,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":93,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":282,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":76,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":232,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":523,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":426,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":514,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":496,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":276,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":397,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":657,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":238,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":635,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":398,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":628,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":228,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":475,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":519,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":337,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":152,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":190,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":345,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.map.LRUMapTest.testClone":598,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":332,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":319,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":5,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":472,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":26,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":153,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":545,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":240,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":645,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":470,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":494,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":279,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":415,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":368,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":488,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":643,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":425,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":341,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":380,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":342,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":435,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":654,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":296,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":378,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":573,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":437,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":543,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":609,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":579,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":647,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":637,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":656,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":484,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":499,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":70,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":468,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":512,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":344,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":47,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":248,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":581,"org.apache.commons.collections4.map.LRUMapTest.testReset":7,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":388,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":379,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":235,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":610,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":242,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":330,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":608,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":306,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":117,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":336,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":395,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":123,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":174,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":465,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":480,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":216,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":534,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":629,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":411,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":633,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":347,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":201,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":506,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":94,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":169,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":170,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":334,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":31,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":498,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":168,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":137,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":583,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":87,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":648,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":335,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":555,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":348,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":350,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":469,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":552,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":526,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":593,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":333,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":382,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":325,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":497,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":631,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":66,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":616,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":586,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":289,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":25,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":159,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":327,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":280,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":197,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":422,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":461,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":101,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":356,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":646,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.HashedMapTest.testClone":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":518,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":150,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":148,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":353,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":444,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":181,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":318,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":611,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":655,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":295,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":230,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":261,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":632,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":483,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":612,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":269,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":478,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":570,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":463,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":615,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":331,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":111,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":439,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":377,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":509,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":553,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":256,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":413,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":323,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":312,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":464,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":183,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":597,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":571,"org.apache.commons.collections4.map.LinkedMapTest.testClone":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":481,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":547,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":634,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":113,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":372,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":62,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":99,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":639,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":531,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":477,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":467,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":450,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":97,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":363,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":489,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":574,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":251,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":561,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":433,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":540,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":630,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":79,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":602,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":247,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":200,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":165,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":418,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":539,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":160,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":621,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":390,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":445,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":568,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":614,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":143,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":375,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":622,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":191,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":36,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":18,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":264,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":195,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":156,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":194,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":241,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":642,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":524,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":63,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":457,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":513,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":284,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":529,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":440,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":180,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":206,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":259,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":263,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.LRUMapTest.testLRU":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":479,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":537,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":267,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":587,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":400,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":229,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":402,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":4,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":466,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":41,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":384,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":487,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":273,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":147,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":455,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":454,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":237,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":6,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":43,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":530,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":604,"org.apache.commons.collections4.map.Flat3MapTest.testToString":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":548,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":314,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":286,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":357,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":288,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":490,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":605,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":606,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":551,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":38,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":365,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":367,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":521},"transformations":[{"failures":[0,1],"tindex":"34dff403-13a2-11e5-8f65-b137fa4a4684","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[2,3,4,5],"tindex":"34e01b14-13a2-11e5-8f65-873756a7adef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"34e01b15-13a2-11e5-8f65-a16bc048f3ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"34e04226-13a2-11e5-8f65-8d2faf2214ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"34e04227-13a2-11e5-8f65-35cef41c5296","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"hashCode","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":0},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,24,25,26,27,28,29,30,31,32,38,84,85,5,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"34e04228-13a2-11e5-8f65-331a84877f52","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"34e04229-13a2-11e5-8f65-1ba0a9468ac1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-1},{"failures":[],"tindex":"34e0693a-13a2-11e5-8f65-610aab1172ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"34e0693b-13a2-11e5-8f65-ddc27630d849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"deletedNode","dataElement":"dataElement","child":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"34e0904c-13a2-11e5-8f65-97f58b31d3ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"34e0904d-13a2-11e5-8f65-dff20f81b8dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[151,152,153,154,155,156,157,158,159,160,161],"tindex":"34e0904e-13a2-11e5-8f65-7db46e052d66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,2,3,4,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,5,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"34e0904f-13a2-11e5-8f65-f574af041134","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"34e0b760-13a2-11e5-8f65-df219df5de15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-2},{"failures":[],"tindex":"34e0b761-13a2-11e5-8f65-b3363281a156","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"34e0b762-13a2-11e5-8f65-0ba5e4d0ec17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":0},{"failures":[212],"tindex":"34e0b763-13a2-11e5-8f65-794e87d89009","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:58","type":"CtReturnImpl","sourcecode":"return java.util.Collection<T>"},"status":-1},{"failures":[213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"tindex":"34e0b764-13a2-11e5-8f65-3bd5aec1505c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[141,143,231],"tindex":"34e0b765-13a2-11e5-8f65-3d6f3fb2d2a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"34e0de76-13a2-11e5-8f65-2d376eb64a18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[232,233,234,235,236],"tindex":"34e0de77-13a2-11e5-8f65-515243bb5d03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"34e0de78-13a2-11e5-8f65-b9c85d6beb68","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"34e0de79-13a2-11e5-8f65-770675b15d7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"lengthInBits","index":"bitIndex","beyond":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"tindex":"34e0de7a-13a2-11e5-8f65-01aa4683f2d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"34e1058b-13a2-11e5-8f65-edacd03827b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"34e1058c-13a2-11e5-8f65-31c99a87de6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[257],"tindex":"34e1058d-13a2-11e5-8f65-f5151c3bbe9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"34e1058e-13a2-11e5-8f65-25e35b89b060","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"34e1058f-13a2-11e5-8f65-9b1f9f8c474a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"variableMap":{"currentIterator":"currentIterator","iteratorChain":"iteratorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":0},{"failures":[],"tindex":"34e10590-13a2-11e5-8f65-dbea1a645464","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435],"tindex":"34e12ca1-13a2-11e5-8f65-efe18c53fd7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"34e12ca2-13a2-11e5-8f65-c3f967bd2b3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"key2","defaultValue":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"34e12ca3-13a2-11e5-8f65-81fb934c48c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} "},"variableMap":{"paramTypes":"paramTypes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":-2},{"failures":[436,437,438,439,213,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,222,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"tindex":"34e12ca4-13a2-11e5-8f65-1113ed280320","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"34e12ca5-13a2-11e5-8f65-fd5fe65c1edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-2},{"failures":[494,495,496,497,498,499,500,501,502,503,504,505],"tindex":"34e12ca6-13a2-11e5-8f65-970185896969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"34e12ca7-13a2-11e5-8f65-67194bc4c096","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"34e12ca8-13a2-11e5-8f65-c7ae7ace9bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:129","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.PredicatedList.PredicatedListIterator(org.apache.commons.collections4.list.PredicatedList<E>.decorated().listIterator(int))"},"status":-2},{"failures":[],"tindex":"34e153b9-13a2-11e5-8f65-57e1b7096807","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":0},{"failures":[506,507],"tindex":"34e153ba-13a2-11e5-8f65-13d00553847c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"34e153bb-13a2-11e5-8f65-1f0dbec9393a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"34e153bc-13a2-11e5-8f65-4be56ea9cc2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"34e153bd-13a2-11e5-8f65-e1e8a9b00e49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"34e153be-13a2-11e5-8f65-bfda25d799d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"34e153bf-13a2-11e5-8f65-6fff4d6624d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[508,509,510,511,512],"tindex":"34e153c0-13a2-11e5-8f65-2b31f5334f2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"34e153c1-13a2-11e5-8f65-afb76721dedb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"34e153c2-13a2-11e5-8f65-0dbcaacf17b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"34e17ad3-13a2-11e5-8f65-37243addcd2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[141,143,231,513,514,515,516,517,518,519],"tindex":"34e17ad4-13a2-11e5-8f65-9f1a77729f32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[520,521,522,523,524,525,526,527,528,529],"tindex":"34e17ad5-13a2-11e5-8f65-bfd3519a3822","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[530,531,532,533],"tindex":"34e17ad6-13a2-11e5-8f65-45cee0f4f690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[534,535],"tindex":"34e17ad7-13a2-11e5-8f65-333e7415fa68","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":-1},{"failures":[],"tindex":"34e17ad8-13a2-11e5-8f65-6d70d08a823e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","this":"this","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[536,537],"tindex":"34e1a1e9-13a2-11e5-8f65-97afc6fd5f1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"34e1a1ea-13a2-11e5-8f65-45da0b642007","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"34e1a1eb-13a2-11e5-8f65-e79a1224eeb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:69","type":"CtReturnImpl","sourcecode":"return (org.w3c.dom.NodeList) == null ? false : (int) < (org.w3c.dom.NodeList.getLength())"},"variableMap":{"index":"i","nodeList":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[538,539,540,541,542,543,544,545,546,547,548],"tindex":"34e1a1ec-13a2-11e5-8f65-c57f9c097431","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"34e1a1ed-13a2-11e5-8f65-9175cd635580","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"34e1a1ee-13a2-11e5-8f65-2bd30ded8db2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"34e1a1ef-13a2-11e5-8f65-793e78a47c51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[549,550,551,444,552,462,463,452,454,457,460,472,553,492,493,482,484,487,490],"tindex":"34e1a1f0-13a2-11e5-8f65-c9d9b822dc4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[554,457,487],"tindex":"34e1a1f1-13a2-11e5-8f65-f3ae14b5cb8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1030","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[177,178,179,180,181,182,183,185,187,190,5,555],"tindex":"34e1c902-13a2-11e5-8f65-c7f2016266b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[556,557],"tindex":"34e1c903-13a2-11e5-8f65-f165dcf9e579","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:777","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer()"},"status":-1},{"failures":[],"tindex":"34e1c904-13a2-11e5-8f65-f18a7eb54349","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE":"org.apache.commons.collections4.functors.TruePredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.Predicate"},"status":0},{"failures":[12,13],"tindex":"34e1c905-13a2-11e5-8f65-a77f0a902fe8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[558,559,560,561,562],"tindex":"34e1c906-13a2-11e5-8f65-97f0e0a527a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"))"},"status":-1},{"failures":[],"tindex":"34e1c907-13a2-11e5-8f65-459809b8d92b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"34e1c908-13a2-11e5-8f65-a9d3ef0ac9f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"34e1c909-13a2-11e5-8f65-2d745b74bc98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:546","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"34e1c90a-13a2-11e5-8f65-b75db7b7d7a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[563,564,136,137,138,565,140,141,142,143,566,231,567,568,513,134,135,569,570,146,147,148,571,150,572,573,574,575,144,145],"tindex":"34e1f01b-13a2-11e5-8f65-47fe3d25b618","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"34e1f01c-13a2-11e5-8f65-db4b928a9828","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"34e1f01d-13a2-11e5-8f65-4d3cc5a1eccc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"newNode","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[60,61,62,63,64,65,66,68,576,577,69,578,72,73,74,75,76,77,78,80,579,580,81,581,24,25,26,27,28,29,30,32,34,37,38,582,177,178,180,181,182,185,187,190,5,86,87,88,89,90,91,92,94,583,584,95,585,98,99,100,101,102,103,104,106,586,587,107,588,110,111,112,113,114,115,116,118,589,590,119,591,122,123,124,125,126,127,128,130,592,593,131,594],"tindex":"34e1f01e-13a2-11e5-8f65-9b5e53048291","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"34e1f01f-13a2-11e5-8f65-2b1abad76eef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[595,596,597,577,580,598,37,165,190,584,599,587,590,600,593],"tindex":"34e1f020-13a2-11e5-8f65-33bc37044af9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[601,602,603,604,605,606,607,608,609,610,611,612],"tindex":"34e1f021-13a2-11e5-8f65-59f47c9ad246","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"34e21732-13a2-11e5-8f65-ffd974f527e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[613,614,615,616,617,618,619],"tindex":"34e21733-13a2-11e5-8f65-f3e129de7e05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"nextObjectSet","beforeFirst":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"34e21734-13a2-11e5-8f65-132e8a53e2a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"leastIndex","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"34e21735-13a2-11e5-8f65-9ba93f475b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[620,621],"tindex":"34e21736-13a2-11e5-8f65-45f0dfe87094","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[622,141,143,623,624,513,515,517,518,519],"tindex":"34e21737-13a2-11e5-8f65-97a35d76e09c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[625,626,627,628,629,630,631,632,633],"tindex":"34e21738-13a2-11e5-8f65-afa715f84f22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[634,635],"tindex":"34e328a9-13a2-11e5-8f65-77a372a1e7f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[636,637,638,622,141,143,623,624,231,513,514,515,516,519],"tindex":"34e328aa-13a2-11e5-8f65-8366faf73152","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"34e328ab-13a2-11e5-8f65-55afcb746e1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[639,446,447,440,441,442,456,457,458,461,552,462,640,463,452,453,454,455,474,475,478,468,469,470,486,487,488,491,553,492,641,493,482,483,484,485],"tindex":"34e328ac-13a2-11e5-8f65-511045fd245e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[642,643,644,645,450,646,647,648,479,649,650],"tindex":"34e328ad-13a2-11e5-8f65-b1b89cda2c94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:603","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.list.AbstractLinkedList<E>.size())"},"status":-1},{"failures":[],"tindex":"34e328ae-13a2-11e5-8f65-a7c7cbf59a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[134,135,136,137,138,140,141,142,143,144,145,146,147,148,150],"tindex":"34e328af-13a2-11e5-8f65-235c4e2c2411","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"34e34fc0-13a2-11e5-8f65-a34217a251e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[651],"tindex":"34e34fc1-13a2-11e5-8f65-df52dd4a5681","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-1},{"failures":[652,653],"tindex":"34e34fc2-13a2-11e5-8f65-213e893095d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[654,655,656,657],"tindex":"34e34fc3-13a2-11e5-8f65-3fe994c69937","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[],"tindex":"34e34fc4-13a2-11e5-8f65-b92d91426471","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[],"tindex":"34e34fc5-13a2-11e5-8f65-b1bdb03923a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}