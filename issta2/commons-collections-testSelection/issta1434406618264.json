{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":408,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":208,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":369,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":811,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":45,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":630,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":779,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":820,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":655,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":438,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":632,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":301,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":389,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":12,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":734,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":448,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":412,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":430,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":428,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":265,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":295,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":426,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":83,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":601,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":217,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":782,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":24,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":788,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":160,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":135,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":555,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":181,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":714,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":185,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":647,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":373,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":22,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":213,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":496,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":297,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":572,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":694,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":372,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":774,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":769,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":8,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":818,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":215,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":809,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":699,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":700,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":685,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":789,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":423,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":675,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":751,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":259,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":343,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":379,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":615,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testEmptyIterator":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":742,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":475,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":346,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":649,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":143,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":657,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":808,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":585,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":737,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":805,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":499,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":577,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":61,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":230,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":505,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":725,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":197,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":787,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":314,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":709,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":482,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":803,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":816,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":195,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":439,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":162,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":564,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":286,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":370,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":449,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":167,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":659,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":166,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":467,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":670,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":669,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":668,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":705,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.map.LRUMapTest.testReset":640,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":461,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":620,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":484,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":783,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":746,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":402,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":580,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":631,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":388,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":650,"org.apache.commons.collections4.map.LinkedMapTest.testReset":570,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":776,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":361,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":348,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":605,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":658,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":359,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":119,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":778,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":498,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":97,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":673,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":214,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":609,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":6,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":597,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":347,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":528,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":617,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":104,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":692,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":212,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":530,"org.apache.commons.collections4.map.HashedMapTest.testClone":539,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":626,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":760,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":154,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":764,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":209,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":786,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":492,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":493,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":165,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":3,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":234,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":495,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":591,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":590,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":592,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":543,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":800,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":579,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":726,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":814,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":21,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":603,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":602,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":571,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":184,"org.apache.commons.collections4.map.LinkedMapTest.testClone":574,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":720,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":158,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":743,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":763,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":722,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":721,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":345,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":453,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":549,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":653,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":643,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":749,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":584,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":446,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":689,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":619,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":378,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":822,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":793,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":823,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":651,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":485,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":204,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":616,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":117,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":561,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":525,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":581,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":350,"org.apache.commons.collections4.map.LRUMapTest.testLRU":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":317,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":502,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":468,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":70,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":518,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":516,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":664,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":497,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":799,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":410,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":400,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":662,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":320,"org.apache.commons.collections4.map.Flat3MapTest.testToString":357,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":687,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":812,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":758,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":766,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":750,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":509,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":118,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":717,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":672,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":172,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":773,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":560,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":321,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":557,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":707,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":417,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":741,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":415,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":90,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":356,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":127,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":239,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":517,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":351,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":318,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":460,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":531,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":98,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":821,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":817,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":435,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":621,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator":46,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":420,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":777,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":421,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testFullIterator":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":419,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":690,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":677,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":79,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":277,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":537,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":374,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":281,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":702,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":683,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":59,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":391,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":514,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":193,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":124,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":406,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":770,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":583,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":274,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":712,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":772,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":771,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":522,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":729,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":510,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":567,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":588,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":652,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":189,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":238,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":336,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":790,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":486,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":418,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":759,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":173,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":538,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":176,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":299,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":279,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":696,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":695,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":164,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":413,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":481,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":697,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":740,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":738,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":792,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":233,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":756,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":422,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":250,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":680,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":285,"org.apache.commons.collections4.map.LRUMapTest.testClone":641,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":599,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":300,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":545,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":62,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":589,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":323,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":745,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":476,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":478,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":558,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":315,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":600,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":228,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":757,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":719,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":163,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":223,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":813,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":311,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":679,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":129,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":255,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":815,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":310,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":262,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":688,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":236,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":598,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":479,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":103,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":170,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":810,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":93,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":473,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":611,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":512,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":227,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":211,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":595,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":520,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":587,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":594,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":593,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":744,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":613,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":775,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":761,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":508,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":804,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":629,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":109,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":384,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":385,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":781,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":224,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":795,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":511,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":785,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":257,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":660,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":681,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":724,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":548,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":216,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":121,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":506,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":521,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":263,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":526,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":344,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":753,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":17,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":513,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":106,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":231,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":235,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":319,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":123,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":480,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":146,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":58,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":73,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":329,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":488,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":334,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":503,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":327,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":713,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":443,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":308,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":431,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":52,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":200,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":342,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":368,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":691,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":452,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":797,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":424,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":794,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":612,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":801,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":661,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":382,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":383,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":608,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":550,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":754,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":29,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":416,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":187,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":282,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":376,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":49,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":50,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":51,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":551,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":205,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":148,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":64,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":371,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":375,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":807,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":245,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":644,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":182,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":819,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":806,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":220,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":667,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":665,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":723,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":666,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":196,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":553,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":137,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":529,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":534,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":614,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":802,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":302,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":115},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"3cfa301f-13ac-11e5-841a-0726498f0a22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"right","predecessor":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[46,47,48],"tindex":"3cfa5730-13ac-11e5-841a-adb13871abb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59],"tindex":"3cfa5731-13ac-11e5-841a-076ea57b2160","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"3cfa7e42-13ac-11e5-841a-054a7c020912","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":0},{"failures":[],"tindex":"3cfa7e43-13ac-11e5-841a-cfd5cd6ca9ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"3cfa7e44-13ac-11e5-841a-1145a64c39a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"k","removeIndex":"d","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":0},{"failures":[],"tindex":"3cfcc835-13ac-11e5-841a-4dbfbdf231e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"3cfcc836-13ac-11e5-841a-d369d3ceef87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[153,154],"tindex":"3cfcef47-13ac-11e5-841a-8505bc08bfc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"3cfcef48-13ac-11e5-841a-3d02df45db63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-2},{"failures":[155,156],"tindex":"3cfcef49-13ac-11e5-841a-9bf766ddf691","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.addAll(java.util.List<E>)"},"variableMap":{"temp":"nextP","sl":"nextP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:145","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])))"},"status":-1},{"failures":[157,158,159,160,161,162],"tindex":"3cfcef4a-13ac-11e5-841a-b15d8512db99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[163,164,165,166],"tindex":"3cfcef4b-13ac-11e5-841a-af760d0e8a6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[],"tindex":"3cfcef4c-13ac-11e5-841a-21d4279df1d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[157,158,167,168,169,170,171,172,173,174,175,176,177,178,161,162,179,180,181,182,183,184,185,186],"tindex":"3cfcef4d-13ac-11e5-841a-e1371ab14bec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"3cfcef4e-13ac-11e5-841a-b9755038ffd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:144","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator()"},"status":-2},{"failures":[],"tindex":"3cfcef4f-13ac-11e5-841a-99e74fc831e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"3cfd1660-13ac-11e5-841a-6f2b7a8f0c4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[175,177],"tindex":"3cfd1661-13ac-11e5-841a-eff01c89bd54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"3cfd3d72-13ac-11e5-841a-a513c96358cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[199,200],"tindex":"3cfd3d73-13ac-11e5-841a-63ca6fa74539","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"lastItemIndex","proposedCapacity":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"3cfd3d74-13ac-11e5-841a-5fae68112300","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3cfd3d75-13ac-11e5-841a-4bf4fb8dfd74","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[249,175,177,250,251,252,178,253,254,255,256,257,258],"tindex":"3cfd3d76-13ac-11e5-841a-6db23d777249","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"3cfd3d77-13ac-11e5-841a-7f4d486ab5ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1049","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"currentNode":"root","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:493","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"3cfd6488-13ac-11e5-841a-834f0568269a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"3cfd6489-13ac-11e5-841a-bf5b8561d70b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3cfd648a-13ac-11e5-841a-3b40f1e65fb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"status":-2},{"failures":[259],"tindex":"3cfd648b-13ac-11e5-841a-25ea69ae61d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],"tindex":"3cfd648c-13ac-11e5-841a-8b980dbac558","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"3cfd648d-13ac-11e5-841a-25d614c7d81a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"3cfd648e-13ac-11e5-841a-8baf26b19747","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"3d01351f-13ac-11e5-841a-d5963ab5c49a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[290,291,292,293,59],"tindex":"3d015c30-13ac-11e5-841a-f7aa520297ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[],"tindex":"3d015c31-13ac-11e5-841a-0be09dbd0166","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"3d015c32-13ac-11e5-841a-8d693209d43a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"3d015c33-13ac-11e5-841a-85731d881d78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"3d018344-13ac-11e5-841a-83c424844828","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[294,295,296,297,298],"tindex":"3d018345-13ac-11e5-841a-a528fcfa132d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[63,64,65,66,67,68,60,61,62,72,73,75,76,77,79,69,70,71,84,85,87,88,89,91,81,82,83,96,97,99,100,101,103,93,94,95,108,109,111,112,113,115,105,106,107,120,121,123,124,125,127,117,118,119,132,133,135,136,137,139,129,130,131,144,145,147,148,149,151,141,142,143],"tindex":"3d018346-13ac-11e5-841a-292808bfa980","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[299,300,301,302],"tindex":"3d018347-13ac-11e5-841a-b553e9d54280","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"3d018348-13ac-11e5-841a-09ec7523293a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-1},{"failures":[342,343,344],"tindex":"3d018349-13ac-11e5-841a-e7ba01b89137","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"3d01834a-13ac-11e5-841a-e1e91dbbbe79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"status":-2},{"failures":[345],"tindex":"3d01834b-13ac-11e5-841a-fb4863cc8aba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[346,347,348,349,350,351,352,353,354,355],"tindex":"3d01834c-13ac-11e5-841a-8fcc41566c2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:266","type":"CtReturnImpl","sourcecode":"return !((java.util.Iterator<?>.hasNext()) || (java.util.Iterator<?>.hasNext()))"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"3d01aa5d-13ac-11e5-841a-bd2774ae64e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"3d01aa5e-13ac-11e5-841a-e10e8724d6fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"status":-2},{"failures":[],"tindex":"3d01aa5f-13ac-11e5-841a-175da506b52b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"next","hashCode":"hashCode","this":"this","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[356,282],"tindex":"3d01aa60-13ac-11e5-841a-b53577ffb5fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[],"tindex":"3d01aa61-13ac-11e5-841a-8df295751466","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3d01aa62-13ac-11e5-841a-ff85a1ee75f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"3d01aa63-13ac-11e5-841a-29d99b72b129","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"3d01aa64-13ac-11e5-841a-03ddd2b9a212","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"object","length":"length","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"3d01d175-13ac-11e5-841a-07603888c174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"3d01d176-13ac-11e5-841a-47426e0fbfce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:561","type":"CtIfImpl","sourcecode":"if (boolean) {\n    ((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this);\n    boolean = false;\n} "},"variableMap":{"valid":"result","parent":"setOrder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[357,358,343,359,360,361,362,363,364,365,366,367,368,342,369,370,371,372,63,64,373,65,66,67,344,374,68,375,60,376,377,61,62,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"3d01d177-13ac-11e5-841a-0dc2dea7ac87","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[399,157,158,400,401,402,403,404,405,406,407,408,409,410,411,412,413,167,168,414,169,170,171,172,173,174,415,175,159,160,176,177,416,417,418,419,420,421,250,251,422,252,423,424,178,253,425,426,254,255,256,257,258,427,428,429,161,162,430,431,432,433,434,435,436,437,438,179,180,439,181,182,183,184,185,186,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"3d01d178-13ac-11e5-841a-25f966e53ee4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-1},{"failures":[460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"3d01d179-13ac-11e5-841a-255cf6983359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"3d01d17a-13ac-11e5-841a-a1cf8b3915c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"variableMap":{"composite":"object","i":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"3d01f88b-13ac-11e5-841a-7f3afdbad4a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[260,277,282,283],"tindex":"3d01f88c-13ac-11e5-841a-23d1f3ed1f00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"3d01f88d-13ac-11e5-841a-87bc2d87cc3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[489],"tindex":"3d01f88e-13ac-11e5-841a-ad464f2fd08e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"3d01f88f-13ac-11e5-841a-a30887594b79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[],"tindex":"3d01f890-13ac-11e5-841a-1705513e071c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"variableMap":{"result":"args","size":"length","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"3d01f891-13ac-11e5-841a-7bc27aecbf98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":-2},{"failures":[490,491,492,493,494,495,496,497,498,499,500,190,191,501,192,193,194,502,197,198],"tindex":"3d01f892-13ac-11e5-841a-9d1dd77df383","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[503,504],"tindex":"3d01f893-13ac-11e5-841a-6b42babfa2d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"3d01f894-13ac-11e5-841a-7bbe866a6cc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1611","type":"CtIfImpl","sourcecode":"if ((O == null) || (!(O.equals(O)))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"3d021fa5-13ac-11e5-841a-6d76e3846c0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":-2},{"failures":[],"tindex":"3d021fa6-13ac-11e5-841a-d13e0088cb3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[505],"tindex":"3d021fa7-13ac-11e5-841a-1f44526c2b67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:752","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<T>.remove()"},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-1},{"failures":[506],"tindex":"3d021fa8-13ac-11e5-841a-e1fd47b174c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"3d021fa9-13ac-11e5-841a-3b3261b43a6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:311","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"3d021faa-13ac-11e5-841a-85cb7f5a2be2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:576","type":"CtForEachImpl","sourcecode":"for (final V V : this) {\n    java.util.List<V>.add(V);\n}"},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"3d021fab-13ac-11e5-841a-893ed5fcf6b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":0},{"failures":[],"tindex":"3d021fac-13ac-11e5-841a-ef3a43e619aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:453","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    final V V = java.util.Map<K, V>.remove(K);\n    final int int = java.util.List<K>.indexOf(K);\n    java.util.List<K>.remove(int);\n    if (int < int) {\n        int--;\n    } \n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} else {\n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return null;\n}"},"status":-2},{"failures":[507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,368,342,343,369,370,371,372,63,64,373,65,66,67,344,374,68,375,60,376,377,61,62,378,379,380,381,382,383,384,385,386,387,388,389,398,390,391,392,393,394,395,396,397,539,540,541,542,543,72,73,74,75,76,77,78,544,79,545,69,546,547,70,71,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,259,569,570,571,572,573,574,575,576,577,578,579,580,581,582,84,85,86,87,88,89,90,583,91,584,81,585,586,82,83,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,96,97,98,99,100,101,102,615,103,616,617,618,94,95,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,108,109,110,111,112,113,114,658,115,659,105,660,661,106,107,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,120,121,122,123,124,125,126,688,127,689,117,690,691,118,119,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,345,721,722,723,724,725,726,727,132,133,134,135,136,137,138,728,139,729,129,730,731,130,131,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,144,145,146,147,148,149,150,760,151,761,141,762,763,142,143,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786],"tindex":"3d0246bd-13ac-11e5-841a-555f51bbf580","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:518","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[787],"tindex":"3d0246be-13ac-11e5-841a-f52690ff5405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"3d0246bf-13ac-11e5-841a-e79a408530c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805],"tindex":"3d0246c0-13ac-11e5-841a-717ab3d6e469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[806,807,808,809,810,811],"tindex":"3d0246c1-13ac-11e5-841a-d9e190f2ca8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"3d0490b2-13ac-11e5-841a-19b699178755","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"3d04b7c3-13ac-11e5-841a-a13ff23a91f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"j","currentIndex":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[812,217,240],"tindex":"3d04b7c4-13ac-11e5-841a-c35307413c73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"o","entryValue":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:160","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[813,814,428,815,816,817,818,819,820,821],"tindex":"3d04b7c5-13ac-11e5-841a-8dd8a859d18e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"status":-1},{"failures":[405,407,408,175,177,252,178,253,254,255,256,257,258],"tindex":"3d04b7c6-13ac-11e5-841a-efea9c84619e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"3d04b7c7-13ac-11e5-841a-438727b3e96e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:179","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"variableMap":{"m":"bitIndex","n":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":-2},{"failures":[],"tindex":"3d04b7c8-13ac-11e5-841a-432b0fab5683","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"right","tree":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"3d04b7c9-13ac-11e5-841a-e5383469d607","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[368,342,343,369,370,371,372,63,64,373,65,66,67,344,374,68,375,60,376,377,61,62,378,379,380,381,382,383,384,385,386,387,388,389,398,390,391,392,393,394,395,396,397],"tindex":"3d04b7ca-13ac-11e5-841a-5be3b933d37a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[822],"tindex":"3d04dedb-13ac-11e5-841a-21384054fc70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"removeState"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:184","type":"CtAssignmentImpl","sourcecode":"boolean = (int) == (int)"},"status":-1},{"failures":[823],"tindex":"3d04dedc-13ac-11e5-841a-af7a09408f41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"3d04dedd-13ac-11e5-841a-dd5355b8d668","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":0},{"failures":[],"tindex":"3d04dede-13ac-11e5-841a-ebb991cc6c0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[66,60,398,76,69,560,608,100,93,631,124,117,704,136,129,148,141,776],"tindex":"3d06175f-13ac-11e5-841a-1f5bdc1ddcd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"3d061760-13ac-11e5-841a-b70e085294d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[461,462,466,471,474,475,478,481,482,487],"tindex":"3d061761-13ac-11e5-841a-e54f63b0c7a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}