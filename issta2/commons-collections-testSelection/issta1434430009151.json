{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":286,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":153,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":431,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":485,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":845,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":150,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":821,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":796,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":360,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":734,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":234,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":567,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":509,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":250,"org.apache.commons.collections4.CollectionUtilsTest.get":798,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":341,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":105,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":660,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":776,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":803,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":691,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":168,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":193,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection":746,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":111,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":293,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":504,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":805,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":576,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":737,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":541,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":172,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":664,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":523,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":430,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":646,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":82,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":302,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":518,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":463,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":298,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":826,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":79,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":612,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":827,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":722,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":729,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":723,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":724,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":304,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":843,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":631,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":632,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":630,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":112,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":122,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":607,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":694,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":465,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":75,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":95,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":665,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":685,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":424,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":367,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":37,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":556,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":849,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":751,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":718,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":842,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":220,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":412,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":830,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":679,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":680,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":92,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":822,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":333,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":658,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":794,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":389,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":641,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":667,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":21,"org.apache.commons.collections4.CollectionUtilsTest.get1":799,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":278,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":195,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":752,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":77,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":593,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":215,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":480,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":163,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":560,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":40,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":592,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":591,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":590,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":637,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":371,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":754,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":773,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":755,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":756,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":800,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":764,"org.apache.commons.collections4.map.LRUMapTest.testReset":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":783,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":477,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":529,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":379,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":689,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":158,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":473,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":608,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":850,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":237,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":104,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":562,"org.apache.commons.collections4.map.LinkedMapTest.testReset":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":731,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":39,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":508,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":577,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":623,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":733,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":847,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":519,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":808,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":229,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":417,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":276,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":303,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":818,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":512,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":839,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":524,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":772,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":500,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":809,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":528,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":435,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":138,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":145,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":133,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":624,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":294,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":538,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":410,"org.apache.commons.collections4.map.HashedMapTest.testClone":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":539,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":779,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":675,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":705,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":297,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":289,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":741,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":84,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":813,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":558,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":4,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":320,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":831,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":749,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":345,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":89,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":494,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":493,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":372,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":495,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":425,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":167,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":472,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":659,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":203,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":807,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":317,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":505,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":462,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":70,"org.apache.commons.collections4.map.LinkedMapTest.testClone":461,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":653,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":673,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":851,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":655,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":654,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":790,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":837,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":134,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":441,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":565,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":692,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":343,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":437,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":835,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":774,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":668,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":834,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":792,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":484,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":373,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":212,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":532,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":94,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":777,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":789,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":788,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":787,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":269,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":526,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":619,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":305,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":474,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":797,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":235,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":748,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":109,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":347,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":438,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":374,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":643,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":396,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":393,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":586,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":166,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":428,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":852,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":156,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":584,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":559,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":609,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":230,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":703,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":721,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":824,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":693,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":385,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":622,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":650,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":810,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":594,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":56,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":575,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":288,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":452,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":227,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":639,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":292,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":684,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":546,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":478,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":482,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":750,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":522,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":149,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":10,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":33,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":745,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":520,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":534,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":352,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":620,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":599,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":419,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":600,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":87,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":634,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":605,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":238,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":391,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":614,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":768,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":162,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":848,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":280,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":828,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":135,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":793,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":725,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":483,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":727,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":726,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":401,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":669,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":386,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":491,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":781,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":671,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":806,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":704,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":113,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":8,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":420,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":853,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":248,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":825,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":152,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":628,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":169,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":342,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":629,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":775,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":326,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":487,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":681,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":127,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":602,"org.apache.commons.collections4.map.LRUMapTest.testClone":553,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":272,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":93,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":492,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":811,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":688,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":368,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":817,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":233,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":503,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":414,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":329,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":702,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":765,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":766,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":652,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":802,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":324,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":313,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":743,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":601,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":354,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":378,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":795,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":348,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":287,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":380,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":30,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":573,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":54,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":844,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":527,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":296,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":714,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":823,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":514,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":388,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":291,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":398,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":407,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":490,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":282,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":687,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":488,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":770,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":516,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":730,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":713,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":260,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":384,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":141,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":542,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":314,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":763,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":316,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":387,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":740,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":530,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":61,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":642,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":580,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":34,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":657,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":337,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":476,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":192,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":804,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":306,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":611,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":801,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":277,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":557,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":838,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":222,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":696,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":780,"org.apache.commons.collections4.set.CompositeSetTest.testContains":762,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":390,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":451,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":334,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":346,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":257,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":377,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":707,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":321,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":245,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":715,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":778,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":209,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":812,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":197,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":640,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":767,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":570,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":74,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":819,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":107,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":621,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":769,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":816,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":616,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":854,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":829,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":267,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":690,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":759,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":256,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":771,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":99,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":142,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":511,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":784,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":249,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":708,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":443,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":647,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":709,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":81,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":815,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":336,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":78,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":814,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":88,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":841,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":357,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":68,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":310,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":698,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":322,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":587,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":588,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":445,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":479,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":666,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":415,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":761,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":146,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":399,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":836,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":31},"transformations":[{"failures":[],"tindex":"b307fdf1-13e2-11e5-af83-274b3bc8eaba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"b307fdf2-13e2-11e5-af83-59d201accf0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:98","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Set<E>.size()"},"status":-1},{"failures":[25,26],"tindex":"b3082503-13e2-11e5-af83-a730a899da73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"b3082504-13e2-11e5-af83-c9d6ecca9a79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[27,28,29,30,31,32,33,34],"tindex":"b3082505-13e2-11e5-af83-9bd0ce429fc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-1},{"failures":[],"tindex":"b3082506-13e2-11e5-af83-f554ecad9882","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:70","type":"CtLocalVariableImpl","sourcecode":"final int int = int + (int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int))"},"status":-2},{"failures":[],"tindex":"b3082507-13e2-11e5-af83-f706c87debc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[35,36],"tindex":"b3084c18-13e2-11e5-af83-8d221d81edd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"b3084c19-13e2-11e5-af83-196d6181720c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b3084c1a-13e2-11e5-af83-3d86fb15ce8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key2","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57,58,25,59,26,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"b3084c1b-13e2-11e5-af83-e1c942394329","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,27,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"b308732c-13e2-11e5-af83-75cb5466a924","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"b308732d-13e2-11e5-af83-599e2ef935aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:788","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()"},"status":-2},{"failures":[],"tindex":"b308732e-13e2-11e5-af83-e53bae6c7e2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"variableMap":{"result":"key","length":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"b308732f-13e2-11e5-af83-a3358c3a32e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[115,116,117,118,119],"tindex":"b3087330-13e2-11e5-af83-85f26fdebf97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"b3089a41-13e2-11e5-af83-4b1f080b735c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"variableMap":{"sub":"result","length":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"b3089a42-13e2-11e5-af83-add5d7efa64e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"h","parent":"h","left":"p","h":"parent","right":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[152,153],"tindex":"b3089a43-13e2-11e5-af83-63f297c4a25b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior == null) {\n    throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n} "},"variableMap":{"unknownObjectBehavior":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[154,49,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,50,51,52,53,54,55,56,57,58,170,25,171,172,59,26,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,60,61,191,192,193,194,64,195,196,197,198,199,200,201,202,203,204,65,66,205,67,68,69,70,71,72,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"b3089a44-13e2-11e5-af83-eb9b3be756c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node","replacement":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:830","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"b308c155-13e2-11e5-af83-8b9c1abac0d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[362,363,364,365,366,367,368,369,370,371],"tindex":"b308c156-13e2-11e5-af83-61f55f654950","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[372],"tindex":"b308c157-13e2-11e5-af83-63d43a55f721","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n} "},"variableMap":{"mutator":"mutator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} "},"status":-1},{"failures":[],"tindex":"b308c158-13e2-11e5-af83-178ac479f3ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[373,374,375,376],"tindex":"b308e869-13e2-11e5-af83-7d1ff18deddb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"b308e86a-13e2-11e5-af83-e5fb9645f4b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[377,378,379],"tindex":"b308e86b-13e2-11e5-af83-dd6bf7846c6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"b308e86c-13e2-11e5-af83-7f037bae9e18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[380,381],"tindex":"b308e86d-13e2-11e5-af83-1d3faed4fcbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:321","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,27,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,421,422,423,424,425,426,427,428,429,430,431,432,433,28,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,29,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,380,514,515,516,517,518,519,520,521,522,523,524,525,30,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,31,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,381,606,607,608,609,610,611,612,613,614,615,616,617,32,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,33,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,34,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741],"tindex":"b308e86e-13e2-11e5-af83-3dd5e2f379df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"threshold","lengthInBits":"threshold","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"threshold","otherOffsetInBits":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"b3090f7f-13e2-11e5-af83-eb63c7cbf20d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"b3090f80-13e2-11e5-af83-11fb4079d7a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:492","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V)"},"status":-2},{"failures":[2],"tindex":"b3090f81-13e2-11e5-af83-41c2009397cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"b3090f82-13e2-11e5-af83-a1963d5ce441","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:505","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"next","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:290","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":0},{"failures":[],"tindex":"b3090f83-13e2-11e5-af83-67601a22616f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[233,235,237,241,242,243,244,245,246,247,248,249,252,253,254,260,297],"tindex":"b3093594-13e2-11e5-af83-c555565ea618","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"b3093595-13e2-11e5-af83-a55d684b4fac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"o","defaultValue":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"b3093596-13e2-11e5-af83-0b30bcfdbc92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"b3093597-13e2-11e5-af83-4782c36caf70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"b3093598-13e2-11e5-af83-6992266fe198","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b3093599-13e2-11e5-af83-8f5485008fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:140","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[742],"tindex":"b309359a-13e2-11e5-af83-d9769936d9be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"variableMap":{"this":"map","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:119","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[],"tindex":"b309359b-13e2-11e5-af83-cfa7f5c08078","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"nextIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"b309f8ec-13e2-11e5-af83-454dcca89793","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"value","parentNode":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[743,744],"tindex":"b309f8ed-13e2-11e5-af83-3fee3c880192","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"obj","k":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-1},{"failures":[745,746,747,748,749,750,751,752],"tindex":"b309f8ee-13e2-11e5-af83-2129acf2e95d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"variableMap":{"keys":"keys","largestKey":"indexOfLargestMobileInteger","i":"indexOfLargestMobileInteger","direction":"direction"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[753],"tindex":"b309f8ef-13e2-11e5-af83-353f2258d231","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"variableMap":{"collection":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b309f8f0-13e2-11e5-af83-39c8256624d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":-2},{"failures":[754,755,756,757,758,759],"tindex":"b30a2001-13e2-11e5-af83-5d64d951bdf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"b30a2002-13e2-11e5-af83-6df92a8208bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[373,374,375,376],"tindex":"b30a2003-13e2-11e5-af83-c1fca156d195","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"b30a2004-13e2-11e5-af83-0bcf3668960a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"b30a2005-13e2-11e5-af83-c3eb1f86c739","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[760,761],"tindex":"b30a2006-13e2-11e5-af83-9be305cef4ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[762,763,1,6,8,10,764,12,13,765,766,16,17,18,19,20,21,22,23,24],"tindex":"b30a2007-13e2-11e5-af83-4dd1140f07a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b30a2008-13e2-11e5-af83-615ae4250509","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"variableMap":{"label":"key1","out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[767,768,769],"tindex":"b30a2009-13e2-11e5-af83-994eedd7f281","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796],"tindex":"b30a471a-13e2-11e5-af83-911f5166bfef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"b30a471b-13e2-11e5-af83-6b10605e5733","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"b30a471c-13e2-11e5-af83-bdfe5fe11225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"found","current":"found","right":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[],"tindex":"b30a471d-13e2-11e5-af83-37e6ae6f0d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"child","leftChild":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[797,798,799,800,801,802],"tindex":"b30a471e-13e2-11e5-af83-0d2c0b716c1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1260","type":"CtReturnImpl","sourcecode":"return ((java.lang.Object[])(java.lang.Object))[int]"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[803,804,805,806,807,808,809,810,811,812,813,814,815],"tindex":"b30a471f-13e2-11e5-af83-8fc174967244","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b30a4720-13e2-11e5-af83-31dbc2c0df54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"b30a4721-13e2-11e5-af83-bbf7446c1038","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"next","key2":"key1","key5":"key1","hashCode":"hashCode","key3":"key1","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[384,385,386,387,388,390,391,392,393,395,396,398,400,401,402,403,404,405,406,408,409,410,411,413,414,416,418,419],"tindex":"b30a6e32-13e2-11e5-af83-e9069e986034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"b30a6e33-13e2-11e5-af83-971887a6e5e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:252","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], null)"},"status":-2},{"failures":[],"tindex":"b30a6e34-13e2-11e5-af83-311814bf3179","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":-2},{"failures":[375,816,645,740,376,817],"tindex":"b30a6e35-13e2-11e5-af83-b9a596824959","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super K, ? extends K>) == null) {\n    return K;\n} "},"status":-1},{"failures":[],"tindex":"b30a6e36-13e2-11e5-af83-b7e6a458ea49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:853","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.min().setLeft(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = (int - int) + 1;\n} "},"variableMap":{"sAbsolutePosition":"index","s":"root","relativePosition":"index","maxNode":"root","currentSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-2},{"failures":[383,390,391,396,398,408,409,414,416,76,77,78,93,100,101,103,106,107,110,111,112,113,114,422,423,424,439,446,447,449,452,453,456,457,458,459,460,466,472,473,474,489,496,497,499,502,503,506,507,508,509,510,514,515,516,523,531,538,539,541,544,545,548,549,550,551,552,557,558,559,560,566,567,568,583,590,591,593,596,597,600,601,602,603,604,606,607,608,623,630,631,633,636,637,640,641,642,643,644,648,653,654,655,656,657,658,659,674,681,682,684,687,688,691,692,693,694,695,701,702,703,718,725,726,728,731,732,735,736,737,738,739],"tindex":"b30a6e37-13e2-11e5-af83-590d5041bf1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[818,819],"tindex":"b30a6e38-13e2-11e5-af83-cf6133cd669d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"lastItemIndex","expectedModCount":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[],"tindex":"b30a6e39-13e2-11e5-af83-a9041019b7ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836],"tindex":"b30a954a-13e2-11e5-af83-9d120300aeb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[837,420],"tindex":"b30a954b-13e2-11e5-af83-57d3f07b67fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b30a954c-13e2-11e5-af83-c179989c89a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"b30a954d-13e2-11e5-af83-3f3ccbe29af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[838,839],"tindex":"b30a954e-13e2-11e5-af83-476480776d7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:224","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.add(E)"},"status":-1},{"failures":[],"tindex":"b30a954f-13e2-11e5-af83-455ba38b16f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"b30a9550-13e2-11e5-af83-db2cc6b6b3b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[154,49,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,50,51,52,53,54,55,56,57,58,170,25,171,172,59,26,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,60,61,191,192,193,194,64,195,196,197,198,199,200,201,202,203,204,65,66,205,67,68,69,70,71,72,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"b30a9551-13e2-11e5-af83-ab70f3c340f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-1},{"failures":[397,415],"tindex":"b30a9552-13e2-11e5-af83-7127da5536e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:128","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:119","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1},{"failures":[],"tindex":"b30abc63-13e2-11e5-af83-4147798fcec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"h","right":"h","child":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"b30abc64-13e2-11e5-af83-7902c6487177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[230,307,352],"tindex":"b30abc65-13e2-11e5-af83-abac4e24e79a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:359","type":"CtIfImpl","sourcecode":"if ((java.util.List<?>.size()) != org.apache.commons.collections4.list.AbstractLinkedList<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b30abc66-13e2-11e5-af83-89474e63f8b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1104","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"b30abc67-13e2-11e5-af83-219dd6176217","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[],"tindex":"b30abc68-13e2-11e5-af83-274c7742b749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b30abc69-13e2-11e5-af83-c58ab4027a0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"bitIndex","modifications":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b30abc6a-13e2-11e5-af83-07891250e607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[745,748,749,750,752],"tindex":"b30abc6b-13e2-11e5-af83-9dcf043784f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"largestKey","newCapacity":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[],"tindex":"b30ae37c-13e2-11e5-af83-119805ce465b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-2},{"failures":[],"tindex":"b30ae37d-13e2-11e5-af83-15bf7d50d212","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-2},{"failures":[840,841,842,843,844,845],"tindex":"b30ae37e-13e2-11e5-af83-a911e9cec4bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"i","d":"i","vDown":"vDown","delta":"k","end2":"delta","this":"this","i":"start1","end1":"end2","k":"delta","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"b30ae37f-13e2-11e5-af83-8901da3b445d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[846,847,848,849,850,851,852,853,16,17,18,19,20,21,22,23,24],"tindex":"b30ae380-13e2-11e5-af83-e3d3e9a1a45a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b30ae381-13e2-11e5-af83-e54ca33578ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"before","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[154,156,49,155,854,157,158,159,160,161,162,163,164,165,166,167,168,169,50,51,52,53,54,55,56,57,58,170,25,171,172,59,26,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,60,61,191,192,193,194,196,64,195,197,198,199,200,201,202,203,204,65,66,205,67,68,69,70,71,72,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"tindex":"b30ae382-13e2-11e5-af83-b1bfc0c768a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}