{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":895,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":622,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":699,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":1,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":932,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":271,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":7,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":752,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":746,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":666,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":162,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":903,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":28,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":125,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":757,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":68,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":854,"org.apache.commons.collections4.CollectionUtilsTest.get":480,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":687,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":864,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":11,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":850,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":872,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":899,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":846,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":498,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":841,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":304,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":686,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":931,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":551,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":435,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":801,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":755,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":306,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":821,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":460,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":913,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":904,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":504,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":262,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":426,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":858,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":314,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":580,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":760,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":393,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":896,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":745,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":797,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":862,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":562,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":129,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":720,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":911,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":678,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":95,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":795,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":630,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":300,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":408,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":109,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":108,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":154,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":83,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":319,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":882,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":926,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":245,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":417,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":740,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":600,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":260,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":180,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":773,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":929,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":139,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":507,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":439,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":734,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":575,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":187,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":878,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":912,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":608,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":609,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":759,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":610,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":370,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":683,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":334,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":157,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":936,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":540,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":24,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":492,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":648,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":22,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":830,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":723,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":311,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":766,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":119,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":282,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":602,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":719,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":768,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":620,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":857,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":226,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":844,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":269,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":163,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":268,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":892,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":811,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":875,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":901,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":484,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":894,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":796,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":124,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":142,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":398,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":794,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":684,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":754,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":299,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":545,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":52,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":783,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":889,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":542,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":84,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":735,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":576,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":141,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":834,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":248,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":840,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":476,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":718,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":681,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":776,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":425,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":40,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":446,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":535,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":286,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":363,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":629,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":72,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":793,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":140,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":527,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":431,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":585,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":333,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":338,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":474,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":102,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":626,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":242,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":579,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":529,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":884,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":863,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":493,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":353,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":860,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":775,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":770,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":623,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":131,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":177,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":675,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":660,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":652,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":677,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":459,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":553,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":552,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":113,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":898,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":541,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":596,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":853,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":800,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":861,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":615,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":736,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":885,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":591,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":19,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":877,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":743,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":388,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":663,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":881,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":264,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":815,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":868,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":813,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":689,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":82,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":871,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":870,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":869,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":371,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":564,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":308,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":404,"org.apache.commons.collections4.CollectionUtilsTest.find":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":879,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":502,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":534,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":809,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":808,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":807,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":732,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":616,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":937,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":473,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":175,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":447,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":631,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":543,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":779,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":130,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":143,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":240,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":758,"org.apache.commons.collections4.map.LRUMapTest.testLRU":558,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":657,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":938,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":256,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":466,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":721,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":384,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":586,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":517,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":692,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":369,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":441,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":771,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":679,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":348,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":329,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":301,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":395,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":335,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":897,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":839,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":352,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":887,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":785,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":207,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":866,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":856,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":837,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":688,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":346,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":171,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":907,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":832,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":588,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":208,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":714,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":791,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":117,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":147,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":726,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":730,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":328,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":234,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":917,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":497,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":69,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":278,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":909,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":826,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":910,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":548,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":549,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":658,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":662,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":43,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":516,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":258,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":682,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":186,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":205,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":530,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":389,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":604,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":54,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":41,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":137,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":411,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":273,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":650,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":851,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":421,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":659,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":920,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":921,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":919,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":822,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":98,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":584,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":537,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":810,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":298,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":229,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":505,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":786,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":391,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":112,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":80,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":123,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":774,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":825,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":547,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":706,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":514,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":716,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":893,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":733,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":463,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":438,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":717,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":366,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":577,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":254,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":380,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":891,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":174,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":276,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":676,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":701,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":827,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":883,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":181,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":522,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":536,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":512,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":231,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":738,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":324,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":890,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":934,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":803,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":16,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":290,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":134,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":744,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":656,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":288,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":464,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":277,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":185,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":918,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":297,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":814,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":908,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":680,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":219,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":914,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":232,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":407,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":900,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":10,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":613,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":611,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":279,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":587,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":574,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":443,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":651,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":747,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":199,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":886,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":924,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":923,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":922,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":302,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":42,"org.apache.commons.collections4.ListUtilsTest.testSubtract":477,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":178,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":202,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":646,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":704,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":799,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":906,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":665,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":490,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":275,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":416,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":702,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":315,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":434,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":715,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":415,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":639,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":198,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":788,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":605,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":933,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":197,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":661,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":644,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":790,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":848,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":789,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":817,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":930,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":787,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":654,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":777,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":672,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":47,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":831,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":318,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":905,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":169,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":50,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":189,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":764,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":573,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":751,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":35,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":458,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":767,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":316,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":364,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":888,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":645,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":625,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":556,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":519,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":555,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":554,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":614,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":550,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":37,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":865,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":511,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":259,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":349,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":727,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":48,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":241,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":829,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":695,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":482,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":640,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":669,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":468,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":641,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":935,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":251,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":772,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":191,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":437,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":765,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":312,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":594,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":452,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":693,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":544,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":842,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":132,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":289,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":313,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":852,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":632,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":87,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":340,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":179,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":350,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":360,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":521,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":697,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":880,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":454,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":486,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":339,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":451,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":823,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":518,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":761,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":843,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":133,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":432,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":15,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":503,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":513,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":365,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":836,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":653,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":649,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":925,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":643,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":753,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":206,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":89,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":749,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":445,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":188,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":674,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":138,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":838,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":824,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":578,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":216,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":820,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":161,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":762,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":214,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":874,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":867,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":491,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":195,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":323,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":847,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":818,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":707,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":741,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":709,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":285,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":708,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":763,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":828,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":99,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":729,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":778,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":194,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":756,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":876,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":802,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":624,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":222,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":927,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":915,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":816,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":375,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":750,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":792,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":361,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":804,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":235,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":769,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":805,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":691,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":916,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":332,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":731,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":280,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":780,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":638,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":928,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":902,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":341,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":849,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":845,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":568,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":321,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":748,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":128,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":664,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":559,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":79,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":859,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":671,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":636,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":593,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":414,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":722,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":412,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":601,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":784,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":457,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":533,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":38,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":487,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":274,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":475,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":520,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":835},"transformations":[{"failures":[],"tindex":"720e6e9e-13a8-11e5-8800-2fe5e1619857","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"720e95af-13a8-11e5-8800-c32cf3a89509","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"siblingNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"720e95b0-13a8-11e5-8800-5d762c6a3dd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"720e95b1-13a8-11e5-8800-ffffaff30580","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"value","o2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"720e95b2-13a8-11e5-8800-7db23a84b9ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[],"tindex":"720ebcc3-13a8-11e5-8800-693b47a99e04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"right","parent":"predecessor","left":"p","h":"p","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[23,24],"tindex":"720ebcc4-13a8-11e5-8800-c95cb3ba8cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"variableMap":{"endIndex":"hash2","index":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"720ebcc5-13a8-11e5-8800-2da475092c88","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"status":0},{"failures":[],"tindex":"720ee3d6-13a8-11e5-8800-356fa41ef910","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:378","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"720ee3d7-13a8-11e5-8800-b9ec6e100dbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"720ee3d8-13a8-11e5-8800-1bfc3c13d0bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[25,26,27,28,29,30],"tindex":"720ee3d9-13a8-11e5-8800-3b088c849964","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"720ee3da-13a8-11e5-8800-b35f1153b979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"720f0aeb-13a8-11e5-8800-ef2db1377e3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"720f0aec-13a8-11e5-8800-458ab6951e40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"lengthInBits","currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[127,128,129,130,131,132,133,134,23,24,135,136],"tindex":"720f0aed-13a8-11e5-8800-f3d169149d96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[137],"tindex":"720f0aee-13a8-11e5-8800-6d40eb7f272d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-1},{"failures":[25,138],"tindex":"720f31ff-13a8-11e5-8800-890660b3f58e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"720f3200-13a8-11e5-8800-f366739f3dc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"720f3201-13a8-11e5-8800-a1f6ce8e76b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"720f3202-13a8-11e5-8800-9b5493272d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"count","newCapacity":"count","proposedCapacity":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-2},{"failures":[],"tindex":"720f3203-13a8-11e5-8800-e1a8a3697458","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-2},{"failures":[139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"720f3204-13a8-11e5-8800-39932fb67d12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"720f5915-13a8-11e5-8800-2dfcc14c1db1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[151,152,153,154,155,156,157,158,159,160,161],"tindex":"720f5916-13a8-11e5-8800-5d8260a323c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:501","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.size())"},"variableMap":{"map":"map","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-1},{"failures":[162,163],"tindex":"720f5917-13a8-11e5-8800-751db8fd51c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[139,140,141,142,143,144,145,146,164,147,148,149,150],"tindex":"720f5918-13a8-11e5-8800-b11668862b90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"720f5919-13a8-11e5-8800-6fc1ca215591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:517","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"720f591a-13a8-11e5-8800-ef6367d5788d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"720f802b-13a8-11e5-8800-415af39c9a56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"720f802c-13a8-11e5-8800-e1f0193133ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-2},{"failures":[165,166,167,168,169,170],"tindex":"720f802d-13a8-11e5-8800-2be672ca419a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"720f802e-13a8-11e5-8800-8577421b248a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"child","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"720f802f-13a8-11e5-8800-db7670e98f54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtIfImpl","sourcecode":"if (java.lang.Double == null) {\n    java.lang.Double = java.lang.Double;\n} "},"variableMap":{"answer":"key3","defaultValue":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[171,172,173],"tindex":"720fa740-13a8-11e5-8800-a19c1c72eb6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"720fa741-13a8-11e5-8800-67d2bb440491","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"720fa742-13a8-11e5-8800-cf9687827c8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"720fa743-13a8-11e5-8800-6db6118b0339","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"720fa744-13a8-11e5-8800-510dc2775da1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[165,166,167,168,169,170],"tindex":"720fa745-13a8-11e5-8800-2d6a93bafb0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"720fce56-13a8-11e5-8800-73f4c9f92b0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:128","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null;\n} else if (K == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"720fce57-13a8-11e5-8800-bf3056c79efc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} "},"status":-2},{"failures":[],"tindex":"720fce58-13a8-11e5-8800-177ccc137777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:104","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[174,175,176,177,178,179,180,181],"tindex":"720fce59-13a8-11e5-8800-b3a0ee92df8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[182,183],"tindex":"720fce5a-13a8-11e5-8800-834119b8af62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:972","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"720fce5b-13a8-11e5-8800-755aefd3e937","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"right","right":"right","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[184],"tindex":"720ff56c-13a8-11e5-8800-298c7e550812","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"720ff56d-13a8-11e5-8800-392221724115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":"720ff56e-13a8-11e5-8800-cf578123d84a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[185,186,187,188,189,190,191],"tindex":"72101c7f-13a8-11e5-8800-f3bc354ed908","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"72101c80-13a8-11e5-8800-ff1cdf63ddb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"72101c81-13a8-11e5-8800-77eb73b9d905","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"72101c82-13a8-11e5-8800-5bd1a1bc3d29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[241,242,243,244,245,246,247,248,249,250,185,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,186,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,187,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,188,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,189,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,190,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,191,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"72101c83-13a8-11e5-8800-f5f5a3bff871","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"mut"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"72101c84-13a8-11e5-8800-7d422c9d5e00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"header","header":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"72104395-13a8-11e5-8800-13f6f2ca88c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[479],"tindex":"72104396-13a8-11e5-8800-3f7b1b185af0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:405","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.(containsKey(java.lang.Object))) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-1},{"failures":[480,481,482],"tindex":"72104397-13a8-11e5-8800-4df24322e45c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[483],"tindex":"72104398-13a8-11e5-8800-a9462766f5a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"variableMap":{"predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"72104399-13a8-11e5-8800-ed8975fb1f6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"7210439a-13a8-11e5-8800-811d08901d28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}"},"status":-2},{"failures":[484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"tindex":"7210439b-13a8-11e5-8800-e3efd43591f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[],"tindex":"7210439c-13a8-11e5-8800-25e04a3e4dda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"length","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"7210439d-13a8-11e5-8800-c996a5343bfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[509],"tindex":"72106aae-13a8-11e5-8800-17d2d5a012ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtInvocationImpl","sourcecode":"java.util.Collections.<K,V>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated()"},"status":-1},{"failures":[],"tindex":"72106aaf-13a8-11e5-8800-7ff2a33a92a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"status":-2},{"failures":[],"tindex":"72106ab0-13a8-11e5-8800-914c50ecd5a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":-2},{"failures":[171,510,172,173],"tindex":"72106ab1-13a8-11e5-8800-31a4d50abd7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"h","proposedCapacity":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"72106ab2-13a8-11e5-8800-f12c7ab29641","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"72106ab3-13a8-11e5-8800-919d41d9cc14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-2},{"failures":[25,26],"tindex":"72106ab4-13a8-11e5-8800-c9298f890bda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,0,547,548,549,1,550,551,552,553,554,555,556,557,2,558,559,560,561,562,127,128,130,131,132,133,563,134,23,24,135,564,39,40,42,43,44,45,47,50,53,54,67,565,566,567,568,569,570,571,572,573,574,575,576,86,87,89,90,91,92,93,94,97,100,101,114,577,578,579,580,581,582,583,584,585,586,587,588,171,173,589,590,591,592,593,510,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614],"tindex":"72106ab5-13a8-11e5-8800-6d0b945c27b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668],"tindex":"721091c6-13a8-11e5-8800-919345da5c9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,229,690,691,233,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739],"tindex":"721091c7-13a8-11e5-8800-29acad6d77ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[139,140,141,142,144,149,150],"tindex":"721091c8-13a8-11e5-8800-35728362954e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"721091c9-13a8-11e5-8800-87c7d5e289f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782],"tindex":"721091ca-13a8-11e5-8800-552c9abb3033","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"set","existingSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"721091cb-13a8-11e5-8800-cfa52443d0d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"7210b8dc-13a8-11e5-8800-c3ee1acb5c55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-2},{"failures":[783],"tindex":"7210b8dd-13a8-11e5-8800-93e8e375be67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1622","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()"},"variableMap":{"current":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[784,785,786,787,788,789],"tindex":"7210b8de-13a8-11e5-8800-cf67276efe79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[258,271,272,278,279,282,291,305,318,319,321,333,346,347,349,361,374,375,376,388,401,402,404,413,428,441,442,454,467,468,474,475],"tindex":"7210b8df-13a8-11e5-8800-d1ae77418690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[6,7,8,790,791,783,792,793,794,795,9,10,796,11,12,13,797,14,15,798,16,799,800,17,18,801,802,803,804,805,806,807,808,809,19,810,811,20,812,813,814,815,816,21,22,817],"tindex":"7210b8e0-13a8-11e5-8800-5df57acc73d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"7210b8e1-13a8-11e5-8800-7f279c291509","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":0},{"failures":[],"tindex":"7210b8e2-13a8-11e5-8800-690530acac65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"7210b8e3-13a8-11e5-8800-0b83e7622802","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:393","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[171,172,173],"tindex":"7210b8e4-13a8-11e5-8800-059445ffcb07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[249,252,296,299,316,317,324,327,352,355,372,373,379,382,399,400,419,422,445,448],"tindex":"7210dff5-13a8-11e5-8800-1972635b1c38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22],"tindex":"7210dff6-13a8-11e5-8800-01b8c73d0882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[818,819,820,821,822,823,824,825],"tindex":"7210dff7-13a8-11e5-8800-f3ec48fa9d88","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"7210dff8-13a8-11e5-8800-b3e2be66db41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[544,545,826,546,0,547,548,827,549,1,550,551,828,829,830,831,3,832,833,834,835,4,836,837,127,128,130,131,132,563,134,23,24,135,565,566,838,567,568,569,570,571,572,573,574,575,86,87,88,89,90,91,92,93,94,97,100,101,577,578,839,579,580,581,582,583,584,585,586,587,597,598,840,599,600,601,602,603,604,605,606,607],"tindex":"7210dff9-13a8-11e5-8800-b58902060351","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936],"tindex":"7210dffa-13a8-11e5-8800-4b6452522ff4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"7210dffb-13a8-11e5-8800-cfb7bcc3b1a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"bitIndex","index":"bitIndex","beyond":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"7211070c-13a8-11e5-8800-e5729315b35a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[937,938],"tindex":"7211070d-13a8-11e5-8800-673751bdba1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[],"tindex":"7211070e-13a8-11e5-8800-8bbe676945c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[],"tindex":"7211070f-13a8-11e5-8800-d9fb156510e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"72110710-13a8-11e5-8800-773485080c34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"obj","obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"72110711-13a8-11e5-8800-1ff7928e5630","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}