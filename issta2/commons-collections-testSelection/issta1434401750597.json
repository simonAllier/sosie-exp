{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":383,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":189,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":312,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":148,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEmptyMapCompatibility":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":4,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":108,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":123,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":92,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":7,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":480,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":125,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":431,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":505,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":28,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":278,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":376,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":511,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":481,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":482,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":199,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":185,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":382,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":473,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":502,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":333,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":331,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":414,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":471,"org.apache.commons.collections4.CollectionUtilsTest.transform2":206,"org.apache.commons.collections4.CollectionUtilsTest.transform1":205,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":321,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":186,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":209,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":243,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":288,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":515,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":41,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":57,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":410,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":212,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":424,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":128,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":506,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":347,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":371,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":468,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":173,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":59,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":499,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":2,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":334,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":512,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":72,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":285,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":165,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":466,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":170,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":366,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":486,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":183,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":187,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":47,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":227,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":197,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":226,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":118,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":126,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":401,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":408,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":349,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":106,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":265,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEmptyMapCompatibility":356,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":409,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":139,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":510,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":513,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":210,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":337,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":133,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":345,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":15,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":302,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":327,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":447,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":407,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":280,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":76,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":525,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":26,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":262,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":299,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":454,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":478,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":63,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":306,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":232,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":328,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":338,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":346,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":488,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":61,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":274,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":162,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":339,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":0,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":508,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":204,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":281,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":257,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":494,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":196,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":503,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":426,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":152,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":373,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":395,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":450,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":136,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":343,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":95,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":230,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":255,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":98,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":460,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":461,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":462,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":489,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":332,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":330,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":90,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":381,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":393,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":3,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":267,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":329,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEmptyMapCompatibility":352,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":67,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":551,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":277,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":389,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":507,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":184,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":487,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":335,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":364,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":236,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":470,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":527,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":179,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":6,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":79,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":157,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":485,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":168,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":140,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":219,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":549,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":404,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":550,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":435,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":370,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":418,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":326,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":539,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":233,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":495,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":207,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":276,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":324,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":68,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":192,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":416,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":298,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":69,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":154,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":78,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":22,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":417,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":377,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":501,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":355,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":300,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":357,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":457,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":342,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":531,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":529,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":156,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":336,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":53,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":87,"org.apache.commons.collections4.set.CompositeSetTest.testContains":365,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":363,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":172,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":147,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":391,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":537,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":1,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":490,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":484,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":415,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":351,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":296,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":546,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":191,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":358,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":182,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":413,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":419,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":540,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":384,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":362,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":117,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":319,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":541,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":442,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":458,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":318,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":514,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":380,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":42,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":237,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":545,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":323,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":451,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":34,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":521,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":155,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":29,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":504,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":428,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":146,"org.apache.commons.collections4.map.LRUMapTest.testLRU":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":403,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":19,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":348,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":375,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":194,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":177,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":193,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":314,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":175,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":161,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":535,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":66,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":500,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":9,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":52,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":421,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":62,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":533,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":412,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":420,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":163,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":422,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":107,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":254,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":282,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":438,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":169},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"e7a7ff7d-13a0-11e5-96ea-619c0bb80000","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"e7a8268e-13a0-11e5-96ea-c7e63ed6e00a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[],"tindex":"e7a8268f-13a0-11e5-96ea-65d48e470242","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27],"tindex":"e7a82690-13a0-11e5-96ea-69121b23f0df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37],"tindex":"e7a82691-13a0-11e5-96ea-ed6b781a9e02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"e7a82692-13a0-11e5-96ea-6d2b9320219d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"e7a84da3-13a0-11e5-96ea-dd5f2c13eadb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"code","newCapacity":"code","proposedCapacity":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"e7a84da4-13a0-11e5-96ea-bb2118f55e4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"e7a874b5-13a0-11e5-96ea-939f3e2d0d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"e7a874b6-13a0-11e5-96ea-f7769fb1109d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[78,79],"tindex":"e7a89bc7-13a0-11e5-96ea-6ba53ab9c649","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"e7b1ea98-13a0-11e5-96ea-039f2e0c738b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[21],"tindex":"e7b211a9-13a0-11e5-96ea-3f66d4fbf571","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"e7b211aa-13a0-11e5-96ea-d5b1e16d91a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"tree","right":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"e7b211ab-13a0-11e5-96ea-8160d272c836","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"length","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[94,80,95,96,97,98,81,82,83,84,85,99,86,87,88,89,90,100,101,102,103,104,105,92,93],"tindex":"e7b211ac-13a0-11e5-96ea-f7ace07349a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[106,107,108,109,110,111,112,113,114,115,116],"tindex":"e7b211ad-13a0-11e5-96ea-c9e65659afab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"e7b211ae-13a0-11e5-96ea-a7ea06a6f9b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[117,118,119],"tindex":"e7b211af-13a0-11e5-96ea-3312dc22e5f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[120,121,122,123],"tindex":"e7b238c0-13a0-11e5-96ea-b38ef8fd5437","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-1},{"failures":[124,125,126,127,128,129,130,131,132],"tindex":"e7b238c1-13a0-11e5-96ea-695d00b74a6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[133,134,135,136,137,138,139],"tindex":"e7b238c2-13a0-11e5-96ea-e96e2c288993","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e7b238c3-13a0-11e5-96ea-1bcc015f0641","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedBag:61","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.PredicatedBag<E>(org.apache.commons.collections4.Bag<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"e7b238c4-13a0-11e5-96ea-01862608bf62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,25,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"e7b238c5-13a0-11e5-96ea-675e8e2dc57e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e7b238c6-13a0-11e5-96ea-3b482a7d59c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[182],"tindex":"e7b238c7-13a0-11e5-96ea-b9157327bce4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[120,121,122,183,184,123],"tindex":"e7b238c8-13a0-11e5-96ea-4bf7371c17cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"end2","d":"offset","vDown":"vDown","delta":"start2","end2":"end1","this":"this","i":"delta","end1":"delta","k":"d","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[185,78,186,187,188,79,189,190,191,192,193,194],"tindex":"e7b25fd9-13a0-11e5-96ea-cdb7e1ee05f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e7b25fda-13a0-11e5-96ea-9f84974ca662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"value","i":"i","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e7b25fdb-13a0-11e5-96ea-b701f233fe9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e7b25fdc-13a0-11e5-96ea-d3f7fbc8f4f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.NullPointerException(\"List must not be null\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":0},{"failures":[195],"tindex":"e7b25fdd-13a0-11e5-96ea-638841da5597","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"status":-1},{"failures":[],"tindex":"e7b25fde-13a0-11e5-96ea-278602f3d380","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:419","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e7b25fdf-13a0-11e5-96ea-51838d0fc303","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e7b25fe0-13a0-11e5-96ea-2b404287c8c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"parent","current":"right","tree":"parent","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"e7b25fe1-13a0-11e5-96ea-b5fa1f3ccfc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-2},{"failures":[196],"tindex":"e7b286f2-13a0-11e5-96ea-65cbb20778e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"nextCalled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"e7b286f3-13a0-11e5-96ea-9fc980e1b0fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-2},{"failures":[],"tindex":"e7b286f4-13a0-11e5-96ea-f3e7e6ba34ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key","i":"hashCode","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e7b286f5-13a0-11e5-96ea-5dcfae5dad42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[197],"tindex":"e7b286f6-13a0-11e5-96ea-978a0d4066bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"variableMap":{"predicate":"predicate","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> != null) && (org.apache.commons.collections4.Predicate<E> != null)) {\n    for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n        final E E = java.util.List<E>.get(int);\n        if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"e7b286f7-13a0-11e5-96ea-ef4999e96180","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e7b286f8-13a0-11e5-96ea-81543ad3be70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"e7b286f9-13a0-11e5-96ea-5f0ac0058051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"e7b286fa-13a0-11e5-96ea-f9fef254927a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[198,199,200,201,202,203,204],"tindex":"e7b2ae0b-13a0-11e5-96ea-0191e0cbd7a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[205,206],"tindex":"e7b2ae0c-13a0-11e5-96ea-7da1dabd490a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<C> != null) && (org.apache.commons.collections4.Transformer<? super C, ? extends C> != null)) {\n    if (java.util.Collection<C> instanceof java.util.List<?>) {\n        final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n        for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n            java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n        }\n    } else {\n        final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n        java.util.Collection<C>.clear();\n        java.util.Collection<C>.addAll(java.util.Collection<C>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"e7b434ad-13a0-11e5-96ea-d3413ee85757","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"size","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-2},{"failures":[],"tindex":"e7b434ae-13a0-11e5-96ea-a94f670393cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[207],"tindex":"e7b434af-13a0-11e5-96ea-ffa9c56fdbad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e7b434b0-13a0-11e5-96ea-5f9140ab6cfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"e7b434b1-13a0-11e5-96ea-a355e9ace96a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,27,315,316,317,318,319,320,321,118,119,322,157,158,162,164,167,172,173,177,179],"tindex":"e7b434b2-13a0-11e5-96ea-b5f053a8bcdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"e7b45bc3-13a0-11e5-96ea-1b8791fe7db8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:288","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"e7b45bc4-13a0-11e5-96ea-b38ba4f33b34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-1},{"failures":[144,145,146],"tindex":"e7b45bc5-13a0-11e5-96ea-35a0b1a06d67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:226","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.setValue(V)"},"status":-1},{"failures":[],"tindex":"e7b45bc6-13a0-11e5-96ea-cf0c28465b6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"e7b45bc7-13a0-11e5-96ea-b56af473f668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-2},{"failures":[364,365,366,367],"tindex":"e7b45bc8-13a0-11e5-96ea-8172422f99dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-1},{"failures":[368,369,370,371,372,373,374,140,375,211,376,377,378,379,380,381,382,141,383,225,384,385,386,387,388,389,390,146,391,254,392,393,394,395,396,397,398,148,399,269,400,401,402,403,404,405,406,151,407,283,408,409,410,411,412,413,414,152,415,301,18,19,20,21,22,23,24,25,26,27],"tindex":"e7b45bc9-13a0-11e5-96ea-8709d2a89663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"e7b45bca-13a0-11e5-96ea-3b00da2396f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"lineageIndex","modifications":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[426,427],"tindex":"e7b45bcb-13a0-11e5-96ea-7584e2129c61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[185,78,186,187,188,79,189,190,191,192,193,194],"tindex":"e7b482dc-13a0-11e5-96ea-a5e51ccfd77f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[133,134,135,136,428,137,429,430,138,139],"tindex":"e7b482dd-13a0-11e5-96ea-e3e47d1d7e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:266","type":"CtReturnImpl","sourcecode":"return !((java.util.Iterator<?>.hasNext()) || (java.util.Iterator<?>.hasNext()))"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[133,134,135,136,428,137,431,432,429,430,138,139],"tindex":"e7b482de-13a0-11e5-96ea-8d5c651558de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"valueSet","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e7b482df-13a0-11e5-96ea-e70092bf7102","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e7b482e0-13a0-11e5-96ea-d7902e5e3ce2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[433,434,435,436,437,438,439,440,441,442,42,443,444,445,446,447,448,449],"tindex":"e7b482e1-13a0-11e5-96ea-6f6e4cb93b38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e7b482e2-13a0-11e5-96ea-39e562bd0d6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[185,78,186,187,188,79,189,190,191,192,193,194],"tindex":"e7b482e3-13a0-11e5-96ea-a35a54cb310a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[433,434,435,436,437,438,439,440,441,442,42,443,444,445,446,447,448,449],"tindex":"e7b482e4-13a0-11e5-96ea-d7ed77bce7f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-1},{"failures":[],"tindex":"e7b4a9f5-13a0-11e5-96ea-db6cee4fbc72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[80,96,97,98,81,82,450,83,84,85,99,86,87,88,89,90,100,101,451,102,103,104,452,105,453,91,454,455,354,456,457,355,92,93],"tindex":"e7b4a9f6-13a0-11e5-96ea-535e49b181d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:752","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,27,315,316,317,318,319,320,321,118,119,322,157,158,162,164,167,172,173,177,179],"tindex":"e7b4a9f7-13a0-11e5-96ea-ffbd51378f23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e7b4a9f8-13a0-11e5-96ea-ff652e15b476","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[106,458,459],"tindex":"e7b4a9f9-13a0-11e5-96ea-8158fd60273e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-1},{"failures":[90,452,105,453,91,454,455],"tindex":"e7b4a9fa-13a0-11e5-96ea-9773dfbeae91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[460,461,462],"tindex":"e7b4a9fb-13a0-11e5-96ea-7f5a87f147c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"e7b4d10c-13a0-11e5-96ea-85c077b118d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[67],"tindex":"e7b4d10d-13a0-11e5-96ea-971541edaa7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[368,369,463,370,371,372,464,374,140,375,211,465,376,377,466,378,379,380,467,382,141,383,225,468,469,470,471,472,473,239,474,475,143,476,240,477,384,385,478,386,387,388,479,390,146,391,254,480,392,393,481,394,395,396,482,398,148,399,269,483,400,401,484,402,403,404,485,406,151,407,283,486,408,409,487,410,411,412,488,414,152,415,301,489,18,19,20,21,22,24,25,26,27],"tindex":"e7b4d10e-13a0-11e5-96ea-9b7ce5fb3135","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e7b4d10f-13a0-11e5-96ea-f767e00e8878","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":0},{"failures":[],"tindex":"e7b4d110-13a0-11e5-96ea-ed185819e2bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"e7b4d111-13a0-11e5-96ea-772656fe9611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"lineageIndex","newCapacity":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"e7b4d112-13a0-11e5-96ea-059167af9ebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[90,102,103,452,105,91,454,195,490,491,492,493,494,495],"tindex":"e7b4d113-13a0-11e5-96ea-995a1f7a0f2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548],"tindex":"e7b4d114-13a0-11e5-96ea-93096080d3f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"e7b4f825-13a0-11e5-96ea-5f94b7dc8e3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:447","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[549,550,551,552,553],"tindex":"e7b4f826-13a0-11e5-96ea-f935f1737b47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-1},{"failures":[512,514,521,523,524],"tindex":"e7b4f827-13a0-11e5-96ea-5518e9e05207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"e7b4f828-13a0-11e5-96ea-55f717edcc1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"bound","index":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[],"tindex":"e7b4f829-13a0-11e5-96ea-416e610c7cd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":0},{"failures":[],"tindex":"e7b4f82a-13a0-11e5-96ea-29ee28d80d46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[496,497,503,504,506,507,508,510,511,512,513,514,521,523,524,528,529,532,533,534,535,536,538,539],"tindex":"e7b4f82b-13a0-11e5-96ea-f5143260a91f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"rval","to":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"e7b4f82c-13a0-11e5-96ea-3f59128833a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"e7b4f82d-13a0-11e5-96ea-094e74e0da63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e7b51f3e-13a0-11e5-96ea-ef4a17b30874","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}