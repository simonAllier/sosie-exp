{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":695,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":843,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":392,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":123,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":670,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":83,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":88,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":881,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":701,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":358,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":574,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":154,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":741,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":449,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":745,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":25,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":780,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":737,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":753,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":372,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":731,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":729,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":78,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":455,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":803,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":722,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":396,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":411,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":782,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":851,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":175,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":363,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":829,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":826,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":706,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":808,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":294,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":337,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":526,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":166,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":508,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":696,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":890,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":28,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":744,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":277,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":425,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":606,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":32,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":161,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":332,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":140,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":227,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":371,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":481,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":422,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":564,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":849,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":668,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":486,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":487,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":485,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":456,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":545,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":823,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":717,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":775,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":883,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":369,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":439,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":316,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":502,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":720,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":208,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":218,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":558,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":667,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":199,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":126,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":779,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":817,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":727,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":46,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":436,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":87,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":864,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":814,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":66,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":242,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":602,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":767,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":841,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":742,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":644,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":834,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":535,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":420,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":692,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":756,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":230,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":694,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":174,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":211,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":619,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":492,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":22,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":801,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":623,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":383,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":344,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":774,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":114,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":802,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":689,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":379,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":359,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":448,"org.apache.commons.collections4.map.LinkedMapTest.testReset":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":571,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":885,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":886,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":210,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":415,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":884,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":478,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":585,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRetainAll":193,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":836,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":573,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":811,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":792,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":333,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":270,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":771,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":45,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":593,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":848,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":364,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":772,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":21,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":596,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":407,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":209,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":785,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":533,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":550,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":343,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":514,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":642,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":60,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":847,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":631,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":353,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":263,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":354,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":355,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":664,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":815,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":168,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":676,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":844,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":427,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":789,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":86,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":837,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":18,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":874,"org.apache.commons.collections4.SetUtilsTest.testHashCode":832,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":868,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":433,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":798,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":401,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":400,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":402,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":503,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":698,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":289,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":536,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":870,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":740,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":784,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":663,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":662,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":659,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":658,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":661,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":660,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":657,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":412,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":282,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":304,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":758,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":93,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":520,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":877,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":323,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":762,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":827,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":298,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":220,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":749,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":391,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":752,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":751,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":750,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":600,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":438,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":816,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":760,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":269,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":38,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":624,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":181,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":341,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":474,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":124,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":603,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":532,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":65,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":257,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":69,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":380,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":426,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":453,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":212,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":149,"org.apache.commons.collections4.map.LRUMapTest.testLRU":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":625,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":517,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":249,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":838,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":246,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":4,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":818,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":853,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":697,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":183,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":506,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":684,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":651,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":636,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":91,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":324,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":238,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":477,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":280,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":786,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":406,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":702,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":531,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":42,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":1,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":528,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":17,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":494,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":216,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":198,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":143,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":315,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":361,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":57,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":842,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":704,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":388,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":472,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":872,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":876,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":248,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":336,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":85,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":213,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":800,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":346,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":112,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":777,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":334,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":666,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":738,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":866,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":609,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":129,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":572,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":711,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":873,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":712,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":710,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":13,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":475,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":512,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":272,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":177,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":430,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":622,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":153,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":652,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":489,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":459,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":16,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":452,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":810,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":468,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":693,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":613,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":232,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":504,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":858,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":797,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":764,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":67,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":601,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":567,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":254,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":239,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":538,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":182,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":151,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":725,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":31,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":595,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":302,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":783,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":871,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":607,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":773,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":855,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":138,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":709,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":620,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":888,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":543,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":889,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":703,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":236,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":162,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":152,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":116,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":483,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":482,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":700,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":887,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":484,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":313,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":312,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":825,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":518,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":557,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":867,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":226,"org.apache.commons.collections4.ArrayStackTest.testSearch":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":540,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":713,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":72,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":768,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":43,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":513,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":399,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":229,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":335,"org.apache.commons.collections4.ListUtilsTest.testSubtract":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":319,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":172,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":589,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":529,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":778,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":862,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":806,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":879,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":541,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":831,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":804,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":805,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":626,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":830,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":809,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":281,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":839,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":857,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":59,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":301,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":724,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":833,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":665,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":875,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":860,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":646,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":721,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":75,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":852,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":408,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":170,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":107,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":796,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":340,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":632,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":158,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":669,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":510,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":342,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":554,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":328,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":627,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":688,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":861,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":846,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":188,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":405,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":251,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":260,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":397,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":404,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":403,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":90,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":318,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":330,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":746,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":553,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":793,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":237,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":594,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":537,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":357,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":120,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":444,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":445,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":549,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":795,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":859,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":820,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":240,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":726,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":287,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":190,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":519,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":382,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":728,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":781,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":428,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":228,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":807,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":739,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":850,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":465,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":234,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":761,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":828,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":732,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":258,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":429,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":616,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":30,"org.apache.commons.collections4.set.CompositeSetTest.testContains":794,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":243,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":530,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":776,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":865,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":869,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":467,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":100,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":605,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":672,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":546,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":15,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":505,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":634,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":641,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":671,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":637,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":755,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":748,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":591,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":788,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":734,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":770,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":195,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":201,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":451,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":882,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":757,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":822,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":845,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":470,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":103,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":687,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":329,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":321,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":20,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":442,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":441,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":521,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":647,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":35,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":144,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":680,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":707,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":434,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":679,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":769,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":856,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":719,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":219,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":8,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":522,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":523,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":840,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":835,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":736,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":730,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":548,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":424,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":791,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":421,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":790,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":432,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveAll":192,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":878,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":274,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":854,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":681,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":612,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":649,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":286,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":813,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":82,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":524,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":385,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":296,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":650,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":880,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":824,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":252,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":765},"transformations":[{"failures":[],"tindex":"d37a651b-13aa-11e5-9e27-c9df746fe57d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d37a8c2c-13aa-11e5-9e27-e54249afe85f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16],"tindex":"d37a8c2d-13aa-11e5-9e27-716bcf290ac5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"d37ab33e-13aa-11e5-9e27-cff47a0f088f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":0},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"d37e0e9f-13aa-11e5-9e27-4f9c169ab66c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"d37e0ea0-13aa-11e5-9e27-9bf1379d3b81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:252","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this)"},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:400","type":"CtAssignmentImpl","sourcecode":"java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet()"},"status":-2},{"failures":[],"tindex":"d37e0ea1-13aa-11e5-9e27-71f42d21ba23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d37e35b2-13aa-11e5-9e27-bb928d83aba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[42],"tindex":"d37e35b3-13aa-11e5-9e27-d97c11bea71d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"total","newCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1349","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d37e35b4-13aa-11e5-9e27-7f4e4c32f842","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"d37e35b5-13aa-11e5-9e27-0f3af564172f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"d37e35b6-13aa-11e5-9e27-391420f9ec57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"header","after":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-2},{"failures":[143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"d37e5cc7-13aa-11e5-9e27-f74f508439a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d37e5cc8-13aa-11e5-9e27-d7aa65947b3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"d37e83d9-13aa-11e5-9e27-edc03015f799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[170,171],"tindex":"d37e83da-13aa-11e5-9e27-a52ec6ee30d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[172,173],"tindex":"d37e83db-13aa-11e5-9e27-93823a072fe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:101","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-1},{"failures":[22,23,24,174,25,26,27,28,30,31,32,33,175,176,177,178,39,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"d37e83dc-13aa-11e5-9e27-a1e570630931","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"d37e83dd-13aa-11e5-9e27-17e8778b84b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[218],"tindex":"d37e83de-13aa-11e5-9e27-579a8388ad94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[33,176,39,219,220,221,222,223,224],"tindex":"d37eaaef-13aa-11e5-9e27-e3ff2dcd3b76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d37eaaf0-13aa-11e5-9e27-030eb2f69153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"entry","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"d37eaaf1-13aa-11e5-9e27-3548fec2dcc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"bound","maxElements":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[206,207,208,209,210,211,213],"tindex":"d37eaaf2-13aa-11e5-9e27-557674e88905","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[225,226,227,228,229,230,231,232,233,234,235],"tindex":"d37eaaf3-13aa-11e5-9e27-277ed2ac5974","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"d37ed204-13aa-11e5-9e27-39b150ec521d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579],"tindex":"d37ed205-13aa-11e5-9e27-75afe1c693a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"newCapacity","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[],"tindex":"d37ed206-13aa-11e5-9e27-3d844c0e9438","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"status":-2},{"failures":[580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634],"tindex":"d37ef917-13aa-11e5-9e27-bd576bbde83f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[583,589,597,602,604,610,616,621,623,628],"tindex":"d37ef918-13aa-11e5-9e27-438b178b1d5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[635],"tindex":"d37ef919-13aa-11e5-9e27-21d8ba124224","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:161","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"d37ef91a-13aa-11e5-9e27-077069adbff9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[636,637,638,639,640,641,642,643,644,645,646],"tindex":"d37ef91b-13aa-11e5-9e27-f1e457539f71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"d37ef91c-13aa-11e5-9e27-3b7afc42246c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"bitIndex","modifications":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[647,648,649,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579],"tindex":"d37ef91d-13aa-11e5-9e27-b195b2c9bc07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[650,651,652,653,654,655],"tindex":"d37ef91e-13aa-11e5-9e27-317fd6bcf96b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"d37f202f-13aa-11e5-9e27-97437bbb4181","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[],"tindex":"d37f2030-13aa-11e5-9e27-9da1b1e001d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"d37f2031-13aa-11e5-9e27-33a1930ac156","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":0},{"failures":[656,657,658,659,660,661,662,663,664,665],"tindex":"d37f2032-13aa-11e5-9e27-11a96756e0a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-1},{"failures":[666],"tindex":"d37f2033-13aa-11e5-9e27-2769a63c1605","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:176","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"status":-1},{"failures":[667,668,669,670],"tindex":"d37f2034-13aa-11e5-9e27-a946896af5d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"start2","d":"start1","vDown":"vUp","delta":"end1","end2":"i","this":"this","i":"start1","end1":"start1","k":"end2","start2":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"d37f2035-13aa-11e5-9e27-5f734b53ac9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[18,19,23,24,25,26,27,28,30,31,32,33,219,221,222,223,671,672,179,180,182,183,184,185,186,187,188,189,673,674,675,676,195,196,197,198,199,200,201,677,678],"tindex":"d37f2036-13aa-11e5-9e27-8d3dc91f9bb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"d37f4747-13aa-11e5-9e27-735728bf6666","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d37f4748-13aa-11e5-9e27-b1d7916d6e1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:277","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.Comparator<? super E>.compare(E, E)"},"status":-2},{"failures":[679,680],"tindex":"d37f4749-13aa-11e5-9e27-d9e32633d77c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ?> instanceof org.apache.commons.collections4.MultiMap) {\n    for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n    }\n} else {\n    for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n    }\n}"},"status":-1},{"failures":[681,682],"tindex":"d37f474a-13aa-11e5-9e27-391d256f701e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"a":"list","b":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"d37f474b-13aa-11e5-9e27-11f5948124a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"d37f474c-13aa-11e5-9e27-098e1355cdb5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"path","predecessor":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":0},{"failures":[683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,155,156,701,157,158,159,702,703,160,704,161,705,706,162,163,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,164,165,742,166,167,168,743,744,169,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764],"tindex":"d37f474d-13aa-11e5-9e27-f5d8493aac05","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"d37f6e5e-13aa-11e5-9e27-6dce29783bf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d37f6e5f-13aa-11e5-9e27-73547a30500d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d37f6e60-13aa-11e5-9e27-39a599037f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[172,173],"tindex":"d37f6e61-13aa-11e5-9e27-8d89dee293db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"i","newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"d37f6e62-13aa-11e5-9e27-5f50777cd54f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d37f6e63-13aa-11e5-9e27-a7410aefdb52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d37f9574-13aa-11e5-9e27-4fa38172ea9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d37f9575-13aa-11e5-9e27-156a5d5044f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"d37f9576-13aa-11e5-9e27-19a7550b0ffb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:565","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[765,299,340,390,431,472,512,552],"tindex":"d37f9577-13aa-11e5-9e27-8d969e0a0003","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[228,766,767,768,769,594,770,771,772,773,595,774,775,776,777,778,779],"tindex":"d37f9578-13aa-11e5-9e27-393a896b6c20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"d37f9579-13aa-11e5-9e27-c1214e2c0ce8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[780,781,782,783,784,785,786,787,788,789,790,791],"tindex":"d37f957a-13aa-11e5-9e27-5781b7ffb778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d37f957b-13aa-11e5-9e27-e991acb47ddd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[671],"tindex":"d37f957c-13aa-11e5-9e27-bb0a979ae218","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"root","current":"root","tree":"root","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"status":-1},{"failures":[],"tindex":"d37f957d-13aa-11e5-9e27-cb22c12fa864","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":0},{"failures":[279,280,792,281],"tindex":"d37fbc8e-13aa-11e5-9e27-ddda73f33869","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"h","start":"h","end":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:516","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1},{"failures":[],"tindex":"d37fbc8f-13aa-11e5-9e27-af013cb9efcd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"d37fbc90-13aa-11e5-9e27-05333ae7a70f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815],"tindex":"d37fbc91-13aa-11e5-9e27-13d8718a526e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d37fbc92-13aa-11e5-9e27-09cccd518645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"child","right":"child","child":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[816,817,818,767,819,820,821,822,823,824,825],"tindex":"d37fbc93-13aa-11e5-9e27-1d8546260e0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[],"tindex":"d37fbc94-13aa-11e5-9e27-054e9fa4a338","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bound","newCapacity":"bound","proposedCapacity":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[826,827,828,829,830,831],"tindex":"d37fbc95-13aa-11e5-9e27-978f9d4f654a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d37fe3a6-13aa-11e5-9e27-ed839d534884","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[832],"tindex":"d37fe3a7-13aa-11e5-9e27-4568469b9e11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"hashCode","lengthInBits":"hashCode","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashCode","otherOffsetInBits":"hashCode","otherLengthInBits":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[833],"tindex":"d37fe3a8-13aa-11e5-9e27-519c27d7eb3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"d37fe3a9-13aa-11e5-9e27-9be1451f2e01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key2","entry":"previous","key2":"key2","key5":"key1","previous":"previous","hashCode":"hashCode","key3":"key1","key4":"key2","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[834,835,836,386,392,409],"tindex":"d37fe3aa-13aa-11e5-9e27-dbb6c5b5e16b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d37fe3ab-13aa-11e5-9e27-1d6c01909a45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[837,838],"tindex":"d37fe3ac-13aa-11e5-9e27-e3ca42a0262b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881],"tindex":"d37fe3ad-13aa-11e5-9e27-b1efe4d68651","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[206,207,208,209,210,211,212,213,214,215,216,217],"tindex":"d37fe3ae-13aa-11e5-9e27-fb67c695328d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d3800abf-13aa-11e5-9e27-631d3a789b1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"d3800ac0-13aa-11e5-9e27-490d6c7e76f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d3800ac1-13aa-11e5-9e27-bf7997341d58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"d3800ac2-13aa-11e5-9e27-d78837d2d7af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:344","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[],"tindex":"d3800ac3-13aa-11e5-9e27-b312f0c25749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2},{"failures":[],"tindex":"d3800ac4-13aa-11e5-9e27-75624dbb4c50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[161,163,716,719,720,723,724,725,726,727],"tindex":"d3800ac5-13aa-11e5-9e27-d90794e70ed5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[882,883,884,885,886,887,888,889,433,436],"tindex":"d3800ac6-13aa-11e5-9e27-133508d0a0da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"hash3","key":"key","bitIndex":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[584,890],"tindex":"d3800ac7-13aa-11e5-9e27-51bd6c8e9419","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"d38031d8-13aa-11e5-9e27-3ffd2d00f02f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"d38031d9-13aa-11e5-9e27-9bf2576c6c18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1104","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":0},{"failures":[],"tindex":"d38031da-13aa-11e5-9e27-5f4c35820424","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"d381434b-13aa-11e5-9e27-d16603923ed3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"d381434c-13aa-11e5-9e27-45deb03acf87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:85","type":"CtReturnImpl","sourcecode":"return java.util.Set<T> == null ? java.util.Collections.<T>emptySet() : java.util.Set<T>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}