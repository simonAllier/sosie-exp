{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":568,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":408,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":715,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":393,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":769,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":712,"org.apache.commons.collections4.TransformerUtilsTest.testConstantTransformer":690,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":689,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":320,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":229,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":660,"org.apache.commons.collections4.CollectionUtilsTest.collect":694,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":455,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":210,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":50,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":614,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":135,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":759,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":415,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":5,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":346,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":695,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":96,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":569,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":729,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":548,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":773,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":362,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":482,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":14,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":638,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":758,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":522,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":501,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":644,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":697,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":365,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":425,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":298,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":672,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":557,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":111,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":376,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":377,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":716,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":273,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":164,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":294,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":427,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":11,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":774,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":284,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":348,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":750,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":634,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":180,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":481,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":189,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":424,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":479,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":292,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":144,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":710,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":194,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":195,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":193,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":168,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":463,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":673,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":483,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":440,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":281,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":543,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":374,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":768,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":654,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":738,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":344,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":474,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":709,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":520,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":583,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":570,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":572,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":681,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":755,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":771,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":489,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":353,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":156,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":40,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":538,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":316,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":268,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":329,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":323,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":596,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":559,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":675,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":726,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":57,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":233,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":244,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":409,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":691,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":78,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":782,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":309,"org.apache.commons.collections4.IteratorUtilsTest.testToList":789,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":188,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":513,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":476,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":762,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":293,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":34,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":657,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":77,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":780,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":75,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":291,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":756,"org.apache.commons.collections4.map.LRUMapTest.testReset":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":123,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":510,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":661,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":287,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":757,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":546,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":437,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":491,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":685,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":169,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":739,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":326,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":414,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":45,"org.apache.commons.collections4.map.LinkedMapTest.testReset":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":60,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":505,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":656,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":186,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":454,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":325,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":753,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":664,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":107,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":80,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":337,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":588,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":99,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":290,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":497,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":579,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":655,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":700,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":647,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":791,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":467,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":398,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":355,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":187,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":784,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":128,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":129,"org.apache.commons.collections4.map.HashedMapTest.testClone":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":269,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":567,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":468,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":475,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":158,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":429,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":704,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":745,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":747,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":574,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":1,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":357,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":435,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":749,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":388,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":198,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":678,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":490,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":539,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":297,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":627,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":626,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":623,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":622,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":625,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":624,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":619,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":621,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":502,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":620,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":423,"org.apache.commons.collections4.map.LinkedMapTest.testClone":217,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":533,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":220,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":649,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":535,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":534,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":146,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":403,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":46,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":549,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":560,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":312,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":518,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":761,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":339,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":167,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":766,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":645,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":781,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":358,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":439,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":636,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":674,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":6,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":255,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":587,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":692,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":304,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":646,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":116,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":182,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":380,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":575,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":492,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":428,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":418,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":658,"org.apache.commons.collections4.map.LRUMapTest.testLRU":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":267,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":603,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":764,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":600,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":751,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":666,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":141,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":216,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":391,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":740,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":69,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":331,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":170,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":477,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":760,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":592,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":185,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":531,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":701,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":79,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":496,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":351,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":641,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":17,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":274,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":286,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":202,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":662,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":730,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":736,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":643,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":15,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":136,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":511,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":515,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":179,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":110,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":602,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":659,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":754,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":582,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":124,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":341,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":242,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":183,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":84,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":396,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":235,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":590,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":432,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":611,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":318,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":615,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":239,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":197,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":165,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":30,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":212,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":417,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":514,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":721,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":598,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":175,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":648,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":776,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":265,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":389,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":448,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":748,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":516,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":717,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":232,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":449,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":608,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":209,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":562,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":386,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":593,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":48,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":524,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":650,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":10,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":271,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":779,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":564,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":698,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":775,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":670,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":324,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":555,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":461,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":215,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":422,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":752,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":651,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":227,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":237,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":542,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":541,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":540,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":667,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":162,"org.apache.commons.collections4.ArrayStackTest.testSearch":683,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":371,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":445,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":319,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":321,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":487,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":637,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":270,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":87,"org.apache.commons.collections4.map.LRUMapTest.testClone":37,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":243,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":499,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":228,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":397,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":438,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":525,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":702,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":109,"org.apache.commons.collections4.ListUtilsTest.testSubtract":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":545,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":378,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":364,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":500,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":585,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":720,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":652,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":296,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":446,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":718,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":719,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":777,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":532,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":149,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":335,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":86,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":563,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":770,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":224,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":249,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":629,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":734,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":288,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":663,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":317,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":178,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":498,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":360,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":152,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":101,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":114,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":785,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":711,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":117,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":214,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":577,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":471,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":102,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":617,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":618,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":595,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":213,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":372,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":640,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":495,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":494,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":523,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":605,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":283,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":104,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":470,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":591,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":91,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":680,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":731,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":115,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":783,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":54,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":272,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":767,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":412,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":413,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":725,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":693,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":466,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":741,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":530,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":594,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":65,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":469,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":537,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":790,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":402,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":350,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":765,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":509,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":696,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":430,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":260,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":609,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":172,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":607,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":246,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":250,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":565,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":604,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":576,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":161,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":597,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":67,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":379,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":488,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":352,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":330,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":174,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":231,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":746,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":464,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":29,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":390,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":714,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":787,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":7,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":688,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":359,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":370,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":703,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":332,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":633,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":722,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":724,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":723,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":155,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":416,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":184,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":735,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":333,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":677,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":299,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":347,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":613,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":285,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":315,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":668,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":103,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":679,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":361,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":547,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":684,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":289,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":98,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":442,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":303,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":732,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":763,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":241,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":737,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":240,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":632,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":93,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":311,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":20,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":405,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":345,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":406,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":64,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":792,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":278,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":426,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":342,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":706,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":410,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":705,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":642,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":434,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":788,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":686,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":708,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":584,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":38,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":148,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":742,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":743,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":707,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":219,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":687,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":728,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":778,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":558,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":580,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":586,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":682,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":606,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":336,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":61},"transformations":[{"failures":[],"tindex":"ee29abfc-13a8-11e5-87db-cd11b8f13a48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"ee29abfd-13a8-11e5-87db-33cba69f110a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"right","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[14],"tindex":"ee29d30e-13a8-11e5-87db-6f2bb9dbac12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:159","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[15,16],"tindex":"ee29d30f-13a8-11e5-87db-6585d09e352d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[17],"tindex":"ee29d310-13a8-11e5-87db-5341e9d06b33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"ee29d311-13a8-11e5-87db-3920455bad89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"tindex":"ee29fa22-13a8-11e5-87db-5d1c673c298b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"ee2a2133-13a8-11e5-87db-25b346243dc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[],"tindex":"ee2a2134-13a8-11e5-87db-ab2b5bb731b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"entry","previous":"entry","left":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[],"tindex":"ee2a2135-13a8-11e5-87db-2b5b8c6bf8e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"ee2a2136-13a8-11e5-87db-792eae43a3ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"ee2a2137-13a8-11e5-87db-3b9ed6bad306","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ee2a4848-13a8-11e5-87db-f3078c19e976","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:76","type":"CtReturnImpl","sourcecode":"return java.util.List<T> == null ? java.util.List<T> : java.util.List<T>"},"status":-2},{"failures":[223,224,225,226],"tindex":"ee2a4849-13a8-11e5-87db-276c3534da91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[227,228],"tindex":"ee2a484a-13a8-11e5-87db-efcb2ec109d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"ee2a484b-13a8-11e5-87db-c31102a34dc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"nextNode":"currentNode","lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1066","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,14,252,253,254,255,256,257],"tindex":"ee2a484c-13a8-11e5-87db-a9e6dfb2da93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"ee2a6f5d-13a8-11e5-87db-7394162e14b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl","sourcecode":"return int > 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[270,271,272],"tindex":"ee2a6f5e-13a8-11e5-87db-e17287b1633a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"ee2a6f5f-13a8-11e5-87db-8568d2be4082","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[116,181],"tindex":"ee2a6f60-13a8-11e5-87db-abf911086f25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"ee2a6f61-13a8-11e5-87db-39a95b030749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[98,110,131,134,273,274,275,276,277,159,278,279,280,175,196,199,281,282,283],"tindex":"ee2a6f62-13a8-11e5-87db-776b3d791fe1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:124","type":"CtReturnImpl","sourcecode":"return ((this) == java.lang.Object) || ((null != java.lang.Object) && (java.lang.Object.getClass().equals(java.lang.Object.getClass())))"},"variableMap":{"this":"value","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"ee2a6f63-13a8-11e5-87db-99e326729f90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}"},"status":-2},{"failures":[284,285],"tindex":"ee2a9674-13a8-11e5-87db-154c8b905b1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[0,286,287,1,288,289,290,291,292,3,4,293,5,6,7,294,8,9,295,10,296,297,11,12,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,2,316,317,13],"tindex":"ee2a9675-13a8-11e5-87db-0d88994bfe69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[318],"tindex":"ee2a9676-13a8-11e5-87db-d7f84f64b313","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":-1},{"failures":[319,320,321,322,323,324,325],"tindex":"ee2a9677-13a8-11e5-87db-75cdf7a4ed01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)"},"status":-1},{"failures":[326,327],"tindex":"ee2a9678-13a8-11e5-87db-dbc8c6a221a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"variableMap":{"closure":"iClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[],"tindex":"ee2a9679-13a8-11e5-87db-0d01503aae5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[],"tindex":"ee2a967a-13a8-11e5-87db-d52e56037b48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate))"},"status":-2},{"failures":[328,329,225,330,331,332,333,334,224,335],"tindex":"ee2a967b-13a8-11e5-87db-eff45ecf09c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"ee2abd8c-13a8-11e5-87db-17ca0026f460","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"child","parent":"h","left":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ee2ae49d-13a8-11e5-87db-e1523f7d94b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"ee2bf60e-13a8-11e5-87db-a533f310f8f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[332,333,370,334,224,335,371,329,225,330,331],"tindex":"ee2bf60f-13a8-11e5-87db-ffad61f06c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-1},{"failures":[31,38,39,40,41,100,102,103,104,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,372,373,374,375,376,377,274,378,379,275,380,381,382,383,384,385,386,387,388,389,390,391,392,273,393,394,395,396,397,398,399,400,154,401,402,403,404,405,406,407,408,409,410,411,412,413,276,414,415,277,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,156,438,439,440,441,442,443,444,157,445,446,447,448,449,450,279,451,452,280,453,454,455,456,457,458,459,460,461,462,463,464,465,278,466,467,468,469,470,471,472,473,162,474,475,476,477,478,479,480,163,165,167,168,169,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,218,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,219,537,538,539,540,541,542,282,543,544,283,545,546,547,548,549,550,551,552,553,554,555,556,557,281,558,559,560,561,562,563,564,565,220,566,567,568,569,570,571,572,221,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],"tindex":"ee2bf610-13a8-11e5-87db-31b1b0cab1f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"variableMap":{"this":"this","newSize":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-1},{"failures":[609,610,611,612,613,614,615],"tindex":"ee2bf611-13a8-11e5-87db-99c6bb7d1018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[0,286,1,288,289,290,291,3,4,5,6,7,294,8,9,10,11,12,301,302,304,305,306,310,13],"tindex":"ee2bf612-13a8-11e5-87db-f76576a96d3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[318,616,617,618],"tindex":"ee2c1d23-13a8-11e5-87db-55e377a71e66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[619,620,621,622,623,624,625,626,627,628,629],"tindex":"ee2c1d24-13a8-11e5-87db-af2a9955a9b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"ee2c1d25-13a8-11e5-87db-8d545a55181d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"status":-2},{"failures":[630,631,284,285,632],"tindex":"ee2c1d26-13a8-11e5-87db-fb1f8d6f850b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:953","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[],"tindex":"ee2c1d27-13a8-11e5-87db-1b1a1a00f723","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"ee2c1d28-13a8-11e5-87db-e3752095c10d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[633,634,635,636,637,638],"tindex":"ee2c1d29-13a8-11e5-87db-d16f10efd1fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:149","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[639,640,641,642,643,644,645,646,647,648,649,650,651],"tindex":"ee2c443a-13a8-11e5-87db-8ddbf7a550ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[652,653,654,655,656,657,658,659,660,661,662,663],"tindex":"ee2c443b-13a8-11e5-87db-d3ff8dd7e2bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtIfImpl","sourcecode":"if (java.util.Comparator<? super O> == null) {\n    throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n} "},"variableMap":{"c":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ee2c443c-13a8-11e5-87db-71c234cdca90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":0},{"failures":[530,531,664,532],"tindex":"ee2c443d-13a8-11e5-87db-cb05d8af41fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"h","removeIndex":"h","currentIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682],"tindex":"ee2c443e-13a8-11e5-87db-5935f90f5cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[],"tindex":"ee2c443f-13a8-11e5-87db-53a7f92f8056","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[683],"tindex":"ee2c6b50-13a8-11e5-87db-d57457abd567","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"object","defaultValue":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"ee2c6b51-13a8-11e5-87db-a50206425884","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[18,19,20,684],"tindex":"ee2c6b52-13a8-11e5-87db-134b8cd8ffc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[685,686,687,688,689],"tindex":"ee2c6b53-13a8-11e5-87db-5dc168202613","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-1},{"failures":[483],"tindex":"ee2c6b54-13a8-11e5-87db-c9f4e0c6c779","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ee2c9265-13a8-11e5-87db-37ce739153b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[],"tindex":"ee2c9266-13a8-11e5-87db-ffd81ebe863e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"ee2c9267-13a8-11e5-87db-7b0beb4ab061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"ee2c9268-13a8-11e5-87db-3f9917063765","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"ee2c9269-13a8-11e5-87db-15a30cd86be5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":0},{"failures":[690,691,692,693,694],"tindex":"ee2c926a-13a8-11e5-87db-09787393c8c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(O)"},"status":-1},{"failures":[],"tindex":"ee2c926b-13a8-11e5-87db-f5c3ae4cedf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"ee2c926c-13a8-11e5-87db-69136b7bb9cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"ee2c926d-13a8-11e5-87db-c772b43e9bee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:551","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"delegateMap","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[695,696,697,698,699,700,701,702,703,704,705,706],"tindex":"ee2c926e-13a8-11e5-87db-5d13435d85c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"previousObjectSet","beforeFirst":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"ee2cb97f-13a8-11e5-87db-fff7e40a0eb8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:903","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[],"tindex":"ee2cb980-13a8-11e5-87db-833313f7a80e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[707,708,709,710,711,712],"tindex":"ee2cb981-13a8-11e5-87db-6196bc9bc6f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"end1","d":"d","vDown":"vUp","delta":"end2","end2":"offset","this":"this","i":"end1","end1":"d","k":"d","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"ee2cb982-13a8-11e5-87db-3d1f8517dd05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"ee2cb983-13a8-11e5-87db-23d35125249a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[713,332,333,334,224,335,329,225,330,331,714],"tindex":"ee2cb984-13a8-11e5-87db-6df4df5254fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[715,716,717,718,719,720,258,721,722,723,724,259,725,260,261,262,263,264,265,266,726,727,267,728,268,269,729,730,731,732,733,246,734,735,736,737,646,648,738,739,649,740,650,651,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,614,764,765,766,767,615],"tindex":"ee2cb985-13a8-11e5-87db-71febb9fdc6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"ee2cb986-13a8-11e5-87db-35e7c0807731","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"ee2cb987-13a8-11e5-87db-6990c0fb5975","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"ee2ce098-13a8-11e5-87db-17d73a4716b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"current","parent":"right","h":"current","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ee2ce099-13a8-11e5-87db-119457bf1711","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-2},{"failures":[284,285,632,768,769,770,630,631,771],"tindex":"ee2ce09a-13a8-11e5-87db-e9d8fe9934ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"ee2ce09b-13a8-11e5-87db-a59e6fbaf908","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"variableMap":{"i":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"ee2ce09c-13a8-11e5-87db-5900fafc5898","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787],"tindex":"ee2ce09d-13a8-11e5-87db-1d4d14863afe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"status":-1},{"failures":[238,788,789,790,791,653],"tindex":"ee2ce09e-13a8-11e5-87db-315595c99d60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"ee2ce09f-13a8-11e5-87db-237927b8dbf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"status":-2},{"failures":[],"tindex":"ee2ce0a0-13a8-11e5-87db-532f6b32e359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"ee2d07b1-13a8-11e5-87db-eb99b66f5eb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ee2d07b2-13a8-11e5-87db-5b9fc5e9a66d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"ee2d07b3-13a8-11e5-87db-b5ef62fea21d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[792],"tindex":"ee2d07b4-13a8-11e5-87db-31bf60709c36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[],"tindex":"ee2d07b5-13a8-11e5-87db-15833b094090","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[532],"tindex":"ee2d07b6-13a8-11e5-87db-a374225604ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"index","index":"index","beyond":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:340","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[],"tindex":"ee2d2ec7-13a8-11e5-87db-2b1a0fed6bcb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"predecessor","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[],"tindex":"ee2d2ec8-13a8-11e5-87db-f3efe6944b2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[18,19,20,21,22,24,25,26,27],"tindex":"ee2d2ec9-13a8-11e5-87db-d9ba8950c5b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"ee2d2eca-13a8-11e5-87db-0b5b3e0fd38c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ee2d2ecb-13a8-11e5-87db-bd97b04f1ec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ee2d2ecc-13a8-11e5-87db-055d3c0b4233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}