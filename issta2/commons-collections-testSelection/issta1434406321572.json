{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":497,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":80,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":707,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":754,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":56,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":672,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":661,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":698,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":285,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":286,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":262,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":287,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":404,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":863,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":264,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":468,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":872,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":350,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":836,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":510,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":385,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":34,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":816,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":421,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":714,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":852,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":85,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":553,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":607,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":857,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":126,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":835,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":555,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":83,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":858,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":756,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":588,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":436,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":361,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":609,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":267,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":520,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":457,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":142,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":346,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":761,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":375,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":367,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":576,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":651,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":619,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":893,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":706,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":917,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":559,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":12,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":861,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":388,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":848,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":702,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":419,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":502,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":900,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":391,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":804,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":115,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":827,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":195,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":487,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":37,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":168,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":681,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":214,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":670,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":450,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":612,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":463,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":603,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":209,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":210,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":208,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":183,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":549,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":716,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":613,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":44,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":636,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":667,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":333,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":114,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":767,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":762,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":649,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":823,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":295,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":73,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":592,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":326,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":581,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":669,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":723,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":399,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":475,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":888,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":662,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":452,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":832,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":483,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":802,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":732,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":133,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":737,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":282,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":617,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":219,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":3,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":625,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":570,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":894,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":165,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":741,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":658,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":654,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":871,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":801,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":657,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":269,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":394,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":105,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":203,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":751,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":850,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":384,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":78,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":224,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":899,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":563,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":747,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":381,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":833,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":586,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":892,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":276,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":749,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":840,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":834,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":554,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":184,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":844,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":562,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":201,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":638,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRetainAll":418,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":811,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":428,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":536,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":830,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":758,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":575,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":236,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":157,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":784,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":630,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":66,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":866,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":163,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":445,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":772,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":230,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":268,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":139,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":680,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":74,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":584,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":709,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":407,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":482,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":61,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":490,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":202,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":540,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":166,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":664,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":484,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":257,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":781,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":639,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":258,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":583,"org.apache.commons.collections4.map.HashedMapTest.testClone":795,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":317,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":882,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":682,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":370,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":808,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":433,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":778,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":715,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":291,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":728,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":306,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":822,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":132,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":824,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":124,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":677,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":869,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":731,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":826,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":116,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":519,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":650,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":652,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":865,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":45,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":685,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":881,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":880,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":877,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":876,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":879,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":878,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":875,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":874,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":470,"org.apache.commons.collections4.map.LinkedMapTest.testClone":799,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":176,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":766,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":329,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":456,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":886,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":273,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":551,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":542,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":8,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":382,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":653,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":693,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":182,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":792,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":27,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":453,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":594,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":458,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":386,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":342,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":901,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":137,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":854,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":345,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":353,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":624,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":800,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":847,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":853,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":841,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":57,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":505,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":101,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":171,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":136,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":868,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":727,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":35,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":806,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":526,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":645,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":815,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":289,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":897,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":710,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":221,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":791,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":178,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":89,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":595,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":828,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":429,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":478,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":500,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":839,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":604,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":561,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":0,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":330,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":908,"org.apache.commons.collections4.map.Flat3MapTest.testToString":856,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":185,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":366,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":451,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":910,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":746,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":77,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":837,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":200,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":788,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":334,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":838,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":889,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":859,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":160,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":158,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":813,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":675,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":217,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":817,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":323,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":921,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":322,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":477,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":288,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":265,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":537,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":476,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":378,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":870,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":194,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":753,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":773,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":647,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":831,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":601,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":552,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":764,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":120,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":867,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":250,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":237,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":608,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":99,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":466,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":531,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":506,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":572,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":564,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":112,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":873,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":7,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":701,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":362,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":513,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":90,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":708,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":786,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":602,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":454,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":911,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":318,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":557,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":212,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":180,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":225,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":348,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":771,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":190,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":616,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":371,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":325,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":591,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":556,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":814,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":449,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":703,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":413,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":543,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":281,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":534,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":825,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":103,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":849,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":724,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":777,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":785,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":770,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":409,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":331,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":793,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":4,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":864,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":687,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":390,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":634,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":730,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":300,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":524,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":173,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":571,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":759,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":579,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":640,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":760,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":600,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":694,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":829,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":379,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":51,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":462,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":206,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":205,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":95,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":580,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":207,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":842,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":545,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":768,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":646,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":860,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":538,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":711,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":722,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":501,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":515,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":339,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":794,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":637,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":605,"org.apache.commons.collections4.map.LRUMapTest.testClone":798,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":626,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":733,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":446,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":885,"org.apache.commons.collections4.ListUtilsTest.testSubtract":420,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":411,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":898,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":170,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":396,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":684,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":377,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":533,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":567,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":620,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":522,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":587,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":655,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":566,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":488,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":789,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":49,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":175,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":812,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":97,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":913,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":765,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":169,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":883,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":577,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":678,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":610,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":697,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":914,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":912,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":123,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":193,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":920,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":807,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":895,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":335,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":821,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":243,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":740,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":665,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":915,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":403,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":606,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":671,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":246,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":544,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":721,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":231,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":518,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":400,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":447,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":226,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":415,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":757,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":406,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":699,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":233,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":216,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":266,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":769,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":890,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":430,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":628,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":648,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":244,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":663,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":739,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":54,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":140,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":719,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":819,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":529,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":905,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":896,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":787,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":805,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":249,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":220,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":916,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":641,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":504,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":720,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":618,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":903,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":489,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":416,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":509,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":919,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":748,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":461,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":574,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":729,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":485,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":633,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":623,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":904,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":364,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":187,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":492,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":164,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":422,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":86,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":431,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":656,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":776,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":13,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":511,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":491,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":508,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":127,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":774,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":582,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":796,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":389,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":855,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":448,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":745,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":151,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":82,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":6,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":434,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":284,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":118,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":704,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":360,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":902,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":668,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":340,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":810,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":803,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":46,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":514,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":283,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":891,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":387,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":23,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":498,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":179,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":473,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":305,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":644,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":358,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":906,"org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility":700,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":629,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":738,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":395,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":401,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":797,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":199,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":845,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":319,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":660,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":443,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":565,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":686,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":884,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":593,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":696,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":455,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":679,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":441,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":713,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":688,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":689,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":690,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":818,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":147,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":481,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":324,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":539,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":627,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":717,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":341,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":692,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":356,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":374,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":493,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":744,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":918,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":718,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":726,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":308,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":307,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":887,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveAll":417,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":674,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":782,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":735,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":790,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":275,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":368,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":569,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":642,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":113,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":862,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":469,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":315,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":467,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":750,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":763,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":780,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":907,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":517,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":783,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":909,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":736,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":234,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":843,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":851,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":271,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":427,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":532,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":775,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":743},"transformations":[{"failures":[],"tindex":"8c1faeb7-13ab-11e5-85ec-c5af4446a892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"path","current":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"8c1fd5c8-13ab-11e5-85ec-2f6c18c7e8ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"i","buckets":"result","length":"i","locks":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[],"tindex":"8c1fd5c9-13ab-11e5-85ec-21c56afcfa55","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"8c1fd5ca-13ab-11e5-85ec-5bba42c88460","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:800","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"8c1fd5cb-13ab-11e5-85ec-2524e7ca4a32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"8c1ffcdc-13ab-11e5-85ec-89c7ecff3fbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"parent","tree":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"8c1ffcdd-13ab-11e5-85ec-a3183868ff1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.clear()"},"variableMap":{"reverseMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[134],"tindex":"8c1ffcde-13ab-11e5-85ec-a1b9d0b8ce87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"8c1ffcdf-13ab-11e5-85ec-c9a0674ef5a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"tindex":"8c2023f0-13ab-11e5-85ec-6b432ad65fc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"8c2023f1-13ab-11e5-85ec-b10263d4ddda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[176,177,178,179],"tindex":"8c2023f2-13ab-11e5-85ec-498da9e39784","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"8c2023f3-13ab-11e5-85ec-997278e7f115","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275],"tindex":"8c204b04-13ab-11e5-85ec-73103ac240f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>)"},"variableMap":{"ref":"ref","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"8c204b05-13ab-11e5-85ec-8fb3bfdd7d9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"8c204b06-13ab-11e5-85ec-73efadcc0d77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"8c204b07-13ab-11e5-85ec-63d99ca5e46f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"8c207218-13ab-11e5-85ec-218ce5dcb085","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"8c207219-13ab-11e5-85ec-1db3b1186ae9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"8c20721a-13ab-11e5-85ec-c969a1f6974c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"tindex":"8c20721b-13ab-11e5-85ec-7fb710464eed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"8c20721c-13ab-11e5-85ec-afee54397fa0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"variableMap":{"entry":"next","size":"hashIndex","before":"entry","index":"hashIndex","header":"next","after":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[292,293,294,295,296],"tindex":"8c20992d-13ab-11e5-85ec-07502a708e44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","rightChild":"yFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"8c20992e-13ab-11e5-85ec-fd3fe52aca72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"8c20992f-13ab-11e5-85ec-8535160b9adf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"8c209930-13ab-11e5-85ec-5bda46587f06","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"size","maxElements":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[333,334,335,336,337,338,339,340,341,342,343],"tindex":"8c209931-13ab-11e5-85ec-4fc5d89b28c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-1},{"failures":[344,345],"tindex":"8c209932-13ab-11e5-85ec-5b28190c78bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"8c209933-13ab-11e5-85ec-c73f2e78a533","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[346,347,136,348,349,145,146,147,350,351],"tindex":"8c20c044-13ab-11e5-85ec-89adac1fd57e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[352,353,354],"tindex":"8c20c045-13ab-11e5-85ec-cd91ec394f35","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"variableMap":{"cmds":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-1},{"failures":[355,356,357,358,359,360,361,362,363],"tindex":"8c20c046-13ab-11e5-85ec-cb6e96a85b2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"8c20c047-13ab-11e5-85ec-873c301617b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,292,379,293,380],"tindex":"8c20c048-13ab-11e5-85ec-d396ffded709","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"8c20e759-13ab-11e5-85ec-333ceb065351","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"parent","predecessor":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[381,382,383,384,385,386,387,388,389,390,391,276,392,279,393,394,280,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,285,416,288,417,418,289],"tindex":"8c20e75a-13ab-11e5-85ec-01b9a737e478","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[],"tindex":"8c20e75b-13ab-11e5-85ec-a96ee22e8de4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-2},{"failures":[292,293],"tindex":"8c20e75c-13ab-11e5-85ec-3da1325af4c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"8c20e75d-13ab-11e5-85ec-83794fcc7691","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[419],"tindex":"8c20e75e-13ab-11e5-85ec-550737e62b9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"header","before":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"8c20e75f-13ab-11e5-85ec-ed9f7387b6f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:397","type":"CtReturnImpl","sourcecode":"return java.util.Set<V>"},"status":-2},{"failures":[],"tindex":"8c210e70-13ab-11e5-85ec-6facfb813a7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[],"tindex":"8c210e71-13ab-11e5-85ec-91ced4dad58a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"8c210e72-13ab-11e5-85ec-1fbccfce2143","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[420,421,422,423,424,425,426,427,428,429,430,431,432,0,433,434,435,1,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,2,3,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,4,474,475,476,5,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,6,503,504,505,7,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,8,543,544,545,9,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,10,11,564,565,566,567,568,569,12,570,571,572,13,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,14,600,601,602,15,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,16,17,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,18,639,640,641,19,642,643,644,645,646,647,648,336,337,649,339,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668],"tindex":"8c210e73-13ab-11e5-85ec-87c5cf4777f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"8c210e74-13ab-11e5-85ec-054dab592d93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"8c210e75-13ab-11e5-85ec-85d115318c4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1608","type":"CtLocalVariableImpl","sourcecode":"O O = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:82","type":"CtLocalVariableImpl","sourcecode":"final O O = this.org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[],"tindex":"8c213586-13ab-11e5-85ec-3f2ed4fb8376","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[669,670,671,672,673,674],"tindex":"8c213587-13ab-11e5-85ec-e52fcc975a9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"x","listSize":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[675,676,677,678,679,680,381,681,382,383,384,385,386,387,388,682,389,683,390,684,685,391,276,392,686,687,688,689,690,277,278,691,279,393,394,280,692,693,694,695,696,281,282,697,698,699],"tindex":"8c213588-13ab-11e5-85ec-c50992ab05c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"endIndex1","listSize":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[700,701,702],"tindex":"8c213589-13ab-11e5-85ec-1b147592d77e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:177","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, java.lang.Object> = ((java.util.Map<K, java.lang.Object>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,235,236,238,239,240,243,246,249,250,725,726,727,728,729,730,731,732,733,734,735,736,737,419,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786],"tindex":"8c21358a-13ab-11e5-85ec-31125171e196","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"8c21358b-13ab-11e5-85ec-5540f3858a14","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":0},{"failures":[787,788,758,789],"tindex":"8c21358c-13ab-11e5-85ec-d7cec1348c2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[790,315,317],"tindex":"8c21358d-13ab-11e5-85ec-31a86a6380c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"8c21358e-13ab-11e5-85ec-c762eed68868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"8c215c9f-13ab-11e5-85ec-bf940dc218bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[298,299,300,301,303,304,305,306,307,308],"tindex":"8c215ca0-13ab-11e5-85ec-5bfbd2ee53b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"8c215ca1-13ab-11e5-85ec-954c9a479176","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[427,442,455,458,483,500,512,529,538,552,565,579,596,609,622,625,648,662],"tindex":"8c215ca2-13ab-11e5-85ec-751485457c7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[791,792],"tindex":"8c215ca3-13ab-11e5-85ec-0198abd8e9b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:161","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\")"},"status":-1},{"failures":[793,794],"tindex":"8c215ca4-13ab-11e5-85ec-51a9f42a341f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"8c215ca5-13ab-11e5-85ec-1133f58bc3db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"end1","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-2},{"failures":[795,710,200,796,714,722,797,732,798,745,799,755,766],"tindex":"8c215ca6-13ab-11e5-85ec-0d257eed20b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"8c2183b7-13ab-11e5-85ec-5fdd26435e5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"8c2183b8-13ab-11e5-85ec-0798e5d99b74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[800,801,802,803,804,805,806,807,808],"tindex":"8c2183b9-13ab-11e5-85ec-0df2e02caf54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"8c2183ba-13ab-11e5-85ec-79d2160f76db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[809],"tindex":"8c2183bb-13ab-11e5-85ec-cf0770ea2419","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:54","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory));\n} "},"status":-1},{"failures":[810,811,812,309,310,813,311,312,814,313,314,815,315,316,317,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837],"tindex":"8c2183bc-13ab-11e5-85ec-850874bbdb8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"8c2183bd-13ab-11e5-85ec-dbbce9101e43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"8c2183be-13ab-11e5-85ec-0fcd06c25710","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"8c2183bf-13ab-11e5-85ec-8bd246c17911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-2},{"failures":[],"tindex":"8c21aad0-13ab-11e5-85ec-875393687496","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-2},{"failures":[],"tindex":"8c21aad1-13ab-11e5-85ec-83a62cc95f16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"parent","root":"path","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"8c21aad2-13ab-11e5-85ec-a74e79fcfc00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[32,36,40,45,838,839,840,58,74,841,842,843,87,91,844,845,846,104,107,111,115,120,847,848,849,133],"tindex":"8c21aad3-13ab-11e5-85ec-fbce4877331a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[670,671,673,674],"tindex":"8c21aad4-13ab-11e5-85ec-676a42aec928","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"variableMap":{"indexOfLargestMobileInteger":"x","keys":"vDown","largestKey":"x","i":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"8c21aad5-13ab-11e5-85ec-8f008395d8f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:600","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(']')"},"variableMap":{"buf":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1376","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V))"},"status":0},{"failures":[850,851,852,853,854,855],"tindex":"8c21aad6-13ab-11e5-85ec-5dcba670838d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[355,356,357],"tindex":"8c21aad7-13ab-11e5-85ec-0d2a0ee38c20","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[856,730],"tindex":"8c21d1e8-13ab-11e5-85ec-a55954a75f40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1220","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[333,340,336,337,338,339,341],"tindex":"8c21d1e9-13ab-11e5-85ec-a90aeeb2eef2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[857],"tindex":"8c21d1ea-13ab-11e5-85ec-ff75b78fe510","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll2","list2":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:372","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n        continue;\n    } \n    boolean boolean = false;\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n        if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n            boolean = true;\n            break;\n        } \n    }\n    if (boolean) {\n        continue;\n    } else {\n        return false;\n    }\n}"},"status":-1},{"failures":[858,859,860,861],"tindex":"8c21d1eb-13ab-11e5-85ec-4f85b7cf9552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[788,758,789,862],"tindex":"8c21d1ec-13ab-11e5-85ec-c73d36576e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"key1","this":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[863],"tindex":"8c21d1ed-13ab-11e5-85ec-354d4e0942ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[],"tindex":"8c21d1ee-13ab-11e5-85ec-79219d5dc419","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[790,864,315,317],"tindex":"8c21d1ef-13ab-11e5-85ec-91f1b5863f01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[865,866,791,792],"tindex":"8c21d1f0-13ab-11e5-85ec-11d808e2e7ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[867,868,869,870,871],"tindex":"8c21d1f1-13ab-11e5-85ec-59fa344f4ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891],"tindex":"8c21f902-13ab-11e5-85ec-f7ca47e7e853","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:307","type":"CtIfImpl","sourcecode":"if (null != E) {\n    E[][(int)++] = null;\n    if ((int) >= (int)) {\n        int = 0;\n    } \n    boolean = false;\n} "},"status":-1},{"failures":[892,893,894,895,896,897,898,899,900,901,902],"tindex":"8c21f903-13ab-11e5-85ec-51f36bacd816","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-1},{"failures":[903,904,905,906,907,908,909,910,911,912,913,914],"tindex":"8c21f904-13ab-11e5-85ec-df8f46c7566d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtIfImpl","sourcecode":"if (java.lang.Runnable == null) {\n    throw new java.lang.NullPointerException();\n} "},"variableMap":{"r":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[292,293,294,295,296],"tindex":"8c21f905-13ab-11e5-85ec-91d6f73a69a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"8c21f906-13ab-11e5-85ec-efe593b0a457","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"next","entry":"previous","key2":"key2","previous":"next","hashCode":"index","key3":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[326],"tindex":"8c21f907-13ab-11e5-85ec-2dd96d4c1381","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:195","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    for (final E E : java.util.Collection<E>) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[177,915,916,917,918,919,920,921],"tindex":"8c21f908-13ab-11e5-85ec-a5bf67e13f34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"8c21f909-13ab-11e5-85ec-4d27b7a5fe24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}