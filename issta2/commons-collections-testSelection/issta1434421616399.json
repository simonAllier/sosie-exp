{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":227,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":681,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":13,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":143,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":395,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":746,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":619,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":159,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":650,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":773,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":658,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":774,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":262,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":331,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":554,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.CollectionUtilsTest.get":635,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":265,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":623,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":258,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":253,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":555,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSimpleSerialization":778,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":473,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":588,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":111,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":516,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":250,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":313,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":691,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":794,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":16,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":585,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":631,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":475,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":768,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":337,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":415,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":237,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":65,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":294,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":142,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":545,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":576,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":297,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":574,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":790,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":215,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":629,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":103,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":607,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":636,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":788,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":689,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":476,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":488,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":247,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":500,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":535,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":295,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":526,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":18,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":317,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":546,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":570,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":170,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":289,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":362,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":356,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":108,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":439,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":710,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":512,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":633,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":132,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":359,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":490,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":779,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":263,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":447,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":389,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":601,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":224,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":805,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":673,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":12,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":789,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":21,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":606,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":524,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":377,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":787,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":469,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":630,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":551,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":185,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":552,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":25,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":783,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":580,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":221,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":742,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":121,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":523,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":20,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":602,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":128,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":369,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":644,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":304,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":430,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":195,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":656,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":285,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":494,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":675,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":200,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":660,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":786,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":335,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":739,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":146,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":438,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":443,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":367,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":709,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":685,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":532,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":374,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":89,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":626,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":682,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":98,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":539,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":702,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":671,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":721,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":716,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":212,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":385,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":717,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":261,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":758,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":793,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":755,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":754,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":699,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":751,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":750,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":753,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":752,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":569,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":747,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":749,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":748,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":264,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":592,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":655,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":715,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":803,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":278,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":514,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":543,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":724,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":388,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":738,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":567,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":596,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":809,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":807,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":114,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":58,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":270,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":510,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":791,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":357,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":568,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":322,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":666,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":802,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":801,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":465,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":800,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":730,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":118,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":646,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":180,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":366,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":659,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":208,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":714,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":741,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":464,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":647,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":370,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":421,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":511,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":147,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":728,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":563,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":542,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":319,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":327,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":701,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":333,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":435,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":452,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":560,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":471,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":521,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":440,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":229,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":338,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":123,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":354,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":158,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":113,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":451,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":234,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":731,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":782,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":27,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":91,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":116,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":581,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":434,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":239,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":52,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":458,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":680,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":235,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":189,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":639,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":179,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":719,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":723,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":198,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":23,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":382,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":467,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":133,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":461,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":394,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":204,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":518,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":196,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":612,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":474,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":329,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":453,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":242,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":404,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":243,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":241,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":769,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":145,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":642,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":591,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":804,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":468,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testSimpleSerialization":781,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":517,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":183,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":772,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":188,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":71,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":575,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":176,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":225,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":780,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":119,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":598,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":316,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":352,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":379,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":506,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":632,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":358,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":776,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":637,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":764,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":733,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":124,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":222,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":796,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":628,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":718,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":419,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":695,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":615,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":457,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":307,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":375,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":466,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":525,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":808,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":105,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":589,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":566,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":664,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":734,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":600,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":342,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":622,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":381,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":459,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":169,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":398,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":713,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":472,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":613,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":197,"org.apache.commons.collections4.ListUtilsTest.testSubtract":529,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":587,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":433,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":520,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":708,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":792,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":726,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":455,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":293,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":484,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":417,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":312,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":292,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":697,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":134,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":15,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":722,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":757,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":63,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":784,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":553,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":28,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":811,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":249,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":608,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":700,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":692,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":97,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":201,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":533,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":538,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":462,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":290,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":202,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":687,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":485,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":707,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":684,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":686,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":191,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":266,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":667,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":383,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":531,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":151,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":59,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":638,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":165,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":698,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":423,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":203,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":540,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":593,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":376,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":402,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":315,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":759,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":481,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":442,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":397,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":578,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":303,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":210,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":497,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":482,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":690,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":737,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":173,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":676,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":336,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":391,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":586,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":346,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":409,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":407,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":444,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":770,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":662,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":216,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":310,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":627,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":157,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":351,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":711,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":663,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":705,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":653,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":340,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":99,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":162,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":771,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":139,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":767,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":268,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":745,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":428,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":255,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":380,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":765,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":493,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":115,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":582,"org.apache.commons.collections4.map.SingletonMapTest.testSimpleSerialization":777,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":277,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":528,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":795,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":683,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":248,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":178,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":810,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":652,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":763,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":573,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":740,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":785,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":797,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":798,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":54,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":238,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":556,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":665,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":117,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":460,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":604,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":806,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":761,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":597,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":446,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":257,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":41,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":365,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":164,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":207,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":562,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":583,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":288,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":549,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":743,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":725,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":46,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":96,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":648,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":594,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":296,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":704,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":564,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":332,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":744,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":87,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":330,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":131,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":412,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":368,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":286,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":156,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSimpleSerialization":775},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"288f0de7-13cf-11e5-a415-f555ed7c8e49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-1},{"failures":[10,11,12,13],"tindex":"288f5c08-13cf-11e5-a415-058e32ef2b9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[14,15,16,17],"tindex":"288f5c09-13cf-11e5-a415-df5d66ded026","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"288f831a-13cf-11e5-a415-2d4b0e7fdb5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:58","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSet<E>(java.util.Set<? extends E>)"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"288f831b-13cf-11e5-a415-2f88245a7609","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"288f831c-13cf-11e5-a415-7334b4aa2266","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"288f831d-13cf-11e5-a415-c5f4fde2d8b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,0,40,1,3,7,8,41,42,43,44,45,46,47,48,49],"tindex":"288f831e-13cf-11e5-a415-cbe3bb41ed55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[50,51],"tindex":"288f831f-13cf-11e5-a415-45ca848d0849","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"288faa30-13cf-11e5-a415-73a54fb4f64a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"288faa31-13cf-11e5-a415-59328021e5e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"newCapacity","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":0},{"failures":[52],"tindex":"288faa32-13cf-11e5-a415-bd41fc10c500","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends T> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(java.util.Collection<? extends T>));\n    return java.util.Collection<T>;\n} "},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"288faa33-13cf-11e5-a415-c12bc7977fdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"288fd144-13cf-11e5-a415-6dd4dfc97824","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"288fd145-13cf-11e5-a415-636abd60828c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"288fd146-13cf-11e5-a415-d3bc1ca04c30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[],"tindex":"28924247-13cf-11e5-a415-e9750b57b5f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"entry","entry":"entry","key2":"key1","key5":"key1","hashCode":"hashCode","key3":"key1","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"28926958-13cf-11e5-a415-554cd6fa87a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-2},{"failures":[],"tindex":"28926959-13cf-11e5-a415-010a252ef724","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"2892695a-13cf-11e5-a415-5f41c1d413f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2892695b-13cf-11e5-a415-1dc5d9b6dd02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"2892695c-13cf-11e5-a415-e758ce2fc10a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"2892695d-13cf-11e5-a415-cd73e75648e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,10,154,155,156,11,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,12,188,189,190,13,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"tindex":"2892695e-13cf-11e5-a415-bd42a02177e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[206,207,215,208,209,210,216,211,212,213,214,217],"tindex":"2892906f-13cf-11e5-a415-77023871c38a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"28929070-13cf-11e5-a415-07f49ca97a41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"start","current":"predecessor","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[31,218,32,219,220,221,222,223,224,225,226,227,228,229,230,231,232,33,34,233,35,36,37,234,38,39,235,0,236,237,40,1,238,239,240,241,242,243,244,245,246,2,247,248,3,4,249,250,5,6,7,8,9,251,252,41,253,42,254,255,256,257,258,259,260,261,262,43,44,263,45,46,47,264,48,49,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"28929071-13cf-11e5-a415-4553a36a8c77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rightChild","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[285,286],"tindex":"28929072-13cf-11e5-a415-036aa7ea7ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[287,288,289,290,291],"tindex":"28929073-13cf-11e5-a415-9f2672459015","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"2892b784-13cf-11e5-a415-b1d1bca75bfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"status":-2},{"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],"tindex":"2892b785-13cf-11e5-a415-b9bf4cd2a2cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"mut"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2892b786-13cf-11e5-a415-8fa7cf08f1dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtIfImpl","sourcecode":"if ((java.util.Queue<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Queue<E>.toArray()));\n    java.util.Queue<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"2892b787-13cf-11e5-a415-8d54601547e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"2892b788-13cf-11e5-a415-539eb1ed861b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"xFormerParent","to":"xFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"2892de99-13cf-11e5-a415-13994ccd2a3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[301,342,359,377,404,433,469,486,509,526],"tindex":"2892de9a-13cf-11e5-a415-47acaa945510","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"2892de9b-13cf-11e5-a415-41151e2dff4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"2892de9c-13cf-11e5-a415-4fcc7057c8b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"size":"h","cSize":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[],"tindex":"2892de9d-13cf-11e5-a415-d1e9d9c7907a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"2892de9e-13cf-11e5-a415-ef7f646285bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:853","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(java.util.Map.Entry<?, ?>.getKey());\n    return (java.util.Map.Entry<K, V> != null) && (java.util.Map.Entry<K, V>.equals(java.util.Map.Entry<?, ?>));\n} "},"variableMap":{"entry":"key","parent":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"2892de9f-13cf-11e5-a415-8df6be947719","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[],"tindex":"2892dea0-13cf-11e5-a415-c5952d660dbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593],"tindex":"289305b1-13cf-11e5-a415-55ab4e7571be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"bound","index":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[594,595],"tindex":"289305b2-13cf-11e5-a415-27ceece1fa72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[126,127,128,129,130,131,132,596,133,134,135,136,597,598,138,139,140,141,142,143,144,599,145,146,147,148,600,601,150,151,152,153,10,154,155,602,156,11,157,158,603,604,160,161,162,163,164,165,166,605,167,168,169,170,606,607,172,173,174,175,176,177,178,608,179,180,181,182,609,610,184,185,186,187,12,188,189,611,190,13,191,192,612,613,194,195,196,197,198,199,200,614,201,202,203,204,615,616,206,207,208,209,210,617,211,212,213,214],"tindex":"289305b3-13cf-11e5-a415-91b37b12c5dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"289305b4-13cf-11e5-a415-b99d38e75315","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"variableMap":{"childValue":"key1","out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[33,34,233,35,36,37,234,39,0,40,1,618,43,44,45,46,47,264,49],"tindex":"289305b5-13cf-11e5-a415-d1ee43fb801c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"28932cc6-13cf-11e5-a415-29a93b1b7a4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:554","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[292,293,304,295,296,297,298,299,300,301,302,303,294,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,345,336,337,338,339,340,341,342,343,344,335,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,371,372,373,374,375,376,377,378,379,370,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,407,398,399,400,401,402,403,404,405,406,397,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,436,427,428,429,430,431,432,433,434,435,426,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,472,463,464,465,466,467,468,469,470,471,462,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,512,503,504,505,506,507,508,509,510,511,502,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536],"tindex":"28932cc7-13cf-11e5-a415-f1fecb64a664","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"mut"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634],"tindex":"28932cc8-13cf-11e5-a415-c390b7dc99ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"previous","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[635,636,637,638,639],"tindex":"28932cc9-13cf-11e5-a415-df273ef846aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"status":-1},{"failures":[287,288,289,640,290,291],"tindex":"28932cca-13cf-11e5-a415-f396f641f979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"d","index":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[641,642],"tindex":"28932ccb-13cf-11e5-a415-1593dd1f5a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"289353dc-13cf-11e5-a415-1101dbc1306b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[643,644,50,51,645],"tindex":"289353dd-13cf-11e5-a415-8d46d18d4362","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"289353de-13cf-11e5-a415-4309b965fb47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[646,647],"tindex":"289353df-13cf-11e5-a415-534b49782c05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[],"tindex":"289353e0-13cf-11e5-a415-5b961ebd95ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"289353e1-13cf-11e5-a415-479d33d8daee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-2},{"failures":[648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727],"tindex":"289353e2-13cf-11e5-a415-abc4f5daa055","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"289353e3-13cf-11e5-a415-99ddc138b9f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-2},{"failures":[728,729,730],"tindex":"289353e4-13cf-11e5-a415-f55fd6ad1ad2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[648,653,731,695,724],"tindex":"289353e5-13cf-11e5-a415-e96929e1f6ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[732,733,734,55,60,735,736,737,738,739,740,741],"tindex":"28937af6-13cf-11e5-a415-bb0d57a6a641","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[742,743,744,745,746],"tindex":"28937af7-13cf-11e5-a415-d333e9a4622c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-1},{"failures":[747,748,749,750,751,752,753,754,755,756,757],"tindex":"28937af8-13cf-11e5-a415-c1e4ce809656","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"28937af9-13cf-11e5-a415-f13726290e0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"28937afa-13cf-11e5-a415-eb6bfdc9b36e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[758,759],"tindex":"28937afb-13cf-11e5-a415-4b29c4442a53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"28937afc-13cf-11e5-a415-1f903931776e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[760,761,762,763],"tindex":"28937afd-13cf-11e5-a415-d73825310018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[764],"tindex":"28937afe-13cf-11e5-a415-4536902c593d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"28937aff-13cf-11e5-a415-8d32f53c93ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2893a210-13cf-11e5-a415-73ee8717a4fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"2893a211-13cf-11e5-a415-d9f41e6d34e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2893a212-13cf-11e5-a415-6b19b2c210d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:103","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"2893a213-13cf-11e5-a415-2df19c8bb4f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[287,288,289,640,290,291],"tindex":"2893a214-13cf-11e5-a415-cd0c74d82f67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[120],"tindex":"2893a215-13cf-11e5-a415-2f9b07a0db5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-1},{"failures":[760,761,762,765,766,763,767,768,769,770,771,772],"tindex":"2893a216-13cf-11e5-a415-1b8fe461b41b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"2893a217-13cf-11e5-a415-551a7cb5041f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[773],"tindex":"2893a218-13cf-11e5-a415-8b4b053a1f4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[774,775,776,777,778,779,780,781],"tindex":"2893a219-13cf-11e5-a415-cf39c684fa7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:135","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"2893a21a-13cf-11e5-a415-87d89be9f62d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"2893c92b-13cf-11e5-a415-df739909aa75","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"2893c92c-13cf-11e5-a415-171330058e5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[70,75,77,78,79,80,81,82,83,86,88,89],"tindex":"2893c92d-13cf-11e5-a415-4545b63eb34e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"nextIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2893c92e-13cf-11e5-a415-1bd28df6e404","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"2893c92f-13cf-11e5-a415-7d2df2501a55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[31,218,32,219,220,221,222,223,224,225,226,227,228,229,230,231,232,33,34,233,35,36,37,234,38,39,235,0,236,237,40,1,238,239,240,241,242,243,244,245,246,2,247,248,3,4,249,250,5,6,7,8,9,252,251,41,253,42,254,255,256,257,258,259,260,261,262,43,44,263,45,46,47,264,48,49,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"2893c930-13cf-11e5-a415-9b7ba17612a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node","replacement":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"2893c931-13cf-11e5-a415-0b66e5d7bddb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[],"tindex":"2893c932-13cf-11e5-a415-99287151509f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"childValue","defaultValue":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-2},{"failures":[619,782,783,620,784,785,786,787,788,621,622,789,623,624,625,790,626,627,791,628,792,793,629,630,794,795,796,797,798,799,800,801,802,803,804,805,631,806,807,808,809,810,632,633,811,634],"tindex":"2893c933-13cf-11e5-a415-85db467ecc88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"2893c934-13cf-11e5-a415-a7bf7debe005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1020","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,27,29,30],"tindex":"2893f045-13cf-11e5-a415-bf1f65a3dfad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[307,320,322,348,361,368,383,396,410,423,439,452,459,475,488,490,515,528],"tindex":"2893f046-13cf-11e5-a415-d3f54eee32e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[],"tindex":"2893f047-13cf-11e5-a415-29fefdbfac96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"2893f048-13cf-11e5-a415-bfef6020ad66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:186","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"variableMap":{"orderingBits":"key4","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"2893f049-13cf-11e5-a415-47a46ef89cc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[287,288,289,640,290,291],"tindex":"2893f04a-13cf-11e5-a415-3521dc58b3d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"d","d":"end2","vDown":"vUp","delta":"offset","end2":"end1","this":"this","i":"end1","end1":"end1","k":"delta","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}