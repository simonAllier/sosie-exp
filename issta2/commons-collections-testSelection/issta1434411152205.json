{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":1041,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":358,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":824,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":825,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":631,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":869,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":600,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":722,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":75,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":121,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":922,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":1042,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":564,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":791,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":981,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":446,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":902,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":624,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":566,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":1026,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":863,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":215,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":661,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":728,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":493,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":129,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":511,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":895,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":525,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":345,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":49,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":701,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":1027,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":756,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":973,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":1083,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":310,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":1020,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":667,"org.apache.commons.collections4.CollectionUtilsTest.select":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":862,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":285,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":1003,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":604,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":258,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":455,"org.apache.commons.collections4.ListUtilsTest.testEquals":918,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":944,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":368,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":652,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":794,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":635,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":562,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":625,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":1017,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":182,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":1072,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":178,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":792,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":883,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":497,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":738,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":543,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":739,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":113,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":247,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":870,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":935,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":321,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":936,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":911,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":721,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":1004,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":1009,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":627,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":465,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":239,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":994,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":89,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":41,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":433,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":1084,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":637,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":890,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":207,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":830,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":800,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":956,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":363,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":854,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":1007,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":127,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":579,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":694,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":634,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":972,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":779,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":786,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":780,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":781,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":930,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":366,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":195,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":1093,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":315,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":306,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":699,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":700,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":698,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":957,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":279,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":324,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":668,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":674,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":762,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":171,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":477,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1049,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":528,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":576,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":1064,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":545,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":755,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":519,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":2,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":295,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":435,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":262,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":1005,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":990,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":839,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":1091,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":72,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":252,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":775,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":601,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":132,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":965,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":978,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":923,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":513,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":1082,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":829,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":859,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":141,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":951,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":648,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":380,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":278,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":491,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":451,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":893,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":799,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":319,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":709,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":974,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":500,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":889,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":237,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":921,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":364,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":915,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":8,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":120,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":748,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":632,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":803,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":1039,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":225,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":822,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":203,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":693,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":594,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":831,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":777,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":1040,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":946,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":292,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":472,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":471,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":470,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":705,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":101,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":314,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":860,"org.apache.commons.collections4.map.LRUMapTest.testReset":437,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":305,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":992,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":554,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":256,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":963,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":795,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":1090,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":1024,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":591,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":550,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":170,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":861,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":1036,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":587,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":675,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":840,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":660,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":827,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":441,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":291,"org.apache.commons.collections4.map.LinkedMapTest.testReset":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":788,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":1051,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":1052,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":456,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":1050,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":691,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":98,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":790,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":880,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":332,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":888,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":343,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":857,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":914,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":246,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":128,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":539,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":833,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":475,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":979,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":165,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":570,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":180,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":615,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":254,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":746,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":185,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":549,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":727,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":140,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":913,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":967,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":267,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":692,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":362,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":347,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":142,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":559,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":424,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":95,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":561,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":894,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":509,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":175,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":761,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":776,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":359,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":575,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":639,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":849,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":851,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":384,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":645,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":853,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":609,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":608,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":610,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":716,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":188,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":586,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":943,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":492,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":749,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":114,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":59,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":989,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":620,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":828,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":125,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":577,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":1046,"org.apache.commons.collections4.ListUtilsTest.testSelect":43,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":982,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":486,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":507,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":841,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":773,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":927,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":488,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":487,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":796,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":137,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":281,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":1002,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":733,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":442,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":438,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":395,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":526,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":729,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":115,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":987,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":1006,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":501,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":60,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":659,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":599,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":865,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":673,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":905,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":1089,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":62,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":61,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":276,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":1023,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":553,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":266,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":662,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":988,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":1076,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":650,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":82,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":826,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":1065,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":932,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":429,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":159,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":301,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":837,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":547,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":797,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":687,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":966,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":209,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":745,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":419,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":910,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":638,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":665,"org.apache.commons.collections4.map.LRUMapTest.testLRU":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":105,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":232,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":891,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":277,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":970,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":730,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":711,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":984,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":802,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":1001,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":412,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":903,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":88,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":263,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":939,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":410,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":466,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":855,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":172,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":801,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":155,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":1032,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":307,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":1080,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":290,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":370,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":953,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":719,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":842,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":1016,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":941,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":464,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":809,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":907,"org.apache.commons.collections4.map.Flat3MapTest.testToString":1057,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":676,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":196,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":811,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":971,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":778,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":864,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":83,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":527,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":401,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":403,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":690,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":747,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":77,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":474,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":1043,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":1077,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":1067,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":785,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":744,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":69,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":798,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":741,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":884,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":707,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":1081,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":896,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":835,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":1013,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":518,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":567,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":340,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":357,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":592,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":596,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":685,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":1047,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":390,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":1048,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":542,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":919,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":107,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":858,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":303,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":425,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":282,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":502,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":948,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":1022,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":552,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":540,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":311,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":90,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":335,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":382,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":555,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":242,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":714,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":938,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":51,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":52,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":991,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":50,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":218,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":934,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":688,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":479,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":725,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":823,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":431,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":642,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":996,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":304,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":899,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":202,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":812,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":286,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":702,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":671,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":664,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":595,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":876,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":995,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":408,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":886,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":681,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":916,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":45,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":838,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":261,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":268,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":887,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":194,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":103,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":269,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":672,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":954,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":1038,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":1062,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":782,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":852,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":597,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":871,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":712,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":784,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":783,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":416,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":503,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":404,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":751,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":444,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":606,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":843,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":962,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":130,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":1037,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":32,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":169,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":1060,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":389,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":167,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":228,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":1069,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":250,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":99,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":495,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":832,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":1054,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":760,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":1055,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":28,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":400,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":856,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":1021,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":986,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":844,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":1087,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":86,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":696,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":695,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":937,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":181,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":1053,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":251,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":697,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":940,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":516,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":515,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":341,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":774,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":205,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":383,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":1070,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":1086,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":1058,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":308,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":482,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":161,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":617,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":726,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":607,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":649,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":174,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":445,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":969,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":541,"org.apache.commons.collections4.ListUtilsTest.testSubtract":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":522,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":1019,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":134,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":950,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":289,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":742,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":16,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":1092,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":427,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":378,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":874,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":27,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":926,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":758,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":235,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":872,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":873,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":322,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":257,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":885,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":117,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":234,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":933,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":1061,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":374,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":814,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":504,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":724,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":3,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":1033,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":393,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":377,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":868,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":248,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":917,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":947,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":313,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":1025,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":1044,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":815,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":813,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":684,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":1056,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":1012,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":386,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":616,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":929,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":1068,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":928,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":848,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":533,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":546,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":348,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":998,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":960,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":309,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":74,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":548,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":273,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":771,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":975,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":534,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":222,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":1029,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":192,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":713,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":949,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":361,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":613,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":414,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":605,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":612,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":977,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":611,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":1000,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":521,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":603,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":1075,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":536,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":706,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":1031,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":770,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":190,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":108,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":163,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":173,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":897,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":750,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":563,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":346,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":450,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":1059,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":906,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":656,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":657,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":658,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":881,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":793,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":766,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":375,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":845,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":231,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":806,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":942,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":405,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":551,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":952,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":1078,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":1030,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":33,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":1079,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":1071,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":999,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":983,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":100,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":460,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":483,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":208,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":320,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":804,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":490,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":214,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":732,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":1011,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":904,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":478,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":640,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":143,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":168,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":158,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":959,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":805,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":882,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":367,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":678,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":327,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":961,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":118,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":1018,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":415,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":867,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":243,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":216,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":148,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":641,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":1088,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":275,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":255,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":193,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":462,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":743,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":381,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":920,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":385,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":680,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":179,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":850,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":763,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":718,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":333,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":964,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":931,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":925,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":351,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":924,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":219,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":912,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":968,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":908,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":909,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":626,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":772,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":821,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":820,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":157,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":131,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":997,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":104,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":807,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":877,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":879,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":164,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":878,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":449,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":629,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":663,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":628,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":689,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":834,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":1014,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":124,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":189,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":1085,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":294,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":683,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":945,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":1035,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":265,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":535,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":524,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":1066,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":955,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":993,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":654,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":531,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":653,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":734,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":753,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":1073,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":334,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":898,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":901,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":1028,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":11,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":139,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":836,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":342,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":646,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":764,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":356,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":150,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":1045,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":1074,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":1010,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":34,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":765,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":636,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":1034,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":633,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":644,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":1015,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":71,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":1008,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":426,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":817,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":816,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":396,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":439,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":875,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":846,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":39,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":847,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":371,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":754,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":467,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":980,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":468,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":985,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":93,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":892,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":91,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":819,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":818,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":737,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":593,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":499,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":808,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":221,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":428,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":810,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":1063,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":958,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":537,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":331,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":336,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":976,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":457},"transformations":[{"failures":[],"tindex":"cb6b7184-13b6-11e5-af32-87fba03c22f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"cb6cf825-13b6-11e5-af32-8f63cb72ea51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"cb6cf826-13b6-11e5-af32-f370563339ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,0,30,1,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"cb6cf827-13b6-11e5-af32-d36d5d664f8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"rval","dataElement":"dataElement","child":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[16,17,18,19,4,5,6,7,8,9,10,11,12,13,14,15,20],"tindex":"cb6cf828-13b6-11e5-af32-43de066c9698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"cb6e0999-13b6-11e5-af32-873c507f2847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"key2","defaultValue":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"cb6e099a-13b6-11e5-af32-493472b1dc7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"previous","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[43,44],"tindex":"cb6e30ab-13b6-11e5-af32-95cd710786de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"cb6e30ac-13b6-11e5-af32-63618addc690","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[21,22,45,46,47,48,49,23,24,25,26,27,28,29,0,30,1,50,51,52,53,54,55,31,56,32,33,57,34,35,58,59,36,37,38,39,40,41,42,60,61,62,63,64,65,66,67,68],"tindex":"cb6e57bd-13b6-11e5-af32-d95fbaa7c79c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"cb6ea5de-13b6-11e5-af32-4d51ece85c1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"left","start":"current","this":"this","predecessor":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"cb6ea5df-13b6-11e5-af32-1f0a21cefbe7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[69],"tindex":"cb6eccf0-13b6-11e5-af32-db025302256c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[70,71,72,73,74,75],"tindex":"cb6eccf1-13b6-11e5-af32-3b906a207dc8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start1","n":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"cb6eccf2-13b6-11e5-af32-1da147ee9a77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"variableMap":{"comparatorIndex":"count","orderingBits":"element","retval":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:622","type":"CtIfImpl","sourcecode":"if (O.equals(java.lang.Object)) {\n    int++;\n} "},"status":-2},{"failures":[76,77,78,79],"tindex":"cb6ef403-13b6-11e5-af32-259b44c582ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:672","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"cb6ef404-13b6-11e5-af32-6789a68daabe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"cb6ef405-13b6-11e5-af32-5938d2ecec31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"from","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"cb6ef406-13b6-11e5-af32-b3301b586904","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[85,120,153,229,262,342],"tindex":"cb6f1b17-13b6-11e5-af32-4372928e2892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-1},{"failures":[],"tindex":"cb6f4228-13b6-11e5-af32-6f4b3483d2c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"cb6f4229-13b6-11e5-af32-e1950a00900c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,76,77,79,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796],"tindex":"cb6f693a-13b6-11e5-af32-171a8a107787","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[797,798,799,800,801,802],"tindex":"cb6f693b-13b6-11e5-af32-9b13dfe20724","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"comparatorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[],"tindex":"cb6f693c-13b6-11e5-af32-fb8efaf5e0a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"cb6f693d-13b6-11e5-af32-db3eba1c2d61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[803],"tindex":"cb6f904e-13b6-11e5-af32-ef10b8cd7d3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[0,1,2,3],"tindex":"cb6f904f-13b6-11e5-af32-792e7df77ce9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"x","node":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[804,805,806,807,808,809,810,811,812,813,814,815],"tindex":"cb6fb760-13b6-11e5-af32-a9fb1c65bfbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[498,504,531,542,548,565,639,645,662,681,687,704,721,727,744,765,771,788],"tindex":"cb6fb761-13b6-11e5-af32-414dde8fdbac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[816,817,818,819,820,821,822,823,824,825,826,827,828,828,829,830,830,831,832,833],"tindex":"cb6fb762-13b6-11e5-af32-afdc84263334","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"cb6fde73-13b6-11e5-af32-ef21075a0039","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-2},{"failures":[],"tindex":"cb6fde74-13b6-11e5-af32-49bf04d0e033","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:285","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906],"tindex":"cb6fde75-13b6-11e5-af32-e337620cc5c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[907,908,909,910,911,912,913,914,915,916,917],"tindex":"cb700586-13b6-11e5-af32-25c1607d2773","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"hash","listSize":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"cb700587-13b6-11e5-af32-7dbc0efcc2a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"entry":"predecessor","predecessor":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:598","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[918],"tindex":"cb700588-13b6-11e5-af32-a1cfa819c97d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"list2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-1},{"failures":[919],"tindex":"cb700589-13b6-11e5-af32-0bc610004ca1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[70,71,72,73,74,75],"tindex":"cb70058a-13b6-11e5-af32-8de3d914b93a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"i","end2":"i","this":"this","i":"end1","end1":"end1","k":"end1","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"cb70058b-13b6-11e5-af32-37349ee1561f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"cb70058c-13b6-11e5-af32-2b6b7b098ecd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"deletedNode","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"cb70058d-13b6-11e5-af32-1305b9d62494","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[797,800,801,802],"tindex":"cb702c9e-13b6-11e5-af32-59e2ca62c571","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[],"tindex":"cb702c9f-13b6-11e5-af32-6524607acfc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[0,1,920,31,2,56,3,32,33,57],"tindex":"cb702ca0-13b6-11e5-af32-ebb86983e9d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"x","leftChild":"yFormerLeftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"cb7053b1-13b6-11e5-af32-7b1fdc181a5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"cb707ac2-13b6-11e5-af32-116792757ca2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} "},"status":0},{"failures":[80,81,82,83,921,84,85,86,87,922,88,89,90,91,923,92,93,924,99,100,101,102,103,104,105,106,107,108,109,110,111,94,95,96,97,98,122,925,926,112,113,927,114,115,116,117,118,119,120,123,124,121,125,126,928,132,133,134,135,136,137,138,139,140,141,142,143,144,127,128,129,130,131,155,929,930,145,146,931,147,148,149,150,151,152,153,156,157,154,158,159,160,161,932,162,163,164,165,933,166,167,168,169,934,170,171,172,173,935,179,180,181,182,183,184,185,186,187,188,189,190,191,174,175,176,177,178,200,936,937,192,193,938,194,195,196,939,197,198,199,201,202,940,941,208,209,210,211,212,213,214,215,216,217,218,219,220,203,204,205,206,207,231,942,943,221,222,944,223,224,225,226,227,228,229,232,233,230,234,235,945,241,242,243,244,245,246,247,248,249,250,251,252,253,236,237,238,239,240,264,946,947,254,255,948,256,257,258,259,260,261,262,265,266,263,267,949,273,274,275,276,277,278,279,280,281,282,283,284,285,268,269,270,271,272,294,950,951,286,287,952,288,289,290,953,291,292,293,295,296,954,297,955,303,304,305,306,307,308,309,310,311,312,313,314,315,298,299,300,301,302,324,956,957,316,317,958,318,319,320,959,321,322,323,325,326,960,961,962,327,331,963,332,964,965,328,329,330,966,333,967,968,969,334,341,970,342,971,335,336,337,338,339,343,340,344,345,346,347,348,972,349,350,351],"tindex":"cb707ac3-13b6-11e5-af32-eb1275db095a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[973],"tindex":"cb707ac4-13b6-11e5-af32-c1712bc8ded7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[809,810,811,812,813,814,815,804,805,806,807,808],"tindex":"cb707ac5-13b6-11e5-af32-5fc59aa29989","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[400,402,403,404,405,406,974,407,408,409,410,975,411,412,413,414,976,415,416,417,418,419,420,421,977,422,423,424,425,978,426,427,428,429,979,430,431,439,440,432,433,436,485,76,77,79,486,487,488,489,980,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,576,578,581,579,580,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796],"tindex":"cb70a1d6-13b6-11e5-af32-ef1315fc26b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[],"tindex":"cb70eff7-13b6-11e5-af32-ef3dac806d2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:226","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex();\n} "},"status":-2},{"failures":[82,92,107,121,122,126,140,154,155,160,170,173,187,940,200,216,230,231,249,263,264,267,281,954,294,311,960,324,967,331,340,341],"tindex":"cb70eff8-13b6-11e5-af32-831fc54ceb63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[981],"tindex":"cb70eff9-13b6-11e5-af32-835536e3aee2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[],"tindex":"cb70effa-13b6-11e5-af32-6b95a61d4604","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key","entryValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"cb71170b-13b6-11e5-af32-bd859cb5c3ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key2","i":"hashCode","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"cb71170c-13b6-11e5-af32-e9e879ac3036","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.add(this, java.util.List<java.util.Set<E>>, E)"},"status":-2},{"failures":[],"tindex":"cb71170d-13b6-11e5-af32-9d991e84a5eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":0},{"failures":[0,1,920,31,2,56,3,32,33,57],"tindex":"cb713e1e-13b6-11e5-af32-0de9af2086a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"yFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034],"tindex":"cb713e1f-13b6-11e5-af32-a34286ec9de3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"cb713e20-13b6-11e5-af32-8d6e1ebf3000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[352,353,354,355,356,364,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,387,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"cb713e21-13b6-11e5-af32-4178f5ed3f5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cb713e22-13b6-11e5-af32-3f43dbebed5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtIfImpl","sourcecode":"if (java.util.Comparator<? super O> == null) {\n    throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n} "},"status":-2},{"failures":[1035,1036,1037,1038,1039,1040,1041,23,24,1042,25,26,27,1043,29,0,30,1,1044,1045,36,37,38,39,40,1046,42],"tindex":"cb713e23-13b6-11e5-af32-553c47821e35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[1047,1048,628,629,1049,630,1050,1051,1052,1053,1054,1055,1056,1057,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"cb716534-13b6-11e5-af32-e996e86e7aba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"cb716535-13b6-11e5-af32-abea63912231","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[],"tindex":"cb716536-13b6-11e5-af32-3d304db97ce7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:615","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n    if (java.lang.Object == null) {\n        int++;\n    } \n}"},"status":0},{"failures":[],"tindex":"cb716537-13b6-11e5-af32-271c51e3d92a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"cb716538-13b6-11e5-af32-27f3d05aaba0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"node","this":"this","y":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cb71b359-13b6-11e5-af32-672bfd7769c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"value","lengthInBits":"total","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"cb71b35a-13b6-11e5-af32-8f34d5d0f2d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"newCapacity","start":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"cb71b35b-13b6-11e5-af32-8954e08f6df0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"cb71b35c-13b6-11e5-af32-794b288444fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"cb71b35d-13b6-11e5-af32-c7e4d9213c7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"h","buckets":"key2","length":"h","locks":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[1058,1059,1060],"tindex":"cb71b35e-13b6-11e5-af32-030a0faae4ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"cb71b35f-13b6-11e5-af32-a7ced13a528e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:72","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[],"tindex":"cb71b360-13b6-11e5-af32-25b08dbee48a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"cb71da71-13b6-11e5-af32-2733ca225642","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:138","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.lang.Boolean.booleanValue()"},"variableMap":{"b1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:215","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.util.Collection<V>.remove(java.lang.Object)"},"status":-2},{"failures":[834,835,837,838,839,840,841,842,843,844,866,867,868,899,901,902,903,904],"tindex":"cb71da72-13b6-11e5-af32-db13e2875ed8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"cb71da73-13b6-11e5-af32-05120001f71a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"size","start":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"cb720184-13b6-11e5-af32-955d69378733","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cb720185-13b6-11e5-af32-d13b940d3413","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"siblingNode","dataElement":"dataElement","child":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"cb720186-13b6-11e5-af32-134b0520b724","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[976,979,458,503,599,726,770],"tindex":"cb720187-13b6-11e5-af32-5750b6828090","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"cb720188-13b6-11e5-af32-4fb78bda7511","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[1061,361,362,360,356,364,357,358,359,365,366,367,368,369,370,371,372,373,374,1062,375,382,383,384,385,381,377,387,378,379,380,388,389,390,391,392,393,394,395,396,397,1063,398],"tindex":"cb720189-13b6-11e5-af32-032aaadca30c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"cb72018a-13b6-11e5-af32-0389bcd965d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"cb72018b-13b6-11e5-af32-2de807ca755b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()"},"status":-2},{"failures":[0,1,920,2,3],"tindex":"cb72289c-13b6-11e5-af32-954d62eb31dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1073","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[109,110,1064,94,1065,1066,1067,1068],"tindex":"cb72289d-13b6-11e5-af32-95b44d73e198","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[70,71,72,73,74,75],"tindex":"cb72289e-13b6-11e5-af32-0b4f34b60ffb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"i","d":"end2","vDown":"vUp","delta":"start2","end2":"k","this":"this","i":"end2","end1":"end1","k":"delta","start2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[576],"tindex":"cb72289f-13b6-11e5-af32-3b659d6f9cf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"key","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cb7228a0-13b6-11e5-af32-59aedcef8ce3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[1069],"tindex":"cb7228a1-13b6-11e5-af32-3d70482e7f4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"cb7228a2-13b6-11e5-af32-2368ec5ba1bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1267","type":"CtLocalVariableImpl","sourcecode":"final K K = ((K)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"in":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1421","type":"CtLocalVariableImpl","sourcecode":"K K = ((K)(java.io.ObjectInputStream.readObject()))"},"status":0},{"failures":[],"tindex":"cb7228a3-13b6-11e5-af32-a53b66611f7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-2},{"failures":[449,450,452,453,454,457,459,462,463,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,590,591,593,594,595,598,600,603,604],"tindex":"cb7228a4-13b6-11e5-af32-bfac290a0c0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtIfImpl","sourcecode":"if (E == E) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"cb7228a5-13b6-11e5-af32-11512d1131b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"cb72c4e6-13b6-11e5-af32-73aa4d36e756","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}