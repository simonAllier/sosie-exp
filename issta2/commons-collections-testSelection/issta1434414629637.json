{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":465,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":604,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":404,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":434,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":713,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":644,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":761,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":588,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":104,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":736,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":730,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":467,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":47,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":427,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":680,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":740,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":491,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":695,"org.apache.commons.collections4.CollectionUtilsTest.get":60,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":623,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":12,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":498,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":484,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":483,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":611,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":583,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":194,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":406,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":241,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":359,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":90,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":738,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":471,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":664,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":68,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":165,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":331,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":433,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":301,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":741,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":134,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":295,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":580,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":168,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":117,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":559,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":25,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":145,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":575,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":456,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":381,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":626,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":83,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":444,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":177,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":562,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":773,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":388,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":726,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":378,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":779,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":371,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":478,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":665,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":316,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":666,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":454,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":758,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":56,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":716,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":470,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":517,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":231,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":34,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":355,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":76,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":556,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":111,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":304,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":11,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":743,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":202,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":373,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":745,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":492,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":485,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":640,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":442,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":543,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":603,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":553,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":249,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":247,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":569,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":399,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":84,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":428,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":17,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":656,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":737,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":281,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":110,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":510,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":516,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":663,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":396,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":635,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":317,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":195,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":264,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":265,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":514,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":360,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":263,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":369,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":784,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":341,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":191,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":382,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":246,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":724,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":515,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":528,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":530,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":529,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":387,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":785,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":617,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":505,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":783,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":16,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":220,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":449,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":660,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":650,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":507,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":550,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":593,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":432,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":536,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":222,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.HashedMapTest.testClone":692,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":77,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":705,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":443,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":533,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":750,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":655,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":746,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":774,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":412,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":81,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":518,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":622,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":235,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":627,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":269,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":711,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":89,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":704,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":703,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":700,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":699,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":702,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":701,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":698,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":697,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":651,"org.apache.commons.collections4.list.TreeListTest.testBug35258":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":493,"org.apache.commons.collections4.map.LinkedMapTest.testClone":689,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":770,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":667,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":318,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":709,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":502,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":727,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":598,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":296,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":561,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":176,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":374,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":98,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":326,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":248,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":172,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":171,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":658,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":31,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":298,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":314,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":609,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":302,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":621,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":645,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":216,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":555,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":752,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":411,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":620,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":125,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":624,"org.apache.commons.collections4.map.LRUMapTest.testLRU":115,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":628,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":439,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":668,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":669,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":771,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":307,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":715,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":670,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":209,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":256,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":349,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":747,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":652,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":323,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":634,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":685,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":38,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":431,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":292,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":457,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":714,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":766,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":114,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":496,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":647,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":767,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":364,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":600,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":325,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":270,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":720,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":691,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":661,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":589,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":358,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":560,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":717,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":257,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":303,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":653,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":345,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":564,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":312,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":55,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":260,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":473,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":417,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":144,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":469,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":401,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":425,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":403,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":385,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":590,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":192,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":508,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":375,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":659,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":755,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":383,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":407,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":595,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":490,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":782,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":629,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":572,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":437,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":230,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":95,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":129,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":768,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":749,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":400,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":337,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":421,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":133,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":380,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":462,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":332,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":402,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":581,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":213,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":199,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":37,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":127,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":320,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":414,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":728,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":393,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":662,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":671,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":577,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":657,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":474,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":267,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":143,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":190,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":321,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":146,"org.apache.commons.collections4.list.TreeListTest.testRemove":776,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":128,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":554,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":637,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":466,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":19,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":234,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":251,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":453,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":731,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":151,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":408,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":525,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":722,"org.apache.commons.collections4.map.LRUMapTest.testClone":688,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":512,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":416,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":384,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":708,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":39,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":274,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":509,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":53,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":240,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":226,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":335,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":687,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":333,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":675,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":334,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":70,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":521,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":531,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":613,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":616,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":549,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":769,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":376,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":436,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":540,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":481,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":108,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":706,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":329,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":82,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":365,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":579,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":424,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":777,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":237,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":725,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":679,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":686,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":527,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":184,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":389,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":141,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":760,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":435,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":571,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":207,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":735,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":744,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":459,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":42,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":210,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":219,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":103,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":405,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":495,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":548,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":197,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":721,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":346,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":354,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":352,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":673,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":641,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":448,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":586,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":157,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":300,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":748,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":451,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":764,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":633,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":482,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":413,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":58,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":161,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":121,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":271,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":511,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":418,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":612,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":570,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":328,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":504,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":160,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":648,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":693,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":763,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":203,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":475,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":258,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":719,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":113,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":420,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":733,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":607,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":294,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":322,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":445,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":778,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":430,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":632,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":310,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":723,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":497,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":236,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":772,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":486,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":283,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":338,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":765,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":340,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":339,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":742,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":52,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":57,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":690,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":261,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":546,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":285,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":311,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":106,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":739,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":532,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":707,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":506,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":254,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":147,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":423,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":610,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":101,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":734,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":238,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":289,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":28,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":120,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":93,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":472,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":446,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":97,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":286,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":288,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":139,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":379,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":447,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":732,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":410,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":250,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":710,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":756,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":225,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":116,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":166,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":183,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":757,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":762,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":558,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":545,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":573,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":118,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":587,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":398,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":372,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":537,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":649,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":602,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":245,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":361},"transformations":[{"failures":[],"tindex":"e41e4124-13be-11e5-8f03-95ef8b33b282","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:188","type":"CtLocalVariableImpl","sourcecode":"E E = java.util.Iterator<? extends E>.next()"},"variableMap":{"currentIterator":"iter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1742","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[],"tindex":"e41e4125-13be-11e5-8f03-b5c155eed24d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:243","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e41e4126-13be-11e5-8f03-c58a87d05d6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":0},{"failures":[0,1,2,3],"tindex":"e41e6837-13be-11e5-8f03-7b6a56a0b104","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"h","start":"h","end":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:368","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[],"tindex":"e41e6838-13be-11e5-8f03-858db3ee5cbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1221","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[4,5,6,7],"tindex":"e41e6839-13be-11e5-8f03-6d44fef83543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[8,9,10,11],"tindex":"e41e683a-13be-11e5-8f03-6bf9767b5c0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[12,13],"tindex":"e41e683b-13be-11e5-8f03-fbbade58bfd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"e41e683c-13be-11e5-8f03-5b652456e66a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"e41eb65d-13be-11e5-8f03-efff832f553b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"e41eb65e-13be-11e5-8f03-bf0994478050","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"e41eb65f-13be-11e5-8f03-094e21be68a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"newCapacity","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[60,61,62],"tindex":"e41eb660-13be-11e5-8f03-1fa4bbcbf9ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"e41eb661-13be-11e5-8f03-41d87bf7e6a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[14,80,81,82,15,16,17,83,18,19,84,20,21,22,85,86,23,87,24,88,89,25,26,90,91,92,27,28,93,29,30,31,94,95,96,32,97,98,99,100,101,33,34,102,103,104],"tindex":"e41edd72-13be-11e5-8f03-1f4fb8040d53","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"e41edd73-13be-11e5-8f03-7957964c1ccd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e41edd74-13be-11e5-8f03-d995dfd2cdb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:606","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"e41edd75-13be-11e5-8f03-a5dea0f06f51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:788","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()"},"status":-2},{"failures":[],"tindex":"e41f0486-13be-11e5-8f03-9f27f3b4cc1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"variableMap":{"out":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"e41f0487-13be-11e5-8f03-91ef0f5e9dda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e41f0488-13be-11e5-8f03-adf41246a1ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"e41f0489-13be-11e5-8f03-9b0d6bca50d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2},{"failures":[],"tindex":"e41f048a-13be-11e5-8f03-f93904b54f8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[105,106,107,108,109,110,111,112,113,114],"tindex":"e41f048b-13be-11e5-8f03-436c19da8ea4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[115,116,117,12,118],"tindex":"e41f048c-13be-11e5-8f03-0fa68e88319a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"e41f2b9d-13be-11e5-8f03-f3d264e422ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:184","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"isLocked":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"e41f2b9e-13be-11e5-8f03-3961952d0d72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[179,43,46,47,180,181],"tindex":"e41f2b9f-13be-11e5-8f03-d970948ef87d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e41f2ba0-13be-11e5-8f03-51c0e72f8411","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","this":"this","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[182],"tindex":"e41f2ba1-13be-11e5-8f03-e552c4eea91f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object));\n    return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n} "},"status":-1},{"failures":[64,183,184,185,186,187,188,189,190,191,192,193,194,67,68,70,71,72,73,75,76,77],"tindex":"e41f52b2-13be-11e5-8f03-25c4163a04f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:148","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"end":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:441","type":"CtOperatorAssignmentImpl","sourcecode":"int += E == null ? 0 : E.hashCode()"},"status":-1},{"failures":[195,196],"tindex":"e41f52b3-13be-11e5-8f03-a97f768eb1d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"tindex":"e41f52b4-13be-11e5-8f03-573ccb26b5af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"e41f52b5-13be-11e5-8f03-9b5d885d11ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:205","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E)"},"status":-1},{"failures":[26,29,30,94,32,33,34,259,179,43,46,47,260,49,50,51],"tindex":"e41f52b6-13be-11e5-8f03-4be6143fea94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[261,262,263,264,265,266,267,268,269],"tindex":"e41f52b7-13be-11e5-8f03-9761c7008e3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e41f52b8-13be-11e5-8f03-452299794e9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[],"tindex":"e41f52b9-13be-11e5-8f03-7161791efabf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":0},{"failures":[],"tindex":"e41f79ca-13be-11e5-8f03-195cb39e72a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"cmp","newCapacity":"cmp","proposedCapacity":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[270,271,272],"tindex":"e41f79cb-13be-11e5-8f03-b96a5341796d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[179],"tindex":"e41f79cc-13be-11e5-8f03-1996d115c358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[273,274,275,276,277,278,279,280,281,282],"tindex":"e41f79cd-13be-11e5-8f03-d996522de2f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[],"tindex":"e41f79ce-13be-11e5-8f03-53bc8c5ab578","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":0},{"failures":[],"tindex":"e41f79cf-13be-11e5-8f03-4f5dd637b206","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:794","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.mapIterator()"},"status":-2},{"failures":[283,284,285],"tindex":"e41f79d0-13be-11e5-8f03-9bf7f23f3f5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e41f79d1-13be-11e5-8f03-33d4b05caecf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[286,287,288,289],"tindex":"e41f79d2-13be-11e5-8f03-a5617c32e8bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"e41fa0e3-13be-11e5-8f03-ebbdba38f13e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"size","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[273,290,274,291,275,292,293,276,277,294,278,295,279,296,297,280,281,298,299,282],"tindex":"e41fa0e4-13be-11e5-8f03-3f53a3215a2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[300,301],"tindex":"e41fa0e5-13be-11e5-8f03-3505fa9b6612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"status":-1},{"failures":[],"tindex":"e41fa0e6-13be-11e5-8f03-6f61a57e95e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"e41fa0e7-13be-11e5-8f03-7b30bfda24e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e41fa0e8-13be-11e5-8f03-67bc4dbf3b40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"e41fc7f9-13be-11e5-8f03-8fc4da494801","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"e41fc7fa-13be-11e5-8f03-6fe86cb51c22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"child","current":"child","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[302,303,304,305,306,307],"tindex":"e41fc7fb-13be-11e5-8f03-e10c2bffa913","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[],"tindex":"e41fc7fc-13be-11e5-8f03-c513b4d5c8c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":0},{"failures":[308,309],"tindex":"e41fc7fd-13be-11e5-8f03-c94b1c4da692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[310],"tindex":"e41fc7fe-13be-11e5-8f03-c797a0e2f1d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.Error()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"e41fc7ff-13be-11e5-8f03-eb7100041ba1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"e41fc800-13be-11e5-8f03-d37c9db89bbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"e41fef11-13be-11e5-8f03-2d81fea8d8bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-2},{"failures":[],"tindex":"e41fef12-13be-11e5-8f03-9912ae1ece2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"rval","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[311,312,313,314,315,316,317,318,319,320,321,63,64,183,184,185,322,186,187,188,189,323,190,191,192,193,65,324,194,66,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,67,68,69,70,71,343,72,73,344,74,75,76,77,78,345,346,79,129,347,348,130,349,350,351,352],"tindex":"e41fef13-13be-11e5-8f03-c3d88d634112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"isLocked","nextCalled":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"e4208b54-13be-11e5-8f03-1f10447c1c89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hash","proposedCapacity":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":0},{"failures":[273,290,274,291,275,292,293,276,277,294,278,295,279,296,297,280,281,298,299,282],"tindex":"e4208b55-13be-11e5-8f03-efa64906acbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,269,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456],"tindex":"e4208b56-13be-11e5-8f03-e7f17501a33a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:329","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<java.util.Map.Entry<K, V>>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"e4208b57-13be-11e5-8f03-19776ac9ed03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[131,457,132,458,459,460,461,462,463,133,464,465,134,135,136,137,466,138,139,467,140,141,142,468,143,144,469,145,470,471,146,147,472,473,474,148,149,150,151,152,153,475,476,477,154,478,479,480,155,481,156,157,158,482,483,159,484,160,485,486,487,488,489,490,161,162,491,163,164,492,165,166,167,493,168,169,494,495,496,497,170,171,172,173,498,499,500,174,501,502,503,175,504,176,177,178],"tindex":"e420b268-13be-11e5-8f03-012849ec065a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"e420b269-13be-11e5-8f03-a77d861bdc5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e420b26a-13be-11e5-8f03-810b414ed58f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"left","right":"right","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e420b26b-13be-11e5-8f03-89452c5593c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>.size()) - 1"},"status":-2},{"failures":[],"tindex":"e420b26c-13be-11e5-8f03-f9bc4c6849e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-3},{"failures":[269],"tindex":"e420d97d-13be-11e5-8f03-7fe48c20c5ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:274","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682],"tindex":"e420d97e-13be-11e5-8f03-0df09238a81a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[683],"tindex":"e420d97f-13be-11e5-8f03-85f6f4debddf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1611","type":"CtIfImpl","sourcecode":"if ((O == null) || (!(O.equals(O)))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[],"tindex":"e420d980-13be-11e5-8f03-09cf00db79c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-2},{"failures":[684],"tindex":"e420d981-13be-11e5-8f03-e3933ad51f7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e420d982-13be-11e5-8f03-09c3ab0648fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":0},{"failures":[12,685,686,13,687],"tindex":"e420d983-13be-11e5-8f03-7bbdab1b5bb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"proposedCapacity","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[688,363,377,689,405,690,415,691,692,439,693,694,453],"tindex":"e420d984-13be-11e5-8f03-dff8e73bdcce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725],"tindex":"e420d985-13be-11e5-8f03-a98d283e82cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"e4210096-13be-11e5-8f03-19e8d037df01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"y","dataElement":"dataElement","child":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"e4210097-13be-11e5-8f03-a16eabcc196c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:418","type":"CtReturnImpl","sourcecode":"return super.keySet()"},"status":-2},{"failures":[],"tindex":"e4210098-13be-11e5-8f03-7f37baaa1798","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[726,283,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,285,752,753,754],"tindex":"e4210099-13be-11e5-8f03-01b648e5544c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.NullPointerException(\"List must not be null\");\n} "},"variableMap":{"list":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[755],"tindex":"e421009a-13be-11e5-8f03-3568d95b1a73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:77","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : java.util.Collection<org.apache.commons.collections4.Closure<E>>) {\n    org.apache.commons.collections4.Closure<? super E>[][int++] = org.apache.commons.collections4.Closure<? super E>;\n}"},"status":-1},{"failures":[756,757,758,759,760,761],"tindex":"e421009b-13be-11e5-8f03-c34529fcfd36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"end2","d":"start2","vDown":"vUp","delta":"start1","end2":"start1","this":"this","i":"start2","end1":"start2","k":"delta","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[762,763],"tindex":"e421009c-13be-11e5-8f03-5f2678d3534f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:323","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[],"tindex":"e421009d-13be-11e5-8f03-8ff22831e254","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"e42127ae-13be-11e5-8f03-5963660727b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"existingSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":-2},{"failures":[],"tindex":"e42127af-13be-11e5-8f03-d9e2a9dfbd92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[145,147,154,478,155,481,156,157,158],"tindex":"e42127b0-13be-11e5-8f03-95211385b72b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[764,765,766,767,768,769],"tindex":"e42127b1-13be-11e5-8f03-afc203d8675c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[770,300,771,772],"tindex":"e42127b2-13be-11e5-8f03-7bb9bd581d17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"e42127b3-13be-11e5-8f03-c7b82a5dfb95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[773,774,775],"tindex":"e42127b4-13be-11e5-8f03-49643688dd1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"variableMap":{"hashCode":"i","dataSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:136","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"e4214ec5-13be-11e5-8f03-07a41065f799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[776,777,778,779,780,781,782,783,784,785],"tindex":"e4214ec6-13be-11e5-8f03-efae3578628f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:891","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, org.apache.commons.collections4.list.TreeList.AVLNode<E>)"},"variableMap":{"otherTreeMin":"root","s":"root","maxNode":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}