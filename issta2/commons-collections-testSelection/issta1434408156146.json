{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":783,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":822,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":331,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":177,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":734,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":366,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":577,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":904,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":5,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":12,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":302,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":93,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":649,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":872,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":906,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":815,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":150,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":698,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":418,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":695,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":788,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":502,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":680,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":362,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":753,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":857,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":504,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":786,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":908,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":420,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":540,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":883,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":895,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":682,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":447,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":659,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":475,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":187,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":139,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":567,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":692,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":244,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":508,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":520,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":888,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":664,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":360,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":809,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":881,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":611,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":314,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":743,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":308,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":422,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":237,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":403,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":764,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":868,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":56,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":364,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":467,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":823,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":685,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":480,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":676,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":223,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":224,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":279,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":498,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":779,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":686,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":722,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":322,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":637,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":703,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":780,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":742,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":323,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":281,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":518,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":733,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":564,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":354,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":316,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":514,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":122,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":776,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":388,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":431,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":235,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":533,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":349,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":794,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":169,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":410,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":759,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":85,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":497,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":902,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":847,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":773,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":690,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":384,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":421,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":846,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":521,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":811,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":34,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":820,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":31,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":157,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":706,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":570,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":731,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":313,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":332,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":348,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":771,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":428,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":573,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":834,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":426,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":894,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":596,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":726,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":871,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":125,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":307,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":512,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":866,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":855,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":538,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":882,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":172,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":261,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":411,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":861,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":856,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":503,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":705,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":511,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":325,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":326,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":792,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":124,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":285,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":324,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":549,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":254,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":293,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":378,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":583,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":845,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":622,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":747,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":527,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":136,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":7,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":98,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":631,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":793,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":272,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":55,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":829,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":816,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":148,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":379,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":632,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":14,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":370,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":865,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":123,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":911,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":778,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":456,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":247,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":598,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":606,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":412,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":83,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":831,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":43,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":700,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":243,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":134,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":551,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":535,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":147,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":848,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":875,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":669,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":762,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":807,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":183,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":801,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":202,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":915,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":76,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":795,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":862,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":714,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":109,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":414,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":97,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":373,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":298,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":852,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":383,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":744,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":181,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":658,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":838,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":180,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":440,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":377,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":459,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":566,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":724,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":910,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":880,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":73,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":584,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":382,"org.apache.commons.collections4.list.PredicatedListTest.testObjectHashCodeEqualsContract":839,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":192,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":892,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":283,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":115,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":149,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":112,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":197,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":784,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":869,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":294,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":899,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":897,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":427,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":495,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":803,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":877,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":470,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":546,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":707,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":687,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":873,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":392,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":716,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":626,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":800,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":891,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":890,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":671,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":887,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":713,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":351,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":643,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":772,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":201,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":712,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":715,"org.apache.commons.collections4.map.LRUMapTest.testLRU":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":558,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":665,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":496,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":718,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":248,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":760,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":75,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":547,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":444,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":275,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":594,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":677,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":510,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":61,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":448,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":397,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":858,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":696,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":8,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":162,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":781,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":721,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":711,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":615,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":219,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":912,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":757,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":37,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":860,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":593,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":380,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":623,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":806,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":288,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":290,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":217,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":318,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":107,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":758,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":560,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":854,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":673,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":190,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":668,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":804,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":748,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":827,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":143,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":280,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":291,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":746,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":541,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":681,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":483,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":770,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":617,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":645,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":719,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":523,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":741,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":108,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":644,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":264,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":652,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":761,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":246,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":708,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":791,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":893,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":674,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":473,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":408,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":0,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":506,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":175,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":736,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":844,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":689,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":763,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":297,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":543,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":505,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":466,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":210,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":407,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":491,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":901,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":226,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":620,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":289,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":355,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":666,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":749,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":588,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":84,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":885,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":878,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":204,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":909,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":105,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":633,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":522,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":282,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":805,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":387,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":621,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":531,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":552,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":802,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":186,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":328,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":672,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":260,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":329,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":812,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":898,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":853,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":836,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":18,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":312,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":479,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":729,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":222,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":221,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":327,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":94,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":532,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":870,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":196,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":184,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":413,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":833,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":430,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":276,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":234,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":824,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":90,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":638,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":565,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":385,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":69,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":678,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":627,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":769,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":463,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":913,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":137,"org.apache.commons.collections4.ListUtilsTest.testSubtract":697,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":120,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":592,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":356,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":11,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":82,"org.apache.commons.collections4.list.TreeListTest.testListEquals":371,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":879,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":114,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":517,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":840,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":841,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":693,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":539,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":843,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":563,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":797,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":376,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":604,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":789,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":819,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":798,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":65,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":401,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":768,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":191,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":723,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":80,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":702,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":863,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":683,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":129,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":562,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":903,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":825,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":393,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":400,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":751,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":301,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":101,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":416,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":859,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":814,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":851,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":140,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":96,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":701,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":679,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":365,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":311,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":141,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":740,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":657,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":835,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":694,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":775,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":41,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":40,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":905,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":461,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":777,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":561,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":699,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":732,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":208,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":439,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":239,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":837,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":68,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":850,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":278,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":394,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":755,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":553,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":642,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":232,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":750,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":691,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":404,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":605,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":648,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":727,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":738,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":171,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":478,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":526,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":907,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":203,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":601,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":634,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":625,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":405,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":818,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":442,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":720,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":735,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":58,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":374,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":213,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":30,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":578,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":765,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":446,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":457,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":524,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":650,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":607,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":647,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":265,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":754,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":534,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":334,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":808,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":494,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":876,"org.apache.commons.collections4.set.CompositeSetTest.testContains":849,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":817,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":100,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":580,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":810,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":86,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":341,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":214,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":785,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":450,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":667,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":745,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":304,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":267,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":242,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":262,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":728,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":51,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":389,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":790,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":725,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":874,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":799,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":415,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":614,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":587,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":914,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":557,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":259,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":395,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":441,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":630,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":321,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":119,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":320,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":576,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":460,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":271,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":477,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":884,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":39,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":433,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":315,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":787,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":216,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":900,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":651,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":269,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":9,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":207,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":864,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":132,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":206,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":886,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":889,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":867,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":19,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":597,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":624,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":709,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":896,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":257,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":258,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":251,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":33,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":821,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":296,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":609,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":230,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":200,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":429,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":826,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":917,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":333,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":916,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":368,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":359,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":52,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":391,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":830,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":774,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":766,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":737,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":78,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":361,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":164,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":828,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":486,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":443,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":484,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":756,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":189,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":116,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":398,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":656,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":813,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":274,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":618,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":424,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":159},"transformations":[{"failures":[],"tindex":"d1a4538e-13af-11e5-85d1-e58d1cd60aa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key4","i":"hashCode","key":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"d1a47a9f-13af-11e5-85d1-5d6a33961f74","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[0],"tindex":"d1a47aa0-13af-11e5-85d1-69cf60ce3db8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"d1a47aa1-13af-11e5-85d1-7fefec621caa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":0},{"failures":[],"tindex":"d1a47aa2-13af-11e5-85d1-89bf81644316","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"d1a47aa3-13af-11e5-85d1-4fcd001f0bc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"size","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[122,123,124,125,126,127,128,129,130,131],"tindex":"d1a4a1b4-13af-11e5-85d1-d5c7b9941b5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:266","type":"CtReturnImpl","sourcecode":"return !((java.util.Iterator<?>.hasNext()) || (java.util.Iterator<?>.hasNext()))"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"d1a4a1b5-13af-11e5-85d1-f1497290e630","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[157,160,254,174,177,255],"tindex":"d1a4a1b6-13af-11e5-85d1-c5b01c40d121","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"after","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"d1a4c8c7-13af-11e5-85d1-512e3d0e07c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"d1a4c8c8-13af-11e5-85d1-a70327f8f254","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[],"tindex":"d1a4c8c9-13af-11e5-85d1-dd2d2e88c237","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"d1a4c8ca-13af-11e5-85d1-8bc466bb72fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"d1a4efdb-13af-11e5-85d1-23f9dff3e964","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"d1a4efdc-13af-11e5-85d1-9d95d7187dad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[269,270,271,272,273,274,275,276,277,278,279],"tindex":"d1a4efdd-13af-11e5-85d1-07342cd372b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[135,136,280,137,138,139,281,140,141,142,143,148,282,283,154,155,284,156,157,158,285,159,160,161,162,167,286,287,171,172,288,173,174,175,289,176,177,178,179,290,291,292,185,186,293,187,188,189,294,190,191,192,193,295,296,297,199,200,201,202,203,204,298,299,205,212,213,300,214,215,216,301,217,220,225,302,303,227,228,304,229,230,231,305,232,233,234,235,306,307,308,241,242,309,243,244,245,310,246,247,248,249,311,312,313],"tindex":"d1a4efde-13af-11e5-85d1-a5e0048a605b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:722","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"d1a4efdf-13af-11e5-85d1-e73778415a32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[314,315,316,317],"tindex":"d1a516f0-13af-11e5-85d1-d76ac1a7fa56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"d1a516f1-13af-11e5-85d1-6b995765fa87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"h","right":"h","child":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d1a516f2-13af-11e5-85d1-7b9876065127","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":-2},{"failures":[],"tindex":"d1a516f3-13af-11e5-85d1-99ad7f6a8c6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:782","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.NodeList == null) {\n    throw new java.lang.NullPointerException(\"NodeList must not be null\");\n} "},"variableMap":{"nodeList":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":0},{"failures":[],"tindex":"d1a516f4-13af-11e5-85d1-2ff64a7cf42f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"d1a53e05-13af-11e5-85d1-df636fec577b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"d1a53e06-13af-11e5-85d1-ebaf0fa2c71a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"d1a53e07-13af-11e5-85d1-25a5eedf510b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,199,200,201,202,203,336,204,298,299,205,337,198,208,338,339,340],"tindex":"d1a53e08-13af-11e5-85d1-73f21e07d173","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[73,74,75,76,77,78,84,86,87,88,89,90,91,92,93,94,95,96,97,99,101,79,80,81,82,83,85,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"d1a53e09-13af-11e5-85d1-cb6572653cbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == null) {\n    return super.createNode(E);\n} "},"status":-1},{"failures":[341,342,316,343,317,344,345,346,314,315],"tindex":"d1a5651a-13af-11e5-85d1-1fa608d21327","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[347,348,349,51,54,99,103],"tindex":"d1a5651b-13af-11e5-85d1-f94135872c24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[],"tindex":"d1a5651c-13af-11e5-85d1-a1b90108b0e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"d1a5651d-13af-11e5-85d1-c9774374ef7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"retval","lengthInBits":"retval","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":0},{"failures":[],"tindex":"d1a5651e-13af-11e5-85d1-9190653eb301","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"d1a5651f-13af-11e5-85d1-e32d033206cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[350,351,352,353,354,355,356,357],"tindex":"d1a56520-13af-11e5-85d1-a52a80519dee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"d1a58c31-13af-11e5-85d1-4de5704b8a78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-2},{"failures":[],"tindex":"d1a58c32-13af-11e5-85d1-37853bd535a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[358,359,360,150,361],"tindex":"d1a58c33-13af-11e5-85d1-b704f0076947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[362],"tindex":"d1a58c34-13af-11e5-85d1-017cc4352f8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"foundCurrentElement","beforeFirst":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"d1a58c35-13af-11e5-85d1-1d24e6acbccc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator();\n} "},"status":0},{"failures":[],"tindex":"d1a58c36-13af-11e5-85d1-71d57c2d41be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"d1a58c37-13af-11e5-85d1-31535ef4a079","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-2},{"failures":[],"tindex":"d1a58c38-13af-11e5-85d1-d940160d1eb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"path","left":"entry","h":"path","right":"root","child":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[363,364,365,366,367,368],"tindex":"d1a5b349-13af-11e5-85d1-7fab74a7913f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"end1","n":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390],"tindex":"d1a5b34a-13af-11e5-85d1-0f72191488a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-1},{"failures":[391,392],"tindex":"d1a5b34b-13af-11e5-85d1-1ba2479db20e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[393],"tindex":"d1a5b34c-13af-11e5-85d1-ffb9fd23dc51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:159","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].equals(java.util.Map<K, V>)) {\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[int - 1];\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int);\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1));\n    this.java.util.Map<K, V>[] = java.util.Map<K, V>[];\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"d1a5b34d-13af-11e5-85d1-617dbc82510b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:986","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"{\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[409],"tindex":"d1a5b34e-13af-11e5-85d1-2505e48cda46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:807","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.addAll(java.util.Collection<C>)"},"variableMap":{"resultCollection":"collection","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1123","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.add(java.util.Iterator<? extends C>.next())"},"status":-1},{"failures":[],"tindex":"d1a6c4bf-13af-11e5-85d1-99145ce98cd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rightChild","node":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"d1a6c4c0-13af-11e5-85d1-09bfd0d31cb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"d1a6ebd1-13af-11e5-85d1-67af9872a255","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"length","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[438,393,439,440,441,442,443],"tindex":"d1a6ebd2-13af-11e5-85d1-23f249b5ddac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d1a6ebd3-13af-11e5-85d1-15251c532bd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1336","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    java.lang.StringBuilder.append(\"RootEntry(\");\n} else {\n    java.lang.StringBuilder.append(\"Entry(\");\n}"},"variableMap":{"buffer":"key2","bitIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,269,474,475,270,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,271,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,272,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,273,578,579,580,581,582,274,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,275,616,617,618,619,620,621,622,623,276,624,625,626,277,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,278,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,279,697,698,699,700,701,702,703,704],"tindex":"d1a6ebd4-13af-11e5-85d1-b1abb443ebd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[705,706],"tindex":"d1a6ebd5-13af-11e5-85d1-b14c614c0ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.NullPointerException(\"List must not be null\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"d1a6ebd6-13af-11e5-85d1-7f1b1ab29713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[314,315,342,343,344,345,346],"tindex":"d1a712e7-13af-11e5-85d1-075c382392dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"d1a712e8-13af-11e5-85d1-6b2472e62f73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[],"tindex":"d1a712e9-13af-11e5-85d1-b322dd75d0fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hash","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[707],"tindex":"d1a712ea-13af-11e5-85d1-d5d890beef2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"status":-1},{"failures":[],"tindex":"d1a712eb-13af-11e5-85d1-bd9b8a4a695a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"d1a712ec-13af-11e5-85d1-2f163438cbe3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"d1a712ed-13af-11e5-85d1-552bcf6b236d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d1a739fe-13af-11e5-85d1-c3d3e215bcfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-2},{"failures":[708,709,710,711],"tindex":"d1a739ff-13af-11e5-85d1-b9cb62f0bfd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d1a73a00-13af-11e5-85d1-3ffeefd36ac0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"d1a73a01-13af-11e5-85d1-1bb62cea0293","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":0},{"failures":[712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,351,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,353,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,355,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,357,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805],"tindex":"d1a73a02-13af-11e5-85d1-df013dfa67bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.clear()"},"variableMap":{"reverseMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1},{"failures":[],"tindex":"d1a73a03-13af-11e5-85d1-b9395647a613","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:787","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> == null) && (int > 0)) {\n    int--;\n    org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]));\n}"},"variableMap":{"parent":"this","data":"newEntries","e":"entry","i":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"d1a73a04-13af-11e5-85d1-a7f006f5791d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"d1a8e7b5-13af-11e5-85d1-f779db4d74be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[806,807],"tindex":"d1a8e7b6-13af-11e5-85d1-c782d8f7d632","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839],"tindex":"d1a8e7b7-13af-11e5-85d1-01eb3adc3393","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.listIterator(0)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:129","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.PredicatedList.PredicatedListIterator(org.apache.commons.collections4.list.PredicatedList<E>.decorated().listIterator(int))"},"status":-1},{"failures":[],"tindex":"d1a8e7b8-13af-11e5-85d1-ff160d29db36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[840,841,442,842,843,844,845,846,443,847,848,849,850,851,852,853,854,855,856,857],"tindex":"d1a8e7b9-13af-11e5-85d1-2386075cf70a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d1a8e7ba-13af-11e5-85d1-9bb13edef065","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":0},{"failures":[858,703,704],"tindex":"d1a8e7bb-13af-11e5-85d1-e9b5d79b1270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-1},{"failures":[],"tindex":"d1a90ecc-13af-11e5-85d1-d1cd72255714","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"d1a90ecd-13af-11e5-85d1-634d19690b69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"status":0},{"failures":[],"tindex":"d1a90ece-13af-11e5-85d1-2fee15979e96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"d1a90ecf-13af-11e5-85d1-f307ae3df2d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"retain","larger":"retain","smaller":"retain","list2":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d1a90ed0-13af-11e5-85d1-8d6ead1f8458","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"d1a90ed1-13af-11e5-85d1-7b431f71779a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"d1a90ed2-13af-11e5-85d1-4ba7aab8990e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[135,136,137,138,139,140,141,142,143,154,155,156,157,158,159,160,161,162,171,172,173,174,175,176,177,178,179,185,186,187,188,189,190,191,192,193,199,200,201,202,203,204,298,299,205,212,213,214,215,216,217,218,219,220,227,228,229,230,231,232,233,234,235,241,242,243,244,245,246,247,248,249],"tindex":"d1a90ed3-13af-11e5-85d1-c79255d22027","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[859],"tindex":"d1a90ed4-13af-11e5-85d1-7715903e064e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:827","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"d1a935e5-13af-11e5-85d1-0dafbe3300c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"d1a935e6-13af-11e5-85d1-6190bd8a5771","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:276","type":"CtLocalVariableImpl","sourcecode":"final java.util.Comparator<? super E> java.util.Comparator<? super E> = java.util.Iterator<java.util.Comparator<E>>.next()"},"status":-2},{"failures":[],"tindex":"d1a935e7-13af-11e5-85d1-e780f3f72ebf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[],"tindex":"d1a935e8-13af-11e5-85d1-ad6f384a21be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":0},{"failures":[860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905],"tindex":"d1a935e9-13af-11e5-85d1-9155c5b5424e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"d1a935ea-13af-11e5-85d1-4532ee9885d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"parent","parent":"parent","left":"right","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"d1a935eb-13af-11e5-85d1-87eae970a5b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[906,907,908,909,910,911,912,913,914,915,916,917],"tindex":"d1a935ec-13af-11e5-85d1-11a89186f69a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"d1a935ed-13af-11e5-85d1-775ce9455175","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"leftChild","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"d1a935ee-13af-11e5-85d1-bf02e343cbdc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"d1a935ef-13af-11e5-85d1-73a31e5250fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"key2","i":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}