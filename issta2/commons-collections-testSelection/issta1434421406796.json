{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":158,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":319,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":348,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":237,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":397,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":471,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":646,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":127,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":686,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":80,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":476,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":630,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":687,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":252,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":655,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":558,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":649,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":198,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":264,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":227,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":120,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":688,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":556,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":367,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":682,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":445,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":612,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":142,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":157,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":596,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":390,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":288,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":215,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":263,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":190,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":690,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":194,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":482,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":684,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":647,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":625,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":685,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":496,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":570,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":213,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":347,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":560,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":134,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":378,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":622,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":298,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":182,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":284,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":323,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":125,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":399,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":681,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":659,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":79,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":534,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":522,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":191,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":658,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":523,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":150,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":217,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":503,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":351,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":251,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":439,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":420,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":375,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":238,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":470,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":396,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":480,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":254,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":679,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":448,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":139,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":230,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":365,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":384,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":561,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":255,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":467,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":642,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":114,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":112,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":677,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":597,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":133,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":277,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":137,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":371,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":18,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":359,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":488,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":209,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":502,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":633,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":478,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":602,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":235,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":454,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":515,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":308,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":638,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":457,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":418,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":572,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":639,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":315,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":208,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":591,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":419,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":101,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":102,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":520,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":279,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":629,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":421,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":236,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":49,"org.apache.commons.collections4.list.TreeListTest.testRemove":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":564,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":14,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":513,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":624,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":34,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":100,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":231,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":531,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":146,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":353,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":551,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":464,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":632,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":579,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":183,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":541,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":575,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":282,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":577,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":71,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":526,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":593,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":650,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":670,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":386,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":665,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":327,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":660,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":297,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":138,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":383,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":442,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":603,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":180,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":414,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":373,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":301,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":585,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":58,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":333,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":619,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":416,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":580,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":257,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":606,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":178,"org.apache.commons.collections4.list.TreeListTest.testListEquals":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":242,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":304,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":305,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":627,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":197,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":153,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":240,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":362,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":241,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":299,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":253,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":674,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":673,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":40,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":148,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":295,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":506,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":267,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":424,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":472,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":514,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":92,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":289,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":193,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":176,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":283,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":344,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":78,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":507,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":530,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":691,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":113,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":640,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":350,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":450,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":393,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":129,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":169,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":185,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":605,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":1,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":90,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":388,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":310,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":663,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":232,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":140,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":202,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":272,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":210,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":543,"org.apache.commons.collections4.map.LinkedMapTest.testReset":590,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":99,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":678,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":611,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":453,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":32,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":376,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":132,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":462,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":621,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":89,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":510,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":37,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":372,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":618,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":669,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":161,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":165,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":403,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":391,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":485,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":601,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":402,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":432,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":116,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":398,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":537,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":9,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":604,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":493,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":144,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":587,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":455,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":341,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":8,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":335,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":477,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":574,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":473,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":550,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":628,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":296,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":175,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":269,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":582,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":406,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":644,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":361,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":617,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":377,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":540,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":516,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":56,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":187,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":461,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":456,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":676,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":88,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":610,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":343,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":159,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":437,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":413,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":274,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":671,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":623,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":438,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":192,"org.apache.commons.collections4.SetUtilsTest.testHashCode":692,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":250,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":12,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":440,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":167,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":13,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":401,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":400,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":446,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":594,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":689,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":291,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":16,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":567,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":415,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":595,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":68,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":119,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":188,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":634,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":524,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":643,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":484,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":492,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":35,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":329,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":433,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":528,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":330,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":338,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":328,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":17,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":609,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":67,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":110,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":653,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":479,"org.apache.commons.collections4.list.TreeListTest.testBug35258":4,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":547,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":181,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":186,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":303,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":117,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":28,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":447,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":322,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":273,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":408,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":151,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":425,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":468,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":233,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":410,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":409,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":661,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":614,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":108,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":104,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":519,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":66,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":423,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":247,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":246,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":81,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":683,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":549,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":95,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":287,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":598,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":141,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":91,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":223,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":226,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":529,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":562,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":346,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":571,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":50,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":443,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":444,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":538,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":324,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":41,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":569,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":581,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":568,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":107,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":201,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":500,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":680,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":535,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":152,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":219,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":266,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":145,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":458,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":173,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":511,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":631,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":300,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":491,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":657,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":389,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":517,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":93,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":518,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":436,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":546,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":666,"org.apache.commons.collections4.map.LRUMapTest.testLRU":380,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":536,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":459,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":435,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":474,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":355,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":336,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":356,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":357,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":483,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":86,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":620,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":525,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":278,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":497,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":38,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":196,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":381,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":128,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":270,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":566,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":54,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":170,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":143,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":131,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":412,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":118,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":509,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":260,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":422,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":494,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":652,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":19,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":508,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":499,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":382,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":548,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":316,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":147,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":286,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":576,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":486,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":616},"transformations":[{"failures":[],"tindex":"aba11762-13ce-11e5-8a9a-a940805954b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"aba13e73-13ce-11e5-8a9a-17bcd51ebf8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"aba13e74-13ce-11e5-8a9a-ddfc14a5cdad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"aba13e75-13ce-11e5-8a9a-87d93b2f21aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[39],"tindex":"aba13e76-13ce-11e5-8a9a-512b0c242fc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:54","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory));\n} "},"status":-1},{"failures":[],"tindex":"aba13e77-13ce-11e5-8a9a-d5ed2492a792","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[40],"tindex":"aba16588-13ce-11e5-8a9a-bfad5651058d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"aba16589-13ce-11e5-8a9a-0375200213be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"aba1658a-13ce-11e5-8a9a-a53f2e7ed650","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:554","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"aba1658b-13ce-11e5-8a9a-4109083daaa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"aba18c9c-13ce-11e5-8a9a-8b58f1ce3ccc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"aba18c9d-13ce-11e5-8a9a-0f0df17c113c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[],"tindex":"aba18c9e-13ce-11e5-8a9a-21079b54e690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"aba1b3af-13ce-11e5-8a9a-f3234af0c2f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1120","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.map.Flat3Map<K, V> org.apache.commons.collections4.map.Flat3Map<K, V> = ((org.apache.commons.collections4.map.Flat3Map<K, V>)(super.clone()));\n    if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n        org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n    } \n    return org.apache.commons.collections4.map.Flat3Map<K, V>;\n} catch (final java.lang.CloneNotSupportedException ex) {\n    throw new java.lang.InternalError();\n}"},"status":-2},{"failures":[57,58,59],"tindex":"aba1b3b0-13ce-11e5-8a9a-9b2f37f52cc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[60,61],"tindex":"aba1b3b1-13ce-11e5-8a9a-67d134cff619","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"aba1b3b2-13ce-11e5-8a9a-6143c4bc7b51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"aba1b3b3-13ce-11e5-8a9a-e531249e6436","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":0},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"aba1dac4-13ce-11e5-8a9a-83eb0f62f11d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:150","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.contains(E)) == false) {\n    super.add(int, E);\n    java.util.Set<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"aba1dac5-13ce-11e5-8a9a-c71e709c1caa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"aba1dac6-13ce-11e5-8a9a-f7fcaebcc202","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"hashCode","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"newCapacity","otherOffsetInBits":"newCapacity","otherLengthInBits":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[95,96,97,98,99,100,101,102],"tindex":"aba1dac7-13ce-11e5-8a9a-9faee29f517f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"aba1dac8-13ce-11e5-8a9a-4fac3d9240ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"aba201d9-13ce-11e5-8a9a-e1ada4eb83ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[117,118,119,120,121,122],"tindex":"aba201da-13ce-11e5-8a9a-13d241262de7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"aba201db-13ce-11e5-8a9a-33614ad16a4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"variableMap":{"closures":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[149,150],"tindex":"aba201dc-13ce-11e5-8a9a-4b0699f7466a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"aba201dd-13ce-11e5-8a9a-1ba27b19a987","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"aba201de-13ce-11e5-8a9a-7f7e2a8dd82b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"aba201df-13ce-11e5-8a9a-19c803277958","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"aba201e0-13ce-11e5-8a9a-f197f36dc0c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":0},{"failures":[],"tindex":"aba228f1-13ce-11e5-8a9a-e30f612bc9e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[96,199],"tindex":"aba228f2-13ce-11e5-8a9a-239c6ccfffc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"aba228f3-13ce-11e5-8a9a-ad7438a39dac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"entry","key2":"key2","key5":"key1","previous":"next","hashCode":"hashCode","key3":"key1","key4":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[200,150,201,202,203,203,204,204,205],"tindex":"aba228f4-13ce-11e5-8a9a-3135de77b7ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[206,207,208,209],"tindex":"aba228f5-13ce-11e5-8a9a-5d6693c78383","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[210,211,212,213,214,215,216,217],"tindex":"aba228f6-13ce-11e5-8a9a-6d88e4728110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,122,269,270,271,272,60,273,274,275,276,277,278,279,280,281,282,283,61,284,285,286,287],"tindex":"aba25007-13ce-11e5-8a9a-91c8a657e2ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[288,289,290,291,292,140,293,294,295,296,297,298,299,300,301,302,143,303,304,305,306,307,308,309,310,311,312,313,314,315,316,145,317,318,319,320,321,322,323,324,325,326,148,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369],"tindex":"aba25008-13ce-11e5-8a9a-2d109b23140a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"aba25009-13ce-11e5-8a9a-df93d2a34116","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:304","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"firstCachedNode","header":"firstCachedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:168","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":0},{"failures":[370,371,372,373,374,375,210,376,377,378,379,380,381,382,383,384,208,385,386,387,388,389,390,391,392,393,394,395,396,212,397,398,399,400,401,402,403,404,405,406,407,40,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,213,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,214,440,441,442,443,444,445,446,447,448,449,450,215,451,452,453,454,455,456,457,458,459,460,461,216,462,463,464,465,466,467,468,469,470,471,472,217,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"aba2500a-13ce-11e5-8a9a-99524dba9a7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"variableMap":{"newCapacity":"newCapacity","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[504,505,506,507,508,509],"tindex":"aba2500b-13ce-11e5-8a9a-2b3ac5587ef2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"aba2500c-13ce-11e5-8a9a-c7ed0ecb0778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)"},"variableMap":{"this":"normalMap","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"aba2771d-13ce-11e5-8a9a-ab9ae83820df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"previous","entry":"previous","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"aba2771e-13ce-11e5-8a9a-436d357740c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[406,407,510,40],"tindex":"aba2771f-13ce-11e5-8a9a-9dfc6286c5b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"h","lengthInBits":"h","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"h","otherOffsetInBits":"h","otherLengthInBits":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[57],"tindex":"aba27720-13ce-11e5-8a9a-1d82bf41eb8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"aba27721-13ce-11e5-8a9a-973e19958d97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[511,48,50,512,513,514,515,516],"tindex":"aba27722-13ce-11e5-8a9a-5bedb885396a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"aba4e823-13ce-11e5-8a9a-e13d58d29d0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"aba4e824-13ce-11e5-8a9a-c388b27fb4d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"d","maxElements":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[],"tindex":"aba4e825-13ce-11e5-8a9a-f39bbab24c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[],"tindex":"aba4e826-13ce-11e5-8a9a-b554362034a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[517,518,519,520,521,522,523,524],"tindex":"aba4e827-13ce-11e5-8a9a-29113b7f449b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"variableMap":{"iterator":"currentIterator","stack":"stack","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"aba4e828-13ce-11e5-8a9a-e198928a8d84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:873","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return 0;\n} "},"variableMap":{"removed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"aba4e829-13ce-11e5-8a9a-25a4baaf9301","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"aba50f3a-13ce-11e5-8a9a-fd51583df3c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"aba50f3b-13ce-11e5-8a9a-b93b72c6dbc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-2},{"failures":[],"tindex":"aba50f3c-13ce-11e5-8a9a-63989d42c672","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"defaultClosure":"closure","size":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":0},{"failures":[],"tindex":"aba50f3d-13ce-11e5-8a9a-cf8315880dc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[199,525],"tindex":"aba50f3e-13ce-11e5-8a9a-6b1a1de89708","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1123","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone()"},"variableMap":{"cloned":"this","delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1103","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap()"},"status":-1},{"failures":[],"tindex":"aba50f3f-13ce-11e5-8a9a-81acc08338d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"aba50f40-13ce-11e5-8a9a-85ab9d8341ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"predecessor","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[526,527],"tindex":"aba50f41-13ce-11e5-8a9a-476a256e3a2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"nodeCount","lengthInBits":"nodeCount","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"aba53652-13ce-11e5-8a9a-15278700156e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"aba53653-13ce-11e5-8a9a-6fc44ce5c09e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-2},{"failures":[528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,211,546,547,548,549,550,551,552,553,554,555,556,557,394,395,396,212,397,398,399,392,393,558,559,560,561,562,563,564,565,566,106,107,108,110,111,112,113,104,105],"tindex":"aba53654-13ce-11e5-8a9a-57cae98bc8c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584],"tindex":"aba5d295-13ce-11e5-8a9a-c3363bbc088e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[585,586],"tindex":"aba5d296-13ce-11e5-8a9a-fba34cc76faf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[587,556,557,551,552,553,554,555,588],"tindex":"aba5d297-13ce-11e5-8a9a-d975d0a370b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"aba5d298-13ce-11e5-8a9a-e9127eb88dd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} "},"variableMap":{"paramTypes":"paramTypes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"aba5d299-13ce-11e5-8a9a-1575d3ddf870","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-2},{"failures":[],"tindex":"aba5d29a-13ce-11e5-8a9a-2f2f8a659101","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"aba5d29b-13ce-11e5-8a9a-21a97fff9847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"parent","current":"right","tree":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"aba5f9ac-13ce-11e5-8a9a-91c5d14803f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[589,370,371,372,373,374,375,210,376,377,378,379,380,381,382,383,384,590,209,207,591,208,592,593,385,386,387,388,389,390,401,594,595,392,393,596,394,395,396,597,212,598,397,599,600,398,399,601,602,603,400,402,391,403,404,604,605,405,606,607,608,609,610,611,612,613,406,407,40,408,409,410,411,412,413,414,415,416,428,429,418,419,420,421,422,423,213,424,425,426,427,430,417,431,432,614,433,434,435,436,437,438,439,214,440,441,442,443,444,445,446,447,448,449,450,215,451,452,453,454,455,456,457,458,459,460,461,216,462,463,464,465,615,466,467,468,469,470,471,472,217,473,474,475,476,477,616,478,617,618,619,479,480,481,620,621,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"aba5f9ad-13ce-11e5-8a9a-d9fb49a22ce9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"aba5f9ae-13ce-11e5-8a9a-f98d59d3dea5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"length","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"aba5f9af-13ce-11e5-8a9a-9d8994abbb58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"aba5f9b0-13ce-11e5-8a9a-e9e11b065bb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[622,623,129,624,625,626,627,628,629,630,631,130,632,633,634,635,636,637,638,639,640,137,641,642,643,644,645,646,647,648,138,649,650,651,652,653,654,655,656,292,142,295,296,297,298,299,300,301,302,143,657,658,659,660,661,294,293,662,316,147,319,320,321,322,323,324,325,326,148,663,664,665,666,667,318,317,668,669,670,671,672,673,674,675,676,677,678,679,339,343,345,346,347,349,358,359,360,361,342,341],"tindex":"aba5f9b1-13ce-11e5-8a9a-17f51b9a0438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-1},{"failures":[680,379,374,376,681,432,421,424,682,443,437,440,683,454,448,451,684,685,465,459,462,686,476,470,473,687],"tindex":"aba620c2-13ce-11e5-8a9a-398fa3cd95f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"aba620c3-13ce-11e5-8a9a-7bc449619161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":0},{"failures":[688,689],"tindex":"aba620c4-13ce-11e5-8a9a-8ff6a6736da0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-1},{"failures":[231],"tindex":"aba620c5-13ce-11e5-8a9a-db98879e5ef2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"result","i":"size","j":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"status":-1},{"failures":[],"tindex":"aba620c6-13ce-11e5-8a9a-013830b800e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"aba620c7-13ce-11e5-8a9a-b30e07c97b8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"aba620c8-13ce-11e5-8a9a-3d4f3366cf95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"aba620c9-13ce-11e5-8a9a-7182d9e8780b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"aba620ca-13ce-11e5-8a9a-230f123415fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:479","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[288,289,290,291,292,140,306,294,295,296,297,298,299,300,301,302,143,303,304,305,307,308,309,310,311,312,313,293,314,315,316,145,330,318,319,320,321,322,323,324,325,326,148,327,328,329,331,332,333,334,335,336,337,317,338,339,340,357,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,341],"tindex":"aba620cb-13ce-11e5-8a9a-4519e61c2736","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"aba647dc-13ce-11e5-8a9a-8bb825b025a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"aba647dd-13ce-11e5-8a9a-6db9bdbec052","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[690,436],"tindex":"aba647de-13ce-11e5-8a9a-d543b1c45780","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[691],"tindex":"aba647df-13ce-11e5-8a9a-279a165c3189","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:159","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].equals(java.util.Map<K, V>)) {\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[int - 1];\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int);\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1));\n    this.java.util.Map<K, V>[] = java.util.Map<K, V>[];\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"aba647e0-13ce-11e5-8a9a-5d5a66e6b10b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,186,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"aba647e1-13ce-11e5-8a9a-81285ee3fb43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"aba66ef2-13ce-11e5-8a9a-857c7c514b4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"aba66ef3-13ce-11e5-8a9a-5b8456838649","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashCode","proposedCapacity":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[692],"tindex":"aba66ef4-13ce-11e5-8a9a-3b62df94fb94","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-1},{"failures":[407,510,40],"tindex":"aba66ef5-13ce-11e5-8a9a-cf3aa98f6f00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}