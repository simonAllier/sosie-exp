{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":612,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":196,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":479,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":537,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":597,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":658,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":639,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":319,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":524,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":394,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":170,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":529,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":362,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":657,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":133,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":435,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":556,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":358,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":283,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":240,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":102,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":20,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":553,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":138,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":660,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":559,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":611,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":80,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":632,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":596,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":268,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":12,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":316,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":442,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":356,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":576,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":168,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":135,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":30,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":203,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":280,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":509,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":234,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":417,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":483,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":599,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":405,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":453,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":640,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":211,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":314,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":429,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":448,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":143,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":375,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":426,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":147,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":623,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":540,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":446,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":574,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":6,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":628,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":372,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":629,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":134,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":117,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":293,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":378,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":465,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":595,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":61,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":403,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":71,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":462,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":452,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":224,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":44,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":411,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":252,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":123,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":72,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":176,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":619,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":278,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":605,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":237,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":569,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":91,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":194,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":514,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":112,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":365,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":404,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":154,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":93,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":570,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":548,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":567,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":568,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":634,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":49,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":433,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":520,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":521,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":522,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":177,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":447,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":334,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":618,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":232,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":363,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":561,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":243,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":547,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":572,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":157,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":350,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":533,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsSelfHashCode":659,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":19,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":573,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":408,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":95,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":578,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":459,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":113,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":511,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":541,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":615,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":253,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":173,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":45,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":440,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":542,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":271,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":367,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":581,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":185,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":351,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":241,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":625,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":565,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":179,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":310,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":470,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":98,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":419,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":407,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":590,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":489,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":128,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":376,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":342,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":508,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":321,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":24,"org.apache.commons.collections4.ListUtilsTest.testSubtract":140,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":513,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":312,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":493,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":225,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":495,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":186,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":296,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":105,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":182,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":272,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":313,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":300,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":193,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":337,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":261,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":214,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":366,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":518,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":163,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":139,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":377,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":478,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":236,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":551,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":228,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":510,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":663,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":488,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":309,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":506,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":649,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":527,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":308,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":353,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":392,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":53,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":302,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":412,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":208,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":648,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":647,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":339,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":158,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":532,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":662,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":311,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":247,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":297,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":379,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":7,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":539,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":592,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":273,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":552,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":469,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":555,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":504,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":27,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":207,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":637,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":458,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":613,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":420,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":28,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":200,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":219,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":96,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":457,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":336,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":229,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":346,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":265,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":323,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":324,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":257,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":603,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":602,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":651,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":598,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":525,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":347,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":320,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":428,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":474,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":536,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":269,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":344,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":424,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":466,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":275,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":189,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":636,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":39,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":549,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":279,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":586,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":507,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":587,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":571,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":563,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":84,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":156,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":621,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":286,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":654,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":655,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":79,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":560,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":142,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":604,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":531,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":251,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":125,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":226,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":287,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":188,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":90,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":37,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":591,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":126,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":340,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":288,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":92,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":146,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":601,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":600,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":191,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":607,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":213,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":425,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":487,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":161,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":52,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":244,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":557,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":267,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":354,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":409,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":390,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":389,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":18,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":386,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":491,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":201,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":385,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":492,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":246,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":388,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":359,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":387,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":490,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":382,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":384,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":383,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":361,"org.apache.commons.collections4.set.CompositeSetTest.testContains":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":175,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":643,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":215,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":589,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testNextKey":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":661,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":317,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":364,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":608,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":482,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":172,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":89,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":284,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":543,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":577,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":620,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":327,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":217,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":471,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":307,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":652,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":653,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":277,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":631,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":438,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":439,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":583,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":481,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":197,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":306,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":432,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":329,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":285,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":421,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":345,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":635,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":16,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":104,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":38,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":40,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":262,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":305,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":169,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":441,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":534,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":212,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":180,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":255,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":114,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":610,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":485,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":254,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":282,"org.apache.commons.collections4.CollectionUtilsTest.find":393,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":418,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":184,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":266,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":132,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":258,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":473,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":633,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":294,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":360,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":341,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":585,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":270,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":468,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":584,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":11,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":233,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":43,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":34,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":357,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":374,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":484,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":477,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":42,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":242,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":373,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":562,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":396,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":416,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":512,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":626,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":627,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":480,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":124,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":192,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":315,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":410,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":216,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":456,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":76,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":274,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":122,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":299,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":260,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":624,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":263,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":544,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":545,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":546,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":36,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":256,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":528,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":94,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":199,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":206,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":86,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":472,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":451,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":427,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":503,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":645,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":646,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":318,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":116,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":575,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":4,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":178,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":290,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":644,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":476,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":103,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":355,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":218,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":235,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":380,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":198,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":641},"transformations":[{"failures":[0],"tindex":"e8482c4e-13cf-11e5-a96d-1fc93a7d740d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e84ac45f-13cf-11e5-a96d-278343024bc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"e84aeb70-13cf-11e5-a96d-832019040890","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[1,2,3],"tindex":"e84c23f1-13cf-11e5-a96d-f1df3c57783f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:157","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<K>.hasNext()) {\n    return java.util.Iterator<K>.next();\n} "},"status":-1},{"failures":[],"tindex":"e84c4b02-13cf-11e5-a96d-5f51b9d985f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"e84c4b03-13cf-11e5-a96d-4f2a4a961144","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:986","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"{\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"e84c4b04-13cf-11e5-a96d-9dd35e49e41b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"e84c4b05-13cf-11e5-a96d-8337ef72e19b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e84c4b06-13cf-11e5-a96d-c77660b5758f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[31],"tindex":"e84c4b07-13cf-11e5-a96d-c976cd05b5f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"e84c7218-13cf-11e5-a96d-7306d3dd2260","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"variableMap":{"currentIterator":"currentIterator","iteratorChain":"iteratorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"e84c7219-13cf-11e5-a96d-19cb85494a0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[105],"tindex":"e84c721a-13cf-11e5-a96d-af2be27e8b0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} "},"status":-1},{"failures":[],"tindex":"e84c721b-13cf-11e5-a96d-b373dd523ad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"e84c721c-13cf-11e5-a96d-cd7cf230fcea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e84c992d-13cf-11e5-a96d-fbfdafa58233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[121,122,123,124,125,126,18,127,31,128,129,130],"tindex":"e84c992e-13cf-11e5-a96d-ff3a8d37f0e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[40,131,132,133,41,44,45,46,47,48,49,50,67,68,70,71,73,74,77,78,79,134],"tindex":"e84c992f-13cf-11e5-a96d-c7dcecc302ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[135,136,137,138,139],"tindex":"e84c9930-13cf-11e5-a96d-e99aba3abf14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"largestKey","expectedModCount":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"e84c9931-13cf-11e5-a96d-ef4bdf664cd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"e84e1fd2-13cf-11e5-a96d-35d3920cc5c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[258,259,260,261],"tindex":"e84e1fd3-13cf-11e5-a96d-8b4f698775c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[262,263,264,265],"tindex":"e84e1fd4-13cf-11e5-a96d-2ba17f1a7085","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"e84e1fd5-13cf-11e5-a96d-11da9878d455","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":-2},{"failures":[266],"tindex":"e84e1fd6-13cf-11e5-a96d-9f7f1a1152b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"e84e1fd7-13cf-11e5-a96d-ddd615bf5076","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:300","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"entry","link":"before","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e84e46e8-13cf-11e5-a96d-cb38063b4b16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[262,263,264,265],"tindex":"e84e46e9-13cf-11e5-a96d-e917dd0c3444","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"e84f585a-13cf-11e5-a96d-21b33307a83c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"e84f585b-13cf-11e5-a96d-c5b4354e58cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e84f585c-13cf-11e5-a96d-93e1386914bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:128","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null;\n} else if (K == null) {\n    return false;\n} "},"status":0},{"failures":[267,155,156,268,170,171,269,270,271,184,272,273,274,275,198,199,276,277,278,212,279,218,280,281,232,240,241,282,283,284,256,257],"tindex":"e84f585d-13cf-11e5-a96d-aff63e4265cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e84f585e-13cf-11e5-a96d-57f35c30258e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[],"tindex":"e84f585f-13cf-11e5-a96d-8168c4327551","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"e8521680-13cf-11e5-a96d-813d9e2cd4f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[6,285,4,286,7,287,288,5,289,290,8,9],"tindex":"e8521681-13cf-11e5-a96d-5fd5be722d3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"e8539d22-13cf-11e5-a96d-f3e5f27a05f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:930","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"e8539d23-13cf-11e5-a96d-59f0c431750e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:252","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"e8543964-13cf-11e5-a96d-735c7bac6c93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[142,143,291,157,158,292,172,173,182,293,294,185,186,295,200,201,210,296,297,220,221,230,298,299,300,301,243,244,302],"tindex":"e8543965-13cf-11e5-a96d-e9ca80eb60b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"uniqueSet","existingSet":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"e8543966-13cf-11e5-a96d-1505aa8187c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"newCapacity","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-2},{"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"e8546077-13cf-11e5-a96d-5bdf4721be64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e8546078-13cf-11e5-a96d-e5c0530a46a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1195","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int"},"variableMap":{"parent":"this","modCount":"threshold","expectedModCount":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[],"tindex":"e8546079-13cf-11e5-a96d-abc81f6c9c4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[175,340,341,272,342,343,344,345,346,347,348,349,273,350,203,351,223],"tindex":"e854607a-13cf-11e5-a96d-89f9818a6ced","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,52,379,380],"tindex":"e854607b-13cf-11e5-a96d-fb7010402872","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[57,58,67,68,70,71,73,74,77,78,79,381,84,87,92,95,97,99,100,101],"tindex":"e854878c-13cf-11e5-a96d-9d91a14ed620","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e854878d-13cf-11e5-a96d-27aadcae718a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"e854878e-13cf-11e5-a96d-43138665f128","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-2},{"failures":[382,383,384,385,386,387,388,389,390,391,392],"tindex":"e854878f-13cf-11e5-a96d-4982c576c954","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"start","expectedModCount":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"e8548790-13cf-11e5-a96d-279f10d6c607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"status":0},{"failures":[],"tindex":"e8548791-13cf-11e5-a96d-a97de3cd60d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e8548792-13cf-11e5-a96d-25b214be75b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[393],"tindex":"e854aea3-13cf-11e5-a96d-d1ab90606293","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"variableMap":{"predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"e854aea4-13cf-11e5-a96d-3dec24f54df2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[40,131,132,133,41,42,44,45,394,46,47,48,49,50,67,68,70,71,73,74,77,78,79,134],"tindex":"e854aea5-13cf-11e5-a96d-0d679c3996be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"e854aea6-13cf-11e5-a96d-cb3c15838614","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:244","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[266],"tindex":"e854aea7-13cf-11e5-a96d-bb336bf13bcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1058","type":"CtAssignmentImpl","sourcecode":"int = (int)++"},"variableMap":{"nextIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1174","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[112,114,395,396,397,398,399,400,401,402],"tindex":"e854d5b8-13cf-11e5-a96d-43fdfd79c19f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"e854d5b9-13cf-11e5-a96d-8ff49f0a5088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e854d5ba-13cf-11e5-a96d-19296e3b44d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"e854d5bb-13cf-11e5-a96d-537cfa8bd1e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"length","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-2},{"failures":[403,404,405],"tindex":"e854d5bc-13cf-11e5-a96d-a727305bf47c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"variableMap":{"this":"this","collectionRetainAll":"collectionRetainAll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:231","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e854fccd-13cf-11e5-a96d-3bbc99e2b85c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"e87025ee-13cf-11e5-a96d-6be8b48b4dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"e87025ef-13cf-11e5-a96d-8d4ae718fb22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"e8704d00-13cf-11e5-a96d-a5b4578b25bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"e8704d01-13cf-11e5-a96d-fdfda7e05091","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e8704d02-13cf-11e5-a96d-679082f095cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[],"tindex":"e8704d03-13cf-11e5-a96d-85639065113e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"e8704d04-13cf-11e5-a96d-cf2d7e366aeb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"e8704d05-13cf-11e5-a96d-9d30a0bd3e53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"replacement","dataElement":"dataElement","child":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[406,407,106,107,108,109,110,408,111,112,113,114,396,400,401,409,410,115,116,117,118,119,411,120],"tindex":"e8713766-13cf-11e5-a96d-9b1e2ea30860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"e8713767-13cf-11e5-a96d-a3e29f7260d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-2},{"failures":[],"tindex":"e8713768-13cf-11e5-a96d-91d70bafb98a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[412,413,414,415,142,416,143,417,267,418,152,155,156,419,420,421,157,422,158,423,268,424,167,170,171,269,425,426,427,172,428,173,429,270,430,181,182,271,184,272,344,273,274,431,432,433,185,434,186,435,275,436,195,198,199,276,437,438,439,200,440,201,441,277,442,209,210,278,212,279,218,443,444,445,220,446,221,447,280,448,229,230,281,232,240,241,282,449,283,450,451,452,243,453,244,454,284,455,253,256,257],"tindex":"e8713769-13cf-11e5-a96d-f3140df74c5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[287,288,286,285,4,5,289,290,6,7,8,9],"tindex":"e8715e7a-13cf-11e5-a96d-9d3e9d1a9962","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"e8715e7b-13cf-11e5-a96d-db027bc8195d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"left","this":"this","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[456,457,458,459,460,125,31,461,462,463,464,465,466,467,468,25,28,469],"tindex":"e8715e7c-13cf-11e5-a96d-e5025b596526","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e8715e7d-13cf-11e5-a96d-edc57cf62f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"current","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e8715e7e-13cf-11e5-a96d-1339675094de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"e8715e7f-13cf-11e5-a96d-977d5af0b350","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"e8715e80-13cf-11e5-a96d-ff413f3ccf33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e8715e81-13cf-11e5-a96d-995be0a7ad2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1037","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"right","this":"this","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e8718592-13cf-11e5-a96d-e3d18e4fa590","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:274","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"status":-2},{"failures":[],"tindex":"e8718593-13cf-11e5-a96d-7990f1867919","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"value","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-2},{"failures":[470,471],"tindex":"e8718594-13cf-11e5-a96d-9b647f08214a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-1},{"failures":[],"tindex":"e8718595-13cf-11e5-a96d-df4da1e25eb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":"e8718596-13cf-11e5-a96d-c535cd86d306","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"e8718597-13cf-11e5-a96d-5361095a0af4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[472,473],"tindex":"e8718598-13cf-11e5-a96d-41c86f9d9e1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559],"tindex":"e8718599-13cf-11e5-a96d-ef58c5a6c7a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"e871859a-13cf-11e5-a96d-4375b537822d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[560,561,562,456,563,564,457,565,566,567,568,569,570,571,572,573,574,459,575,576,460,577,578,579,580,581,582,583,121,122,124,125,126,127,129,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,462,609,610,611,463,612,613,614,615,616,617,618,619,620,621,465,622,623,466,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,468,22,23,24,25,26,651,27,28,29,30,652,653,654,655,656],"tindex":"e871859b-13cf-11e5-a96d-bf0c9c889da0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e871acac-13cf-11e5-a96d-81a7f61bd7d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:129","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"variableMap":{"chars":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"e871acad-13cf-11e5-a96d-7f5e03e3d84f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:120","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"e871acae-13cf-11e5-a96d-833e4b9a7478","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[106,107,657,108,109,110,658,408,111,112,113,114,659,660,115,116,117,118,119,661,411,120,662,663],"tindex":"e871acaf-13cf-11e5-a96d-fb0187ebd499","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"nodeCount","lengthInBits":"nodeCount","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"e871acb0-13cf-11e5-a96d-cb16f2c8b7cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}