{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":310,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":641,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":761,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":258,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":722,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":247,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":1064,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":204,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":226,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":614,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":699,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":889,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":449,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":680,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":76,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":163,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":816,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":943,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":1003,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":685,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":230,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":1126,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":317,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":387,"org.apache.commons.collections4.CollectionUtilsTest.collect":21,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":924,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":388,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":959,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":571,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":389,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":1025,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":946,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":497,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":1119,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":610,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":1009,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":352,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":821,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetClearChangesMap":704,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":1007,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":531,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":987,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":130,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":521,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":1093,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":349,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":370,"org.apache.commons.collections4.ListUtilsTest.testLazyList":485,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":1086,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":693,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":48,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionSize":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":339,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":265,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":729,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":413,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":442,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":790,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":675,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":428,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":496,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":580,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":194,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":338,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":206,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":591,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":558,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":993,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":859,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueCompatibility":951,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":255,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":835,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":578,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":0,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionSize":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":142,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":894,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":1041,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":285,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":984,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":1146,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":1017,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":607,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":837,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":427,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":432,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":810,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":326,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":175,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":930,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":318,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":356,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":647,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":850,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":878,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":804,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":972,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":107,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":540,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":249,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":414,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":1012,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":401,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":669,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":302,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":979,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":1002,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":133,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":818,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":842,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":360,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":823,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":171,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":1055,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":718,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":140,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":759,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":242,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":29,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":523,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":562,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":27,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":626,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":750,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":503,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":749,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":126,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":1028,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":1044,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":903,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":410,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":1065,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":792,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":815,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":208,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":286,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":380,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":412,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":778,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1133,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":492,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionSize":1111,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1131,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":997,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":532,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":849,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":114,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":653,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":649,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":1100,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToString":1020,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":33,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":1120,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":572,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":863,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":926,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":1101,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":407,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":702,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":825,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":376,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":325,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":1011,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":906,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":193,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":280,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":637,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":666,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":548,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":648,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":952,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":269,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":684,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":393,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":947,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":170,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":970,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":181,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionSize":937,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":968,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":714,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":82,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":801,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":560,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":282,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":179,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":1016,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":1056,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":945,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":758,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":217,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":343,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":886,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":695,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":882,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":250,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":721,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":411,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":711,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":885,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":1076,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":514,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":912,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":1032,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":307,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":838,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":153,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":237,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":498,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":373,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":559,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":655,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":315,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":201,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":91,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":263,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":129,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":1106,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":1123,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueSerialization":914,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":787,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":633,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":125,"org.apache.commons.collections4.list.GrowthListTest.testCollectionSize":1042,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":77,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":857,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":254,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":406,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":563,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":966,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":199,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":1127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":119,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":304,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":457,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":510,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":786,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":1135,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":664,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":1136,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":1122,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":1134,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":533,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":832,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":191,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":874,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":1037,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":939,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":60,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":1118,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":576,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":771,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":665,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":651,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":760,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":1079,"org.apache.commons.collections4.list.TransformedListTest.testCollectionSize":985,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":292,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":1074,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":1071,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":1059,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":74,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":936,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":852,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueCompatibility":933,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":773,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":973,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":124,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":893,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionSize":657,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1121,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":944,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":854,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":895,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":740,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":425,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":1096,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":108,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":927,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":754,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":976,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":980,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":831,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":708,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":549,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":686,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":1073,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":225,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":748,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":240,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":640,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":853,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":182,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":299,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":400,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":361,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":358,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":736,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":84,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":1107,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":480,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":3,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":808,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":683,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":1097,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":186,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":667,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":477,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":499,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":545,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":688,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":460,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":996,"org.apache.commons.collections4.SetUtilsTest.testHashCode":118,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":551,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":1046,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":654,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":672,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":836,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":1080,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":1090,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":312,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":574,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionSize":956,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":877,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":880,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":505,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":345,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":139,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListSerialization":982,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":97,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":587,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":94,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":260,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":435,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":96,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":1031,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":95,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":743,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":1053,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":359,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":568,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":991,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":923,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":795,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":300,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":879,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":375,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":1000,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":602,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":597,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":995,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":41,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":724,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionSize":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":127,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":881,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":960,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":627,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":53,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":1043,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":156,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":515,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":405,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":897,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":738,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":136,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":466,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":907,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":865,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":981,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":116,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":623,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":797,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":963,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":1049,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":569,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":1102,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":443,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":600,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":1034,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":277,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":766,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":585,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":149,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":1117,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":148,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":1082,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":949,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":20,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":570,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":271,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":727,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":481,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":102,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":829,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":917,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":700,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":1104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":713,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":717,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":92,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":2,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":1089,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":1124,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":1010,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":441,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":1039,"org.apache.commons.collections4.map.LRUMapTest.testLRU":167,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":609,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":564,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":986,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":624,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":843,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":228,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":913,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":1114,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":634,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":462,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":525,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":85,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":817,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":866,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":905,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":631,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":891,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":281,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":451,"org.apache.commons.collections4.queue.TransformedQueueTest.testEmptyQueueSerialization":950,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":784,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":785,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":382,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":1051,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":55,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":1038,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":806,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":364,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":354,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":604,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":703,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":904,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":1098,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":645,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":222,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":461,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":720,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":948,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":811,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":279,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":763,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":321,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":681,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":446,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":218,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":484,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":109,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":527,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":122,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":1103,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":394,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":543,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionSize":643,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":1128,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":573,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":746,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":910,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":454,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":488,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":329,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":14,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":875,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":745,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":920,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":1040,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":324,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":541,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":473,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":203,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":475,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":682,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":586,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":656,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":1125,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":192,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":426,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":630,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":575,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":283,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":28,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":259,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":856,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":887,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":931,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":955,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":26,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":1068,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":780,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":536,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":988,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":860,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":710,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":819,"org.apache.commons.collections4.CollectionUtilsTest.transform2":19,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":869,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":350,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":396,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":535,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":848,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":901,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":788,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":1088,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":582,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":962,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":1085,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":332,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":867,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":333,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":331,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":613,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":662,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":921,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":994,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":1147,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":1030,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":227,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":416,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":239,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":5,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":152,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":611,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":791,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":971,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":453,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":908,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":243,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":779,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":251,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":918,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":86,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":1150,"org.apache.commons.collections4.queue.TransformedQueueTest.testFullQueueSerialization":953,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":202,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":508,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":101,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":589,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":800,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":1099,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":308,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":942,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":418,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":840,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":862,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":223,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":661,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":902,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":789,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":676,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":160,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":872,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":715,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":235,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":601,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":844,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":941,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":922,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":594,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":137,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":776,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":6,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":1001,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":774,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":841,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":231,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":741,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":873,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":291,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":1087,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":737,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":916,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":674,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":1035,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":330,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":1138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":157,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":1057,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":1139,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":1144,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":1084,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":598,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":322,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":190,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":421,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":1078,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":327,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":712,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":495,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":636,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":692,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":814,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":314,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":1137,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":851,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":652,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":238,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":456,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":622,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":909,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":128,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":266,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":100,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":550,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":1075,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":518,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":293,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":212,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testFullQueueSerialization":934,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":1004,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":463,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":64,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":196,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":440,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":1094,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":734,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":767,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":709,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":9,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":436,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":898,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":1112,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":464,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":395,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":539,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":276,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":40,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":1027,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":783,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":798,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":408,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":557,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":561,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":483,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":1130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":138,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":826,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":320,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":429,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":267,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetClearChangesMap":687,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":871,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":805,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":642,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":839,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":858,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":176,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":423,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":883,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":989,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":846,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":772,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":670,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":751,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":977,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":384,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":644,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":731,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":1061,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":969,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":509,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":115,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":234,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":35,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":465,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":12,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":579,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":1083,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":253,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":847,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":121,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":1029,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":794,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":1129,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":929,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":733,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":1022,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":337,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":1052,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":501,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":639,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":1033,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":673,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetClearChangesMap":403,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":1050,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":89,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":553,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":732,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":616,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":544,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":117,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":319,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":793,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":112,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":605,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndexBoundsChecking2":1015,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":1024,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":1023,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":105,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":75,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":975,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":438,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":468,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":834,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":957,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":1077,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":83,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":272,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":899,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":919,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":928,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":990,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":303,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":233,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":663,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":474,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":363,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":459,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":706,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":294,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":769,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":890,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":275,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":486,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":472,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":493,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":215,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":210,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":577,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":290,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":965,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":678,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":490,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":397,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":73,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":974,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":1019,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":861,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":81,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":437,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":802,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":556,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":958,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":752,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":599,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":526,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":671,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":690,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":340,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":592,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":1047,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":775,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":506,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":765,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":803,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":174,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":620,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":689,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":351,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionSize":1092,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":546,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":756,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":632,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":824,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":398,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":638,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":730,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":998,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":884,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":67,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":892,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":378,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":13,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":755,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":1148,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":342,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":1013,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":1110,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":404,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":1054,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":42,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":512,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":547,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":855,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":15,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":925,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":135,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":278,"org.apache.commons.collections4.CollectionUtilsTest.isFull":99,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":1060,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":221,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":900,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":827,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":528,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":961,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":719,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":1006,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":72,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":232,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":476,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":537,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":725,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":49,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":845,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":1116,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":1149,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":224,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":660,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":1145,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":830,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":691,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":753,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":489,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":529,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":1014,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":1113,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":1081,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":391,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":365,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":444,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":268,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":552,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":762,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":458,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":23,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":1095,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":346,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":1115,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":1143,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":65,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":590,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":770,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":1026,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":80,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":214,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":257,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":584,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":964,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":911,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":617,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":1132,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":422,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":470,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":90,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":530,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":635,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":888,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":1008,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":896,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":1109,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":374,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":612,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":812,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":143,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":482,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":30,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":864,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":1036,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":159,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":297,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":1005,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":554,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":1045,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":123,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":110,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListSerialization":1066,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":868,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":146,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":1018,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":147,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":940,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":433,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":328,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":744,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":244,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":876,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":1021,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":768,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":954,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":1048,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":209,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":93,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":1062,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":420,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":1140,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1141,"org.apache.commons.collections4.list.TransformedListTest.testFullListSerialization":978,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":1142,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":491,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":316,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":723,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":1063,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":1091,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":538,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":757,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":344,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":385,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":828,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":104,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":71,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":742,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":1,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":402,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":517,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":1067,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":983,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":1069,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":938,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEmptyQueueCompatibility":915,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":935,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":168,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":478,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":183,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":357,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":184,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":467,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":1072,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":10,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":430,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":487,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":716,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":173,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":1070,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":822,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":180,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":820,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":679,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":200,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":524,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":967,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":646,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":833,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":581,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":169,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":992,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":1105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":799,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":1058,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":264,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionSize":504,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":999,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":502,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":288,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":870,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":513,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEmptyQueueSerialization":932,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":219,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":1108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":409},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"f0c7313e-13e6-11e5-992d-af8fc8911c96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[10,11],"tindex":"f0ceab4f-13e6-11e5-992d-230fde142fa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"f0ceab50-13e6-11e5-992d-c96b61f94ae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-2},{"failures":[],"tindex":"f0ced261-13e6-11e5-992d-6fa6eca50bb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:69","type":"CtReturnImpl","sourcecode":"return (org.w3c.dom.NodeList) == null ? false : (int) < (org.w3c.dom.NodeList.getLength())"},"variableMap":{"index":"hashCode","nodeList":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"f0ced262-13e6-11e5-992d-47ecd3849c56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[12,13,14,15],"tindex":"f0cef973-13e6-11e5-992d-8fb862ac7902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"f0cef974-13e6-11e5-992d-8f28899160d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f0cf2085-13e6-11e5-992d-f9079fd32946","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f0cf2086-13e6-11e5-992d-e1095a39cccd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"f0cf2087-13e6-11e5-992d-f1141ce12dcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1376","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V))"},"status":0},{"failures":[16,17,18],"tindex":"f0cf4798-13e6-11e5-992d-ed30ca056d0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-1},{"failures":[19,20,21],"tindex":"f0cf4799-13e6-11e5-992d-731beda59133","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[22,23,24,25,26,27],"tindex":"f0cf479a-13e6-11e5-992d-7b79c313b9e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[28],"tindex":"f0cf6eab-13e6-11e5-992d-590d49b25561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:77","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : java.util.Collection<org.apache.commons.collections4.Closure<E>>) {\n    org.apache.commons.collections4.Closure<? super E>[][int++] = org.apache.commons.collections4.Closure<? super E>;\n}"},"status":-1},{"failures":[],"tindex":"f0cf6eac-13e6-11e5-992d-c3dcf0536e28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f0cf95bd-13e6-11e5-992d-b59e7165610a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:972","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n        R.add(O);\n    } \n}"},"status":0},{"failures":[],"tindex":"f0cf95be-13e6-11e5-992d-ef6629f5c8e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"f0cf95bf-13e6-11e5-992d-35f027d4e6bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-2},{"failures":[],"tindex":"f0cfbcd0-13e6-11e5-992d-29d994fd48bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[],"tindex":"f0cfbcd1-13e6-11e5-992d-13ecc77899de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38],"tindex":"f0cfbcd2-13e6-11e5-992d-41adb39901f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"f0cfe3e3-13e6-11e5-992d-f7a330701b39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"f0d9a7e4-13e6-11e5-992d-613ddabb8138","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"f0d9cef5-13e6-11e5-992d-91f8bf861f6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[59,60],"tindex":"f0d9cef6-13e6-11e5-992d-43e56eb688e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"f0d9cef7-13e6-11e5-992d-591e47041fdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"f0d9cef8-13e6-11e5-992d-c168c3be28ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":0},{"failures":[],"tindex":"f0d9cef9-13e6-11e5-992d-1d6a6990390f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"f0d9f60a-13e6-11e5-992d-c9fe67275020","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:150","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.contains(E)) == false) {\n    super.add(int, E);\n    java.util.Set<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"f0d9f60b-13e6-11e5-992d-eb87949f5d82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f0d9f60c-13e6-11e5-992d-c9b0141c33db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-2},{"failures":[],"tindex":"f0d9f60d-13e6-11e5-992d-af55f78fc0ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"left","right":"left","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f0d9f60e-13e6-11e5-992d-a7952e6a4a52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"f0da6b3f-13e6-11e5-992d-7f8756e99a96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:109","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"f0da9250-13e6-11e5-992d-3fe5efce632b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"f0da9251-13e6-11e5-992d-6738da24212d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"entry","entry":"entry","key2":"key1","previous":"entry","hashCode":"hashCode","key3":"key3","key4":"key4","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"f0da9252-13e6-11e5-992d-7d1ddc11fda4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"status":0},{"failures":[94,95,96,97,98,99,100],"tindex":"f0da9253-13e6-11e5-992d-bbdecd364315","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"f0da9254-13e6-11e5-992d-c59db83f2b20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,3,7,116],"tindex":"f0dab965-13e6-11e5-992d-1f3a32372e53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f0dab966-13e6-11e5-992d-3745858f4e95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"value","proposedCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[117],"tindex":"f0dab967-13e6-11e5-992d-a181703f830f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[118],"tindex":"f0dab968-13e6-11e5-992d-f95c6d8a8fbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashCode","proposedCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"f0dab969-13e6-11e5-992d-e1c533309b5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f0dae07a-13e6-11e5-992d-bd839dd5c55c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[],"tindex":"f0dae07b-13e6-11e5-992d-d3fe1a9813c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"f0dba3cc-13e6-11e5-992d-f5b4e50aac14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"variableMap":{"size":"length","buckets":"obj","length":"length","cnt":"length","locks":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f0dbcadd-13e6-11e5-992d-3f5f5bac2fad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"f0dbcade-13e6-11e5-992d-4ba28b3a07e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"f0dbcadf-13e6-11e5-992d-67ddfdf3b01e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[165,166],"tindex":"f0dbf1f0-13e6-11e5-992d-07e7313dae58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":-1},{"failures":[],"tindex":"f0dbf1f1-13e6-11e5-992d-3f8069e1601b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"f0dbf1f2-13e6-11e5-992d-9f8812696e23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.MapIterator<? extends K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f0dbf1f3-13e6-11e5-992d-e7d23af64f74","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBag<E>"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)"},"status":-2},{"failures":[],"tindex":"f0dbf1f4-13e6-11e5-992d-2de19bc8f7b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-2},{"failures":[167,168,169,170,171,172,173],"tindex":"f0dbf1f5-13e6-11e5-992d-ef0f4d24ac91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[174,175,176,177,178,179,180,181,182,183,184,117,185,186,187,188,189,190,191,192,193,194],"tindex":"f0dc1906-13e6-11e5-992d-710d2bab4b0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"f0dc1907-13e6-11e5-992d-936e251e70bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"lengthInBits","maxElements":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f0dc1908-13e6-11e5-992d-bf0643a106e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"oldCapacity","newCapacity":"newCapacity","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":0},{"failures":[195,29,30,196,197,32,34,36,37,38],"tindex":"f0dc1909-13e6-11e5-992d-7fb792cd7ee8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"f0e6523a-13e6-11e5-992d-dd2a60cec939","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:533","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 2;\n    return V;\n} "},"status":-2},{"failures":[198,199,200,201,202,203,204,205,206,207,208,209,104,210,211,105,212,213,214,215,216,217,218,219,220,221,222,223,224,225,107,226,227,108,228,229,0,1,2,3,4,6,7,8,9],"tindex":"f0e6794b-13e6-11e5-992d-ef4c6ac79cc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,12,13,264,265,266,267,268,269,270,271,272,273,14,274,15,275,276,277,278,279],"tindex":"f0e6794c-13e6-11e5-992d-fda0a3bc9f8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f0e6794d-13e6-11e5-992d-d3aa5c6b5634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:94","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"tindex":"f0e6794e-13e6-11e5-992d-c513f301c044","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,29,325,326,327,30,328,329,330,331,332,333,196,197,334,31,335,336,32,33,337,338,34,35,36,37,38,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"f0e6794f-13e6-11e5-992d-7be9de9e6332","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"leftChild","node":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"f0e6a060-13e6-11e5-992d-23ec04bb0783","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f0e6a061-13e6-11e5-992d-ad9115dba17e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":0},{"failures":[315,316,317,318,319,320,321,323,29,327,30,382,353,354,356,357,358,359,361],"tindex":"f0e6a062-13e6-11e5-992d-9d6f47c00225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[59,383,60,384,385],"tindex":"f0e6a063-13e6-11e5-992d-47fc6fa3a124","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"f0e6c774-13e6-11e5-992d-118cb049027a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"f0e6c775-13e6-11e5-992d-990c32c30cbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-2},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,3,7,116],"tindex":"f0e6c776-13e6-11e5-992d-45698e962d1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[141,151,154,158,160,161,162],"tindex":"f0e6c777-13e6-11e5-992d-753ce92da795","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"f0e6c778-13e6-11e5-992d-9dd921eec84a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":0},{"failures":[327],"tindex":"f0e6c779-13e6-11e5-992d-f1d365182859","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[123,124,125,141,148,149,155,159,386,387,388,389,390,391],"tindex":"f0e6ee8a-13e6-11e5-992d-c17a22a7d6e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,265,266,267,269,270,271,272,273,14,274,15,275,277,278,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,353,354,356,357,358,359,361,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,39,745,40,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,281,764,765,766,282,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,43,44,788,789,284,790,45,791,46,792,793,794,795,796,797,798,799,800,801,802,803,804,805,47,48,806,807,286,808,809,810,287,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,288,832,833,834,835,836,837,838,839,840,841,842,843,844,845,290,846,847,51,848,52,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,292,867,868,869,870,871,872,873,874,875,293,876,877,878,879,880,881,882,883,884,885,886,887,888,889,295,890,891,892,55,893,56,894,895,896,897,898,899,900,901,902,903,904,905,906,907,57,58,908,909,297,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,61,62,997,63,64,65,66,67,998,999,68,1000,1001,1002,69,1003,70,1004,71,72,73,74,1005,75,76,1006,1007,77,78,1008,1009,1010,1011,1012,1013,1014,80,1015,82,83,1016,1017,1018,84,85,1019,1020,86,87,88,89,90,91,92,1021,1022,93,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118],"tindex":"f0e6ee8b-13e6-11e5-992d-71d4e4acbbef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()"},"status":-1},{"failures":[],"tindex":"f0e7159c-13e6-11e5-992d-fb234f62a424","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f0e7159d-13e6-11e5-992d-9bfeef9d99de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[1119],"tindex":"f0e73cae-13e6-11e5-992d-a33a4b06055b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131],"tindex":"f0e73caf-13e6-11e5-992d-33f1255fad13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"f0e73cb0-13e6-11e5-992d-9bff0fb01ef5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"f0e9adb1-13e6-11e5-992d-cfd15ec39ef5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[265],"tindex":"f0e9adb2-13e6-11e5-992d-b96cb372d673","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:160","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f0e9d4c3-13e6-11e5-992d-13b856c42c70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"current","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f0e9d4c4-13e6-11e5-992d-c35f13581078","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[383,60,384],"tindex":"f0e9d4c5-13e6-11e5-992d-7344deae621a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"key3","this":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"f0e9d4c6-13e6-11e5-992d-498770d9ffc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"replacement","this":"this","rval":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f0e9d4c7-13e6-11e5-992d-5992cf500bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"f0e9fbd8-13e6-11e5-992d-6d4a23aa41ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[1132,1133,1134,1135,1136,1137,1138,1139],"tindex":"f0e9fbd9-13e6-11e5-992d-65f408752d6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f0e9fbda-13e6-11e5-992d-6f97f0267a60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1185","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"f0e9fbdb-13e6-11e5-992d-d357b61eeefa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[512,518,525,547,553,560],"tindex":"f0e9fbdc-13e6-11e5-992d-d5411f5e2e7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"f0e9fbdd-13e6-11e5-992d-d1b649c22697","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f0ea22ee-13e6-11e5-992d-f1a7bca23ca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"parent","current":"right","tree":"right","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150],"tindex":"f0ea22ef-13e6-11e5-992d-df729dd7b8cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"f0ea22f0-13e6-11e5-992d-1f6089b4b685","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}